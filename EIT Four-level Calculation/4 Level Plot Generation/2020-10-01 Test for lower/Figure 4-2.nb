(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2914551,      54895]
NotebookOptionsPosition[   2888043,      54492]
NotebookOutlinePosition[   2888473,      54509]
CellTagsIndexPosition[   2888430,      54506]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["PreModule", "Title",
 CellChangeTimes->{{3.717171225450943*^9, 3.7171712262788105`*^9}, {
  3.717171978346394*^9, 
  3.7171719786745224`*^9}},ExpressionUUID->"6f4d1403-51d5-4e2d-82ca-\
75f2c471c456"],

Cell[CellGroupData[{

Cell["Temperature", "Chapter",
 CellChangeTimes->{{3.693575698823017*^9, 3.6935757057729406`*^9}, {
  3.704024738452235*^9, 
  3.7040247393162847`*^9}},ExpressionUUID->"0c818532-7921-4ad0-a0cd-\
b34d0f77d35a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rbpress", "[", "T_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Calculates", " ", "the", " ", "vapor", " ", "pressure", " ", "of", " ", 
     "Na", " ", "depending", " ", "on", " ", "the", " ", "temprerature", " ", 
     "of", " ", "the", " ", 
     RowBox[{"cell", "."}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Input", " ", 
     RowBox[{"variable", ":", " ", "T", ":", 
      RowBox[{"temperature", "[", "C", "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Output", " ", 
      RowBox[{"variable", ":", " ", "p"}]}], "=", 
     RowBox[{"Na", " ", 
      RowBox[{"pressure", "[", "torr", "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
    "Formulas", " ", "obtained", " ", "from", " ", 
     "\"\<Sodium D Line Data\>\"", " ", "by", " ", "Daniel", " ", 
     RowBox[{"A", ".", "Steck"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"http", ":"}], "//", 
     RowBox[{
      RowBox[{"steck", ".", "us"}], "/", "alkalidata"}]}]}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "T1", ",", "p", ",", "k", ",", "c", ",", "MRb", ",", "w0", ",", "Nat", 
      ",", "dopp"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"T1", "=", 
      RowBox[{"T", "+", "273.15"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"T1", "<", 
          RowBox[{"39.31", "+", "273.15"}]}], ",", 
         RowBox[{"p", "=", 
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "94.04826"}], "-", 
             RowBox[{"1961.258", "/", "T1"}], "-", 
             RowBox[{"0.03771687", "*", "T1"}], "+", 
             RowBox[{"42.57526", "*", 
              RowBox[{"Log", "[", 
               RowBox[{"10", ",", "T1"}], "]"}]}]}], ")"}]}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"p", "=", 
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{"15.88253", "-", 
             RowBox[{"4529.635", "/", "T1"}], "+", 
             RowBox[{"0.00058663", "*", "T1"}], "-", 
             RowBox[{"2.99138", "*", 
              RowBox[{"Log", "[", 
               RowBox[{"10", ",", "T1"}], "]"}]}]}], ")"}]}]}]}], 
        "\[IndentingNewLine]", "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"p", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"T1", "<", "312.5"}], ",", 
        SuperscriptBox["10", 
         RowBox[{"9.863`", "\[VeryThinSpace]", "-", 
          FractionBox["4215", "T1"]}]], ",", 
        SuperscriptBox["10", 
         RowBox[{"9.318`", "\[VeryThinSpace]", "-", 
          FractionBox["4040", "T1"]}]]}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Unit", " ", "is", " ", "in", " ", "Pa"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"k", "=", 
      RowBox[{"1.3806503", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "23"}]}]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Boltzman", "'"}], "s", " ", 
       RowBox[{"contstant", "[", 
        RowBox[{"J", "/", "K"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.99792458", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Speed", " ", "of", " ", 
       RowBox[{"light", "[", 
        RowBox[{"m", "/", "s"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"MRb", "=", 
      RowBox[{"1.409993119", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "25"}]}]}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Rb", " ", "85", " ", "atomic", " ", 
       RowBox[{"mass", "[", "kg", "]"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"w0", "=", 
        RowBox[{"2", "Pi", " ", "377.107385", "*", 
         RowBox[{"10", "^", "12"}]}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "Transition", " ", "frequency", " ", "for", " ", "85", "Rb", " ", 
         "D1", " ", "line"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dopp", "=", 
        RowBox[{
         RowBox[{"w0", "/", "c"}], "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"2", " ", "k", "*", 
           RowBox[{"T1", "/", "MRb"}]}], "]"}]}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"w0", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dopp", "=", 
      RowBox[{"2", " ", 
       RowBox[{"w0", "/", "c"}], "*", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", " ", 
          RowBox[{"Log", "[", "2", " ", "]"}], "k", "*", 
          RowBox[{"T1", "/", "MRb"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "Pi"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{"p", "/", 
       RowBox[{"(", 
        RowBox[{"k", "*", "T1"}], ")"}]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"units", " ", "in", " ", 
       RowBox[{"m", "^", 
        RowBox[{"-", "3"}]}]}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Nat", ",", "dopp", ",", "p", ",", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "k", "*", 
         RowBox[{"T1", "/", "MRb"}]}], "]"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.681039404758666*^9, 3.6810394343823605`*^9}, {
   3.6810394643990774`*^9, 3.6810394650551147`*^9}, {3.6810395072395277`*^9, 
   3.6810395110397453`*^9}, 3.681039649351656*^9, 3.681039895849755*^9, 
   3.6810401403037367`*^9, {3.6810430987069483`*^9, 3.6810431002340355`*^9}, {
   3.6810437119620237`*^9, 3.6810437272178965`*^9}, {3.6810437603307905`*^9, 
   3.6810437628349338`*^9}, {3.681059128246785*^9, 3.681059128550802*^9}, {
   3.6810591724623137`*^9, 3.6810592020060043`*^9}, {3.6810623820738935`*^9, 
   3.681062440354227*^9}, {3.681062478505409*^9, 3.68106249775351*^9}, {
   3.681062599082306*^9, 3.6810625998653507`*^9}, {3.6810631141627665`*^9, 
   3.681063117297946*^9}, {3.6810675349026184`*^9, 3.681067541332986*^9}, {
   3.681067581494283*^9, 3.68106758371041*^9}, {3.681067938878724*^9, 
   3.681067975053794*^9}, {3.6810680228865294`*^9, 3.6810680470779133`*^9}, 
   3.6810680775586567`*^9, {3.681068107958395*^9, 3.681068172774102*^9}, {
   3.6810682391428986`*^9, 3.6810683083418565`*^9}, {3.6811580752732315`*^9, 
   3.681158078453413*^9}, 3.681216527301496*^9, 3.681216878845603*^9, {
   3.6812177573118486`*^9, 3.6812177602370157`*^9}, {3.681217918918092*^9, 
   3.681217919079101*^9}, 3.6812179741502514`*^9, {3.681230348999052*^9, 
   3.681230377335673*^9}, 3.681230670088417*^9, {3.681232633041692*^9, 
   3.681232658809166*^9}, {3.6812328064106083`*^9, 3.6812328141940527`*^9}, {
   3.6812328576585393`*^9, 3.681232871362323*^9}, 3.6812329877779818`*^9, {
   3.681233105473713*^9, 3.681233137249531*^9}, {3.6812334111771984`*^9, 
   3.6812335054095883`*^9}, {3.681233551722237*^9, 3.681233554674406*^9}, {
   3.681234028226492*^9, 3.681234028426503*^9}, {3.6812341034827957`*^9, 
   3.681234103753812*^9}, {3.6812344490835633`*^9, 3.6812344496505957`*^9}, {
   3.6812346872501855`*^9, 3.6812347018670216`*^9}, {3.681235886139758*^9, 
   3.6812358967793665`*^9}, {3.6812370169804387`*^9, 3.681237026604989*^9}, {
   3.681304522130512*^9, 3.6813045549453893`*^9}, 3.681494237898312*^9, {
   3.681494330591614*^9, 3.6814943766232467`*^9}, {3.681494426559103*^9, 
   3.681494504598566*^9}, {3.681494537583453*^9, 3.681494565000021*^9}, {
   3.6814949764485545`*^9, 3.6814949810718193`*^9}, {3.6814951668564453`*^9, 
   3.681495218528401*^9}, {3.6814952729855156`*^9, 3.6814952907125297`*^9}, {
   3.6814955220017586`*^9, 3.6814955518244643`*^9}, {3.6814956126569433`*^9, 
   3.681495649296039*^9}, {3.6814957159438515`*^9, 3.681495820959858*^9}, {
   3.6814958574879475`*^9, 3.681495861175158*^9}, {3.681496087877125*^9, 
   3.6814961045120764`*^9}, 3.6815570281497087`*^9, 3.681557658187745*^9, {
   3.6815577131248875`*^9, 3.681557764113804*^9}, 3.681730757923006*^9, 
   3.68216531889776*^9, {3.71606227675443*^9, 3.716062280932643*^9}, {
   3.7160623753296556`*^9, 3.716062376315129*^9}, {3.7160624074282074`*^9, 
   3.7160624085074787`*^9}, {3.716062580185358*^9, 3.716062668709097*^9}, {
   3.7160627108460875`*^9, 3.716062719726573*^9}, {3.7160628189885054`*^9, 
   3.716062916898604*^9}, {3.716062995634471*^9, 3.716062995806348*^9}, {
   3.7160630724762983`*^9, 3.7160630795522137`*^9}, {3.7160631354364004`*^9, 
   3.7160632564938755`*^9}, {3.7160634921941037`*^9, 
   3.7160634971035423`*^9}, {3.716063566779537*^9, 3.716063567510667*^9}, {
   3.8121478855206428`*^9, 3.8121478858249197`*^9}},
 CellLabel->
  "In[1479]:=",ExpressionUUID->"9b00454e-837d-48f7-8a64-2f775e8bc02c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["3Level", "Chapter",
 CellChangeTimes->{{3.693574681554854*^9, 
  3.693574685768452*^9}},ExpressionUUID->"c69de97c-5914-482b-a3bd-\
070372a21fd0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Chi]3a", "=", 
    FractionBox[
     RowBox[{"4", " ", 
      SuperscriptBox["d32", "2"], " ", "Nat", " ", 
      RowBox[{"(", 
       RowBox[{"\[Gamma]21", "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}]}], 
     RowBox[{"e0", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]21", "+", 
           RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Gamma]32"}], "+", 
           "\[Delta]", "+", "\[CapitalDelta]"}], ")"}]}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         SuperscriptBox["\[CapitalOmega]c", "2"]}]}], ")"}], " ", 
      "\[HBar]"}]]}], ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]3e", "=", 
   FractionBox[
    RowBox[{"4", " ", 
     SuperscriptBox["d32", "2"], " ", "Nat", " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]21", "-", 
       RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}]}], 
    RowBox[{"e0", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]21", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Gamma]32"}], "+", "\[Delta]", "+", 
          "\[CapitalDelta]"}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[CapitalOmega]c", "2"]}]}], ")"}], " ", 
     "\[HBar]"}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6935747021016245`*^9, 3.6935747144273205`*^9}, {
  3.693574862978109*^9, 3.693574865057724*^9}, {3.693579704943139*^9, 
  3.6935797100443077`*^9}},
 CellLabel->
  "In[234]:=",ExpressionUUID->"10234e3e-bca7-438a-95de-c56c36ac751b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"s3a", "=", 
   RowBox[{
    RowBox[{"\[Chi]3a", "/.", 
     RowBox[{"\[CapitalDelta]", "\[Rule]", 
      RowBox[{"\[CapitalDelta]", "+", 
       RowBox[{"wc", " ", 
        FractionBox["v", "c"]}]}]}]}], "/.", 
    RowBox[{"\[Delta]", "\[Rule]", "\[Delta]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s3a", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"s3a", "/.", 
      RowBox[{"Nat", "->", " ", 
       RowBox[{
        FractionBox["Nat", 
         RowBox[{"u", " ", 
          RowBox[{"Sqrt", "[", "Pi", "]"}]}]], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["v", "2"]}], "/", 
          RowBox[{"u", "^", "2"}]}], "]"}]}]}]}], "//", "ExpandAll"}], "//", 
    "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s3e", "=", 
   RowBox[{
    RowBox[{"\[Chi]3e", "/.", 
     RowBox[{"\[CapitalDelta]", "\[Rule]", 
      RowBox[{"\[CapitalDelta]", "+", 
       RowBox[{"wc", " ", 
        FractionBox["v", "c"]}]}]}]}], "/.", 
    RowBox[{"\[Delta]", "\[Rule]", "\[Delta]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s3e", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"s3e", "/.", 
      RowBox[{"Nat", "->", " ", 
       RowBox[{
        FractionBox["Nat", 
         RowBox[{"u", " ", 
          RowBox[{"Sqrt", "[", "Pi", "]"}]}]], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["v", "2"]}], "/", 
          RowBox[{"u", "^", "2"}]}], "]"}]}]}]}], "//", "ExpandAll"}], "//", 
    "FullSimplify"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6935998039888706`*^9, 3.6935998219644804`*^9}, 
   3.7039472803708863`*^9},
 CellLabel->
  "In[236]:=",ExpressionUUID->"0123124f-0a7d-4060-bf2d-18c7c7866867"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"u", ">", " ", "0"}], "&&", 
      RowBox[{"u", "\[Element]", "Reals"}], "&&", 
      RowBox[{"\[Alpha]1", "\[NotElement]", "Reals"}], "&&", 
      RowBox[{"\[Alpha]1", "\[NotElement]", "Reals"}]}], ",", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       FractionBox[
        RowBox[{" ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox["v", "2"], 
            SuperscriptBox["u", "2"]]}]], " "}], 
        RowBox[{" ", 
         RowBox[{"v", "+", "\[Alpha]1", " "}]}]], ",", 
       RowBox[{"{", 
        RowBox[{"v", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}]}],
     "]"}], "//", "FullSimplify"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6934111764363914`*^9, 3.6934112041629286`*^9}, {
   3.693412267266409*^9, 3.6934122685225754`*^9}, 3.6934134369552298`*^9, 
   3.693574926013784*^9, {3.6935750492736893`*^9, 3.6935750754070396`*^9}, {
   3.6935997742889204`*^9, 3.6935997750545974`*^9}},
 CellLabel->
  "In[240]:=",ExpressionUUID->"ec321cca-b218-4bd7-af6e-dca36bb2347f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Dopp3", "[", "\[Chi]_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "num", ",", "den", ",", "A", ",", "ans", ",", "\[Alpha]1", ",", 
      "\[Alpha]2", ",", "Z\[Alpha]", ",", "Int"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"num", "=", 
      RowBox[{"Numerator", "[", "\[Chi]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"den", "=", 
      RowBox[{
       RowBox[{"Denominator", "[", "\[Chi]", "]"}], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["v", "2"], 
          SuperscriptBox["u", "2"]]}]]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"A", "=", 
      RowBox[{
       RowBox[{"num", "/", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"den", ",", "v"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "//", "FullSimplify"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[Alpha]1", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"den", ",", "v"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"den", ",", "v"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "//", "FullSimplify"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Int", "=", 
      RowBox[{"A", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["\[Alpha]1", "2"], 
          SuperscriptBox["u", "2"]]}]], " ", 
       RowBox[{"(", 
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
         RowBox[{"Erfc", "[", 
          RowBox[{"I", 
           FractionBox["\[Alpha]1", "u"]}], "]"}]}], ")"}]}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Int", "=", 
     RowBox[{
      RowBox[{"A", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Pi]", " ", 
          RowBox[{"2", " ", "/", 
           RowBox[{"Sqrt", "[", "\[Pi]", "]"}]}], " ", 
          RowBox[{"DawsonF", "[", 
           FractionBox["\[Alpha]1", "u"], "]"}]}], "-", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"-", 
            FractionBox["1", "\[Alpha]1"]}], "]"}], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox[
             SuperscriptBox["\[Alpha]1", "2"], 
             SuperscriptBox["u", "2"]]}]]}], "-", 
         RowBox[{
          RowBox[{"Log", "[", "\[Alpha]1", "]"}], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox[
             SuperscriptBox["\[Alpha]1", "2"], 
             SuperscriptBox["u", "2"]]}]]}]}], ")"}]}], "//", "Simplify"}]}], 
    "*)"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.693410635062954*^9, 3.6934107612525296`*^9}, {
   3.693410850685958*^9, 3.693410868017716*^9}, {3.693410917471369*^9, 
   3.693411005447361*^9}, {3.693411067842992*^9, 3.6934110716111383`*^9}, {
   3.6934111321979103`*^9, 3.693411167685486*^9}, {3.693411236922698*^9, 
   3.6934112993285546`*^9}, {3.693411342363721*^9, 3.693411346311943*^9}, {
   3.693411387949933*^9, 3.6934114515270176`*^9}, {3.6934128121784973`*^9, 
   3.6934128152636333`*^9}, {3.693412857761577*^9, 3.693412858182993*^9}, {
   3.693413023662094*^9, 3.6934130574590507`*^9}, 3.6934134468392897`*^9, 
   3.693413514356469*^9, {3.693413617354062*^9, 3.6934136194374466`*^9}, {
   3.693414559373456*^9, 3.693414623219356*^9}, {3.693414680459721*^9, 
   3.693414686088599*^9}, {3.6934147526765566`*^9, 3.6934147543598003`*^9}, {
   3.693414881518735*^9, 3.6934149193564444`*^9}, 3.693421556448985*^9, 
   3.6935720796973133`*^9, {3.6935722588072743`*^9, 3.6935722591913137`*^9}, {
   3.693574589056698*^9, 3.6935745906250353`*^9}, {3.6935749724380255`*^9, 
   3.6935749775900364`*^9}, {3.69357503940621*^9, 3.6935750483886547`*^9}, {
   3.6935750831129885`*^9, 3.6935751553817177`*^9}, {3.693575267354227*^9, 
   3.6935752888028684`*^9}, {3.6935753286282606`*^9, 3.693575329122348*^9}, 
   3.69357541760789*^9, 3.693575473693761*^9, {3.6935933749579816`*^9, 
   3.693593400205755*^9}, {3.703882114416607*^9, 3.7038821549639263`*^9}, {
   3.703882204899782*^9, 3.703882207819949*^9}, {3.703882291300724*^9, 
   3.70388229717206*^9}, {3.7039365827850194`*^9, 3.703936588752361*^9}, {
   3.703947286327227*^9, 3.7039472904414625`*^9}, {3.7039477160258045`*^9, 
   3.7039477350908947`*^9}, {3.7039483596986203`*^9, 3.703948359841628*^9}, 
   3.7039492332105827`*^9, 3.7658281648837614`*^9},
 CellLabel->
  "In[241]:=",ExpressionUUID->"a489b2c9-da9d-48a0-8a22-c26608efd51b"]
}, Closed]],

Cell[CellGroupData[{

Cell["4Level", "Chapter",
 CellChangeTimes->{{3.6935746750394545`*^9, 
  3.6935746767395306`*^9}},ExpressionUUID->"6cd8bea0-690b-4199-85f4-\
af3b022fea49"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Chi]42", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["d42", "2"], " ", "Nat", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", 
            SqrtBox["5"]}], "-", 
           RowBox[{"5", " ", 
            SqrtBox["14"]}]}], ")"}], " ", 
         SuperscriptBox["omegac1", "2"]}], "+", 
        RowBox[{"16", " ", 
         SqrtBox["5"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]21", "+", 
           RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]32", "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"\[Delta]", "+", "\[CapitalDelta]"}], ")"}]}]}], 
          ")"}]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", 
      SqrtBox["5"], " ", "e0", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["omegac1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "w43"}], "-", 
           RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Gamma]32"}], "-", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Gamma]42"}], "+", 
           RowBox[{"9", " ", "\[Delta]"}], "+", 
           RowBox[{"9", " ", "\[CapitalDelta]"}]}], ")"}]}], "+", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]21", "+", 
           RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"w43", "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", "+",
            "\[CapitalDelta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]32", "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"\[Delta]", "+", "\[CapitalDelta]"}], ")"}]}]}], 
          ")"}]}]}], ")"}], " ", "\[HBar]"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]32", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["d32", "2"], " ", "Nat", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "35"}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["70"]}]}], ")"}], " ", 
         SuperscriptBox["omegac1", "2"]}], "+", 
        RowBox[{"40", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Gamma]21"}], "+", 
           "\[Delta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"w43", "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", "+",
            "\[CapitalDelta]"}], ")"}]}]}], ")"}], " "}], 
     RowBox[{"5", " ", "e0", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["omegac1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "w43"}], "-", 
           RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Gamma]32"}], "-", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Gamma]42"}], "+", 
           RowBox[{"9", " ", "\[Delta]"}], "+", 
           RowBox[{"9", " ", "\[CapitalDelta]"}]}], ")"}]}], "+", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]21", "+", 
           RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"w43", "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", "+",
            "\[CapitalDelta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]32", "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"\[Delta]", "+", "\[CapitalDelta]"}], ")"}]}]}], 
          ")"}]}]}], ")"}], " ", "\[HBar]"}]]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]24", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["d42", "2"], " ", "Nat", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", 
            SqrtBox["5"]}], "-", 
           RowBox[{"5", " ", 
            SqrtBox["14"]}]}], ")"}], " ", 
         SuperscriptBox["omegac1", "2"]}], "+", 
        RowBox[{"16", " ", 
         SqrtBox["5"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]21", "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Gamma]32"}], "+", "\[Delta]", "+",
            "\[CapitalDelta]"}], ")"}]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", 
      SqrtBox["5"], " ", "e0", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]21", "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Gamma]32"}], "+", "\[Delta]", "+",
            "\[CapitalDelta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"w43", "+", 
           RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", "+",
            "\[CapitalDelta]"}], ")"}]}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         SuperscriptBox["omegac1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "w43"}], "+", 
           RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Gamma]32"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Gamma]42"}], "+", 
           RowBox[{"9", " ", "\[Delta]"}], "+", 
           RowBox[{"9", " ", "\[CapitalDelta]"}]}], ")"}]}]}], ")"}], " ", 
      "\[HBar]"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]23", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["d32", "2"], " ", "Nat", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"35", " ", 
            SqrtBox["2"]}], "-", 
           RowBox[{"4", " ", 
            SqrtBox["35"]}]}], ")"}], " ", 
         SuperscriptBox["omegac1", "2"]}], "-", 
        RowBox[{"40", " ", "\[ImaginaryI]", " ", 
         SqrtBox["2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]21", "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"w43", "+", 
           RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", "+",
            "\[CapitalDelta]"}], ")"}]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"5", " ", 
      SqrtBox["2"], " ", "e0", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["omegac1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "w43"}], "+", 
           RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Gamma]32"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Gamma]42"}], "+", 
           RowBox[{"9", " ", "\[Delta]"}], "+", 
           RowBox[{"9", " ", "\[CapitalDelta]"}]}], ")"}]}], "+", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]21", "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"w43", "+", 
           RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", "+",
            "\[CapitalDelta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]32", "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"\[Delta]", "+", "\[CapitalDelta]"}], ")"}]}]}], 
          ")"}]}]}], ")"}], " ", "\[HBar]"}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6934122490560164`*^9, 3.693412250477366*^9}, {
   3.693574620595289*^9, 3.6935746272600627`*^9}, {3.693593318770997*^9, 
   3.6935933200991735`*^9}, {3.6935991434117503`*^9, 3.693599172615*^9}, {
   3.6935992032618856`*^9, 3.693599289761167*^9}, {3.693601524020036*^9, 
   3.693601554300127*^9}, {3.693601943360248*^9, 3.693601954716146*^9}, 
   3.693660896307003*^9, 3.69366187879226*^9},
 CellLabel->
  "In[242]:=",ExpressionUUID->"2955f96f-c450-4cbe-bfd0-9510916297b2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"s42", "=", 
   RowBox[{
    RowBox[{"\[Chi]42", "/.", 
     RowBox[{"\[CapitalDelta]", "\[Rule]", 
      RowBox[{"\[CapitalDelta]", "+", 
       RowBox[{"wc", " ", 
        FractionBox["v", "c"]}]}]}]}], "/.", 
    RowBox[{"\[Delta]", "\[Rule]", "\[Delta]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s42", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"s42", "/.", 
      RowBox[{"Nat", "->", " ", 
       RowBox[{
        FractionBox["Nat", 
         RowBox[{"u", " ", 
          RowBox[{"Sqrt", "[", "Pi", "]"}]}]], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["v", "2"]}], "/", 
          RowBox[{"u", "^", "2"}]}], "]"}]}]}]}], "//", "ExpandAll"}], "//", 
    "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s32", "=", 
   RowBox[{
    RowBox[{"\[Chi]32", "/.", 
     RowBox[{"\[CapitalDelta]", "\[Rule]", 
      RowBox[{"\[CapitalDelta]", "+", 
       RowBox[{"wc", " ", 
        FractionBox["v", "c"]}]}]}]}], "/.", 
    RowBox[{"\[Delta]", "\[Rule]", "\[Delta]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s32", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"s32", "/.", 
      RowBox[{"Nat", "->", " ", 
       RowBox[{
        FractionBox["Nat", 
         RowBox[{"u", " ", 
          RowBox[{"Sqrt", "[", "Pi", "]"}]}]], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["v", "2"]}], "/", 
          RowBox[{"u", "^", "2"}]}], "]"}]}]}]}], "//", "ExpandAll"}], "//", 
    "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s23", "=", 
   RowBox[{
    RowBox[{"\[Chi]23", "/.", 
     RowBox[{"\[CapitalDelta]", "\[Rule]", 
      RowBox[{"\[CapitalDelta]", "+", 
       RowBox[{"wc", " ", 
        FractionBox["v", "c"]}]}]}]}], "/.", 
    RowBox[{"\[Delta]", "\[Rule]", "\[Delta]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s23", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"s23", "/.", 
      RowBox[{"Nat", "->", " ", 
       RowBox[{
        FractionBox["Nat", 
         RowBox[{"u", " ", 
          RowBox[{"Sqrt", "[", "Pi", "]"}]}]], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["v", "2"]}], "/", 
          RowBox[{"u", "^", "2"}]}], "]"}]}]}]}], "//", "ExpandAll"}], "//", 
    "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s24", "=", 
   RowBox[{
    RowBox[{"\[Chi]24", "/.", 
     RowBox[{"\[CapitalDelta]", "\[Rule]", 
      RowBox[{"\[CapitalDelta]", "+", 
       RowBox[{"wc", " ", 
        FractionBox["v", "c"]}]}]}]}], "/.", 
    RowBox[{"\[Delta]", "\[Rule]", "\[Delta]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s24", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"s24", "/.", 
      RowBox[{"Nat", "->", " ", 
       RowBox[{
        FractionBox["Nat", 
         RowBox[{"u", " ", 
          RowBox[{"Sqrt", "[", "Pi", "]"}]}]], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["v", "2"]}], "/", 
          RowBox[{"u", "^", "2"}]}], "]"}]}]}]}], "//", "ExpandAll"}], "//", 
    "FullSimplify"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.693411881573679*^9, 3.693411889209609*^9}, {
   3.693574814574998*^9, 3.693574818653281*^9}, {3.6935778825003195`*^9, 
   3.6935779021785192`*^9}, 3.693578102705635*^9},
 CellLabel->
  "In[246]:=",ExpressionUUID->"e9adc3a4-e156-4038-a4c4-6b4f792b6110"],

Cell[BoxData[""], "Input",
 CellLabel->
  "In[254]:=",ExpressionUUID->"8d0589ce-473b-4c4e-bf8c-26eff812b156"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"u", ">", " ", "0"}], "&&", 
     RowBox[{"u", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Alpha]1", "\[NotElement]", "Reals"}], "&&", 
     RowBox[{"\[Alpha]2", "\[NotElement]", "Reals"}]}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"v", " ", "+", "Z\[Alpha]"}], ")"}], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["v", "2"], 
           SuperscriptBox["u", "2"]]}]]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"v", "-", "\[Alpha]1"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"v", "-", "\[Alpha]2"}], ")"}]}]], ",", 
      RowBox[{"{", 
       RowBox[{"v", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
   "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6934111764363914`*^9, 3.6934112041629286`*^9}, {
   3.693412267266409*^9, 3.6934122685225754`*^9}, 3.6934134369552298`*^9, 
   3.693596680990158*^9, {3.6935997687080836`*^9, 3.6935997694893384`*^9}},
 CellLabel->
  "In[255]:=",ExpressionUUID->"c1f4f69c-bc94-4054-ad84-340540807521"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Dopp", "[", "\[Chi]_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "num", ",", "den", ",", "A", ",", "ans", ",", "\[Alpha]1", ",", 
      "\[Alpha]2", ",", "Z\[Alpha]", ",", "Int"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"num", "=", 
      RowBox[{"Numerator", "[", "\[Chi]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"den", "=", 
      RowBox[{
       RowBox[{"Denominator", "[", "\[Chi]", "]"}], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["v", "2"], 
          SuperscriptBox["u", "2"]]}]]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"A", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"CoefficientList", "[", 
         RowBox[{"num", ",", "v"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "/", 
       RowBox[{
        RowBox[{"CoefficientList", "[", 
         RowBox[{"den", ",", "v"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ans", "=", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"den", "/", 
          RowBox[{
           RowBox[{"CoefficientList", "[", 
            RowBox[{"den", ",", "v"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "\[Equal]", "0"}], ",", "v"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Alpha]1", "=", 
      RowBox[{
       RowBox[{"ans", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "//", 
       "FullSimplify"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Alpha]2", "=", 
      RowBox[{
       RowBox[{"ans", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1", ",", "2"}], "]"}], "]"}], "//", 
       "FullSimplify"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Z\[Alpha]", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"num", ",", "v"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"num", ",", "v"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "//", "FullSimplify"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Int", "=", 
      RowBox[{"A", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox[
              SuperscriptBox["\[Alpha]1", "2"], 
              SuperscriptBox["u", "2"]]}]]}], " ", 
          RowBox[{"(", 
           RowBox[{"Z\[Alpha]", "+", "\[Alpha]1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "I"}], " ", "\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{"Erfc", "[", 
              RowBox[{
               RowBox[{"-", "I"}], " ", 
               FractionBox["\[Alpha]1", "u"]}], "]"}], ")"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox[
             SuperscriptBox["\[Alpha]2", "2"], 
             SuperscriptBox["u", "2"]]}]], " ", 
          RowBox[{"(", 
           RowBox[{"Z\[Alpha]", "+", "\[Alpha]2"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "I"}], " ", "\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{"Erfc", "[", 
              RowBox[{
               RowBox[{"-", "I"}], " ", 
               FractionBox["\[Alpha]2", "u"]}], "]"}], ")"}]}], ")"}]}]}], 
        RowBox[{"\[Alpha]1", "-", "\[Alpha]2"}]]}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Int", "=", 
     RowBox[{"A", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", " ", 
          RowBox[{"(", 
           RowBox[{"Z\[Alpha]", "+", "\[Alpha]1"}], ")"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Pi]", " ", 
            RowBox[{"2", " ", "/", 
             RowBox[{"Sqrt", "[", "\[Pi]", "]"}]}], " ", 
            RowBox[{"DawsonF", "[", 
             FractionBox["\[Alpha]1", "u"], "]"}]}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              FractionBox[
               SuperscriptBox["\[Alpha]1", "2"], 
               SuperscriptBox["u", "2"]]}]]}]}], ")"}]}], "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Z\[Alpha]", "+", "\[Alpha]2"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Pi]", " ", 
            RowBox[{"2", " ", "/", 
             RowBox[{"Sqrt", "[", "\[Pi]", "]"}]}], " ", 
            RowBox[{"DawsonF", "[", 
             FractionBox["\[Alpha]2", "u"], "]"}]}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              FractionBox[
               SuperscriptBox["\[Alpha]2", "2"], 
               SuperscriptBox["u", "2"]]}]]}]}], ")"}]}]}], 
       RowBox[{"\[Alpha]1", "-", "\[Alpha]2"}]]}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.693410635062954*^9, 3.6934107612525296`*^9}, {
   3.693410850685958*^9, 3.693410868017716*^9}, {3.693410917471369*^9, 
   3.693411005447361*^9}, {3.693411067842992*^9, 3.6934110716111383`*^9}, {
   3.6934111321979103`*^9, 3.693411167685486*^9}, {3.693411236922698*^9, 
   3.6934112993285546`*^9}, {3.693411342363721*^9, 3.693411346311943*^9}, {
   3.693411387949933*^9, 3.6934114515270176`*^9}, {3.6934128121784973`*^9, 
   3.6934128152636333`*^9}, {3.693412857761577*^9, 3.693412858182993*^9}, {
   3.693413023662094*^9, 3.6934130574590507`*^9}, 3.6934134468392897`*^9, 
   3.693413514356469*^9, {3.693413617354062*^9, 3.6934136194374466`*^9}, {
   3.693414559373456*^9, 3.693414623219356*^9}, {3.693414680459721*^9, 
   3.693414686088599*^9}, {3.6934147526765566`*^9, 3.6934147543598003`*^9}, {
   3.693414881518735*^9, 3.6934149193564444`*^9}, 3.693421556448985*^9, 
   3.6935720796973133`*^9, {3.6935722588072743`*^9, 3.6935722591913137`*^9}, {
   3.693574589056698*^9, 3.6935745906250353`*^9}, {3.6935753418284845`*^9, 
   3.69357535124059*^9}, {3.6937474597313843`*^9, 3.6937474699594526`*^9}, {
   3.6942658974780607`*^9, 3.6942659278005514`*^9}, {3.6942668335245533`*^9, 
   3.6942668819585543`*^9}, {3.70387452138231*^9, 3.703874551118011*^9}, 
   3.703874596046581*^9, {3.703874708943038*^9, 3.7038747242859154`*^9}, {
   3.703874934830958*^9, 3.703874941110317*^9}, {3.7038797037787266`*^9, 
   3.703879706449879*^9}, {3.703881956020547*^9, 3.703881958915713*^9}, {
   3.703881999468032*^9, 3.703882003148243*^9}, {3.703882097124618*^9, 
   3.703882109348317*^9}, {3.703882161276287*^9, 3.70388216761265*^9}, {
   3.7038822131082516`*^9, 3.703882215508389*^9}, {3.703882262692088*^9, 
   3.703882287444504*^9}, {3.703936560169726*^9, 3.7039365755816073`*^9}, {
   3.7039472987349367`*^9, 3.7039473025121527`*^9}, {3.7039477206430683`*^9, 
   3.7039477309216566`*^9}, {3.703948884355629*^9, 3.7039488855706987`*^9}, {
   3.7039492365147715`*^9, 3.7039492368587914`*^9}, {3.7132688936731896`*^9, 
   3.7132689357101*^9}, {3.7132691112555146`*^9, 3.7132691119197235`*^9}, {
   3.71337342805688*^9, 3.713373456234132*^9}, 3.7658281929916463`*^9},
 CellLabel->
  "In[256]:=",ExpressionUUID->"7090e7ba-dccd-47e7-8f49-a0bfb5250e50"]
}, Closed]],

Cell[CellGroupData[{

Cell["Define function", "Chapter",
 CellChangeTimes->{{3.6935934505677414`*^9, 
  3.6935934521458817`*^9}},ExpressionUUID->"af487da2-cb9f-4709-8fe6-\
eaea443ecbaa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sd32", "[", 
     RowBox[{
     "wc_", ",", "\[Gamma]21_", ",", "\[Gamma]42_", ",", "\[Gamma]32_", ",", 
      "\[Delta]_", ",", "\[CapitalDelta]_", ",", "omegac1_", ",", "c_", ",", 
      "\[HBar]_", ",", "e0_", ",", "u_", ",", "Nat_", ",", "w43_", ",", 
      "d32_"}], "]"}], ":=", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"Dopp", "[", "s32", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"sd23", "[", 
      RowBox[{
      "wc_", ",", "\[Gamma]21_", ",", "\[Gamma]42_", ",", "\[Gamma]32_", ",", 
       "\[Delta]_", ",", "\[CapitalDelta]_", ",", "omegac1_", ",", "c_", ",", 
       "\[HBar]_", ",", "e0_", ",", "u_", ",", "Nat_", ",", "w43_", ",", 
       "d32_"}], "]"}], ":=", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Dopp", "[", "s23", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sd24", "[", 
      RowBox[{
      "wc_", ",", "\[Gamma]21_", ",", "\[Gamma]42_", ",", "\[Gamma]32_", ",", 
       "\[Delta]_", ",", "\[CapitalDelta]_", ",", "omegac1_", ",", "c_", ",", 
       "\[HBar]_", ",", "e0_", ",", "u_", ",", "Nat_", ",", "w43_", ",", 
       "d42_"}], "]"}], ":=", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Dopp", "[", "s24", "]"}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sd42", "[", 
    RowBox[{
    "wc_", ",", "\[Gamma]21_", ",", "\[Gamma]42_", ",", "\[Gamma]32_", ",", 
     "\[Delta]_", ",", "\[CapitalDelta]_", ",", "omegac1_", ",", "c_", ",", 
     "\[HBar]_", ",", "e0_", ",", "u_", ",", "Nat_", ",", "w43_", ",", 
     "d42_"}], "]"}], ":=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"Dopp", "[", "s42", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sd3a", "[", 
    RowBox[{
    "wc_", ",", "\[Gamma]21_", ",", "\[Gamma]32_", ",", "\[Delta]_", ",", 
     "\[CapitalDelta]_", ",", "\[CapitalOmega]c_", ",", "c_", ",", "\[HBar]_",
      ",", "e0_", ",", "u_", ",", "Nat_", ",", "d32_"}], "]"}], ":=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"Dopp3", "[", "s3a", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sd3e", "[", 
    RowBox[{
    "wc_", ",", "\[Gamma]21_", ",", "\[Gamma]32_", ",", "\[Delta]_", ",", 
     "\[CapitalDelta]_", ",", "\[CapitalOmega]c_", ",", "c_", ",", "\[HBar]_",
      ",", "e0_", ",", "u_", ",", "Nat_", ",", "d32_"}], "]"}], ":=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"Dopp3", "[", "s3e", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.693593354489865*^9, 3.6935933546461315`*^9}, {
  3.693593418471567*^9, 3.6935934456458035`*^9}, {3.693593479486393*^9, 
  3.6935935511316085`*^9}, {3.693593582017177*^9, 3.693593587844395*^9}, {
  3.693593643580376*^9, 3.693593744510585*^9}, {3.6935938146739435`*^9, 
  3.6935939659257603`*^9}, {3.693594114583386*^9, 3.693594148537552*^9}, {
  3.693594214415166*^9, 3.6935942336025977`*^9}, {3.693594321171434*^9, 
  3.6935944012186537`*^9}, {3.6935945067624645`*^9, 3.693594541734193*^9}, {
  3.693594578106447*^9, 3.6935946268544655`*^9}, {3.693594699755022*^9, 
  3.6935947180989337`*^9}, {3.6936006525147204`*^9, 3.6936006719970465`*^9}, {
  3.7039491400272527`*^9, 3.7039491418813586`*^9}},
 CellLabel->
  "In[257]:=",ExpressionUUID->"f4c011de-a350-4da2-aaa0-a98d2a0bdc0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ome", "[", 
   RowBox[{"P_", ",", "diam_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1", "/", "\[HBar]"}], " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"P", "/", 
       RowBox[{"(", 
        RowBox[{"Pi", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], "]"}]}], 
    ")"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[HBar]", "\[Rule]", " ", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ",", 
     RowBox[{"e0", "->", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ",", 
     RowBox[{"c", "\[Rule]", " ", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ",", 
     RowBox[{"d31", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.702401357407527*^9, 3.7024014030801396`*^9}},
 CellLabel->
  "In[261]:=",ExpressionUUID->"d1eea7c5-9f2f-4729-bd95-af06602926ab"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Ome", "[", 
  RowBox[{
   RowBox[{"10", "/", "1000"}], ",", 
   RowBox[{"1.4", "/", "1000"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Ome", "[", 
  RowBox[{
   RowBox[{"20", "/", "1000"}], ",", 
   RowBox[{"1.4", "/", "1000"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Ome", "[", 
  RowBox[{
   RowBox[{"50", "/", "1000"}], ",", 
   RowBox[{"1.4", "/", "1000"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Ome", "[", 
  RowBox[{
   RowBox[{"100", "/", "1000"}], ",", 
   RowBox[{"1.4", "/", "1000"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7024014051622586`*^9, 3.7024014473516717`*^9}},
 CellLabel->
  "In[262]:=",ExpressionUUID->"5a1a9c92-8060-40a7-ac96-bfbc4fcfe741"],

Cell[BoxData["1.0245480392071487`*^8"], "Output",
 CellChangeTimes->{{3.7024014094415035`*^9, 3.7024014477226925`*^9}, 
   3.7027295345252466`*^9, 3.7037023951123347`*^9, 3.703847388028371*^9, 
   3.703872777000537*^9, 3.7044733027777348`*^9, 3.704645574634121*^9, 
   3.7046463919818707`*^9, 3.704646482942073*^9, 3.704649868689727*^9, 
   3.704650146455614*^9, 3.7046502973982477`*^9, 3.704719472289825*^9, 
   3.7047299023073883`*^9, 3.704744259533574*^9, 3.704744583655113*^9, 
   3.7047450328448052`*^9, 3.704825977461687*^9, 3.7050857212941213`*^9, 
   3.7050859323341923`*^9, 3.705147972541689*^9, 3.70526289416383*^9, 
   3.7053364363004913`*^9, 3.7053478409588003`*^9, 3.705417360012063*^9, 
   3.7099226248065767`*^9, 3.71087455780986*^9, 3.7133728642723227`*^9, 
   3.713373388236652*^9, 3.7136434871016436`*^9, 3.716035687575499*^9, 
   3.717171244838092*^9, 3.717172821453122*^9, 3.73747686792862*^9, 
   3.737486325929719*^9, 3.739116642326764*^9, 3.7658281457687483`*^9, 
   3.76582843133962*^9, 3.7658284978440676`*^9, 3.771172167353217*^9, 
   3.7726277310110188`*^9, 3.776600121529601*^9, 3.81214789471799*^9},
 CellLabel->
  "Out[262]=",ExpressionUUID->"46fe8076-58af-4e20-aba6-7395e8c5a124"],

Cell[BoxData["1.448929732349511`*^8"], "Output",
 CellChangeTimes->{{3.7024014094415035`*^9, 3.7024014477226925`*^9}, 
   3.7027295345252466`*^9, 3.7037023951123347`*^9, 3.703847388028371*^9, 
   3.703872777000537*^9, 3.7044733027777348`*^9, 3.704645574634121*^9, 
   3.7046463919818707`*^9, 3.704646482942073*^9, 3.704649868689727*^9, 
   3.704650146455614*^9, 3.7046502973982477`*^9, 3.704719472289825*^9, 
   3.7047299023073883`*^9, 3.704744259533574*^9, 3.704744583655113*^9, 
   3.7047450328448052`*^9, 3.704825977461687*^9, 3.7050857212941213`*^9, 
   3.7050859323341923`*^9, 3.705147972541689*^9, 3.70526289416383*^9, 
   3.7053364363004913`*^9, 3.7053478409588003`*^9, 3.705417360012063*^9, 
   3.7099226248065767`*^9, 3.71087455780986*^9, 3.7133728642723227`*^9, 
   3.713373388236652*^9, 3.7136434871016436`*^9, 3.716035687575499*^9, 
   3.717171244838092*^9, 3.717172821453122*^9, 3.73747686792862*^9, 
   3.737486325929719*^9, 3.739116642326764*^9, 3.7658281457687483`*^9, 
   3.76582843133962*^9, 3.7658284978440676`*^9, 3.771172167353217*^9, 
   3.7726277310110188`*^9, 3.776600121529601*^9, 3.8121478947209926`*^9},
 CellLabel->
  "Out[263]=",ExpressionUUID->"8d304f62-245e-41bd-b2cd-1112fe6fab88"],

Cell[BoxData["2.290959061881304`*^8"], "Output",
 CellChangeTimes->{{3.7024014094415035`*^9, 3.7024014477226925`*^9}, 
   3.7027295345252466`*^9, 3.7037023951123347`*^9, 3.703847388028371*^9, 
   3.703872777000537*^9, 3.7044733027777348`*^9, 3.704645574634121*^9, 
   3.7046463919818707`*^9, 3.704646482942073*^9, 3.704649868689727*^9, 
   3.704650146455614*^9, 3.7046502973982477`*^9, 3.704719472289825*^9, 
   3.7047299023073883`*^9, 3.704744259533574*^9, 3.704744583655113*^9, 
   3.7047450328448052`*^9, 3.704825977461687*^9, 3.7050857212941213`*^9, 
   3.7050859323341923`*^9, 3.705147972541689*^9, 3.70526289416383*^9, 
   3.7053364363004913`*^9, 3.7053478409588003`*^9, 3.705417360012063*^9, 
   3.7099226248065767`*^9, 3.71087455780986*^9, 3.7133728642723227`*^9, 
   3.713373388236652*^9, 3.7136434871016436`*^9, 3.716035687575499*^9, 
   3.717171244838092*^9, 3.717172821453122*^9, 3.73747686792862*^9, 
   3.737486325929719*^9, 3.739116642326764*^9, 3.7658281457687483`*^9, 
   3.76582843133962*^9, 3.7658284978440676`*^9, 3.771172167353217*^9, 
   3.7726277310110188`*^9, 3.776600121529601*^9, 3.812147894723995*^9},
 CellLabel->
  "Out[264]=",ExpressionUUID->"84cab7bf-38da-4d38-adb8-7c739b10d58b"],

Cell[BoxData["3.2399053761540824`*^8"], "Output",
 CellChangeTimes->{{3.7024014094415035`*^9, 3.7024014477226925`*^9}, 
   3.7027295345252466`*^9, 3.7037023951123347`*^9, 3.703847388028371*^9, 
   3.703872777000537*^9, 3.7044733027777348`*^9, 3.704645574634121*^9, 
   3.7046463919818707`*^9, 3.704646482942073*^9, 3.704649868689727*^9, 
   3.704650146455614*^9, 3.7046502973982477`*^9, 3.704719472289825*^9, 
   3.7047299023073883`*^9, 3.704744259533574*^9, 3.704744583655113*^9, 
   3.7047450328448052`*^9, 3.704825977461687*^9, 3.7050857212941213`*^9, 
   3.7050859323341923`*^9, 3.705147972541689*^9, 3.70526289416383*^9, 
   3.7053364363004913`*^9, 3.7053478409588003`*^9, 3.705417360012063*^9, 
   3.7099226248065767`*^9, 3.71087455780986*^9, 3.7133728642723227`*^9, 
   3.713373388236652*^9, 3.7136434871016436`*^9, 3.716035687575499*^9, 
   3.717171244838092*^9, 3.717172821453122*^9, 3.73747686792862*^9, 
   3.737486325929719*^9, 3.739116642326764*^9, 3.7658281457687483`*^9, 
   3.76582843133962*^9, 3.7658284978440676`*^9, 3.771172167353217*^9, 
   3.7726277310110188`*^9, 3.776600121529601*^9, 3.812147894725997*^9},
 CellLabel->
  "Out[265]=",ExpressionUUID->"6a25b0a4-46ce-4de0-bca8-3a5f7e2f639a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev3Test", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", "d31", ",", 
      "d41"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2", ",", "0.02"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"omegac2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Chi]42", "=", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["d42", "2"], " ", "Nat", " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]21", "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}]}], 
       RowBox[{"e0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]21", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Gamma]32"}], "+", 
             "\[Delta]", "+", "\[CapitalDelta]", "+", "w43"}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["omegac2", "2"]}]}], ")"}], " ", "\[HBar]"}]]}], 
     ";", "   ", "\[IndentingNewLine]", 
     RowBox[{"\[Chi]24", "=", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["d42", "2"], " ", "Nat", " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]21", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}]}], 
       RowBox[{"e0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]21", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]32"}], "+", "\[Delta]", 
             "+", "\[CapitalDelta]", "+", "w43"}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["omegac2", "2"]}]}], ")"}], " ", "\[HBar]"}]]}], 
     ";", "   ", "\[IndentingNewLine]", 
     RowBox[{"\[Chi]32", "=", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["d32", "2"], " ", "Nat", " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]21", "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}]}], 
       RowBox[{"e0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]21", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Gamma]32"}], "+", 
             "\[Delta]", "+", "\[CapitalDelta]"}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["omegac1", "2"]}]}], ")"}], " ", "\[HBar]"}]]}], 
     ";", "   ", "\[IndentingNewLine]", 
     RowBox[{"\[Chi]23", "=", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["d32", "2"], " ", "Nat", " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]21", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}]}], 
       RowBox[{"e0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]21", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]32"}], "+", "\[Delta]", 
             "+", "\[CapitalDelta]"}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["omegac1", "2"]}]}], ")"}], " ", "\[HBar]"}]]}], 
     ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ab", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "2"}], "Pi", "*", 
              RowBox[{"0.0254", "/", 
               RowBox[{"(", 
                RowBox[{"2", "wcn"}], ")"}]}], 
              RowBox[{"Im", "[", "\[Chi]24", "]"}]}], "]"}]}], "}"}], "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "2"}], "Pi", "*", 
              RowBox[{"0.0254", "/", 
               RowBox[{"(", 
                RowBox[{"2", "wcn"}], ")"}]}], 
              RowBox[{"Im", "[", "\[Chi]42", "]"}]}], "]"}]}], "}"}], "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", 
            RowBox[{"Im", "[", "\[Chi]23", "]"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", 
            RowBox[{"Im", "[", "\[Chi]32", "]"}]}], "}"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d", "/", 
           SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2"}], "Pi", "*", 
            RowBox[{"0.0254", "/", 
             RowBox[{"(", 
              RowBox[{"2", "wcn"}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", "\[Chi]42", "]"}], "+", 
              RowBox[{"Im", "[", "\[Chi]32", "]"}]}], ")"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.693843536035865*^9, 3.693843640240203*^9}, {
  3.693843740781679*^9, 3.6938437417503285`*^9}, {3.693843821626108*^9, 
  3.693843896295884*^9}, {3.6938632201821575`*^9, 3.6938632216210613`*^9}, {
  3.6938633047886147`*^9, 3.6938633512038417`*^9}, {3.7023218529533176`*^9, 
  3.7023218592896795`*^9}, {3.704656916117817*^9, 3.7046569178119135`*^9}, {
  3.7046569701899095`*^9, 3.704656975028186*^9}},
 CellLabel->
  "In[266]:=",ExpressionUUID->"3e0bab36-6279-4e99-a536-f834161b70c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev4Test", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", "d31", ",", 
      "d41"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2", ",", "0.02"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"omegac2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Chi]42", "=", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d42", "2"], " ", "Nat", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SqrtBox["5"]}], "-", 
             RowBox[{"5", " ", 
              SqrtBox["14"]}]}], ")"}], " ", 
           SuperscriptBox["omegac1", "2"]}], "+", 
          RowBox[{"16", " ", 
           SqrtBox["5"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]21", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]32", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"\[Delta]", "+", "\[CapitalDelta]"}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], 
       RowBox[{"2", " ", 
        SqrtBox["5"], " ", "e0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["omegac1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "w43"}], "-", 
             RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Gamma]32"}], "-", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Gamma]42"}], "+", 
             RowBox[{"9", " ", "\[Delta]"}], "+", 
             RowBox[{"9", " ", "\[CapitalDelta]"}]}], ")"}]}], "+", 
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]21", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"w43", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", 
             "+", "\[CapitalDelta]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]32", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"\[Delta]", "+", "\[CapitalDelta]"}], ")"}]}]}], 
            ")"}]}]}], ")"}], " ", "\[HBar]"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Chi]32", "=", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["d32", "2"], " ", "Nat", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "35"}], "+", 
              RowBox[{"2", " ", 
               SqrtBox["70"]}]}], ")"}], " ", 
            SuperscriptBox["omegac1", "2"]}], "+", 
           RowBox[{"40", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Gamma]21"}], "+", 
              "\[Delta]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"w43", "-", 
              RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", 
              "+", "\[CapitalDelta]"}], ")"}]}]}], ")"}], " "}], 
        RowBox[{"5", " ", "e0", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["omegac1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "w43"}], "-", 
              RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Gamma]32"}], "-", 
              RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Gamma]42"}], "+", 
              RowBox[{"9", " ", "\[Delta]"}], "+", 
              RowBox[{"9", " ", "\[CapitalDelta]"}]}], ")"}]}], "+", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{"\[Gamma]21", "+", 
              RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"w43", "-", 
              RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", 
              "+", "\[CapitalDelta]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Gamma]32", "+", 
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"(", 
                RowBox[{"\[Delta]", "+", "\[CapitalDelta]"}], ")"}]}]}], 
             ")"}]}]}], ")"}], " ", "\[HBar]"}]]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Chi]24", "=", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d42", "2"], " ", "Nat", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SqrtBox["5"]}], "-", 
             RowBox[{"5", " ", 
              SqrtBox["14"]}]}], ")"}], " ", 
           SuperscriptBox["omegac1", "2"]}], "+", 
          RowBox[{"16", " ", 
           SqrtBox["5"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]21", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]32"}], "+", "\[Delta]", 
             "+", "\[CapitalDelta]"}], ")"}]}]}], ")"}]}], 
       RowBox[{"2", " ", 
        SqrtBox["5"], " ", "e0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]21", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]32"}], "+", "\[Delta]", 
             "+", "\[CapitalDelta]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"w43", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", 
             "+", "\[CapitalDelta]"}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["omegac1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "w43"}], "+", 
             RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Gamma]32"}], "+", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Gamma]42"}], "+", 
             RowBox[{"9", " ", "\[Delta]"}], "+", 
             RowBox[{"9", " ", "\[CapitalDelta]"}]}], ")"}]}]}], ")"}], " ", 
        "\[HBar]"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Chi]23", "=", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d32", "2"], " ", "Nat", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"35", " ", 
              SqrtBox["2"]}], "-", 
             RowBox[{"4", " ", 
              SqrtBox["35"]}]}], ")"}], " ", 
           SuperscriptBox["omegac1", "2"]}], "-", 
          RowBox[{"40", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]21", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"w43", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", 
             "+", "\[CapitalDelta]"}], ")"}]}]}], ")"}]}], 
       RowBox[{"5", " ", 
        SqrtBox["2"], " ", "e0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["omegac1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "w43"}], "+", 
             RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Gamma]32"}], "+", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Gamma]42"}], "+", 
             RowBox[{"9", " ", "\[Delta]"}], "+", 
             RowBox[{"9", " ", "\[CapitalDelta]"}]}], ")"}]}], "+", 
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]21", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"w43", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", 
             "+", "\[CapitalDelta]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]32", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"\[Delta]", "+", "\[CapitalDelta]"}], ")"}]}]}], 
            ")"}]}]}], ")"}], " ", "\[HBar]"}]]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ab", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", 
            RowBox[{"Im", "[", "\[Chi]24", "]"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", 
            RowBox[{"Im", "[", "\[Chi]42", "]"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", 
            RowBox[{"Im", "[", "\[Chi]23", "]"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", 
            RowBox[{"Im", "[", "\[Chi]32", "]"}]}], "}"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d", "/", 
           SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2"}], "Pi", "*", 
            RowBox[{"0.0254", "/", 
             RowBox[{"(", 
              RowBox[{"2", "wcn"}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", "\[Chi]42", "]"}], "+", 
              RowBox[{"Im", "[", "\[Chi]32", "]"}]}], ")"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.69384342870677*^9, 3.6938434984783955`*^9}, {
   3.6938435542457924`*^9, 3.6938435562130795`*^9}, {3.6938437366658726`*^9, 
   3.693843738281099*^9}, {3.6938438176423116`*^9, 3.693843899365946*^9}, {
   3.693863357051441*^9, 3.6938633711804867`*^9}, {3.6939235782972093`*^9, 
   3.693923583765154*^9}, 3.7023218664500895`*^9, {3.7027296703830175`*^9, 
   3.7027297120383997`*^9}, {3.702729761203212*^9, 3.702729765782474*^9}, {
   3.7046569031980777`*^9, 3.7046569056762195`*^9}},
 CellLabel->
  "In[267]:=",ExpressionUUID->"07374ebf-8d84-49d9-9164-618579a09736"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev4DoppTest", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_", ",", 
    RowBox[{"kk_", ":", "0"}]}], "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", "d31", ",", 
      "d41"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2", ",", "0.02"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"omegac2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ab", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", 
            RowBox[{"Im", "[", 
             RowBox[{"sd24", "[", 
              RowBox[{
              "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
               ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac2", ",", 
               "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
               "w43", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", 
            RowBox[{"Im", "[", 
             RowBox[{"sd42", "[", 
              RowBox[{
              "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
               ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac2", ",", 
               "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
               "w43", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", 
            RowBox[{"Im", "[", 
             RowBox[{"sd23", "[", 
              RowBox[{
              "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
               ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", 
               "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
               "w43", ",", "d32"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", 
            RowBox[{"Im", "[", 
             RowBox[{"sd32", "[", 
              RowBox[{
              "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
               ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", 
               "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
               "w43", ",", "d32"}], "]"}], "]"}]}], "}"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"kk", "\[Equal]", "0"}], ",", 
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], "+", "kk"}], ")"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2"}], "Pi", "*", 
            RowBox[{"0.0254", "/", 
             RowBox[{"(", 
              RowBox[{"2", "wcn"}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"sd42", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32",
                  ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", 
                 ",", "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", 
                 ",", "w43", ",", "d42"}], "]"}], "]"}], "+", 
              RowBox[{"Im", "[", 
               RowBox[{"sd32", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32",
                  ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", 
                 ",", "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", 
                 ",", "w43", ",", "d32"}], "]"}], "]"}]}], ")"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6820777509929857`*^9, 3.682078072258361*^9}, {
   3.6820781686988773`*^9, 3.6820781844017754`*^9}, {3.6820782371557927`*^9, 
   3.6820782387708855`*^9}, {3.6820783386755996`*^9, 
   3.6820783600278206`*^9}, {3.682078390802581*^9, 3.682078409651659*^9}, {
   3.6820785556990128`*^9, 3.6820785577631307`*^9}, {3.682078604887826*^9, 
   3.682078606954944*^9}, 3.682078646275193*^9, 3.6820786817442217`*^9, {
   3.6820787244836664`*^9, 3.6820787256587334`*^9}, {3.682078761002755*^9, 
   3.6820787873862643`*^9}, {3.682078849739831*^9, 3.682078868395898*^9}, {
   3.6820789209479036`*^9, 3.682079036674523*^9}, {3.6820797161803885`*^9, 
   3.6820797163083954`*^9}, {3.6820940847423997`*^9, 3.682094176264634*^9}, {
   3.682100534108282*^9, 3.682100724544174*^9}, {3.682100812826224*^9, 
   3.6821008239058576`*^9}, {3.682100946929894*^9, 3.6821009474969263`*^9}, {
   3.6821010023450637`*^9, 3.6821010049532127`*^9}, {3.682101044296463*^9, 
   3.6821010535839944`*^9}, {3.6821012584737134`*^9, 3.682101261144866*^9}, {
   3.682101316585037*^9, 3.6821013732572784`*^9}, {3.682101414754652*^9, 
   3.6821014312095933`*^9}, {3.6821027458817883`*^9, 
   3.6821029190776944`*^9}, {3.682102981621272*^9, 3.682103063142935*^9}, {
   3.682103152077021*^9, 3.6821031759093847`*^9}, {3.682103228078368*^9, 
   3.682103275783097*^9}, {3.6821033867274427`*^9, 3.6821035279885225`*^9}, {
   3.682103596235426*^9, 3.6821036073870635`*^9}, {3.6821036960071325`*^9, 
   3.6821037775187945`*^9}, {3.6821038740493155`*^9, 
   3.6821038957665577`*^9}, {3.6821039323166485`*^9, 3.68210399843143*^9}, {
   3.6821041484310093`*^9, 3.6821041622938023`*^9}, {3.68210423166377*^9, 
   3.68210423550299*^9}, {3.6821042817676363`*^9, 3.682104281975648*^9}, {
   3.6821044114720545`*^9, 3.6821044835001745`*^9}, {3.6821045457187333`*^9, 
   3.6821045762404785`*^9}, {3.6821046797604*^9, 3.6821047083920374`*^9}, {
   3.682104777109968*^9, 3.682104849645117*^9}, {3.6821057340817037`*^9, 
   3.6821059374293346`*^9}, {3.6821060904780884`*^9, 
   3.6821060922611904`*^9}, {3.6821063118057475`*^9, 3.682106405406101*^9}, 
   3.682106470391818*^9, {3.682106886234603*^9, 3.6821069287290335`*^9}, {
   3.6821069697263784`*^9, 3.6821069703174124`*^9}, {3.6821070483648767`*^9, 
   3.6821070518040733`*^9}, {3.682107090122265*^9, 3.682107090965313*^9}, {
   3.6821071649115424`*^9, 3.6821073019513807`*^9}, {3.68210735596247*^9, 
   3.6821073587036266`*^9}, 3.6821621740358844`*^9, 3.6821627337889004`*^9, {
   3.6821628756690154`*^9, 3.682162909995979*^9}, {3.682163006508499*^9, 
   3.6821630839339275`*^9}, {3.682164960571265*^9, 3.6821650124032297`*^9}, {
   3.6821651296039333`*^9, 3.6821651308580046`*^9}, {3.682165214019761*^9, 
   3.682165249474789*^9}, {3.6821653768800764`*^9, 3.6821654049336815`*^9}, {
   3.6821654393766513`*^9, 3.68216545387048*^9}, 3.6821655581664457`*^9, {
   3.682165620292999*^9, 3.6821656220580997`*^9}, {3.6821656556360207`*^9, 
   3.6821656577791433`*^9}, {3.682165701413639*^9, 3.682165727750145*^9}, {
   3.6821665708493676`*^9, 3.682166634060983*^9}, {3.6821666960175266`*^9, 
   3.6821667514896994`*^9}, 3.682166802514618*^9, {3.6821669432116656`*^9, 
   3.682167060590379*^9}, {3.6821671413930006`*^9, 3.682167202085472*^9}, {
   3.6821673969946203`*^9, 3.6821673999857917`*^9}, {3.6821674579621077`*^9, 
   3.682167471208865*^9}, {3.682167501232582*^9, 3.682167549741357*^9}, {
   3.682167594844937*^9, 3.6821675971000657`*^9}, {3.6821676294889183`*^9, 
   3.6821676371443563`*^9}, {3.6821676871182146`*^9, 
   3.6821676926285295`*^9}, {3.6821678111603093`*^9, 3.682167849935527*^9}, {
   3.682167892151942*^9, 3.6821679025275354`*^9}, {3.6821680476398354`*^9, 
   3.682168050832018*^9}, {3.6821681112514734`*^9, 3.6821681135776067`*^9}, {
   3.6821681662336187`*^9, 3.6821681808154526`*^9}, {3.6821682156534452`*^9, 
   3.682168310363862*^9}, {3.682178802064953*^9, 3.6821788574731226`*^9}, {
   3.6821797845176063`*^9, 3.6821798678863745`*^9}, {3.682179924646621*^9, 
   3.682179933998156*^9}, 3.6821800382591195`*^9, {3.682180103785867*^9, 
   3.6821801191557465`*^9}, {3.6821803064124565`*^9, 3.682180320525264*^9}, {
   3.682180376454463*^9, 3.6821803814617496`*^9}, {3.6821832402242613`*^9, 
   3.682183284751808*^9}, {3.682183418403453*^9, 3.6821834209866004`*^9}, {
   3.682340380078147*^9, 3.682340410220871*^9}, {3.682340522181275*^9, 
   3.682340537612157*^9}, {3.6823406550578747`*^9, 3.682340655896923*^9}, {
   3.682340692157997*^9, 3.68234069326906*^9}, {3.682345730917197*^9, 
   3.682345731045205*^9}, {3.6823458690981007`*^9, 3.682345919492983*^9}, {
   3.682345967318719*^9, 3.6823459676457376`*^9}, {3.6823463858226557`*^9, 
   3.682346387093728*^9}, 3.6823468661441727`*^9, {3.6823507930227776`*^9, 
   3.6823507938398237`*^9}, {3.6823508346331573`*^9, 3.68235083747932*^9}, 
   3.682354138591133*^9, 3.6823566711479864`*^9, {3.682360931208648*^9, 
   3.682360932023695*^9}, {3.6823611770847116`*^9, 3.682361178779808*^9}, {
   3.682361844153866*^9, 3.682361845208926*^9}, {3.682362187881526*^9, 
   3.682362192368782*^9}, {3.6823622281698303`*^9, 3.6823622290728817`*^9}, {
   3.6824245168725133`*^9, 3.682424594002925*^9}, {3.6824260544974604`*^9, 
   3.682426058127668*^9}, {3.6824261036362705`*^9, 3.682426116397001*^9}, {
   3.682426190238224*^9, 3.682426191247282*^9}, {3.6824263261569986`*^9, 
   3.6824263271250534`*^9}, {3.682426566115723*^9, 3.682426577725387*^9}, {
   3.6824266458332825`*^9, 3.6824266595680685`*^9}, {3.682426696979208*^9, 
   3.6824267107099934`*^9}, {3.682427781573243*^9, 3.6824278113079443`*^9}, {
   3.6824355677005672`*^9, 3.682435631502217*^9}, {3.6824362666165433`*^9, 
   3.682436273352928*^9}, {3.6824396749253745`*^9, 3.6824396816717634`*^9}, {
   3.6824466180411763`*^9, 3.682446638837542*^9}, {3.6824477837793245`*^9, 
   3.682447784026745*^9}, {3.6824486976287394`*^9, 3.6824486988314676`*^9}, {
   3.682448741291876*^9, 3.682448758877056*^9}, {3.682528592516034*^9, 
   3.682528601669776*^9}, {3.6825290670606318`*^9, 3.6825290697308183`*^9}, {
   3.682529366905645*^9, 3.6825294632815933`*^9}, {3.6825295212782946`*^9, 
   3.6825295218262405`*^9}, {3.6825326611473746`*^9, 
   3.6825327653305593`*^9}, {3.68253282920498*^9, 3.6825328354504523`*^9}, {
   3.6825337172886257`*^9, 3.6825337966552057`*^9}, {3.682767727311578*^9, 
   3.6827677341416397`*^9}, {3.6827677784039173`*^9, 
   3.6827677817925434`*^9}, {3.6932553797640305`*^9, 
   3.6932554299337807`*^9}, {3.6932554605179*^9, 3.6932559069187527`*^9}, {
   3.6932561402287693`*^9, 3.6932561722799435`*^9}, {3.6933163942079906`*^9, 
   3.693316415693305*^9}, {3.693316580499305*^9, 3.6933166304990816`*^9}, {
   3.693316760505435*^9, 3.6933167713506746`*^9}, {3.693316885693319*^9, 
   3.693316923395423*^9}, {3.6933172128656282`*^9, 3.693317263746234*^9}, {
   3.693325258387647*^9, 3.693325258903158*^9}, {3.693325769156588*^9, 
   3.6933257999974604`*^9}, {3.693335215842825*^9, 3.6933352602877464`*^9}, {
   3.693335513566686*^9, 3.693335518882057*^9}, 3.6933383532074747`*^9, {
   3.69333844096763*^9, 3.6933384435674295`*^9}, {3.6933998013026257`*^9, 
   3.693399826867744*^9}, {3.693399878173236*^9, 3.6933998820731897`*^9}, {
   3.6933999851766276`*^9, 3.693400021978489*^9}, {3.6934001039998937`*^9, 
   3.693400106015895*^9}, {3.6934016718519135`*^9, 3.6934016749356365`*^9}, {
   3.693401768182933*^9, 3.6934017860664177`*^9}, {3.6934045049723034`*^9, 
   3.693404507408079*^9}, {3.6934045480219707`*^9, 3.693404569296521*^9}, {
   3.693404654068478*^9, 3.6934046767251215`*^9}, 3.6934047114649863`*^9, {
   3.693411486854925*^9, 3.6934115557606277`*^9}, {3.693411611637782*^9, 
   3.69341163689961*^9}, {3.6934117443930483`*^9, 3.6934117581565638`*^9}, {
   3.693412031427684*^9, 3.693412061254629*^9}, {3.6934121007632923`*^9, 
   3.6934121063459177`*^9}, {3.6934121673784485`*^9, 
   3.6934121732938156`*^9}, {3.6934126870207553`*^9, 3.693412687851843*^9}, {
   3.6934127270569134`*^9, 3.693412748633364*^9}, {3.693412788765423*^9, 
   3.6934127889652367`*^9}, {3.693413093699652*^9, 3.6934131049158497`*^9}, {
   3.693413158927167*^9, 3.693413165655781*^9}, {3.6934132892354*^9, 
   3.6934132907125025`*^9}, {3.693413694311676*^9, 3.6934138525544806`*^9}, {
   3.6934139623245473`*^9, 3.6934139741439466`*^9}, {3.6934151889872465`*^9, 
   3.6934151913460665`*^9}, {3.693421812342548*^9, 3.693421814260598*^9}, 
   3.693571210634773*^9, {3.6935730363523593`*^9, 3.693573037920248*^9}, {
   3.6935730980366774`*^9, 3.693573098636371*^9}, {3.6935733964485483`*^9, 
   3.693573406451894*^9}, {3.693573469980172*^9, 3.693573501220932*^9}, {
   3.6935735525801334`*^9, 3.6935736322071934`*^9}, {3.693574441972418*^9, 
   3.693574507219281*^9}, {3.693574541832406*^9, 3.6935745742488327`*^9}, {
   3.693575621329663*^9, 3.693575673978572*^9}, {3.69357673871231*^9, 
   3.6935767415254836`*^9}, {3.6935771676067867`*^9, 
   3.6935771693901434`*^9}, {3.6935774277045565`*^9, 3.693577443913048*^9}, {
   3.6935774788521423`*^9, 3.69357748131384*^9}, {3.6935801882381463`*^9, 
   3.693580202383541*^9}, {3.6935809873145914`*^9, 3.69358098944536*^9}, {
   3.6935872517340436`*^9, 3.6935872545426507`*^9}, {3.693587372831433*^9, 
   3.6935873796980495`*^9}, {3.693587562863904*^9, 3.693587616021948*^9}, {
   3.6935876893495855`*^9, 3.6935876903867693`*^9}, {3.6935878379546204`*^9, 
   3.6935878413010764`*^9}, {3.693588112787511*^9, 3.69358811449063*^9}, {
   3.6935881694755335`*^9, 3.693588171288027*^9}, {3.6935935389237742`*^9, 
   3.693593540345663*^9}, 3.6935935945632477`*^9, {3.6935936258290606`*^9, 
   3.693593626766575*^9}, {3.6935941806328535`*^9, 3.693594207086978*^9}, 
   3.6935946950674806`*^9, {3.6935947327149076`*^9, 3.693594734652423*^9}, {
   3.693594941365797*^9, 3.693594955856461*^9}, {3.6935949870952897`*^9, 
   3.693595006821137*^9}, {3.693595054598051*^9, 3.693595087587389*^9}, {
   3.693595156350831*^9, 3.693595162100931*^9}, {3.693595205375044*^9, 
   3.693595214270155*^9}, {3.6935955401391487`*^9, 3.69359554954937*^9}, {
   3.6935957894002223`*^9, 3.693595793535714*^9}, {3.6935975519334*^9, 
   3.6935975545739965`*^9}, 3.6935978494473696`*^9, 3.6935978853782554`*^9, {
   3.693600107714938*^9, 3.6936001086524925`*^9}, {3.6936001461743183`*^9, 
   3.6936001463930244`*^9}, {3.6936004005973363`*^9, 
   3.6936004140829015`*^9}, {3.693600548133373*^9, 3.69360056949905*^9}, 
   3.6936006120421934`*^9, {3.693600743312659*^9, 3.6936007668870306`*^9}, 
   3.6936593079963093`*^9, {3.6936600641823077`*^9, 3.6936600934684105`*^9}, {
   3.6936606802085075`*^9, 3.6936607260416718`*^9}, 3.693661925629023*^9, {
   3.6936898702165194`*^9, 3.693689870893845*^9}, {3.693743080035598*^9, 
   3.6937430806511307`*^9}, {3.6937489241757784`*^9, 3.6937489250597196`*^9}, 
   3.6937497240233326`*^9, {3.69375013463923*^9, 3.6937501361224847`*^9}, {
   3.693750204785307*^9, 3.6937502061733837`*^9}, {3.693863378234019*^9, 
   3.6938633887490287`*^9}, {3.693942957555222*^9, 3.6939429577397947`*^9}, {
   3.6939431695478506`*^9, 3.6939431706474953`*^9}, {3.702729717789729*^9, 
   3.702729723317045*^9}, {3.7027298334753456`*^9, 3.7027298344234*^9}},
 CellLabel->
  "In[268]:=",ExpressionUUID->"f8603042-5bfa-4bed-9dd7-5aadcd09d039"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev3DoppTest", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_", ",", 
    RowBox[{"kk_", ":", "0"}]}], "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", 
      "\[CapitalOmega]c1", ",", "\[CapitalOmega]c2", ",", "d31", ",", "d41"}],
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2", ",", "0.02"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]c1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]c2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ab", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "2"}], "Pi", "*", 
              RowBox[{"0.0254", "/", 
               RowBox[{"(", 
                RowBox[{"2", "wcn"}], ")"}]}], 
              RowBox[{"Im", "[", 
               RowBox[{"sd3e", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", 
                 RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                 "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                 ",", "u", ",", "Nat", ",", "d42"}], "]"}], "]"}]}], "]"}]}], 
           "}"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "2"}], "Pi", "*", 
              RowBox[{"0.0254", "/", 
               RowBox[{"(", 
                RowBox[{"2", "wcn"}], ")"}]}], 
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", 
                 RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                 "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                 ",", "u", ",", "Nat", ",", "d42"}], "]"}], "]"}]}], "]"}]}], 
           "}"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", 
            RowBox[{"Im", "[", 
             RowBox[{"sd3e", "[", 
              RowBox[{
              "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
               ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
               ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}], 
              "]"}], "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", 
            RowBox[{"Im", "[", 
             RowBox[{"sd3a", "[", 
              RowBox[{
              "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
               ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
               ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}], 
              "]"}], "]"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"kk", "\[Equal]", "0"}], ",", 
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], "+", "kk"}], ")"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2"}], "Pi", "*", 
            RowBox[{"0.0254", "/", 
             RowBox[{"(", 
              RowBox[{"2", "wcn"}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", 
                 RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                 "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                 ",", "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], "+", 
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                 ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
                 "d32"}], "]"}], "]"}]}], ")"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.693574788190744*^9, {3.6935755435451756`*^9, 3.693575582040471*^9}, {
   3.693575719373087*^9, 3.693575828170508*^9}, {3.6935759031158037`*^9, 
   3.693575905413637*^9}, {3.6935759486677485`*^9, 3.693576041202098*^9}, {
   3.6935761437267427`*^9, 3.6935761599640436`*^9}, {3.693576280979597*^9, 
   3.6935762915722256`*^9}, 3.6935763650823193`*^9, {3.6935766166108017`*^9, 
   3.693576617710661*^9}, {3.6935766587788343`*^9, 3.6935766997397213`*^9}, {
   3.6935767327434072`*^9, 3.6935767353280163`*^9}, {3.6935770614397907`*^9, 
   3.693577111380499*^9}, {3.693577264038381*^9, 3.693577276563698*^9}, {
   3.693577330659221*^9, 3.693577332711196*^9}, {3.6935775223232965`*^9, 
   3.6935775586215987`*^9}, {3.6935775904422235`*^9, 3.693577620163538*^9}, {
   3.693578143691578*^9, 3.693578187743436*^9}, {3.693580172595014*^9, 
   3.6935801744940414`*^9}, 3.693580206397213*^9, {3.6935809666682715`*^9, 
   3.6935809844621696`*^9}, {3.693587239997185*^9, 3.693587244819771*^9}, {
   3.6935873185607934`*^9, 3.693587346656555*^9}, {3.6935873844809027`*^9, 
   3.693587498669446*^9}, {3.6935876861200137`*^9, 3.693587686887785*^9}, {
   3.6935877665889225`*^9, 3.6935877679419646`*^9}, {3.693587799978722*^9, 
   3.6935878259060593`*^9}, {3.69358810517807*^9, 3.6935881067093134`*^9}, {
   3.693588151162873*^9, 3.6935881531316166`*^9}, {3.693593416940279*^9, 
   3.69359344391139*^9}, 3.6935935341581116`*^9, 3.693593589781909*^9, 
   3.6935936343447647`*^9, {3.693594268366268*^9, 3.6935943106601176`*^9}, {
   3.6935944158405285`*^9, 3.693594434891628*^9}, {3.693594730152413*^9, 
   3.693594830862494*^9}, {3.693594964090908*^9, 3.6935949803452253`*^9}, {
   3.69359509789993*^9, 3.693595114966015*^9}, {3.69359518461521*^9, 
   3.693595187677732*^9}, {3.6935953181170454`*^9, 3.6935954112130437`*^9}, {
   3.69359698702544*^9, 3.6935969883692255`*^9}, {3.693597545480194*^9, 
   3.69359755757405*^9}, {3.69359935066584*^9, 3.6935993518533506`*^9}, 
   3.693660729226142*^9, 3.693661922923174*^9, {3.693689862582595*^9, 
   3.6936898641506815`*^9}, {3.69386339712124*^9, 3.693863425281287*^9}, {
   3.693942962068928*^9, 3.693942962384385*^9}, {3.6939431730772285`*^9, 
   3.6939431740930853`*^9}, {3.7027297737019267`*^9, 
   3.7027297793412495`*^9}, {3.702729826678957*^9, 3.702729827975031*^9}, {
   3.7046569903010597`*^9, 3.7046569966914253`*^9}},
 CellLabel->
  "In[269]:=",ExpressionUUID->"295d6705-47fd-4d0a-b571-a139133ee434"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev3Testsc", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", "d31", ",", 
      "d41", ",", "\[CapitalDelta]2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "0.6"}], ",", "0.4", ",", "0.0001"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d32", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"omegac2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Chi]42", "=", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["d42", "2"], " ", "Nat", " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]21", "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}]}], 
       RowBox[{"e0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]21", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Gamma]32"}], "+", 
             "\[Delta]", "+", "\[CapitalDelta]", "+", "w43"}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["omegac2", "2"]}]}], ")"}], " ", "\[HBar]"}]]}], 
     ";", "   ", "\[IndentingNewLine]", 
     RowBox[{"\[Chi]24", "=", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["d42", "2"], " ", "Nat", " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]21", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}]}], 
       RowBox[{"e0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]21", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]32"}], "+", "\[Delta]", 
             "+", "\[CapitalDelta]", "+", "w43"}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["omegac2", "2"]}]}], ")"}], " ", "\[HBar]"}]]}], 
     ";", "   ", "\[IndentingNewLine]", 
     RowBox[{"\[Chi]32", "=", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["d32", "2"], " ", "Nat", " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]21", "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}]}], 
       RowBox[{"e0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]21", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Gamma]32"}], "+", 
             "\[Delta]", "+", "\[CapitalDelta]"}], ")"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["omegac1", "2"]}]}], ")"}], " ", "\[HBar]"}]]}], 
     ";", "   ", "\[IndentingNewLine]", 
     RowBox[{"\[Chi]23", "=", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["d32", "2"], " ", "Nat", " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]21", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}]}], 
       RowBox[{"e0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]21", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]32"}], "+", "\[Delta]", 
             "+", "\[CapitalDelta]"}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["omegac1", "2"]}]}], ")"}], " ", "\[HBar]"}]]}], 
     ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ab", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", "\[Chi]24", "]"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", "\[Chi]42", "]"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", "\[Chi]23", "]"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", "\[Chi]32", "]"}]}], "}"}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d", "/", 
           SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2"}], "Pi", "*", 
            RowBox[{"0.0254", "/", 
             RowBox[{"(", 
              RowBox[{"2", "wcn"}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", "\[Chi]42", "]"}], "+", 
              RowBox[{"Im", "[", "\[Chi]32", "]"}]}], ")"}]}], "]"}]}], "}"}],
         "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"d", "/", 
            SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], "Pi", "*", 
             RowBox[{"0.0254", "/", 
              RowBox[{"(", 
               RowBox[{"2", "wcn"}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Im", "[", "\[Chi]42", "]"}], "+", 
               RowBox[{"Im", "[", "\[Chi]32", "]"}]}], ")"}]}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], "]"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ab", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", "\[Chi]42", "]"}], "+", 
              RowBox[{"Im", "[", "\[Chi]32", "]"}]}], ")"}]}], "}"}], "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", "\[Chi]32", "]"}], ")"}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", "\[Chi]42", "]"}], ")"}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.693843536035865*^9, 3.693843640240203*^9}, {
   3.693843740781679*^9, 3.6938437417503285`*^9}, {3.693843821626108*^9, 
   3.693843896295884*^9}, {3.6938632201821575`*^9, 3.6938632216210613`*^9}, {
   3.6938633047886147`*^9, 3.6938633512038417`*^9}, {3.7023218529533176`*^9, 
   3.7023218592896795`*^9}, {3.7037040515987377`*^9, 
   3.7037040516947703`*^9}, {3.703704090385253*^9, 3.7037040950563*^9}, {
   3.703704741250948*^9, 3.7037047633943357`*^9}, {3.7037053263237934`*^9, 
   3.7037053370599256`*^9}, {3.703968011298628*^9, 3.7039680197611113`*^9}, {
   3.7039680551461353`*^9, 3.7039680652967157`*^9}, {3.7044713634488115`*^9, 
   3.7044713636488223`*^9}, {3.7044719367776036`*^9, 3.704471938080678*^9}, {
   3.7046590373741455`*^9, 3.704659054078101*^9}, {3.7050858643143015`*^9, 
   3.705085867832503*^9}, {3.705230008067853*^9, 3.7052300117400627`*^9}, 
   3.7052393348763156`*^9, {3.765828259218684*^9, 3.7658282612252483`*^9}},
 CellLabel->
  "In[270]:=",ExpressionUUID->"759d762d-baf6-4358-bae8-c0b114bbb3e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev3DoppTestsc", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", 
      "\[CapitalOmega]c1", ",", "\[CapitalOmega]c2", ",", "\[CapitalDelta]2", 
      ",", "d31", ",", "d41"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "0.6"}], ",", "0.4", ",", "0.0001"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d32", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]c1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]c2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ab", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3e", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", 
                RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",",
                 "u", ",", "Nat", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3a", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", 
                RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",",
                 "u", ",", "Nat", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3e", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}],
                "]"}], "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3a", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}],
                "]"}], "]"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "*)"}], 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d", "/", 
           SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2"}], "Pi", "*", 
            RowBox[{"0.0254", "/", 
             RowBox[{"(", 
              RowBox[{"2", "wcn"}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", 
                 RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                 "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                 ",", "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], "+", 
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                 ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
                 "d32"}], "]"}], "]"}]}], ")"}]}], "]"}]}], "}"}], "]"}], ",",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"d", "/", 
                SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "2"}], "Pi", "*", 
                 RowBox[{"0.0254", "/", 
                  RowBox[{"(", 
                   RowBox[{"2", "wcn"}], ")"}]}], 
                 RowBox[{"(", 
                  RowBox[{"Im", "[", 
                   RowBox[{
                    RowBox[{"sd3a", "[", 
                    RowBox[{
                    "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", 
                    RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                    "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d42"}], "]"}], "+", 
                    RowBox[{"Im", "[", 
                    RowBox[{"sd3a", "[", 
                    RowBox[{
                    "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", "\[CapitalDelta]", ",", 
                    "\[CapitalOmega]c1", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d32"}], "]"}], 
                    "]"}]}]}]}]}]}]}]}]}], ")"}], "]"}], "}"}], "]"}], "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ab", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", 
                 RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                 "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                 ",", "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], "+", 
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                 ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
                 "d32"}], "]"}], "]"}]}], ")"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", 
                  RowBox[{"sd3a", "[", 
                   RowBox[{
                   "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", 
                    RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                    "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], ")"}]}],
                "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", 
                  RowBox[{"sd3a", "[", 
                   RowBox[{
                   "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", "\[CapitalDelta]", ",", 
                    "\[CapitalOmega]c1", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d32"}], "]"}], "]"}], ")"}]}],
                "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.693574788190744*^9, {3.6935755435451756`*^9, 3.693575582040471*^9}, {
   3.693575719373087*^9, 3.693575828170508*^9}, {3.6935759031158037`*^9, 
   3.693575905413637*^9}, {3.6935759486677485`*^9, 3.693576041202098*^9}, {
   3.6935761437267427`*^9, 3.6935761599640436`*^9}, {3.693576280979597*^9, 
   3.6935762915722256`*^9}, 3.6935763650823193`*^9, {3.6935766166108017`*^9, 
   3.693576617710661*^9}, {3.6935766587788343`*^9, 3.6935766997397213`*^9}, {
   3.6935767327434072`*^9, 3.6935767353280163`*^9}, {3.6935770614397907`*^9, 
   3.693577111380499*^9}, {3.693577264038381*^9, 3.693577276563698*^9}, {
   3.693577330659221*^9, 3.693577332711196*^9}, {3.6935775223232965`*^9, 
   3.6935775586215987`*^9}, {3.6935775904422235`*^9, 3.693577620163538*^9}, {
   3.693578143691578*^9, 3.693578187743436*^9}, {3.693580172595014*^9, 
   3.6935801744940414`*^9}, 3.693580206397213*^9, {3.6935809666682715`*^9, 
   3.6935809844621696`*^9}, {3.693587239997185*^9, 3.693587244819771*^9}, {
   3.6935873185607934`*^9, 3.693587346656555*^9}, {3.6935873844809027`*^9, 
   3.693587498669446*^9}, {3.6935876861200137`*^9, 3.693587686887785*^9}, {
   3.6935877665889225`*^9, 3.6935877679419646`*^9}, {3.693587799978722*^9, 
   3.6935878259060593`*^9}, {3.69358810517807*^9, 3.6935881067093134`*^9}, {
   3.693588151162873*^9, 3.6935881531316166`*^9}, {3.693593416940279*^9, 
   3.69359344391139*^9}, 3.6935935341581116`*^9, 3.693593589781909*^9, 
   3.6935936343447647`*^9, {3.693594268366268*^9, 3.6935943106601176`*^9}, {
   3.6935944158405285`*^9, 3.693594434891628*^9}, {3.693594730152413*^9, 
   3.693594830862494*^9}, {3.693594964090908*^9, 3.6935949803452253`*^9}, {
   3.69359509789993*^9, 3.693595114966015*^9}, {3.69359518461521*^9, 
   3.693595187677732*^9}, {3.6935953181170454`*^9, 3.6935954112130437`*^9}, {
   3.69359698702544*^9, 3.6935969883692255`*^9}, {3.693597545480194*^9, 
   3.69359755757405*^9}, {3.69359935066584*^9, 3.6935993518533506`*^9}, 
   3.693660729226142*^9, 3.693661922923174*^9, {3.6936700260265675`*^9, 
   3.693670026110908*^9}, {3.693670398284234*^9, 3.69367040421292*^9}, 
   3.693670528038734*^9, 3.693671581165148*^9, {3.693671654254927*^9, 
   3.693671668387971*^9}, {3.6936857915901566`*^9, 3.693685792605191*^9}, {
   3.6938634485148563`*^9, 3.6938634598476286`*^9}, {3.7037037318693995`*^9, 
   3.703703733997254*^9}, {3.7037039196618567`*^9, 3.703703949933426*^9}, {
   3.7037045228957405`*^9, 3.7037045951683903`*^9}, {3.7037047677119117`*^9, 
   3.703704790639476*^9}, {3.7037053735870123`*^9, 3.703705396434226*^9}, 
   3.703847577970235*^9, {3.7038477340331616`*^9, 3.703847735488245*^9}, {
   3.7038478500247955`*^9, 3.7038479075210843`*^9}, {3.7038496744021444`*^9, 
   3.7038496877069054`*^9}, {3.703968082809718*^9, 3.7039680995366745`*^9}, {
   3.7039681974812765`*^9, 3.703968198736348*^9}, {3.7040283671537848`*^9, 
   3.704028396040437*^9}, {3.704471203890685*^9, 3.7044712055037775`*^9}, {
   3.704471236761565*^9, 3.7044712396487303`*^9}, {3.704471925432955*^9, 
   3.7044719265850205`*^9}, {3.704659141550104*^9, 3.704659170061735*^9}, {
   3.7051463045892878`*^9, 3.705146346168666*^9}, 3.76582826804615*^9},
 CellLabel->
  "In[271]:=",ExpressionUUID->"61ac50df-e2d8-46bf-ab70-4991d8a1e4a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev4Testsc", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", "d31", ",", 
      "d41", ",", "\[CapitalDelta]2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "0.6"}], ",", "0.4", ",", "0.0001"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"omegac2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Chi]42", "=", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d42", "2"], " ", "Nat", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SqrtBox["5"]}], "-", 
             RowBox[{"5", " ", 
              SqrtBox["14"]}]}], ")"}], " ", 
           SuperscriptBox["omegac1", "2"]}], "+", 
          RowBox[{"16", " ", 
           SqrtBox["5"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]21", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]32", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"\[Delta]", "+", "\[CapitalDelta]"}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], 
       RowBox[{"2", " ", 
        SqrtBox["5"], " ", "e0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["omegac1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "w43"}], "-", 
             RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Gamma]32"}], "-", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Gamma]42"}], "+", 
             RowBox[{"9", " ", "\[Delta]"}], "+", 
             RowBox[{"9", " ", "\[CapitalDelta]"}]}], ")"}]}], "+", 
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]21", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"w43", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", 
             "+", "\[CapitalDelta]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]32", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"\[Delta]", "+", "\[CapitalDelta]"}], ")"}]}]}], 
            ")"}]}]}], ")"}], " ", "\[HBar]"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Chi]32", "=", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["d32", "2"], " ", "Nat", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "35"}], "+", 
              RowBox[{"2", " ", 
               SqrtBox["70"]}]}], ")"}], " ", 
            SuperscriptBox["omegac1", "2"]}], "+", 
           RowBox[{"40", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Gamma]21"}], "+", 
              "\[Delta]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"w43", "-", 
              RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", 
              "+", "\[CapitalDelta]"}], ")"}]}]}], ")"}], " "}], 
        RowBox[{"5", " ", "e0", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["omegac1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "w43"}], "-", 
              RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Gamma]32"}], "-", 
              RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Gamma]42"}], "+", 
              RowBox[{"9", " ", "\[Delta]"}], "+", 
              RowBox[{"9", " ", "\[CapitalDelta]"}]}], ")"}]}], "+", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{"\[Gamma]21", "+", 
              RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"w43", "-", 
              RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", 
              "+", "\[CapitalDelta]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Gamma]32", "+", 
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"(", 
                RowBox[{"\[Delta]", "+", "\[CapitalDelta]"}], ")"}]}]}], 
             ")"}]}]}], ")"}], " ", "\[HBar]"}]]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Chi]24", "=", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d42", "2"], " ", "Nat", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SqrtBox["5"]}], "-", 
             RowBox[{"5", " ", 
              SqrtBox["14"]}]}], ")"}], " ", 
           SuperscriptBox["omegac1", "2"]}], "+", 
          RowBox[{"16", " ", 
           SqrtBox["5"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]21", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]32"}], "+", "\[Delta]", 
             "+", "\[CapitalDelta]"}], ")"}]}]}], ")"}]}], 
       RowBox[{"2", " ", 
        SqrtBox["5"], " ", "e0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]21", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]32"}], "+", "\[Delta]", 
             "+", "\[CapitalDelta]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"w43", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", 
             "+", "\[CapitalDelta]"}], ")"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["omegac1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "w43"}], "+", 
             RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Gamma]32"}], "+", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Gamma]42"}], "+", 
             RowBox[{"9", " ", "\[Delta]"}], "+", 
             RowBox[{"9", " ", "\[CapitalDelta]"}]}], ")"}]}]}], ")"}], " ", 
        "\[HBar]"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Chi]23", "=", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d32", "2"], " ", "Nat", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"35", " ", 
              SqrtBox["2"]}], "-", 
             RowBox[{"4", " ", 
              SqrtBox["35"]}]}], ")"}], " ", 
           SuperscriptBox["omegac1", "2"]}], "-", 
          RowBox[{"40", " ", "\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]21", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"w43", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", 
             "+", "\[CapitalDelta]"}], ")"}]}]}], ")"}]}], 
       RowBox[{"5", " ", 
        SqrtBox["2"], " ", "e0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["omegac1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "w43"}], "+", 
             RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Gamma]32"}], "+", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Gamma]42"}], "+", 
             RowBox[{"9", " ", "\[Delta]"}], "+", 
             RowBox[{"9", " ", "\[CapitalDelta]"}]}], ")"}]}], "+", 
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]21", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"w43", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", 
             "+", "\[CapitalDelta]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]32", "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"\[Delta]", "+", "\[CapitalDelta]"}], ")"}]}]}], 
            ")"}]}]}], ")"}], " ", "\[HBar]"}]]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ab", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", "\[Chi]24", "]"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", "\[Chi]42", "]"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", "\[Chi]23", "]"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", "\[Chi]32", "]"}]}], "}"}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "*)"}], 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d", "/", 
           SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2"}], "Pi", "*", 
            RowBox[{"0.0254", "/", 
             RowBox[{"(", 
              RowBox[{"2", "wcn"}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", "\[Chi]42", "]"}], "+", 
              RowBox[{"Im", "[", "\[Chi]32", "]"}]}], ")"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"d", "/", 
            SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], "Pi", "*", 
             RowBox[{"0.0254", "/", 
              RowBox[{"(", 
               RowBox[{"2", "wcn"}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Im", "[", "\[Chi]42", "]"}], "+", 
               RowBox[{"Im", "[", "\[Chi]32", "]"}]}], ")"}]}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], "]"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ab", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{"Im", "[", "\[Chi]32", "]"}], ")"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{"Im", "[", "\[Chi]42", "]"}], ")"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", "\[Chi]32", "]"}], ")"}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", "\[Chi]42", "]"}], ")"}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.69384342870677*^9, 3.6938434984783955`*^9}, {
   3.6938435542457924`*^9, 3.6938435562130795`*^9}, {3.6938437366658726`*^9, 
   3.693843738281099*^9}, {3.6938438176423116`*^9, 3.693843899365946*^9}, {
   3.693863357051441*^9, 3.6938633711804867`*^9}, {3.6939235782972093`*^9, 
   3.693923583765154*^9}, 3.7023218664500895`*^9, {3.7027296703830175`*^9, 
   3.7027297120383997`*^9}, {3.702729761203212*^9, 3.702729765782474*^9}, {
   3.703704049775228*^9, 3.7037040691218405`*^9}, {3.7037040999199715`*^9, 
   3.7037041000972395`*^9}, {3.703704892211725*^9, 3.703704903168289*^9}, {
   3.703705343860592*^9, 3.703705352450121*^9}, {3.703968044354518*^9, 
   3.703968045586589*^9}, {3.7040283458815684`*^9, 3.7040283484347143`*^9}, {
   3.704471358955554*^9, 3.7044713595205865`*^9}, {3.704471932370352*^9, 
   3.7044719337134285`*^9}, {3.7046590007660513`*^9, 3.704659022919319*^9}, {
   3.705085872642778*^9, 3.705085875425937*^9}, {3.705146234403273*^9, 
   3.705146237401445*^9}, {3.705146407211157*^9, 3.7051464114013968`*^9}, {
   3.705148467789016*^9, 3.705148473371335*^9}, 3.765828271302997*^9},
 CellLabel->
  "In[272]:=",ExpressionUUID->"c9102371-1ea7-4869-81cd-527a5fab1b6b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev4DoppTestsc", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", 
      "\[CapitalDelta]2", ",", "d31", ",", "d41"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "0.6"}], ",", "0.4", ",", "0.0001"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"omegac2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ab", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd24", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
                ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac2", ",", 
                "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
                "w43", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd42", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
                ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac2", ",", 
                "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
                "w43", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd23", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
                ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", 
                "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
                "w43", ",", "d32"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd32", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
                ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", 
                "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
                "w43", ",", "d32"}], "]"}], "]"}]}], "}"}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d", "/", 
           SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2"}], "Pi", "*", 
            RowBox[{"0.0254", "/", 
             RowBox[{"(", 
              RowBox[{"2", "wcn"}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"sd42", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32",
                  ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", 
                 ",", "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", 
                 ",", "w43", ",", "d42"}], "]"}], "]"}], "+", 
              RowBox[{"Im", "[", 
               RowBox[{"sd32", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32",
                  ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", 
                 ",", "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", 
                 ",", "w43", ",", "d32"}], "]"}], "]"}]}], ")"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"d", "/", 
            SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], "Pi", "*", 
             RowBox[{"0.0254", "/", 
              RowBox[{"(", 
               RowBox[{"2", "wcn"}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Im", "[", 
                RowBox[{"sd42", "[", 
                 RowBox[{
                 "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", 
                  "\[Gamma]32", ",", "\[Delta]", ",", "\[CapitalDelta]", ",", 
                  "omegac1", ",", "c", ",", "\[HBar]", ",", "e0", ",", "u", 
                  ",", "Nat", ",", "w43", ",", "d42"}], "]"}], "]"}], "+", 
               RowBox[{"Im", "[", 
                RowBox[{"sd32", "[", 
                 RowBox[{
                 "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", 
                  "\[Gamma]32", ",", "\[Delta]", ",", "\[CapitalDelta]", ",", 
                  "omegac1", ",", "c", ",", "\[HBar]", ",", "e0", ",", "u", 
                  ",", "Nat", ",", "w43", ",", "d32"}], "]"}], "]"}]}], 
              ")"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ab", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Im", "[", 
               RowBox[{"sd32", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32",
                  ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", 
                 ",", "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", 
                 ",", "w43", ",", "d32"}], "]"}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Im", "[", 
               RowBox[{"sd42", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32",
                  ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", 
                 ",", "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", 
                 ",", "w43", ",", "d42"}], "]"}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", 
                  RowBox[{"sd32", "[", 
                   RowBox[{
                   "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", 
                    "\[Gamma]32", ",", "\[Delta]", ",", "\[CapitalDelta]", 
                    ",", "omegac1", ",", "c", ",", "\[HBar]", ",", "e0", ",", 
                    "u", ",", "Nat", ",", "w43", ",", "d32"}], "]"}], "]"}], 
                 ")"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", 
                  RowBox[{"sd42", "[", 
                   RowBox[{
                   "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", 
                    "\[Gamma]32", ",", "\[Delta]", ",", "\[CapitalDelta]", 
                    ",", "omegac1", ",", "c", ",", "\[HBar]", ",", "e0", ",", 
                    "u", ",", "Nat", ",", "w43", ",", "d42"}], "]"}], "]"}], 
                 ")"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
          "}"}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6820777509929857`*^9, 3.682078072258361*^9}, {
   3.6820781686988773`*^9, 3.6820781844017754`*^9}, {3.6820782371557927`*^9, 
   3.6820782387708855`*^9}, {3.6820783386755996`*^9, 
   3.6820783600278206`*^9}, {3.682078390802581*^9, 3.682078409651659*^9}, {
   3.6820785556990128`*^9, 3.6820785577631307`*^9}, {3.682078604887826*^9, 
   3.682078606954944*^9}, 3.682078646275193*^9, 3.6820786817442217`*^9, {
   3.6820787244836664`*^9, 3.6820787256587334`*^9}, {3.682078761002755*^9, 
   3.6820787873862643`*^9}, {3.682078849739831*^9, 3.682078868395898*^9}, {
   3.6820789209479036`*^9, 3.682079036674523*^9}, {3.6820797161803885`*^9, 
   3.6820797163083954`*^9}, {3.6820940847423997`*^9, 3.682094176264634*^9}, {
   3.682100534108282*^9, 3.682100724544174*^9}, {3.682100812826224*^9, 
   3.6821008239058576`*^9}, {3.682100946929894*^9, 3.6821009474969263`*^9}, {
   3.6821010023450637`*^9, 3.6821010049532127`*^9}, {3.682101044296463*^9, 
   3.6821010535839944`*^9}, {3.6821012584737134`*^9, 3.682101261144866*^9}, {
   3.682101316585037*^9, 3.6821013732572784`*^9}, {3.682101414754652*^9, 
   3.6821014312095933`*^9}, {3.6821027458817883`*^9, 
   3.6821029190776944`*^9}, {3.682102981621272*^9, 3.682103063142935*^9}, {
   3.682103152077021*^9, 3.6821031759093847`*^9}, {3.682103228078368*^9, 
   3.682103275783097*^9}, {3.6821033867274427`*^9, 3.6821035279885225`*^9}, {
   3.682103596235426*^9, 3.6821036073870635`*^9}, {3.6821036960071325`*^9, 
   3.6821037775187945`*^9}, {3.6821038740493155`*^9, 
   3.6821038957665577`*^9}, {3.6821039323166485`*^9, 3.68210399843143*^9}, {
   3.6821041484310093`*^9, 3.6821041622938023`*^9}, {3.68210423166377*^9, 
   3.68210423550299*^9}, {3.6821042817676363`*^9, 3.682104281975648*^9}, {
   3.6821044114720545`*^9, 3.6821044835001745`*^9}, {3.6821045457187333`*^9, 
   3.6821045762404785`*^9}, {3.6821046797604*^9, 3.6821047083920374`*^9}, {
   3.682104777109968*^9, 3.682104849645117*^9}, {3.6821057340817037`*^9, 
   3.6821059374293346`*^9}, {3.6821060904780884`*^9, 
   3.6821060922611904`*^9}, {3.6821063118057475`*^9, 3.682106405406101*^9}, 
   3.682106470391818*^9, {3.682106886234603*^9, 3.6821069287290335`*^9}, {
   3.6821069697263784`*^9, 3.6821069703174124`*^9}, {3.6821070483648767`*^9, 
   3.6821070518040733`*^9}, {3.682107090122265*^9, 3.682107090965313*^9}, {
   3.6821071649115424`*^9, 3.6821073019513807`*^9}, {3.68210735596247*^9, 
   3.6821073587036266`*^9}, 3.6821621740358844`*^9, 3.6821627337889004`*^9, {
   3.6821628756690154`*^9, 3.682162909995979*^9}, {3.682163006508499*^9, 
   3.6821630839339275`*^9}, {3.682164960571265*^9, 3.6821650124032297`*^9}, {
   3.6821651296039333`*^9, 3.6821651308580046`*^9}, {3.682165214019761*^9, 
   3.682165249474789*^9}, {3.6821653768800764`*^9, 3.6821654049336815`*^9}, {
   3.6821654393766513`*^9, 3.68216545387048*^9}, 3.6821655581664457`*^9, {
   3.682165620292999*^9, 3.6821656220580997`*^9}, {3.6821656556360207`*^9, 
   3.6821656577791433`*^9}, {3.682165701413639*^9, 3.682165727750145*^9}, {
   3.6821665708493676`*^9, 3.682166634060983*^9}, {3.6821666960175266`*^9, 
   3.6821667514896994`*^9}, 3.682166802514618*^9, {3.6821669432116656`*^9, 
   3.682167060590379*^9}, {3.6821671413930006`*^9, 3.682167202085472*^9}, {
   3.6821673969946203`*^9, 3.6821673999857917`*^9}, {3.6821674579621077`*^9, 
   3.682167471208865*^9}, {3.682167501232582*^9, 3.682167549741357*^9}, {
   3.682167594844937*^9, 3.6821675971000657`*^9}, {3.6821676294889183`*^9, 
   3.6821676371443563`*^9}, {3.6821676871182146`*^9, 
   3.6821676926285295`*^9}, {3.6821678111603093`*^9, 3.682167849935527*^9}, {
   3.682167892151942*^9, 3.6821679025275354`*^9}, {3.6821680476398354`*^9, 
   3.682168050832018*^9}, {3.6821681112514734`*^9, 3.6821681135776067`*^9}, {
   3.6821681662336187`*^9, 3.6821681808154526`*^9}, {3.6821682156534452`*^9, 
   3.682168310363862*^9}, {3.682178802064953*^9, 3.6821788574731226`*^9}, {
   3.6821797845176063`*^9, 3.6821798678863745`*^9}, {3.682179924646621*^9, 
   3.682179933998156*^9}, 3.6821800382591195`*^9, {3.682180103785867*^9, 
   3.6821801191557465`*^9}, {3.6821803064124565`*^9, 3.682180320525264*^9}, {
   3.682180376454463*^9, 3.6821803814617496`*^9}, {3.6821832402242613`*^9, 
   3.682183284751808*^9}, {3.682183418403453*^9, 3.6821834209866004`*^9}, {
   3.682340380078147*^9, 3.682340410220871*^9}, {3.682340522181275*^9, 
   3.682340537612157*^9}, {3.6823406550578747`*^9, 3.682340655896923*^9}, {
   3.682340692157997*^9, 3.68234069326906*^9}, {3.682345730917197*^9, 
   3.682345731045205*^9}, {3.6823458690981007`*^9, 3.682345919492983*^9}, {
   3.682345967318719*^9, 3.6823459676457376`*^9}, {3.6823463858226557`*^9, 
   3.682346387093728*^9}, 3.6823468661441727`*^9, {3.6823507930227776`*^9, 
   3.6823507938398237`*^9}, {3.6823508346331573`*^9, 3.68235083747932*^9}, 
   3.682354138591133*^9, 3.6823566711479864`*^9, {3.682360931208648*^9, 
   3.682360932023695*^9}, {3.6823611770847116`*^9, 3.682361178779808*^9}, {
   3.682361844153866*^9, 3.682361845208926*^9}, {3.682362187881526*^9, 
   3.682362192368782*^9}, {3.6823622281698303`*^9, 3.6823622290728817`*^9}, {
   3.6824245168725133`*^9, 3.682424594002925*^9}, {3.6824260544974604`*^9, 
   3.682426058127668*^9}, {3.6824261036362705`*^9, 3.682426116397001*^9}, {
   3.682426190238224*^9, 3.682426191247282*^9}, {3.6824263261569986`*^9, 
   3.6824263271250534`*^9}, {3.682426566115723*^9, 3.682426577725387*^9}, {
   3.6824266458332825`*^9, 3.6824266595680685`*^9}, {3.682426696979208*^9, 
   3.6824267107099934`*^9}, {3.682427781573243*^9, 3.6824278113079443`*^9}, {
   3.6824355677005672`*^9, 3.682435631502217*^9}, {3.6824362666165433`*^9, 
   3.682436273352928*^9}, {3.6824396749253745`*^9, 3.6824396816717634`*^9}, {
   3.6824466180411763`*^9, 3.682446638837542*^9}, {3.6824477837793245`*^9, 
   3.682447784026745*^9}, {3.6824486976287394`*^9, 3.6824486988314676`*^9}, {
   3.682448741291876*^9, 3.682448758877056*^9}, {3.682528592516034*^9, 
   3.682528601669776*^9}, {3.6825290670606318`*^9, 3.6825290697308183`*^9}, {
   3.682529366905645*^9, 3.6825294632815933`*^9}, {3.6825295212782946`*^9, 
   3.6825295218262405`*^9}, {3.6825326611473746`*^9, 
   3.6825327653305593`*^9}, {3.68253282920498*^9, 3.6825328354504523`*^9}, {
   3.6825337172886257`*^9, 3.6825337966552057`*^9}, {3.682767727311578*^9, 
   3.6827677341416397`*^9}, {3.6827677784039173`*^9, 
   3.6827677817925434`*^9}, {3.6932553797640305`*^9, 
   3.6932554299337807`*^9}, {3.6932554605179*^9, 3.6932559069187527`*^9}, {
   3.6932561402287693`*^9, 3.6932561722799435`*^9}, {3.6933163942079906`*^9, 
   3.693316415693305*^9}, {3.693316580499305*^9, 3.6933166304990816`*^9}, {
   3.693316760505435*^9, 3.6933167713506746`*^9}, {3.693316885693319*^9, 
   3.693316923395423*^9}, {3.6933172128656282`*^9, 3.693317263746234*^9}, {
   3.693325258387647*^9, 3.693325258903158*^9}, {3.693325769156588*^9, 
   3.6933257999974604`*^9}, {3.693335215842825*^9, 3.6933352602877464`*^9}, {
   3.693335513566686*^9, 3.693335518882057*^9}, 3.6933383532074747`*^9, {
   3.69333844096763*^9, 3.6933384435674295`*^9}, {3.6933998013026257`*^9, 
   3.693399826867744*^9}, {3.693399878173236*^9, 3.6933998820731897`*^9}, {
   3.6933999851766276`*^9, 3.693400021978489*^9}, {3.6934001039998937`*^9, 
   3.693400106015895*^9}, {3.6934016718519135`*^9, 3.6934016749356365`*^9}, {
   3.693401768182933*^9, 3.6934017860664177`*^9}, {3.6934045049723034`*^9, 
   3.693404507408079*^9}, {3.6934045480219707`*^9, 3.693404569296521*^9}, {
   3.693404654068478*^9, 3.6934046767251215`*^9}, 3.6934047114649863`*^9, {
   3.693411486854925*^9, 3.6934115557606277`*^9}, {3.693411611637782*^9, 
   3.69341163689961*^9}, {3.6934117443930483`*^9, 3.6934117581565638`*^9}, {
   3.693412031427684*^9, 3.693412061254629*^9}, {3.6934121007632923`*^9, 
   3.6934121063459177`*^9}, {3.6934121673784485`*^9, 
   3.6934121732938156`*^9}, {3.6934126870207553`*^9, 3.693412687851843*^9}, {
   3.6934127270569134`*^9, 3.693412748633364*^9}, {3.693412788765423*^9, 
   3.6934127889652367`*^9}, {3.693413093699652*^9, 3.6934131049158497`*^9}, {
   3.693413158927167*^9, 3.693413165655781*^9}, {3.6934132892354*^9, 
   3.6934132907125025`*^9}, {3.693413694311676*^9, 3.6934138525544806`*^9}, {
   3.6934139623245473`*^9, 3.6934139741439466`*^9}, {3.6934151889872465`*^9, 
   3.6934151913460665`*^9}, {3.693421812342548*^9, 3.693421814260598*^9}, 
   3.693571210634773*^9, {3.6935730363523593`*^9, 3.693573037920248*^9}, {
   3.6935730980366774`*^9, 3.693573098636371*^9}, {3.6935733964485483`*^9, 
   3.693573406451894*^9}, {3.693573469980172*^9, 3.693573501220932*^9}, {
   3.6935735525801334`*^9, 3.6935736322071934`*^9}, {3.693574441972418*^9, 
   3.693574507219281*^9}, {3.693574541832406*^9, 3.6935745742488327`*^9}, {
   3.693575621329663*^9, 3.693575673978572*^9}, {3.69357673871231*^9, 
   3.6935767415254836`*^9}, {3.6935771676067867`*^9, 
   3.6935771693901434`*^9}, {3.6935774277045565`*^9, 3.693577443913048*^9}, {
   3.6935774788521423`*^9, 3.69357748131384*^9}, {3.6935801882381463`*^9, 
   3.693580202383541*^9}, {3.6935809873145914`*^9, 3.69358098944536*^9}, {
   3.6935872517340436`*^9, 3.6935872545426507`*^9}, {3.693587372831433*^9, 
   3.6935873796980495`*^9}, {3.693587562863904*^9, 3.693587616021948*^9}, {
   3.6935876893495855`*^9, 3.6935876903867693`*^9}, {3.6935878379546204`*^9, 
   3.6935878413010764`*^9}, {3.693588112787511*^9, 3.69358811449063*^9}, {
   3.6935881694755335`*^9, 3.693588171288027*^9}, {3.6935935389237742`*^9, 
   3.693593540345663*^9}, 3.6935935945632477`*^9, {3.6935936258290606`*^9, 
   3.693593626766575*^9}, {3.6935941806328535`*^9, 3.693594207086978*^9}, 
   3.6935946950674806`*^9, {3.6935947327149076`*^9, 3.693594734652423*^9}, {
   3.693594941365797*^9, 3.693594955856461*^9}, {3.6935949870952897`*^9, 
   3.693595006821137*^9}, {3.693595054598051*^9, 3.693595087587389*^9}, {
   3.693595156350831*^9, 3.693595162100931*^9}, {3.693595205375044*^9, 
   3.693595214270155*^9}, {3.6935955401391487`*^9, 3.69359554954937*^9}, {
   3.6935957894002223`*^9, 3.693595793535714*^9}, {3.6935975519334*^9, 
   3.6935975545739965`*^9}, 3.6935978494473696`*^9, 3.6935978853782554`*^9, {
   3.693600107714938*^9, 3.6936001086524925`*^9}, {3.6936001461743183`*^9, 
   3.6936001463930244`*^9}, {3.6936004005973363`*^9, 
   3.6936004140829015`*^9}, {3.693600548133373*^9, 3.69360056949905*^9}, 
   3.6936006120421934`*^9, {3.693600743312659*^9, 3.6936007668870306`*^9}, 
   3.6936593079963093`*^9, {3.6936600641823077`*^9, 3.6936600934684105`*^9}, {
   3.6936606802085075`*^9, 3.6936607260416718`*^9}, 3.693661925629023*^9, {
   3.6936700240275917`*^9, 3.6936700241431427`*^9}, {3.693670312478878*^9, 
   3.693670390281993*^9}, 3.693671577434743*^9, {3.693671658053399*^9, 
   3.69367166553496*^9}, {3.6936857949048443`*^9, 3.693685796574098*^9}, {
   3.6938634331019464`*^9, 3.6938634424293127`*^9}, {3.7021506788025312`*^9, 
   3.7021506844738555`*^9}, {3.7037037148134384`*^9, 
   3.7037037294210167`*^9}, {3.703703915278076*^9, 3.7037039469256473`*^9}, {
   3.703704848274563*^9, 3.7037048678076663`*^9}, {3.7037053637935624`*^9, 
   3.703705368753002*^9}, {3.703847775816551*^9, 3.703847820609113*^9}, {
   3.703849676834283*^9, 3.7038496905620685`*^9}, {3.7040282611457214`*^9, 
   3.7040282642328987`*^9}, {3.704028356338166*^9, 3.7040283566171827`*^9}, {
   3.704028398569582*^9, 3.704028399184617*^9}, {3.704471208248934*^9, 
   3.7044712099760327`*^9}, {3.704471241696847*^9, 3.7044712418798575`*^9}, {
   3.7044719290331607`*^9, 3.7044719302572308`*^9}, {3.7046591737739472`*^9, 
   3.7046591911339397`*^9}, {3.705148359139801*^9, 3.7051483678022966`*^9}, 
   3.7051484133559017`*^9, {3.73756766773046*^9, 3.7375676678554573`*^9}, {
   3.7391166690149665`*^9, 3.7391166877889643`*^9}, 3.7658282742121916`*^9},
 CellLabel->
  "In[273]:=",ExpressionUUID->"645cf6b3-91d1-45a7-bdbf-db78225fb175"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev3DoppTestsc", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", 
      "\[CapitalOmega]c1", ",", "\[CapitalOmega]c2", ",", "\[CapitalDelta]2", 
      ",", "d31", ",", "d41"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "0.6"}], ",", "0.4", ",", "0.0001"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d32", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]c1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]c2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ab", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3e", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", 
                RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",",
                 "u", ",", "Nat", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3a", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", 
                RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",",
                 "u", ",", "Nat", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3e", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}],
                "]"}], "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3a", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}],
                "]"}], "]"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "*)"}], 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d", "/", 
           SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2"}], "Pi", "*", 
            RowBox[{"0.0254", "/", 
             RowBox[{"(", 
              RowBox[{"2", "wcn"}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", 
                 RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                 "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                 ",", "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], "+", 
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                 ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
                 "d32"}], "]"}], "]"}]}], ")"}]}], "]"}]}], "}"}], "]"}], ",",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"d", "/", 
                SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "2"}], "Pi", "*", 
                 RowBox[{"0.0254", "/", 
                  RowBox[{"(", 
                   RowBox[{"2", "wcn"}], ")"}]}], 
                 RowBox[{"(", 
                  RowBox[{"Im", "[", 
                   RowBox[{
                    RowBox[{"sd3a", "[", 
                    RowBox[{
                    "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", 
                    RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                    "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d42"}], "]"}], "+", 
                    RowBox[{"Im", "[", 
                    RowBox[{"sd3a", "[", 
                    RowBox[{
                    "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", "\[CapitalDelta]", ",", 
                    "\[CapitalOmega]c1", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d32"}], "]"}], 
                    "]"}]}]}]}]}]}]}]}]}], ")"}], "]"}], "}"}], "]"}], "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ab", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", 
                 RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                 "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                 ",", "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], "+", 
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                 ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
                 "d32"}], "]"}], "]"}]}], ")"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", 
                  RowBox[{"sd3a", "[", 
                   RowBox[{
                   "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", 
                    RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                    "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], ")"}]}],
                "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", 
                  RowBox[{"sd3a", "[", 
                   RowBox[{
                   "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", "\[CapitalDelta]", ",", 
                    "\[CapitalOmega]c1", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d32"}], "]"}], "]"}], ")"}]}],
                "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.693574788190744*^9, {3.6935755435451756`*^9, 3.693575582040471*^9}, {
   3.693575719373087*^9, 3.693575828170508*^9}, {3.6935759031158037`*^9, 
   3.693575905413637*^9}, {3.6935759486677485`*^9, 3.693576041202098*^9}, {
   3.6935761437267427`*^9, 3.6935761599640436`*^9}, {3.693576280979597*^9, 
   3.6935762915722256`*^9}, 3.6935763650823193`*^9, {3.6935766166108017`*^9, 
   3.693576617710661*^9}, {3.6935766587788343`*^9, 3.6935766997397213`*^9}, {
   3.6935767327434072`*^9, 3.6935767353280163`*^9}, {3.6935770614397907`*^9, 
   3.693577111380499*^9}, {3.693577264038381*^9, 3.693577276563698*^9}, {
   3.693577330659221*^9, 3.693577332711196*^9}, {3.6935775223232965`*^9, 
   3.6935775586215987`*^9}, {3.6935775904422235`*^9, 3.693577620163538*^9}, {
   3.693578143691578*^9, 3.693578187743436*^9}, {3.693580172595014*^9, 
   3.6935801744940414`*^9}, 3.693580206397213*^9, {3.6935809666682715`*^9, 
   3.6935809844621696`*^9}, {3.693587239997185*^9, 3.693587244819771*^9}, {
   3.6935873185607934`*^9, 3.693587346656555*^9}, {3.6935873844809027`*^9, 
   3.693587498669446*^9}, {3.6935876861200137`*^9, 3.693587686887785*^9}, {
   3.6935877665889225`*^9, 3.6935877679419646`*^9}, {3.693587799978722*^9, 
   3.6935878259060593`*^9}, {3.69358810517807*^9, 3.6935881067093134`*^9}, {
   3.693588151162873*^9, 3.6935881531316166`*^9}, {3.693593416940279*^9, 
   3.69359344391139*^9}, 3.6935935341581116`*^9, 3.693593589781909*^9, 
   3.6935936343447647`*^9, {3.693594268366268*^9, 3.6935943106601176`*^9}, {
   3.6935944158405285`*^9, 3.693594434891628*^9}, {3.693594730152413*^9, 
   3.693594830862494*^9}, {3.693594964090908*^9, 3.6935949803452253`*^9}, {
   3.69359509789993*^9, 3.693595114966015*^9}, {3.69359518461521*^9, 
   3.693595187677732*^9}, {3.6935953181170454`*^9, 3.6935954112130437`*^9}, {
   3.69359698702544*^9, 3.6935969883692255`*^9}, {3.693597545480194*^9, 
   3.69359755757405*^9}, {3.69359935066584*^9, 3.6935993518533506`*^9}, 
   3.693660729226142*^9, 3.693661922923174*^9, {3.6936700260265675`*^9, 
   3.693670026110908*^9}, {3.693670398284234*^9, 3.69367040421292*^9}, 
   3.693670528038734*^9, 3.693671581165148*^9, {3.693671654254927*^9, 
   3.693671668387971*^9}, {3.6936857915901566`*^9, 3.693685792605191*^9}, {
   3.6938634485148563`*^9, 3.6938634598476286`*^9}, {3.7037037318693995`*^9, 
   3.703703733997254*^9}, {3.7037039196618567`*^9, 3.703703949933426*^9}, {
   3.7037045228957405`*^9, 3.7037045951683903`*^9}, {3.7037047677119117`*^9, 
   3.703704790639476*^9}, {3.7037053735870123`*^9, 3.703705396434226*^9}, 
   3.703847577970235*^9, {3.7038477340331616`*^9, 3.703847735488245*^9}, {
   3.7038478500247955`*^9, 3.7038479075210843`*^9}, {3.7038496744021444`*^9, 
   3.7038496877069054`*^9}, {3.703968082809718*^9, 3.7039680995366745`*^9}, {
   3.7039681974812765`*^9, 3.703968198736348*^9}, {3.7040283671537848`*^9, 
   3.704028396040437*^9}, {3.704471203890685*^9, 3.7044712055037775`*^9}, {
   3.704471236761565*^9, 3.7044712396487303`*^9}, {3.704471925432955*^9, 
   3.7044719265850205`*^9}, {3.704659141550104*^9, 3.704659170061735*^9}, {
   3.7051463045892878`*^9, 3.705146346168666*^9}, {3.713373479771468*^9, 
   3.713373486224832*^9}, {3.737567663401762*^9, 3.737567663511117*^9}, {
   3.73911666563859*^9, 3.7391166841736975`*^9}, 3.7658282773828473`*^9},
 CellLabel->
  "In[274]:=",ExpressionUUID->"d1177512-9431-4473-9348-ef8f85a84772"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev3DoppTestscSinlge", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", 
      "\[CapitalOmega]c1", ",", "\[CapitalOmega]c2", ",", "\[CapitalDelta]2", 
      ",", "d31", ",", "d41"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "0.6"}], ",", "0.4", ",", "0.0001"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d32", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]c1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]c2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ab", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3e", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", 
                RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",",
                 "u", ",", "Nat", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3a", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", 
                RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",",
                 "u", ",", "Nat", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3e", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}],
                "]"}], "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3a", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}],
                "]"}], "]"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "*)"}], 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d", "/", 
           SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2"}], "Pi", "*", 
            RowBox[{"0.0254", "/", 
             RowBox[{"(", 
              RowBox[{"2", "wcn"}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3a", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}],
                "]"}], "]"}], ")"}]}], "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"d", "/", 
                SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "2"}], "Pi", "*", 
                 RowBox[{"0.0254", "/", 
                  RowBox[{"(", 
                   RowBox[{"2", "wcn"}], ")"}]}], 
                 RowBox[{"(", 
                  RowBox[{"Im", "[", 
                   RowBox[{
                    RowBox[{"sd3a", "[", 
                    RowBox[{
                    "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", 
                    RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                    "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d42"}], "]"}], "+", 
                    RowBox[{"Im", "[", 
                    RowBox[{"sd3a", "[", 
                    RowBox[{
                    "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", "\[CapitalDelta]", ",", 
                    "\[CapitalOmega]c1", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d32"}], "]"}], 
                    "]"}]}]}]}]}]}]}]}]}], ")"}], "]"}], "}"}], "]"}], "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ab", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", 
                 RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                 "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                 ",", "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], "+", 
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                 ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
                 "d32"}], "]"}], "]"}]}], ")"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", 
                  RowBox[{"sd3a", "[", 
                   RowBox[{
                   "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", 
                    RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                    "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], ")"}]}],
                "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", 
                  RowBox[{"sd3a", "[", 
                   RowBox[{
                   "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", "\[CapitalDelta]", ",", 
                    "\[CapitalOmega]c1", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d32"}], "]"}], "]"}], ")"}]}],
                "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.693574788190744*^9, {3.6935755435451756`*^9, 3.693575582040471*^9}, {
   3.693575719373087*^9, 3.693575828170508*^9}, {3.6935759031158037`*^9, 
   3.693575905413637*^9}, {3.6935759486677485`*^9, 3.693576041202098*^9}, {
   3.6935761437267427`*^9, 3.6935761599640436`*^9}, {3.693576280979597*^9, 
   3.6935762915722256`*^9}, 3.6935763650823193`*^9, {3.6935766166108017`*^9, 
   3.693576617710661*^9}, {3.6935766587788343`*^9, 3.6935766997397213`*^9}, {
   3.6935767327434072`*^9, 3.6935767353280163`*^9}, {3.6935770614397907`*^9, 
   3.693577111380499*^9}, {3.693577264038381*^9, 3.693577276563698*^9}, {
   3.693577330659221*^9, 3.693577332711196*^9}, {3.6935775223232965`*^9, 
   3.6935775586215987`*^9}, {3.6935775904422235`*^9, 3.693577620163538*^9}, {
   3.693578143691578*^9, 3.693578187743436*^9}, {3.693580172595014*^9, 
   3.6935801744940414`*^9}, 3.693580206397213*^9, {3.6935809666682715`*^9, 
   3.6935809844621696`*^9}, {3.693587239997185*^9, 3.693587244819771*^9}, {
   3.6935873185607934`*^9, 3.693587346656555*^9}, {3.6935873844809027`*^9, 
   3.693587498669446*^9}, {3.6935876861200137`*^9, 3.693587686887785*^9}, {
   3.6935877665889225`*^9, 3.6935877679419646`*^9}, {3.693587799978722*^9, 
   3.6935878259060593`*^9}, {3.69358810517807*^9, 3.6935881067093134`*^9}, {
   3.693588151162873*^9, 3.6935881531316166`*^9}, {3.693593416940279*^9, 
   3.69359344391139*^9}, 3.6935935341581116`*^9, 3.693593589781909*^9, 
   3.6935936343447647`*^9, {3.693594268366268*^9, 3.6935943106601176`*^9}, {
   3.6935944158405285`*^9, 3.693594434891628*^9}, {3.693594730152413*^9, 
   3.693594830862494*^9}, {3.693594964090908*^9, 3.6935949803452253`*^9}, {
   3.69359509789993*^9, 3.693595114966015*^9}, {3.69359518461521*^9, 
   3.693595187677732*^9}, {3.6935953181170454`*^9, 3.6935954112130437`*^9}, {
   3.69359698702544*^9, 3.6935969883692255`*^9}, {3.693597545480194*^9, 
   3.69359755757405*^9}, {3.69359935066584*^9, 3.6935993518533506`*^9}, 
   3.693660729226142*^9, 3.693661922923174*^9, {3.6936700260265675`*^9, 
   3.693670026110908*^9}, {3.693670398284234*^9, 3.69367040421292*^9}, 
   3.693670528038734*^9, 3.693671581165148*^9, {3.693671654254927*^9, 
   3.693671668387971*^9}, {3.6936857915901566`*^9, 3.693685792605191*^9}, {
   3.6938634485148563`*^9, 3.6938634598476286`*^9}, {3.7037037318693995`*^9, 
   3.703703733997254*^9}, {3.7037039196618567`*^9, 3.703703949933426*^9}, {
   3.7037045228957405`*^9, 3.7037045951683903`*^9}, {3.7037047677119117`*^9, 
   3.703704790639476*^9}, {3.7037053735870123`*^9, 3.703705396434226*^9}, 
   3.703847577970235*^9, {3.7038477340331616`*^9, 3.703847735488245*^9}, {
   3.7038478500247955`*^9, 3.7038479075210843`*^9}, {3.7038496744021444`*^9, 
   3.7038496877069054`*^9}, {3.703968082809718*^9, 3.7039680995366745`*^9}, {
   3.7039681974812765`*^9, 3.703968198736348*^9}, {3.7040283671537848`*^9, 
   3.704028396040437*^9}, {3.704471203890685*^9, 3.7044712055037775`*^9}, {
   3.704471236761565*^9, 3.7044712396487303`*^9}, {3.704471925432955*^9, 
   3.7044719265850205`*^9}, {3.704659141550104*^9, 3.704659170061735*^9}, {
   3.7051463045892878`*^9, 3.705146346168666*^9}, {3.713373479771468*^9, 
   3.713373486224832*^9}, {3.737567663401762*^9, 3.737567663511117*^9}, {
   3.73911666563859*^9, 3.7391166841736975`*^9}, {3.739124250636244*^9, 
   3.7391242512319527`*^9}, {3.7391243035348716`*^9, 3.7391243204537582`*^9}, 
   3.7658282805646486`*^9},
 CellLabel->
  "In[275]:=",ExpressionUUID->"226b25ab-e500-4aed-8237-36f703d2d7d2"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Figure", "Title",
 CellChangeTimes->{{3.7171712292035246`*^9, 
  3.7171712298449926`*^9}},ExpressionUUID->"ba1c4da3-73b2-478c-b70b-\
9a7572ea242a"],

Cell[CellGroupData[{

Cell["Module", "Chapter",
 CellChangeTimes->{{3.7040248269242954`*^9, 
  3.704024828492385*^9}},ExpressionUUID->"9c42ca44-aeeb-48e9-8f89-\
538190a22ec5"],

Cell[CellGroupData[{

Cell["Module for the figure", "Subchapter",
 CellChangeTimes->{{3.7658287747571707`*^9, 3.76582877533571*^9}, {
  3.7658318783157945`*^9, 
  3.765831880459834*^9}},ExpressionUUID->"7f498fca-5492-47ac-a2ab-\
b586b4e0f557"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev4DoppTestsc", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", 
      "\[CapitalDelta]2", ",", "d31", ",", "d41"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"P", "\[GreaterEqual]", " ", 
          RowBox[{"80", "/", "1000"}]}], "\[Or]", 
         RowBox[{"P", "\[Equal]", "0"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{
             RowBox[{"-", "0.01"}], ",", "0.015", ",", "0.00016"}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "\[GreaterEqual]", " ", "0.002"}], "\[Or]", 
             RowBox[{"#", "\[LessEqual]", " ", 
              RowBox[{"-", "0.002"}]}]}], "&"}]}], "]"}], "*", 
         RowBox[{"10", "^", "9"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "0.007"}], ",", "0.007", ",", "0.00016"}], "]"}], "*", 
         RowBox[{"10", "^", "9"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"omegac2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "/", 
         SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Im", "[", 
           RowBox[{"sd42", "[", 
            RowBox[{
            "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
             ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", 
             "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43",
              ",", "d42"}], "]"}], "]"}], "+", 
          RowBox[{"Im", "[", 
           RowBox[{"sd32", "[", 
            RowBox[{
            "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
             ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", 
             "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43",
              ",", "d32"}], "]"}], "]"}]}], ")"}]}], "\[IndentingNewLine]", 
       "}"}], "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6820777509929857`*^9, 3.682078072258361*^9}, {
   3.6820781686988773`*^9, 3.6820781844017754`*^9}, {3.6820782371557927`*^9, 
   3.6820782387708855`*^9}, {3.6820783386755996`*^9, 
   3.6820783600278206`*^9}, {3.682078390802581*^9, 3.682078409651659*^9}, {
   3.6820785556990128`*^9, 3.6820785577631307`*^9}, {3.682078604887826*^9, 
   3.682078606954944*^9}, 3.682078646275193*^9, 3.6820786817442217`*^9, {
   3.6820787244836664`*^9, 3.6820787256587334`*^9}, {3.682078761002755*^9, 
   3.6820787873862643`*^9}, {3.682078849739831*^9, 3.682078868395898*^9}, {
   3.6820789209479036`*^9, 3.682079036674523*^9}, {3.6820797161803885`*^9, 
   3.6820797163083954`*^9}, {3.6820940847423997`*^9, 3.682094176264634*^9}, {
   3.682100534108282*^9, 3.682100724544174*^9}, {3.682100812826224*^9, 
   3.6821008239058576`*^9}, {3.682100946929894*^9, 3.6821009474969263`*^9}, {
   3.6821010023450637`*^9, 3.6821010049532127`*^9}, {3.682101044296463*^9, 
   3.6821010535839944`*^9}, {3.6821012584737134`*^9, 3.682101261144866*^9}, {
   3.682101316585037*^9, 3.6821013732572784`*^9}, {3.682101414754652*^9, 
   3.6821014312095933`*^9}, {3.6821027458817883`*^9, 
   3.6821029190776944`*^9}, {3.682102981621272*^9, 3.682103063142935*^9}, {
   3.682103152077021*^9, 3.6821031759093847`*^9}, {3.682103228078368*^9, 
   3.682103275783097*^9}, {3.6821033867274427`*^9, 3.6821035279885225`*^9}, {
   3.682103596235426*^9, 3.6821036073870635`*^9}, {3.6821036960071325`*^9, 
   3.6821037775187945`*^9}, {3.6821038740493155`*^9, 
   3.6821038957665577`*^9}, {3.6821039323166485`*^9, 3.68210399843143*^9}, {
   3.6821041484310093`*^9, 3.6821041622938023`*^9}, {3.68210423166377*^9, 
   3.68210423550299*^9}, {3.6821042817676363`*^9, 3.682104281975648*^9}, {
   3.6821044114720545`*^9, 3.6821044835001745`*^9}, {3.6821045457187333`*^9, 
   3.6821045762404785`*^9}, {3.6821046797604*^9, 3.6821047083920374`*^9}, {
   3.682104777109968*^9, 3.682104849645117*^9}, {3.6821057340817037`*^9, 
   3.6821059374293346`*^9}, {3.6821060904780884`*^9, 
   3.6821060922611904`*^9}, {3.6821063118057475`*^9, 3.682106405406101*^9}, 
   3.682106470391818*^9, {3.682106886234603*^9, 3.6821069287290335`*^9}, {
   3.6821069697263784`*^9, 3.6821069703174124`*^9}, {3.6821070483648767`*^9, 
   3.6821070518040733`*^9}, {3.682107090122265*^9, 3.682107090965313*^9}, {
   3.6821071649115424`*^9, 3.6821073019513807`*^9}, {3.68210735596247*^9, 
   3.6821073587036266`*^9}, 3.6821621740358844`*^9, 3.6821627337889004`*^9, {
   3.6821628756690154`*^9, 3.682162909995979*^9}, {3.682163006508499*^9, 
   3.6821630839339275`*^9}, {3.682164960571265*^9, 3.6821650124032297`*^9}, {
   3.6821651296039333`*^9, 3.6821651308580046`*^9}, {3.682165214019761*^9, 
   3.682165249474789*^9}, {3.6821653768800764`*^9, 3.6821654049336815`*^9}, {
   3.6821654393766513`*^9, 3.68216545387048*^9}, 3.6821655581664457`*^9, {
   3.682165620292999*^9, 3.6821656220580997`*^9}, {3.6821656556360207`*^9, 
   3.6821656577791433`*^9}, {3.682165701413639*^9, 3.682165727750145*^9}, {
   3.6821665708493676`*^9, 3.682166634060983*^9}, {3.6821666960175266`*^9, 
   3.6821667514896994`*^9}, 3.682166802514618*^9, {3.6821669432116656`*^9, 
   3.682167060590379*^9}, {3.6821671413930006`*^9, 3.682167202085472*^9}, {
   3.6821673969946203`*^9, 3.6821673999857917`*^9}, {3.6821674579621077`*^9, 
   3.682167471208865*^9}, {3.682167501232582*^9, 3.682167549741357*^9}, {
   3.682167594844937*^9, 3.6821675971000657`*^9}, {3.6821676294889183`*^9, 
   3.6821676371443563`*^9}, {3.6821676871182146`*^9, 
   3.6821676926285295`*^9}, {3.6821678111603093`*^9, 3.682167849935527*^9}, {
   3.682167892151942*^9, 3.6821679025275354`*^9}, {3.6821680476398354`*^9, 
   3.682168050832018*^9}, {3.6821681112514734`*^9, 3.6821681135776067`*^9}, {
   3.6821681662336187`*^9, 3.6821681808154526`*^9}, {3.6821682156534452`*^9, 
   3.682168310363862*^9}, {3.682178802064953*^9, 3.6821788574731226`*^9}, {
   3.6821797845176063`*^9, 3.6821798678863745`*^9}, {3.682179924646621*^9, 
   3.682179933998156*^9}, 3.6821800382591195`*^9, {3.682180103785867*^9, 
   3.6821801191557465`*^9}, {3.6821803064124565`*^9, 3.682180320525264*^9}, {
   3.682180376454463*^9, 3.6821803814617496`*^9}, {3.6821832402242613`*^9, 
   3.682183284751808*^9}, {3.682183418403453*^9, 3.6821834209866004`*^9}, {
   3.682340380078147*^9, 3.682340410220871*^9}, {3.682340522181275*^9, 
   3.682340537612157*^9}, {3.6823406550578747`*^9, 3.682340655896923*^9}, {
   3.682340692157997*^9, 3.68234069326906*^9}, {3.682345730917197*^9, 
   3.682345731045205*^9}, {3.6823458690981007`*^9, 3.682345919492983*^9}, {
   3.682345967318719*^9, 3.6823459676457376`*^9}, {3.6823463858226557`*^9, 
   3.682346387093728*^9}, 3.6823468661441727`*^9, {3.6823507930227776`*^9, 
   3.6823507938398237`*^9}, {3.6823508346331573`*^9, 3.68235083747932*^9}, 
   3.682354138591133*^9, 3.6823566711479864`*^9, {3.682360931208648*^9, 
   3.682360932023695*^9}, {3.6823611770847116`*^9, 3.682361178779808*^9}, {
   3.682361844153866*^9, 3.682361845208926*^9}, {3.682362187881526*^9, 
   3.682362192368782*^9}, {3.6823622281698303`*^9, 3.6823622290728817`*^9}, {
   3.6824245168725133`*^9, 3.682424594002925*^9}, {3.6824260544974604`*^9, 
   3.682426058127668*^9}, {3.6824261036362705`*^9, 3.682426116397001*^9}, {
   3.682426190238224*^9, 3.682426191247282*^9}, {3.6824263261569986`*^9, 
   3.6824263271250534`*^9}, {3.682426566115723*^9, 3.682426577725387*^9}, {
   3.6824266458332825`*^9, 3.6824266595680685`*^9}, {3.682426696979208*^9, 
   3.6824267107099934`*^9}, {3.682427781573243*^9, 3.6824278113079443`*^9}, {
   3.6824355677005672`*^9, 3.682435631502217*^9}, {3.6824362666165433`*^9, 
   3.682436273352928*^9}, {3.6824396749253745`*^9, 3.6824396816717634`*^9}, {
   3.6824466180411763`*^9, 3.682446638837542*^9}, {3.6824477837793245`*^9, 
   3.682447784026745*^9}, {3.6824486976287394`*^9, 3.6824486988314676`*^9}, {
   3.682448741291876*^9, 3.682448758877056*^9}, {3.682528592516034*^9, 
   3.682528601669776*^9}, {3.6825290670606318`*^9, 3.6825290697308183`*^9}, {
   3.682529366905645*^9, 3.6825294632815933`*^9}, {3.6825295212782946`*^9, 
   3.6825295218262405`*^9}, {3.6825326611473746`*^9, 
   3.6825327653305593`*^9}, {3.68253282920498*^9, 3.6825328354504523`*^9}, {
   3.6825337172886257`*^9, 3.6825337966552057`*^9}, {3.682767727311578*^9, 
   3.6827677341416397`*^9}, {3.6827677784039173`*^9, 
   3.6827677817925434`*^9}, {3.6932553797640305`*^9, 
   3.6932554299337807`*^9}, {3.6932554605179*^9, 3.6932559069187527`*^9}, {
   3.6932561402287693`*^9, 3.6932561722799435`*^9}, {3.6933163942079906`*^9, 
   3.693316415693305*^9}, {3.693316580499305*^9, 3.6933166304990816`*^9}, {
   3.693316760505435*^9, 3.6933167713506746`*^9}, {3.693316885693319*^9, 
   3.693316923395423*^9}, {3.6933172128656282`*^9, 3.693317263746234*^9}, {
   3.693325258387647*^9, 3.693325258903158*^9}, {3.693325769156588*^9, 
   3.6933257999974604`*^9}, {3.693335215842825*^9, 3.6933352602877464`*^9}, {
   3.693335513566686*^9, 3.693335518882057*^9}, 3.6933383532074747`*^9, {
   3.69333844096763*^9, 3.6933384435674295`*^9}, {3.6933998013026257`*^9, 
   3.693399826867744*^9}, {3.693399878173236*^9, 3.6933998820731897`*^9}, {
   3.6933999851766276`*^9, 3.693400021978489*^9}, {3.6934001039998937`*^9, 
   3.693400106015895*^9}, {3.6934016718519135`*^9, 3.6934016749356365`*^9}, {
   3.693401768182933*^9, 3.6934017860664177`*^9}, {3.6934045049723034`*^9, 
   3.693404507408079*^9}, {3.6934045480219707`*^9, 3.693404569296521*^9}, {
   3.693404654068478*^9, 3.6934046767251215`*^9}, 3.6934047114649863`*^9, {
   3.693411486854925*^9, 3.6934115557606277`*^9}, {3.693411611637782*^9, 
   3.69341163689961*^9}, {3.6934117443930483`*^9, 3.6934117581565638`*^9}, {
   3.693412031427684*^9, 3.693412061254629*^9}, {3.6934121007632923`*^9, 
   3.6934121063459177`*^9}, {3.6934121673784485`*^9, 
   3.6934121732938156`*^9}, {3.6934126870207553`*^9, 3.693412687851843*^9}, {
   3.6934127270569134`*^9, 3.693412748633364*^9}, {3.693412788765423*^9, 
   3.6934127889652367`*^9}, {3.693413093699652*^9, 3.6934131049158497`*^9}, {
   3.693413158927167*^9, 3.693413165655781*^9}, {3.6934132892354*^9, 
   3.6934132907125025`*^9}, {3.693413694311676*^9, 3.6934138525544806`*^9}, {
   3.6934139623245473`*^9, 3.6934139741439466`*^9}, {3.6934151889872465`*^9, 
   3.6934151913460665`*^9}, {3.693421812342548*^9, 3.693421814260598*^9}, 
   3.693571210634773*^9, {3.6935730363523593`*^9, 3.693573037920248*^9}, {
   3.6935730980366774`*^9, 3.693573098636371*^9}, {3.6935733964485483`*^9, 
   3.693573406451894*^9}, {3.693573469980172*^9, 3.693573501220932*^9}, {
   3.6935735525801334`*^9, 3.6935736322071934`*^9}, {3.693574441972418*^9, 
   3.693574507219281*^9}, {3.693574541832406*^9, 3.6935745742488327`*^9}, {
   3.693575621329663*^9, 3.693575673978572*^9}, {3.69357673871231*^9, 
   3.6935767415254836`*^9}, {3.6935771676067867`*^9, 
   3.6935771693901434`*^9}, {3.6935774277045565`*^9, 3.693577443913048*^9}, {
   3.6935774788521423`*^9, 3.69357748131384*^9}, {3.6935801882381463`*^9, 
   3.693580202383541*^9}, {3.6935809873145914`*^9, 3.69358098944536*^9}, {
   3.6935872517340436`*^9, 3.6935872545426507`*^9}, {3.693587372831433*^9, 
   3.6935873796980495`*^9}, {3.693587562863904*^9, 3.693587616021948*^9}, {
   3.6935876893495855`*^9, 3.6935876903867693`*^9}, {3.6935878379546204`*^9, 
   3.6935878413010764`*^9}, {3.693588112787511*^9, 3.69358811449063*^9}, {
   3.6935881694755335`*^9, 3.693588171288027*^9}, {3.6935935389237742`*^9, 
   3.693593540345663*^9}, 3.6935935945632477`*^9, {3.6935936258290606`*^9, 
   3.693593626766575*^9}, {3.6935941806328535`*^9, 3.693594207086978*^9}, 
   3.6935946950674806`*^9, {3.6935947327149076`*^9, 3.693594734652423*^9}, {
   3.693594941365797*^9, 3.693594955856461*^9}, {3.6935949870952897`*^9, 
   3.693595006821137*^9}, {3.693595054598051*^9, 3.693595087587389*^9}, {
   3.693595156350831*^9, 3.693595162100931*^9}, {3.693595205375044*^9, 
   3.693595214270155*^9}, {3.6935955401391487`*^9, 3.69359554954937*^9}, {
   3.6935957894002223`*^9, 3.693595793535714*^9}, {3.6935975519334*^9, 
   3.6935975545739965`*^9}, 3.6935978494473696`*^9, 3.6935978853782554`*^9, {
   3.693600107714938*^9, 3.6936001086524925`*^9}, {3.6936001461743183`*^9, 
   3.6936001463930244`*^9}, {3.6936004005973363`*^9, 
   3.6936004140829015`*^9}, {3.693600548133373*^9, 3.69360056949905*^9}, 
   3.6936006120421934`*^9, {3.693600743312659*^9, 3.6936007668870306`*^9}, 
   3.6936593079963093`*^9, {3.6936600641823077`*^9, 3.6936600934684105`*^9}, {
   3.6936606802085075`*^9, 3.6936607260416718`*^9}, 3.693661925629023*^9, {
   3.6936700240275917`*^9, 3.6936700241431427`*^9}, {3.693670312478878*^9, 
   3.693670390281993*^9}, 3.693671577434743*^9, {3.693671658053399*^9, 
   3.69367166553496*^9}, {3.6936857949048443`*^9, 3.693685796574098*^9}, {
   3.6938634331019464`*^9, 3.6938634424293127`*^9}, {3.7021506788025312`*^9, 
   3.7021506844738555`*^9}, {3.7037037148134384`*^9, 
   3.7037037294210167`*^9}, {3.703703915278076*^9, 3.7037039469256473`*^9}, {
   3.703704848274563*^9, 3.7037048678076663`*^9}, {3.7037053637935624`*^9, 
   3.703705368753002*^9}, {3.703847775816551*^9, 3.703847820609113*^9}, {
   3.703849676834283*^9, 3.7038496905620685`*^9}, {3.7040282611457214`*^9, 
   3.7040282642328987`*^9}, {3.704028356338166*^9, 3.7040283566171827`*^9}, {
   3.704028398569582*^9, 3.704028399184617*^9}, {3.704471208248934*^9, 
   3.7044712099760327`*^9}, {3.704471241696847*^9, 3.7044712418798575`*^9}, {
   3.7044719290331607`*^9, 3.7044719302572308`*^9}, {3.7046591737739472`*^9, 
   3.7046591911339397`*^9}, {3.705148359139801*^9, 3.7051483678022966`*^9}, 
   3.7051484133559017`*^9, {3.73756766773046*^9, 3.7375676678554573`*^9}, {
   3.7391166690149665`*^9, 3.7391166877889643`*^9}, 3.7658282742121916`*^9, {
   3.765828806839615*^9, 3.765828816995103*^9}, {3.7658298628464932`*^9, 
   3.765829872598856*^9}, {3.811634611123685*^9, 3.8116346155455413`*^9}, {
   3.81163586169952*^9, 3.811635869408554*^9}, {3.81163591035273*^9, 
   3.811635918664372*^9}, {3.811636053545156*^9, 3.8116360848467817`*^9}, {
   3.8116361210114937`*^9, 3.8116361423894334`*^9}, {3.8116361758242908`*^9, 
   3.81163617612056*^9}, {3.8116362262371173`*^9, 3.8116362543299437`*^9}, {
   3.8116362938567085`*^9, 3.8116362943361444`*^9}, {3.8116363352347183`*^9, 
   3.811636373160762*^9}, {3.81215223200574*^9, 3.8121522340184755`*^9}, {
   3.812152300846424*^9, 3.8121523034037447`*^9}, {3.8121523872169604`*^9, 
   3.812152390326782*^9}, {3.8121525778316097`*^9, 3.812152582061449*^9}, {
   3.8121549019489264`*^9, 3.8121549283102846`*^9}, {3.8121584890524044`*^9, 
   3.8121584927127266`*^9}, {3.8121585902472377`*^9, 3.812158625039812*^9}},
 CellLabel->
  "In[1523]:=",ExpressionUUID->"0614c558-62f4-4a65-92a5-3d0580d5519b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev4DoppTestsc\[Gamma]", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", 
      "\[CapitalDelta]2", ",", "d31", ",", "d41"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Select", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{
              RowBox[{"-", "0.007"}], ",", "0.001", ",", "0.00016"}], "]"}], 
            ",", 
            RowBox[{"Range", "[", 
             RowBox[{
              RowBox[{"-", "0.001"}], ",", "0.001", ",", "0.000016"}], "]"}], 
            ",", 
            RowBox[{"Range", "[", 
             RowBox[{
              RowBox[{"-", "0.001"}], ",", "0.007", ",", "0.00016"}], "]"}]}],
            "}"}], "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "\[GreaterEqual]", " ", "0.0005"}], "\[Or]", 
           RowBox[{"#", "\[LessEqual]", " ", 
            RowBox[{"-", "0.0005"}]}]}], "&"}]}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"omegac2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "/", 
         SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Im", "[", 
           RowBox[{"sd42", "[", 
            RowBox[{
            "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
             ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", 
             "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43",
              ",", "d42"}], "]"}], "]"}], "+", 
          RowBox[{"Im", "[", 
           RowBox[{"sd32", "[", 
            RowBox[{
            "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
             ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", 
             "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43",
              ",", "d32"}], "]"}], "]"}]}], ")"}]}], "\[IndentingNewLine]", 
       "}"}], "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6820777509929857`*^9, 3.682078072258361*^9}, {
   3.6820781686988773`*^9, 3.6820781844017754`*^9}, {3.6820782371557927`*^9, 
   3.6820782387708855`*^9}, {3.6820783386755996`*^9, 
   3.6820783600278206`*^9}, {3.682078390802581*^9, 3.682078409651659*^9}, {
   3.6820785556990128`*^9, 3.6820785577631307`*^9}, {3.682078604887826*^9, 
   3.682078606954944*^9}, 3.682078646275193*^9, 3.6820786817442217`*^9, {
   3.6820787244836664`*^9, 3.6820787256587334`*^9}, {3.682078761002755*^9, 
   3.6820787873862643`*^9}, {3.682078849739831*^9, 3.682078868395898*^9}, {
   3.6820789209479036`*^9, 3.682079036674523*^9}, {3.6820797161803885`*^9, 
   3.6820797163083954`*^9}, {3.6820940847423997`*^9, 3.682094176264634*^9}, {
   3.682100534108282*^9, 3.682100724544174*^9}, {3.682100812826224*^9, 
   3.6821008239058576`*^9}, {3.682100946929894*^9, 3.6821009474969263`*^9}, {
   3.6821010023450637`*^9, 3.6821010049532127`*^9}, {3.682101044296463*^9, 
   3.6821010535839944`*^9}, {3.6821012584737134`*^9, 3.682101261144866*^9}, {
   3.682101316585037*^9, 3.6821013732572784`*^9}, {3.682101414754652*^9, 
   3.6821014312095933`*^9}, {3.6821027458817883`*^9, 
   3.6821029190776944`*^9}, {3.682102981621272*^9, 3.682103063142935*^9}, {
   3.682103152077021*^9, 3.6821031759093847`*^9}, {3.682103228078368*^9, 
   3.682103275783097*^9}, {3.6821033867274427`*^9, 3.6821035279885225`*^9}, {
   3.682103596235426*^9, 3.6821036073870635`*^9}, {3.6821036960071325`*^9, 
   3.6821037775187945`*^9}, {3.6821038740493155`*^9, 
   3.6821038957665577`*^9}, {3.6821039323166485`*^9, 3.68210399843143*^9}, {
   3.6821041484310093`*^9, 3.6821041622938023`*^9}, {3.68210423166377*^9, 
   3.68210423550299*^9}, {3.6821042817676363`*^9, 3.682104281975648*^9}, {
   3.6821044114720545`*^9, 3.6821044835001745`*^9}, {3.6821045457187333`*^9, 
   3.6821045762404785`*^9}, {3.6821046797604*^9, 3.6821047083920374`*^9}, {
   3.682104777109968*^9, 3.682104849645117*^9}, {3.6821057340817037`*^9, 
   3.6821059374293346`*^9}, {3.6821060904780884`*^9, 
   3.6821060922611904`*^9}, {3.6821063118057475`*^9, 3.682106405406101*^9}, 
   3.682106470391818*^9, {3.682106886234603*^9, 3.6821069287290335`*^9}, {
   3.6821069697263784`*^9, 3.6821069703174124`*^9}, {3.6821070483648767`*^9, 
   3.6821070518040733`*^9}, {3.682107090122265*^9, 3.682107090965313*^9}, {
   3.6821071649115424`*^9, 3.6821073019513807`*^9}, {3.68210735596247*^9, 
   3.6821073587036266`*^9}, 3.6821621740358844`*^9, 3.6821627337889004`*^9, {
   3.6821628756690154`*^9, 3.682162909995979*^9}, {3.682163006508499*^9, 
   3.6821630839339275`*^9}, {3.682164960571265*^9, 3.6821650124032297`*^9}, {
   3.6821651296039333`*^9, 3.6821651308580046`*^9}, {3.682165214019761*^9, 
   3.682165249474789*^9}, {3.6821653768800764`*^9, 3.6821654049336815`*^9}, {
   3.6821654393766513`*^9, 3.68216545387048*^9}, 3.6821655581664457`*^9, {
   3.682165620292999*^9, 3.6821656220580997`*^9}, {3.6821656556360207`*^9, 
   3.6821656577791433`*^9}, {3.682165701413639*^9, 3.682165727750145*^9}, {
   3.6821665708493676`*^9, 3.682166634060983*^9}, {3.6821666960175266`*^9, 
   3.6821667514896994`*^9}, 3.682166802514618*^9, {3.6821669432116656`*^9, 
   3.682167060590379*^9}, {3.6821671413930006`*^9, 3.682167202085472*^9}, {
   3.6821673969946203`*^9, 3.6821673999857917`*^9}, {3.6821674579621077`*^9, 
   3.682167471208865*^9}, {3.682167501232582*^9, 3.682167549741357*^9}, {
   3.682167594844937*^9, 3.6821675971000657`*^9}, {3.6821676294889183`*^9, 
   3.6821676371443563`*^9}, {3.6821676871182146`*^9, 
   3.6821676926285295`*^9}, {3.6821678111603093`*^9, 3.682167849935527*^9}, {
   3.682167892151942*^9, 3.6821679025275354`*^9}, {3.6821680476398354`*^9, 
   3.682168050832018*^9}, {3.6821681112514734`*^9, 3.6821681135776067`*^9}, {
   3.6821681662336187`*^9, 3.6821681808154526`*^9}, {3.6821682156534452`*^9, 
   3.682168310363862*^9}, {3.682178802064953*^9, 3.6821788574731226`*^9}, {
   3.6821797845176063`*^9, 3.6821798678863745`*^9}, {3.682179924646621*^9, 
   3.682179933998156*^9}, 3.6821800382591195`*^9, {3.682180103785867*^9, 
   3.6821801191557465`*^9}, {3.6821803064124565`*^9, 3.682180320525264*^9}, {
   3.682180376454463*^9, 3.6821803814617496`*^9}, {3.6821832402242613`*^9, 
   3.682183284751808*^9}, {3.682183418403453*^9, 3.6821834209866004`*^9}, {
   3.682340380078147*^9, 3.682340410220871*^9}, {3.682340522181275*^9, 
   3.682340537612157*^9}, {3.6823406550578747`*^9, 3.682340655896923*^9}, {
   3.682340692157997*^9, 3.68234069326906*^9}, {3.682345730917197*^9, 
   3.682345731045205*^9}, {3.6823458690981007`*^9, 3.682345919492983*^9}, {
   3.682345967318719*^9, 3.6823459676457376`*^9}, {3.6823463858226557`*^9, 
   3.682346387093728*^9}, 3.6823468661441727`*^9, {3.6823507930227776`*^9, 
   3.6823507938398237`*^9}, {3.6823508346331573`*^9, 3.68235083747932*^9}, 
   3.682354138591133*^9, 3.6823566711479864`*^9, {3.682360931208648*^9, 
   3.682360932023695*^9}, {3.6823611770847116`*^9, 3.682361178779808*^9}, {
   3.682361844153866*^9, 3.682361845208926*^9}, {3.682362187881526*^9, 
   3.682362192368782*^9}, {3.6823622281698303`*^9, 3.6823622290728817`*^9}, {
   3.6824245168725133`*^9, 3.682424594002925*^9}, {3.6824260544974604`*^9, 
   3.682426058127668*^9}, {3.6824261036362705`*^9, 3.682426116397001*^9}, {
   3.682426190238224*^9, 3.682426191247282*^9}, {3.6824263261569986`*^9, 
   3.6824263271250534`*^9}, {3.682426566115723*^9, 3.682426577725387*^9}, {
   3.6824266458332825`*^9, 3.6824266595680685`*^9}, {3.682426696979208*^9, 
   3.6824267107099934`*^9}, {3.682427781573243*^9, 3.6824278113079443`*^9}, {
   3.6824355677005672`*^9, 3.682435631502217*^9}, {3.6824362666165433`*^9, 
   3.682436273352928*^9}, {3.6824396749253745`*^9, 3.6824396816717634`*^9}, {
   3.6824466180411763`*^9, 3.682446638837542*^9}, {3.6824477837793245`*^9, 
   3.682447784026745*^9}, {3.6824486976287394`*^9, 3.6824486988314676`*^9}, {
   3.682448741291876*^9, 3.682448758877056*^9}, {3.682528592516034*^9, 
   3.682528601669776*^9}, {3.6825290670606318`*^9, 3.6825290697308183`*^9}, {
   3.682529366905645*^9, 3.6825294632815933`*^9}, {3.6825295212782946`*^9, 
   3.6825295218262405`*^9}, {3.6825326611473746`*^9, 
   3.6825327653305593`*^9}, {3.68253282920498*^9, 3.6825328354504523`*^9}, {
   3.6825337172886257`*^9, 3.6825337966552057`*^9}, {3.682767727311578*^9, 
   3.6827677341416397`*^9}, {3.6827677784039173`*^9, 
   3.6827677817925434`*^9}, {3.6932553797640305`*^9, 
   3.6932554299337807`*^9}, {3.6932554605179*^9, 3.6932559069187527`*^9}, {
   3.6932561402287693`*^9, 3.6932561722799435`*^9}, {3.6933163942079906`*^9, 
   3.693316415693305*^9}, {3.693316580499305*^9, 3.6933166304990816`*^9}, {
   3.693316760505435*^9, 3.6933167713506746`*^9}, {3.693316885693319*^9, 
   3.693316923395423*^9}, {3.6933172128656282`*^9, 3.693317263746234*^9}, {
   3.693325258387647*^9, 3.693325258903158*^9}, {3.693325769156588*^9, 
   3.6933257999974604`*^9}, {3.693335215842825*^9, 3.6933352602877464`*^9}, {
   3.693335513566686*^9, 3.693335518882057*^9}, 3.6933383532074747`*^9, {
   3.69333844096763*^9, 3.6933384435674295`*^9}, {3.6933998013026257`*^9, 
   3.693399826867744*^9}, {3.693399878173236*^9, 3.6933998820731897`*^9}, {
   3.6933999851766276`*^9, 3.693400021978489*^9}, {3.6934001039998937`*^9, 
   3.693400106015895*^9}, {3.6934016718519135`*^9, 3.6934016749356365`*^9}, {
   3.693401768182933*^9, 3.6934017860664177`*^9}, {3.6934045049723034`*^9, 
   3.693404507408079*^9}, {3.6934045480219707`*^9, 3.693404569296521*^9}, {
   3.693404654068478*^9, 3.6934046767251215`*^9}, 3.6934047114649863`*^9, {
   3.693411486854925*^9, 3.6934115557606277`*^9}, {3.693411611637782*^9, 
   3.69341163689961*^9}, {3.6934117443930483`*^9, 3.6934117581565638`*^9}, {
   3.693412031427684*^9, 3.693412061254629*^9}, {3.6934121007632923`*^9, 
   3.6934121063459177`*^9}, {3.6934121673784485`*^9, 
   3.6934121732938156`*^9}, {3.6934126870207553`*^9, 3.693412687851843*^9}, {
   3.6934127270569134`*^9, 3.693412748633364*^9}, {3.693412788765423*^9, 
   3.6934127889652367`*^9}, {3.693413093699652*^9, 3.6934131049158497`*^9}, {
   3.693413158927167*^9, 3.693413165655781*^9}, {3.6934132892354*^9, 
   3.6934132907125025`*^9}, {3.693413694311676*^9, 3.6934138525544806`*^9}, {
   3.6934139623245473`*^9, 3.6934139741439466`*^9}, {3.6934151889872465`*^9, 
   3.6934151913460665`*^9}, {3.693421812342548*^9, 3.693421814260598*^9}, 
   3.693571210634773*^9, {3.6935730363523593`*^9, 3.693573037920248*^9}, {
   3.6935730980366774`*^9, 3.693573098636371*^9}, {3.6935733964485483`*^9, 
   3.693573406451894*^9}, {3.693573469980172*^9, 3.693573501220932*^9}, {
   3.6935735525801334`*^9, 3.6935736322071934`*^9}, {3.693574441972418*^9, 
   3.693574507219281*^9}, {3.693574541832406*^9, 3.6935745742488327`*^9}, {
   3.693575621329663*^9, 3.693575673978572*^9}, {3.69357673871231*^9, 
   3.6935767415254836`*^9}, {3.6935771676067867`*^9, 
   3.6935771693901434`*^9}, {3.6935774277045565`*^9, 3.693577443913048*^9}, {
   3.6935774788521423`*^9, 3.69357748131384*^9}, {3.6935801882381463`*^9, 
   3.693580202383541*^9}, {3.6935809873145914`*^9, 3.69358098944536*^9}, {
   3.6935872517340436`*^9, 3.6935872545426507`*^9}, {3.693587372831433*^9, 
   3.6935873796980495`*^9}, {3.693587562863904*^9, 3.693587616021948*^9}, {
   3.6935876893495855`*^9, 3.6935876903867693`*^9}, {3.6935878379546204`*^9, 
   3.6935878413010764`*^9}, {3.693588112787511*^9, 3.69358811449063*^9}, {
   3.6935881694755335`*^9, 3.693588171288027*^9}, {3.6935935389237742`*^9, 
   3.693593540345663*^9}, 3.6935935945632477`*^9, {3.6935936258290606`*^9, 
   3.693593626766575*^9}, {3.6935941806328535`*^9, 3.693594207086978*^9}, 
   3.6935946950674806`*^9, {3.6935947327149076`*^9, 3.693594734652423*^9}, {
   3.693594941365797*^9, 3.693594955856461*^9}, {3.6935949870952897`*^9, 
   3.693595006821137*^9}, {3.693595054598051*^9, 3.693595087587389*^9}, {
   3.693595156350831*^9, 3.693595162100931*^9}, {3.693595205375044*^9, 
   3.693595214270155*^9}, {3.6935955401391487`*^9, 3.69359554954937*^9}, {
   3.6935957894002223`*^9, 3.693595793535714*^9}, {3.6935975519334*^9, 
   3.6935975545739965`*^9}, 3.6935978494473696`*^9, 3.6935978853782554`*^9, {
   3.693600107714938*^9, 3.6936001086524925`*^9}, {3.6936001461743183`*^9, 
   3.6936001463930244`*^9}, {3.6936004005973363`*^9, 
   3.6936004140829015`*^9}, {3.693600548133373*^9, 3.69360056949905*^9}, 
   3.6936006120421934`*^9, {3.693600743312659*^9, 3.6936007668870306`*^9}, 
   3.6936593079963093`*^9, {3.6936600641823077`*^9, 3.6936600934684105`*^9}, {
   3.6936606802085075`*^9, 3.6936607260416718`*^9}, 3.693661925629023*^9, {
   3.6936700240275917`*^9, 3.6936700241431427`*^9}, {3.693670312478878*^9, 
   3.693670390281993*^9}, 3.693671577434743*^9, {3.693671658053399*^9, 
   3.69367166553496*^9}, {3.6936857949048443`*^9, 3.693685796574098*^9}, {
   3.6938634331019464`*^9, 3.6938634424293127`*^9}, {3.7021506788025312`*^9, 
   3.7021506844738555`*^9}, {3.7037037148134384`*^9, 
   3.7037037294210167`*^9}, {3.703703915278076*^9, 3.7037039469256473`*^9}, {
   3.703704848274563*^9, 3.7037048678076663`*^9}, {3.7037053637935624`*^9, 
   3.703705368753002*^9}, {3.703847775816551*^9, 3.703847820609113*^9}, {
   3.703849676834283*^9, 3.7038496905620685`*^9}, {3.7040282611457214`*^9, 
   3.7040282642328987`*^9}, {3.704028356338166*^9, 3.7040283566171827`*^9}, {
   3.704028398569582*^9, 3.704028399184617*^9}, {3.704471208248934*^9, 
   3.7044712099760327`*^9}, {3.704471241696847*^9, 3.7044712418798575`*^9}, {
   3.7044719290331607`*^9, 3.7044719302572308`*^9}, {3.7046591737739472`*^9, 
   3.7046591911339397`*^9}, {3.705148359139801*^9, 3.7051483678022966`*^9}, 
   3.7051484133559017`*^9, {3.73756766773046*^9, 3.7375676678554573`*^9}, {
   3.7391166690149665`*^9, 3.7391166877889643`*^9}, 3.7658282742121916`*^9, {
   3.765828806839615*^9, 3.765828816995103*^9}, {3.7658298628464932`*^9, 
   3.765829872598856*^9}, {3.811634611123685*^9, 3.8116346155455413`*^9}, {
   3.81163586169952*^9, 3.811635869408554*^9}, {3.81163591035273*^9, 
   3.811635918664372*^9}, {3.811636053545156*^9, 3.8116360848467817`*^9}, {
   3.8116361210114937`*^9, 3.8116361423894334`*^9}, {3.8116361758242908`*^9, 
   3.81163617612056*^9}, {3.8116362262371173`*^9, 3.8116362543299437`*^9}, {
   3.8116362938567085`*^9, 3.8116362943361444`*^9}, {3.8116363352347183`*^9, 
   3.811636373160762*^9}, {3.8116365796829157`*^9, 3.811636595139001*^9}, {
   3.8116366265547543`*^9, 3.81163662932928*^9}, {3.8116371691718163`*^9, 
   3.8116372052650313`*^9}, 3.8121587736947155`*^9},
 CellLabel->
  "In[1551]:=",ExpressionUUID->"5c05353f-9f5f-4609-97fc-18b6487a0503"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev3DoppTestsc", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", 
      "\[CapitalOmega]c1", ",", "\[CapitalOmega]c2", ",", "\[CapitalDelta]2", 
      ",", "d31", ",", "d41"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "0.007"}], ",", "0.007", ",", "0.00016"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d32", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]c1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]c2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ab", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3e", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", 
                RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",",
                 "u", ",", "Nat", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3a", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", 
                RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",",
                 "u", ",", "Nat", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3e", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}],
                "]"}], "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3a", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}],
                "]"}], "]"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d", "/", 
           SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Im", "[", 
             RowBox[{"sd3a", "[", 
              RowBox[{
              "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
               ",", 
               RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
               "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",", 
               "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], "+", 
            RowBox[{"Im", "[", 
             RowBox[{"sd3a", "[", 
              RowBox[{
              "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
               ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
               ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}], 
              "]"}], "]"}]}], ")"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"d", "/", 
                SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "2"}], "Pi", "*", 
                 RowBox[{"0.0254", "/", 
                  RowBox[{"(", 
                   RowBox[{"2", "wcn"}], ")"}]}], 
                 RowBox[{"(", 
                  RowBox[{"Im", "[", 
                   RowBox[{
                    RowBox[{"sd3a", "[", 
                    RowBox[{
                    "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", 
                    RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                    "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d42"}], "]"}], "+", 
                    RowBox[{"Im", "[", 
                    RowBox[{"sd3a", "[", 
                    RowBox[{
                    "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", "\[CapitalDelta]", ",", 
                    "\[CapitalOmega]c1", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d32"}], "]"}], 
                    "]"}]}]}]}]}]}]}]}]}], ")"}], "]"}], "}"}], "]"}], "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ab", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", 
                 RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                 "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                 ",", "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], "+", 
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                 ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
                 "d32"}], "]"}], "]"}]}], ")"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", 
                  RowBox[{"sd3a", "[", 
                   RowBox[{
                   "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", 
                    RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                    "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], ")"}]}],
                "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", 
                  RowBox[{"sd3a", "[", 
                   RowBox[{
                   "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", "\[CapitalDelta]", ",", 
                    "\[CapitalOmega]c1", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d32"}], "]"}], "]"}], ")"}]}],
                "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.693574788190744*^9, {3.6935755435451756`*^9, 3.693575582040471*^9}, {
   3.693575719373087*^9, 3.693575828170508*^9}, {3.6935759031158037`*^9, 
   3.693575905413637*^9}, {3.6935759486677485`*^9, 3.693576041202098*^9}, {
   3.6935761437267427`*^9, 3.6935761599640436`*^9}, {3.693576280979597*^9, 
   3.6935762915722256`*^9}, 3.6935763650823193`*^9, {3.6935766166108017`*^9, 
   3.693576617710661*^9}, {3.6935766587788343`*^9, 3.6935766997397213`*^9}, {
   3.6935767327434072`*^9, 3.6935767353280163`*^9}, {3.6935770614397907`*^9, 
   3.693577111380499*^9}, {3.693577264038381*^9, 3.693577276563698*^9}, {
   3.693577330659221*^9, 3.693577332711196*^9}, {3.6935775223232965`*^9, 
   3.6935775586215987`*^9}, {3.6935775904422235`*^9, 3.693577620163538*^9}, {
   3.693578143691578*^9, 3.693578187743436*^9}, {3.693580172595014*^9, 
   3.6935801744940414`*^9}, 3.693580206397213*^9, {3.6935809666682715`*^9, 
   3.6935809844621696`*^9}, {3.693587239997185*^9, 3.693587244819771*^9}, {
   3.6935873185607934`*^9, 3.693587346656555*^9}, {3.6935873844809027`*^9, 
   3.693587498669446*^9}, {3.6935876861200137`*^9, 3.693587686887785*^9}, {
   3.6935877665889225`*^9, 3.6935877679419646`*^9}, {3.693587799978722*^9, 
   3.6935878259060593`*^9}, {3.69358810517807*^9, 3.6935881067093134`*^9}, {
   3.693588151162873*^9, 3.6935881531316166`*^9}, {3.693593416940279*^9, 
   3.69359344391139*^9}, 3.6935935341581116`*^9, 3.693593589781909*^9, 
   3.6935936343447647`*^9, {3.693594268366268*^9, 3.6935943106601176`*^9}, {
   3.6935944158405285`*^9, 3.693594434891628*^9}, {3.693594730152413*^9, 
   3.693594830862494*^9}, {3.693594964090908*^9, 3.6935949803452253`*^9}, {
   3.69359509789993*^9, 3.693595114966015*^9}, {3.69359518461521*^9, 
   3.693595187677732*^9}, {3.6935953181170454`*^9, 3.6935954112130437`*^9}, {
   3.69359698702544*^9, 3.6935969883692255`*^9}, {3.693597545480194*^9, 
   3.69359755757405*^9}, {3.69359935066584*^9, 3.6935993518533506`*^9}, 
   3.693660729226142*^9, 3.693661922923174*^9, {3.6936700260265675`*^9, 
   3.693670026110908*^9}, {3.693670398284234*^9, 3.69367040421292*^9}, 
   3.693670528038734*^9, 3.693671581165148*^9, {3.693671654254927*^9, 
   3.693671668387971*^9}, {3.6936857915901566`*^9, 3.693685792605191*^9}, {
   3.6938634485148563`*^9, 3.6938634598476286`*^9}, {3.7037037318693995`*^9, 
   3.703703733997254*^9}, {3.7037039196618567`*^9, 3.703703949933426*^9}, {
   3.7037045228957405`*^9, 3.7037045951683903`*^9}, {3.7037047677119117`*^9, 
   3.703704790639476*^9}, {3.7037053735870123`*^9, 3.703705396434226*^9}, 
   3.703847577970235*^9, {3.7038477340331616`*^9, 3.703847735488245*^9}, {
   3.7038478500247955`*^9, 3.7038479075210843`*^9}, {3.7038496744021444`*^9, 
   3.7038496877069054`*^9}, {3.703968082809718*^9, 3.7039680995366745`*^9}, {
   3.7039681974812765`*^9, 3.703968198736348*^9}, {3.7040283671537848`*^9, 
   3.704028396040437*^9}, {3.704471203890685*^9, 3.7044712055037775`*^9}, {
   3.704471236761565*^9, 3.7044712396487303`*^9}, {3.704471925432955*^9, 
   3.7044719265850205`*^9}, {3.704659141550104*^9, 3.704659170061735*^9}, {
   3.7051463045892878`*^9, 3.705146346168666*^9}, 3.76582826804615*^9, {
   3.765828779166439*^9, 3.765828785294817*^9}, {3.7658289913406277`*^9, 
   3.765828992868369*^9}, {3.765829306375307*^9, 3.765829323044571*^9}, {
   3.7658312282207747`*^9, 3.7658312338378634`*^9}, 3.811634624857998*^9, 
   3.8116358752819014`*^9, 3.8116359233776636`*^9, {3.8116360638981323`*^9, 
   3.8116361451499467`*^9}, {3.811636180441764*^9, 3.811636212787426*^9}, 
   3.8121584995028887`*^9},
 CellLabel->
  "In[1481]:=",ExpressionUUID->"f5c39f6e-22f6-4f9d-a41b-f53639bd192d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev4DoppTestsc1", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", 
      "\[CapitalDelta]2", ",", "d31", ",", "d41"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"P", "\[GreaterEqual]", " ", 
         RowBox[{"100", "/", "1000"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{
             RowBox[{"-", "0.20"}], ",", "0.05", ",", "0.000083"}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "\[GreaterEqual]", " ", "0.0015"}], "\[Or]", 
             RowBox[{"#", "\[LessEqual]", " ", 
              RowBox[{"-", "0.0015"}]}]}], "&"}]}], "]"}], "*", 
         RowBox[{"10", "^", "9"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "0.17"}], ",", "0.08", ",", "0.000083"}], "]"}], "*", 
         RowBox[{"10", "^", "9"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"omegac2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "/", 
         SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Im", "[", 
           RowBox[{"sd42", "[", 
            RowBox[{
            "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
             ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", 
             "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43",
              ",", "d42"}], "]"}], "]"}], "+", 
          RowBox[{"Im", "[", 
           RowBox[{"sd32", "[", 
            RowBox[{
            "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
             ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", 
             "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43",
              ",", "d32"}], "]"}], "]"}]}], ")"}]}], "\[IndentingNewLine]", 
       "}"}], "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6820777509929857`*^9, 3.682078072258361*^9}, {
   3.6820781686988773`*^9, 3.6820781844017754`*^9}, {3.6820782371557927`*^9, 
   3.6820782387708855`*^9}, {3.6820783386755996`*^9, 
   3.6820783600278206`*^9}, {3.682078390802581*^9, 3.682078409651659*^9}, {
   3.6820785556990128`*^9, 3.6820785577631307`*^9}, {3.682078604887826*^9, 
   3.682078606954944*^9}, 3.682078646275193*^9, 3.6820786817442217`*^9, {
   3.6820787244836664`*^9, 3.6820787256587334`*^9}, {3.682078761002755*^9, 
   3.6820787873862643`*^9}, {3.682078849739831*^9, 3.682078868395898*^9}, {
   3.6820789209479036`*^9, 3.682079036674523*^9}, {3.6820797161803885`*^9, 
   3.6820797163083954`*^9}, {3.6820940847423997`*^9, 3.682094176264634*^9}, {
   3.682100534108282*^9, 3.682100724544174*^9}, {3.682100812826224*^9, 
   3.6821008239058576`*^9}, {3.682100946929894*^9, 3.6821009474969263`*^9}, {
   3.6821010023450637`*^9, 3.6821010049532127`*^9}, {3.682101044296463*^9, 
   3.6821010535839944`*^9}, {3.6821012584737134`*^9, 3.682101261144866*^9}, {
   3.682101316585037*^9, 3.6821013732572784`*^9}, {3.682101414754652*^9, 
   3.6821014312095933`*^9}, {3.6821027458817883`*^9, 
   3.6821029190776944`*^9}, {3.682102981621272*^9, 3.682103063142935*^9}, {
   3.682103152077021*^9, 3.6821031759093847`*^9}, {3.682103228078368*^9, 
   3.682103275783097*^9}, {3.6821033867274427`*^9, 3.6821035279885225`*^9}, {
   3.682103596235426*^9, 3.6821036073870635`*^9}, {3.6821036960071325`*^9, 
   3.6821037775187945`*^9}, {3.6821038740493155`*^9, 
   3.6821038957665577`*^9}, {3.6821039323166485`*^9, 3.68210399843143*^9}, {
   3.6821041484310093`*^9, 3.6821041622938023`*^9}, {3.68210423166377*^9, 
   3.68210423550299*^9}, {3.6821042817676363`*^9, 3.682104281975648*^9}, {
   3.6821044114720545`*^9, 3.6821044835001745`*^9}, {3.6821045457187333`*^9, 
   3.6821045762404785`*^9}, {3.6821046797604*^9, 3.6821047083920374`*^9}, {
   3.682104777109968*^9, 3.682104849645117*^9}, {3.6821057340817037`*^9, 
   3.6821059374293346`*^9}, {3.6821060904780884`*^9, 
   3.6821060922611904`*^9}, {3.6821063118057475`*^9, 3.682106405406101*^9}, 
   3.682106470391818*^9, {3.682106886234603*^9, 3.6821069287290335`*^9}, {
   3.6821069697263784`*^9, 3.6821069703174124`*^9}, {3.6821070483648767`*^9, 
   3.6821070518040733`*^9}, {3.682107090122265*^9, 3.682107090965313*^9}, {
   3.6821071649115424`*^9, 3.6821073019513807`*^9}, {3.68210735596247*^9, 
   3.6821073587036266`*^9}, 3.6821621740358844`*^9, 3.6821627337889004`*^9, {
   3.6821628756690154`*^9, 3.682162909995979*^9}, {3.682163006508499*^9, 
   3.6821630839339275`*^9}, {3.682164960571265*^9, 3.6821650124032297`*^9}, {
   3.6821651296039333`*^9, 3.6821651308580046`*^9}, {3.682165214019761*^9, 
   3.682165249474789*^9}, {3.6821653768800764`*^9, 3.6821654049336815`*^9}, {
   3.6821654393766513`*^9, 3.68216545387048*^9}, 3.6821655581664457`*^9, {
   3.682165620292999*^9, 3.6821656220580997`*^9}, {3.6821656556360207`*^9, 
   3.6821656577791433`*^9}, {3.682165701413639*^9, 3.682165727750145*^9}, {
   3.6821665708493676`*^9, 3.682166634060983*^9}, {3.6821666960175266`*^9, 
   3.6821667514896994`*^9}, 3.682166802514618*^9, {3.6821669432116656`*^9, 
   3.682167060590379*^9}, {3.6821671413930006`*^9, 3.682167202085472*^9}, {
   3.6821673969946203`*^9, 3.6821673999857917`*^9}, {3.6821674579621077`*^9, 
   3.682167471208865*^9}, {3.682167501232582*^9, 3.682167549741357*^9}, {
   3.682167594844937*^9, 3.6821675971000657`*^9}, {3.6821676294889183`*^9, 
   3.6821676371443563`*^9}, {3.6821676871182146`*^9, 
   3.6821676926285295`*^9}, {3.6821678111603093`*^9, 3.682167849935527*^9}, {
   3.682167892151942*^9, 3.6821679025275354`*^9}, {3.6821680476398354`*^9, 
   3.682168050832018*^9}, {3.6821681112514734`*^9, 3.6821681135776067`*^9}, {
   3.6821681662336187`*^9, 3.6821681808154526`*^9}, {3.6821682156534452`*^9, 
   3.682168310363862*^9}, {3.682178802064953*^9, 3.6821788574731226`*^9}, {
   3.6821797845176063`*^9, 3.6821798678863745`*^9}, {3.682179924646621*^9, 
   3.682179933998156*^9}, 3.6821800382591195`*^9, {3.682180103785867*^9, 
   3.6821801191557465`*^9}, {3.6821803064124565`*^9, 3.682180320525264*^9}, {
   3.682180376454463*^9, 3.6821803814617496`*^9}, {3.6821832402242613`*^9, 
   3.682183284751808*^9}, {3.682183418403453*^9, 3.6821834209866004`*^9}, {
   3.682340380078147*^9, 3.682340410220871*^9}, {3.682340522181275*^9, 
   3.682340537612157*^9}, {3.6823406550578747`*^9, 3.682340655896923*^9}, {
   3.682340692157997*^9, 3.68234069326906*^9}, {3.682345730917197*^9, 
   3.682345731045205*^9}, {3.6823458690981007`*^9, 3.682345919492983*^9}, {
   3.682345967318719*^9, 3.6823459676457376`*^9}, {3.6823463858226557`*^9, 
   3.682346387093728*^9}, 3.6823468661441727`*^9, {3.6823507930227776`*^9, 
   3.6823507938398237`*^9}, {3.6823508346331573`*^9, 3.68235083747932*^9}, 
   3.682354138591133*^9, 3.6823566711479864`*^9, {3.682360931208648*^9, 
   3.682360932023695*^9}, {3.6823611770847116`*^9, 3.682361178779808*^9}, {
   3.682361844153866*^9, 3.682361845208926*^9}, {3.682362187881526*^9, 
   3.682362192368782*^9}, {3.6823622281698303`*^9, 3.6823622290728817`*^9}, {
   3.6824245168725133`*^9, 3.682424594002925*^9}, {3.6824260544974604`*^9, 
   3.682426058127668*^9}, {3.6824261036362705`*^9, 3.682426116397001*^9}, {
   3.682426190238224*^9, 3.682426191247282*^9}, {3.6824263261569986`*^9, 
   3.6824263271250534`*^9}, {3.682426566115723*^9, 3.682426577725387*^9}, {
   3.6824266458332825`*^9, 3.6824266595680685`*^9}, {3.682426696979208*^9, 
   3.6824267107099934`*^9}, {3.682427781573243*^9, 3.6824278113079443`*^9}, {
   3.6824355677005672`*^9, 3.682435631502217*^9}, {3.6824362666165433`*^9, 
   3.682436273352928*^9}, {3.6824396749253745`*^9, 3.6824396816717634`*^9}, {
   3.6824466180411763`*^9, 3.682446638837542*^9}, {3.6824477837793245`*^9, 
   3.682447784026745*^9}, {3.6824486976287394`*^9, 3.6824486988314676`*^9}, {
   3.682448741291876*^9, 3.682448758877056*^9}, {3.682528592516034*^9, 
   3.682528601669776*^9}, {3.6825290670606318`*^9, 3.6825290697308183`*^9}, {
   3.682529366905645*^9, 3.6825294632815933`*^9}, {3.6825295212782946`*^9, 
   3.6825295218262405`*^9}, {3.6825326611473746`*^9, 
   3.6825327653305593`*^9}, {3.68253282920498*^9, 3.6825328354504523`*^9}, {
   3.6825337172886257`*^9, 3.6825337966552057`*^9}, {3.682767727311578*^9, 
   3.6827677341416397`*^9}, {3.6827677784039173`*^9, 
   3.6827677817925434`*^9}, {3.6932553797640305`*^9, 
   3.6932554299337807`*^9}, {3.6932554605179*^9, 3.6932559069187527`*^9}, {
   3.6932561402287693`*^9, 3.6932561722799435`*^9}, {3.6933163942079906`*^9, 
   3.693316415693305*^9}, {3.693316580499305*^9, 3.6933166304990816`*^9}, {
   3.693316760505435*^9, 3.6933167713506746`*^9}, {3.693316885693319*^9, 
   3.693316923395423*^9}, {3.6933172128656282`*^9, 3.693317263746234*^9}, {
   3.693325258387647*^9, 3.693325258903158*^9}, {3.693325769156588*^9, 
   3.6933257999974604`*^9}, {3.693335215842825*^9, 3.6933352602877464`*^9}, {
   3.693335513566686*^9, 3.693335518882057*^9}, 3.6933383532074747`*^9, {
   3.69333844096763*^9, 3.6933384435674295`*^9}, {3.6933998013026257`*^9, 
   3.693399826867744*^9}, {3.693399878173236*^9, 3.6933998820731897`*^9}, {
   3.6933999851766276`*^9, 3.693400021978489*^9}, {3.6934001039998937`*^9, 
   3.693400106015895*^9}, {3.6934016718519135`*^9, 3.6934016749356365`*^9}, {
   3.693401768182933*^9, 3.6934017860664177`*^9}, {3.6934045049723034`*^9, 
   3.693404507408079*^9}, {3.6934045480219707`*^9, 3.693404569296521*^9}, {
   3.693404654068478*^9, 3.6934046767251215`*^9}, 3.6934047114649863`*^9, {
   3.693411486854925*^9, 3.6934115557606277`*^9}, {3.693411611637782*^9, 
   3.69341163689961*^9}, {3.6934117443930483`*^9, 3.6934117581565638`*^9}, {
   3.693412031427684*^9, 3.693412061254629*^9}, {3.6934121007632923`*^9, 
   3.6934121063459177`*^9}, {3.6934121673784485`*^9, 
   3.6934121732938156`*^9}, {3.6934126870207553`*^9, 3.693412687851843*^9}, {
   3.6934127270569134`*^9, 3.693412748633364*^9}, {3.693412788765423*^9, 
   3.6934127889652367`*^9}, {3.693413093699652*^9, 3.6934131049158497`*^9}, {
   3.693413158927167*^9, 3.693413165655781*^9}, {3.6934132892354*^9, 
   3.6934132907125025`*^9}, {3.693413694311676*^9, 3.6934138525544806`*^9}, {
   3.6934139623245473`*^9, 3.6934139741439466`*^9}, {3.6934151889872465`*^9, 
   3.6934151913460665`*^9}, {3.693421812342548*^9, 3.693421814260598*^9}, 
   3.693571210634773*^9, {3.6935730363523593`*^9, 3.693573037920248*^9}, {
   3.6935730980366774`*^9, 3.693573098636371*^9}, {3.6935733964485483`*^9, 
   3.693573406451894*^9}, {3.693573469980172*^9, 3.693573501220932*^9}, {
   3.6935735525801334`*^9, 3.6935736322071934`*^9}, {3.693574441972418*^9, 
   3.693574507219281*^9}, {3.693574541832406*^9, 3.6935745742488327`*^9}, {
   3.693575621329663*^9, 3.693575673978572*^9}, {3.69357673871231*^9, 
   3.6935767415254836`*^9}, {3.6935771676067867`*^9, 
   3.6935771693901434`*^9}, {3.6935774277045565`*^9, 3.693577443913048*^9}, {
   3.6935774788521423`*^9, 3.69357748131384*^9}, {3.6935801882381463`*^9, 
   3.693580202383541*^9}, {3.6935809873145914`*^9, 3.69358098944536*^9}, {
   3.6935872517340436`*^9, 3.6935872545426507`*^9}, {3.693587372831433*^9, 
   3.6935873796980495`*^9}, {3.693587562863904*^9, 3.693587616021948*^9}, {
   3.6935876893495855`*^9, 3.6935876903867693`*^9}, {3.6935878379546204`*^9, 
   3.6935878413010764`*^9}, {3.693588112787511*^9, 3.69358811449063*^9}, {
   3.6935881694755335`*^9, 3.693588171288027*^9}, {3.6935935389237742`*^9, 
   3.693593540345663*^9}, 3.6935935945632477`*^9, {3.6935936258290606`*^9, 
   3.693593626766575*^9}, {3.6935941806328535`*^9, 3.693594207086978*^9}, 
   3.6935946950674806`*^9, {3.6935947327149076`*^9, 3.693594734652423*^9}, {
   3.693594941365797*^9, 3.693594955856461*^9}, {3.6935949870952897`*^9, 
   3.693595006821137*^9}, {3.693595054598051*^9, 3.693595087587389*^9}, {
   3.693595156350831*^9, 3.693595162100931*^9}, {3.693595205375044*^9, 
   3.693595214270155*^9}, {3.6935955401391487`*^9, 3.69359554954937*^9}, {
   3.6935957894002223`*^9, 3.693595793535714*^9}, {3.6935975519334*^9, 
   3.6935975545739965`*^9}, 3.6935978494473696`*^9, 3.6935978853782554`*^9, {
   3.693600107714938*^9, 3.6936001086524925`*^9}, {3.6936001461743183`*^9, 
   3.6936001463930244`*^9}, {3.6936004005973363`*^9, 
   3.6936004140829015`*^9}, {3.693600548133373*^9, 3.69360056949905*^9}, 
   3.6936006120421934`*^9, {3.693600743312659*^9, 3.6936007668870306`*^9}, 
   3.6936593079963093`*^9, {3.6936600641823077`*^9, 3.6936600934684105`*^9}, {
   3.6936606802085075`*^9, 3.6936607260416718`*^9}, 3.693661925629023*^9, {
   3.6936700240275917`*^9, 3.6936700241431427`*^9}, {3.693670312478878*^9, 
   3.693670390281993*^9}, 3.693671577434743*^9, {3.693671658053399*^9, 
   3.69367166553496*^9}, {3.6936857949048443`*^9, 3.693685796574098*^9}, {
   3.6938634331019464`*^9, 3.6938634424293127`*^9}, {3.7021506788025312`*^9, 
   3.7021506844738555`*^9}, {3.7037037148134384`*^9, 
   3.7037037294210167`*^9}, {3.703703915278076*^9, 3.7037039469256473`*^9}, {
   3.703704848274563*^9, 3.7037048678076663`*^9}, {3.7037053637935624`*^9, 
   3.703705368753002*^9}, {3.703847775816551*^9, 3.703847820609113*^9}, {
   3.703849676834283*^9, 3.7038496905620685`*^9}, {3.7040282611457214`*^9, 
   3.7040282642328987`*^9}, {3.704028356338166*^9, 3.7040283566171827`*^9}, {
   3.704028398569582*^9, 3.704028399184617*^9}, {3.704471208248934*^9, 
   3.7044712099760327`*^9}, {3.704471241696847*^9, 3.7044712418798575`*^9}, {
   3.7044719290331607`*^9, 3.7044719302572308`*^9}, {3.7046591737739472`*^9, 
   3.7046591911339397`*^9}, {3.705148359139801*^9, 3.7051483678022966`*^9}, 
   3.7051484133559017`*^9, {3.73756766773046*^9, 3.7375676678554573`*^9}, {
   3.7391166690149665`*^9, 3.7391166877889643`*^9}, 3.7658282742121916`*^9, {
   3.765828806839615*^9, 3.765828816995103*^9}, {3.7658298628464932`*^9, 
   3.765829872598856*^9}, {3.765831890081997*^9, 3.765831893986545*^9}, {
   3.765832009952757*^9, 3.765832011450959*^9}, {3.7658320614405985`*^9, 
   3.7658320749958544`*^9}, {3.765833522198763*^9, 3.7658335223549724`*^9}, 
   3.811634629248603*^9, {3.8116368097658663`*^9, 3.811636833496706*^9}, {
   3.8116373074714084`*^9, 3.811637309740475*^9}, {3.8116377138711634`*^9, 
   3.811637719319523*^9}, 3.811637809932087*^9, {3.811637905898449*^9, 
   3.8116379094807105`*^9}, {3.811637941543541*^9, 3.8116379455087037`*^9}, {
   3.8116379845565004`*^9, 3.81163801162895*^9}, {3.811638459188175*^9, 
   3.8116384683825455`*^9}, {3.812149793956167*^9, 3.8121497942013903`*^9}, {
   3.812155344707033*^9, 3.812155345473729*^9}, {3.8121555626020675`*^9, 
   3.8121555947602863`*^9}, {3.8121558130565276`*^9, 3.81215581444606*^9}, {
   3.812155867067438*^9, 3.812155876138297*^9}, {3.8121559990276227`*^9, 
   3.8121559997288227`*^9}, 3.8121585039729447`*^9},
 CellLabel->
  "In[1482]:=",ExpressionUUID->"31240557-1a7b-4c21-a23d-dffdfd9bf489"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev3DoppTestsc1", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", 
      "\[CapitalOmega]c1", ",", "\[CapitalOmega]c2", ",", "\[CapitalDelta]2", 
      ",", "d31", ",", "d41"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "0.05"}], ",", "0.08", ",", "0.000033"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d32", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]c1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]c2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ab", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3e", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", 
                RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",",
                 "u", ",", "Nat", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3a", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", 
                RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",",
                 "u", ",", "Nat", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3e", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}],
                "]"}], "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3a", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}],
                "]"}], "]"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d", "/", 
           SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Im", "[", 
             RowBox[{"sd3a", "[", 
              RowBox[{
              "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
               ",", 
               RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
               "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",", 
               "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], "+", 
            RowBox[{"Im", "[", 
             RowBox[{"sd3a", "[", 
              RowBox[{
              "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
               ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
               ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}], 
              "]"}], "]"}]}], ")"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"d", "/", 
                SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "2"}], "Pi", "*", 
                 RowBox[{"0.0254", "/", 
                  RowBox[{"(", 
                   RowBox[{"2", "wcn"}], ")"}]}], 
                 RowBox[{"(", 
                  RowBox[{"Im", "[", 
                   RowBox[{
                    RowBox[{"sd3a", "[", 
                    RowBox[{
                    "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", 
                    RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                    "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d42"}], "]"}], "+", 
                    RowBox[{"Im", "[", 
                    RowBox[{"sd3a", "[", 
                    RowBox[{
                    "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", "\[CapitalDelta]", ",", 
                    "\[CapitalOmega]c1", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d32"}], "]"}], 
                    "]"}]}]}]}]}]}]}]}]}], ")"}], "]"}], "}"}], "]"}], "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ab", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", 
                 RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                 "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                 ",", "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], "+", 
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                 ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
                 "d32"}], "]"}], "]"}]}], ")"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", 
                  RowBox[{"sd3a", "[", 
                   RowBox[{
                   "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", 
                    RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                    "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], ")"}]}],
                "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", 
                  RowBox[{"sd3a", "[", 
                   RowBox[{
                   "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", "\[CapitalDelta]", ",", 
                    "\[CapitalOmega]c1", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d32"}], "]"}], "]"}], ")"}]}],
                "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.693574788190744*^9, {3.6935755435451756`*^9, 3.693575582040471*^9}, {
   3.693575719373087*^9, 3.693575828170508*^9}, {3.6935759031158037`*^9, 
   3.693575905413637*^9}, {3.6935759486677485`*^9, 3.693576041202098*^9}, {
   3.6935761437267427`*^9, 3.6935761599640436`*^9}, {3.693576280979597*^9, 
   3.6935762915722256`*^9}, 3.6935763650823193`*^9, {3.6935766166108017`*^9, 
   3.693576617710661*^9}, {3.6935766587788343`*^9, 3.6935766997397213`*^9}, {
   3.6935767327434072`*^9, 3.6935767353280163`*^9}, {3.6935770614397907`*^9, 
   3.693577111380499*^9}, {3.693577264038381*^9, 3.693577276563698*^9}, {
   3.693577330659221*^9, 3.693577332711196*^9}, {3.6935775223232965`*^9, 
   3.6935775586215987`*^9}, {3.6935775904422235`*^9, 3.693577620163538*^9}, {
   3.693578143691578*^9, 3.693578187743436*^9}, {3.693580172595014*^9, 
   3.6935801744940414`*^9}, 3.693580206397213*^9, {3.6935809666682715`*^9, 
   3.6935809844621696`*^9}, {3.693587239997185*^9, 3.693587244819771*^9}, {
   3.6935873185607934`*^9, 3.693587346656555*^9}, {3.6935873844809027`*^9, 
   3.693587498669446*^9}, {3.6935876861200137`*^9, 3.693587686887785*^9}, {
   3.6935877665889225`*^9, 3.6935877679419646`*^9}, {3.693587799978722*^9, 
   3.6935878259060593`*^9}, {3.69358810517807*^9, 3.6935881067093134`*^9}, {
   3.693588151162873*^9, 3.6935881531316166`*^9}, {3.693593416940279*^9, 
   3.69359344391139*^9}, 3.6935935341581116`*^9, 3.693593589781909*^9, 
   3.6935936343447647`*^9, {3.693594268366268*^9, 3.6935943106601176`*^9}, {
   3.6935944158405285`*^9, 3.693594434891628*^9}, {3.693594730152413*^9, 
   3.693594830862494*^9}, {3.693594964090908*^9, 3.6935949803452253`*^9}, {
   3.69359509789993*^9, 3.693595114966015*^9}, {3.69359518461521*^9, 
   3.693595187677732*^9}, {3.6935953181170454`*^9, 3.6935954112130437`*^9}, {
   3.69359698702544*^9, 3.6935969883692255`*^9}, {3.693597545480194*^9, 
   3.69359755757405*^9}, {3.69359935066584*^9, 3.6935993518533506`*^9}, 
   3.693660729226142*^9, 3.693661922923174*^9, {3.6936700260265675`*^9, 
   3.693670026110908*^9}, {3.693670398284234*^9, 3.69367040421292*^9}, 
   3.693670528038734*^9, 3.693671581165148*^9, {3.693671654254927*^9, 
   3.693671668387971*^9}, {3.6936857915901566`*^9, 3.693685792605191*^9}, {
   3.6938634485148563`*^9, 3.6938634598476286`*^9}, {3.7037037318693995`*^9, 
   3.703703733997254*^9}, {3.7037039196618567`*^9, 3.703703949933426*^9}, {
   3.7037045228957405`*^9, 3.7037045951683903`*^9}, {3.7037047677119117`*^9, 
   3.703704790639476*^9}, {3.7037053735870123`*^9, 3.703705396434226*^9}, 
   3.703847577970235*^9, {3.7038477340331616`*^9, 3.703847735488245*^9}, {
   3.7038478500247955`*^9, 3.7038479075210843`*^9}, {3.7038496744021444`*^9, 
   3.7038496877069054`*^9}, {3.703968082809718*^9, 3.7039680995366745`*^9}, {
   3.7039681974812765`*^9, 3.703968198736348*^9}, {3.7040283671537848`*^9, 
   3.704028396040437*^9}, {3.704471203890685*^9, 3.7044712055037775`*^9}, {
   3.704471236761565*^9, 3.7044712396487303`*^9}, {3.704471925432955*^9, 
   3.7044719265850205`*^9}, {3.704659141550104*^9, 3.704659170061735*^9}, {
   3.7051463045892878`*^9, 3.705146346168666*^9}, 3.76582826804615*^9, {
   3.765828779166439*^9, 3.765828785294817*^9}, {3.7658289913406277`*^9, 
   3.765828992868369*^9}, {3.765829306375307*^9, 3.765829323044571*^9}, {
   3.7658312282207747`*^9, 3.7658312338378634`*^9}, {3.7658318958012753`*^9, 
   3.7658318988180285`*^9}, {3.7658320027372627`*^9, 3.765832007552581*^9}, {
   3.765832051698292*^9, 3.7658320724088154`*^9}, {3.765833519131132*^9, 
   3.7658335194123445`*^9}, 3.8116346328423347`*^9, 3.811637453745401*^9, {
   3.811637709909558*^9, 3.811637730793969*^9}, 3.8116378123723106`*^9, {
   3.811637898997166*^9, 3.811637913146047*^9}, {3.811637989563058*^9, 
   3.811638014799835*^9}, {3.8116380937478895`*^9, 3.8116380960730057`*^9}, {
   3.8116383176568527`*^9, 3.811638318156307*^9}, {3.8121498020064726`*^9, 
   3.8121498022356806`*^9}, 3.8121585089904985`*^9},
 CellLabel->
  "In[1483]:=",ExpressionUUID->"812217d3-cb39-4eb3-90c5-9345dbc455cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev4DoppTestsc2", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", 
      "\[CapitalDelta]2", ",", "d31", ",", "d41"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "0.005"}], ",", "0.0015", ",", "0.00001"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"omegac2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "/", 
         SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Im", "[", 
           RowBox[{"sd42", "[", 
            RowBox[{
            "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
             ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", 
             "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43",
              ",", "d42"}], "]"}], "]"}], "+", 
          RowBox[{"Im", "[", 
           RowBox[{"sd32", "[", 
            RowBox[{
            "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
             ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", 
             "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43",
              ",", "d32"}], "]"}], "]"}]}], ")"}]}], "\[IndentingNewLine]", 
       "}"}], "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6820777509929857`*^9, 3.682078072258361*^9}, {
   3.6820781686988773`*^9, 3.6820781844017754`*^9}, {3.6820782371557927`*^9, 
   3.6820782387708855`*^9}, {3.6820783386755996`*^9, 
   3.6820783600278206`*^9}, {3.682078390802581*^9, 3.682078409651659*^9}, {
   3.6820785556990128`*^9, 3.6820785577631307`*^9}, {3.682078604887826*^9, 
   3.682078606954944*^9}, 3.682078646275193*^9, 3.6820786817442217`*^9, {
   3.6820787244836664`*^9, 3.6820787256587334`*^9}, {3.682078761002755*^9, 
   3.6820787873862643`*^9}, {3.682078849739831*^9, 3.682078868395898*^9}, {
   3.6820789209479036`*^9, 3.682079036674523*^9}, {3.6820797161803885`*^9, 
   3.6820797163083954`*^9}, {3.6820940847423997`*^9, 3.682094176264634*^9}, {
   3.682100534108282*^9, 3.682100724544174*^9}, {3.682100812826224*^9, 
   3.6821008239058576`*^9}, {3.682100946929894*^9, 3.6821009474969263`*^9}, {
   3.6821010023450637`*^9, 3.6821010049532127`*^9}, {3.682101044296463*^9, 
   3.6821010535839944`*^9}, {3.6821012584737134`*^9, 3.682101261144866*^9}, {
   3.682101316585037*^9, 3.6821013732572784`*^9}, {3.682101414754652*^9, 
   3.6821014312095933`*^9}, {3.6821027458817883`*^9, 
   3.6821029190776944`*^9}, {3.682102981621272*^9, 3.682103063142935*^9}, {
   3.682103152077021*^9, 3.6821031759093847`*^9}, {3.682103228078368*^9, 
   3.682103275783097*^9}, {3.6821033867274427`*^9, 3.6821035279885225`*^9}, {
   3.682103596235426*^9, 3.6821036073870635`*^9}, {3.6821036960071325`*^9, 
   3.6821037775187945`*^9}, {3.6821038740493155`*^9, 
   3.6821038957665577`*^9}, {3.6821039323166485`*^9, 3.68210399843143*^9}, {
   3.6821041484310093`*^9, 3.6821041622938023`*^9}, {3.68210423166377*^9, 
   3.68210423550299*^9}, {3.6821042817676363`*^9, 3.682104281975648*^9}, {
   3.6821044114720545`*^9, 3.6821044835001745`*^9}, {3.6821045457187333`*^9, 
   3.6821045762404785`*^9}, {3.6821046797604*^9, 3.6821047083920374`*^9}, {
   3.682104777109968*^9, 3.682104849645117*^9}, {3.6821057340817037`*^9, 
   3.6821059374293346`*^9}, {3.6821060904780884`*^9, 
   3.6821060922611904`*^9}, {3.6821063118057475`*^9, 3.682106405406101*^9}, 
   3.682106470391818*^9, {3.682106886234603*^9, 3.6821069287290335`*^9}, {
   3.6821069697263784`*^9, 3.6821069703174124`*^9}, {3.6821070483648767`*^9, 
   3.6821070518040733`*^9}, {3.682107090122265*^9, 3.682107090965313*^9}, {
   3.6821071649115424`*^9, 3.6821073019513807`*^9}, {3.68210735596247*^9, 
   3.6821073587036266`*^9}, 3.6821621740358844`*^9, 3.6821627337889004`*^9, {
   3.6821628756690154`*^9, 3.682162909995979*^9}, {3.682163006508499*^9, 
   3.6821630839339275`*^9}, {3.682164960571265*^9, 3.6821650124032297`*^9}, {
   3.6821651296039333`*^9, 3.6821651308580046`*^9}, {3.682165214019761*^9, 
   3.682165249474789*^9}, {3.6821653768800764`*^9, 3.6821654049336815`*^9}, {
   3.6821654393766513`*^9, 3.68216545387048*^9}, 3.6821655581664457`*^9, {
   3.682165620292999*^9, 3.6821656220580997`*^9}, {3.6821656556360207`*^9, 
   3.6821656577791433`*^9}, {3.682165701413639*^9, 3.682165727750145*^9}, {
   3.6821665708493676`*^9, 3.682166634060983*^9}, {3.6821666960175266`*^9, 
   3.6821667514896994`*^9}, 3.682166802514618*^9, {3.6821669432116656`*^9, 
   3.682167060590379*^9}, {3.6821671413930006`*^9, 3.682167202085472*^9}, {
   3.6821673969946203`*^9, 3.6821673999857917`*^9}, {3.6821674579621077`*^9, 
   3.682167471208865*^9}, {3.682167501232582*^9, 3.682167549741357*^9}, {
   3.682167594844937*^9, 3.6821675971000657`*^9}, {3.6821676294889183`*^9, 
   3.6821676371443563`*^9}, {3.6821676871182146`*^9, 
   3.6821676926285295`*^9}, {3.6821678111603093`*^9, 3.682167849935527*^9}, {
   3.682167892151942*^9, 3.6821679025275354`*^9}, {3.6821680476398354`*^9, 
   3.682168050832018*^9}, {3.6821681112514734`*^9, 3.6821681135776067`*^9}, {
   3.6821681662336187`*^9, 3.6821681808154526`*^9}, {3.6821682156534452`*^9, 
   3.682168310363862*^9}, {3.682178802064953*^9, 3.6821788574731226`*^9}, {
   3.6821797845176063`*^9, 3.6821798678863745`*^9}, {3.682179924646621*^9, 
   3.682179933998156*^9}, 3.6821800382591195`*^9, {3.682180103785867*^9, 
   3.6821801191557465`*^9}, {3.6821803064124565`*^9, 3.682180320525264*^9}, {
   3.682180376454463*^9, 3.6821803814617496`*^9}, {3.6821832402242613`*^9, 
   3.682183284751808*^9}, {3.682183418403453*^9, 3.6821834209866004`*^9}, {
   3.682340380078147*^9, 3.682340410220871*^9}, {3.682340522181275*^9, 
   3.682340537612157*^9}, {3.6823406550578747`*^9, 3.682340655896923*^9}, {
   3.682340692157997*^9, 3.68234069326906*^9}, {3.682345730917197*^9, 
   3.682345731045205*^9}, {3.6823458690981007`*^9, 3.682345919492983*^9}, {
   3.682345967318719*^9, 3.6823459676457376`*^9}, {3.6823463858226557`*^9, 
   3.682346387093728*^9}, 3.6823468661441727`*^9, {3.6823507930227776`*^9, 
   3.6823507938398237`*^9}, {3.6823508346331573`*^9, 3.68235083747932*^9}, 
   3.682354138591133*^9, 3.6823566711479864`*^9, {3.682360931208648*^9, 
   3.682360932023695*^9}, {3.6823611770847116`*^9, 3.682361178779808*^9}, {
   3.682361844153866*^9, 3.682361845208926*^9}, {3.682362187881526*^9, 
   3.682362192368782*^9}, {3.6823622281698303`*^9, 3.6823622290728817`*^9}, {
   3.6824245168725133`*^9, 3.682424594002925*^9}, {3.6824260544974604`*^9, 
   3.682426058127668*^9}, {3.6824261036362705`*^9, 3.682426116397001*^9}, {
   3.682426190238224*^9, 3.682426191247282*^9}, {3.6824263261569986`*^9, 
   3.6824263271250534`*^9}, {3.682426566115723*^9, 3.682426577725387*^9}, {
   3.6824266458332825`*^9, 3.6824266595680685`*^9}, {3.682426696979208*^9, 
   3.6824267107099934`*^9}, {3.682427781573243*^9, 3.6824278113079443`*^9}, {
   3.6824355677005672`*^9, 3.682435631502217*^9}, {3.6824362666165433`*^9, 
   3.682436273352928*^9}, {3.6824396749253745`*^9, 3.6824396816717634`*^9}, {
   3.6824466180411763`*^9, 3.682446638837542*^9}, {3.6824477837793245`*^9, 
   3.682447784026745*^9}, {3.6824486976287394`*^9, 3.6824486988314676`*^9}, {
   3.682448741291876*^9, 3.682448758877056*^9}, {3.682528592516034*^9, 
   3.682528601669776*^9}, {3.6825290670606318`*^9, 3.6825290697308183`*^9}, {
   3.682529366905645*^9, 3.6825294632815933`*^9}, {3.6825295212782946`*^9, 
   3.6825295218262405`*^9}, {3.6825326611473746`*^9, 
   3.6825327653305593`*^9}, {3.68253282920498*^9, 3.6825328354504523`*^9}, {
   3.6825337172886257`*^9, 3.6825337966552057`*^9}, {3.682767727311578*^9, 
   3.6827677341416397`*^9}, {3.6827677784039173`*^9, 
   3.6827677817925434`*^9}, {3.6932553797640305`*^9, 
   3.6932554299337807`*^9}, {3.6932554605179*^9, 3.6932559069187527`*^9}, {
   3.6932561402287693`*^9, 3.6932561722799435`*^9}, {3.6933163942079906`*^9, 
   3.693316415693305*^9}, {3.693316580499305*^9, 3.6933166304990816`*^9}, {
   3.693316760505435*^9, 3.6933167713506746`*^9}, {3.693316885693319*^9, 
   3.693316923395423*^9}, {3.6933172128656282`*^9, 3.693317263746234*^9}, {
   3.693325258387647*^9, 3.693325258903158*^9}, {3.693325769156588*^9, 
   3.6933257999974604`*^9}, {3.693335215842825*^9, 3.6933352602877464`*^9}, {
   3.693335513566686*^9, 3.693335518882057*^9}, 3.6933383532074747`*^9, {
   3.69333844096763*^9, 3.6933384435674295`*^9}, {3.6933998013026257`*^9, 
   3.693399826867744*^9}, {3.693399878173236*^9, 3.6933998820731897`*^9}, {
   3.6933999851766276`*^9, 3.693400021978489*^9}, {3.6934001039998937`*^9, 
   3.693400106015895*^9}, {3.6934016718519135`*^9, 3.6934016749356365`*^9}, {
   3.693401768182933*^9, 3.6934017860664177`*^9}, {3.6934045049723034`*^9, 
   3.693404507408079*^9}, {3.6934045480219707`*^9, 3.693404569296521*^9}, {
   3.693404654068478*^9, 3.6934046767251215`*^9}, 3.6934047114649863`*^9, {
   3.693411486854925*^9, 3.6934115557606277`*^9}, {3.693411611637782*^9, 
   3.69341163689961*^9}, {3.6934117443930483`*^9, 3.6934117581565638`*^9}, {
   3.693412031427684*^9, 3.693412061254629*^9}, {3.6934121007632923`*^9, 
   3.6934121063459177`*^9}, {3.6934121673784485`*^9, 
   3.6934121732938156`*^9}, {3.6934126870207553`*^9, 3.693412687851843*^9}, {
   3.6934127270569134`*^9, 3.693412748633364*^9}, {3.693412788765423*^9, 
   3.6934127889652367`*^9}, {3.693413093699652*^9, 3.6934131049158497`*^9}, {
   3.693413158927167*^9, 3.693413165655781*^9}, {3.6934132892354*^9, 
   3.6934132907125025`*^9}, {3.693413694311676*^9, 3.6934138525544806`*^9}, {
   3.6934139623245473`*^9, 3.6934139741439466`*^9}, {3.6934151889872465`*^9, 
   3.6934151913460665`*^9}, {3.693421812342548*^9, 3.693421814260598*^9}, 
   3.693571210634773*^9, {3.6935730363523593`*^9, 3.693573037920248*^9}, {
   3.6935730980366774`*^9, 3.693573098636371*^9}, {3.6935733964485483`*^9, 
   3.693573406451894*^9}, {3.693573469980172*^9, 3.693573501220932*^9}, {
   3.6935735525801334`*^9, 3.6935736322071934`*^9}, {3.693574441972418*^9, 
   3.693574507219281*^9}, {3.693574541832406*^9, 3.6935745742488327`*^9}, {
   3.693575621329663*^9, 3.693575673978572*^9}, {3.69357673871231*^9, 
   3.6935767415254836`*^9}, {3.6935771676067867`*^9, 
   3.6935771693901434`*^9}, {3.6935774277045565`*^9, 3.693577443913048*^9}, {
   3.6935774788521423`*^9, 3.69357748131384*^9}, {3.6935801882381463`*^9, 
   3.693580202383541*^9}, {3.6935809873145914`*^9, 3.69358098944536*^9}, {
   3.6935872517340436`*^9, 3.6935872545426507`*^9}, {3.693587372831433*^9, 
   3.6935873796980495`*^9}, {3.693587562863904*^9, 3.693587616021948*^9}, {
   3.6935876893495855`*^9, 3.6935876903867693`*^9}, {3.6935878379546204`*^9, 
   3.6935878413010764`*^9}, {3.693588112787511*^9, 3.69358811449063*^9}, {
   3.6935881694755335`*^9, 3.693588171288027*^9}, {3.6935935389237742`*^9, 
   3.693593540345663*^9}, 3.6935935945632477`*^9, {3.6935936258290606`*^9, 
   3.693593626766575*^9}, {3.6935941806328535`*^9, 3.693594207086978*^9}, 
   3.6935946950674806`*^9, {3.6935947327149076`*^9, 3.693594734652423*^9}, {
   3.693594941365797*^9, 3.693594955856461*^9}, {3.6935949870952897`*^9, 
   3.693595006821137*^9}, {3.693595054598051*^9, 3.693595087587389*^9}, {
   3.693595156350831*^9, 3.693595162100931*^9}, {3.693595205375044*^9, 
   3.693595214270155*^9}, {3.6935955401391487`*^9, 3.69359554954937*^9}, {
   3.6935957894002223`*^9, 3.693595793535714*^9}, {3.6935975519334*^9, 
   3.6935975545739965`*^9}, 3.6935978494473696`*^9, 3.6935978853782554`*^9, {
   3.693600107714938*^9, 3.6936001086524925`*^9}, {3.6936001461743183`*^9, 
   3.6936001463930244`*^9}, {3.6936004005973363`*^9, 
   3.6936004140829015`*^9}, {3.693600548133373*^9, 3.69360056949905*^9}, 
   3.6936006120421934`*^9, {3.693600743312659*^9, 3.6936007668870306`*^9}, 
   3.6936593079963093`*^9, {3.6936600641823077`*^9, 3.6936600934684105`*^9}, {
   3.6936606802085075`*^9, 3.6936607260416718`*^9}, 3.693661925629023*^9, {
   3.6936700240275917`*^9, 3.6936700241431427`*^9}, {3.693670312478878*^9, 
   3.693670390281993*^9}, 3.693671577434743*^9, {3.693671658053399*^9, 
   3.69367166553496*^9}, {3.6936857949048443`*^9, 3.693685796574098*^9}, {
   3.6938634331019464`*^9, 3.6938634424293127`*^9}, {3.7021506788025312`*^9, 
   3.7021506844738555`*^9}, {3.7037037148134384`*^9, 
   3.7037037294210167`*^9}, {3.703703915278076*^9, 3.7037039469256473`*^9}, {
   3.703704848274563*^9, 3.7037048678076663`*^9}, {3.7037053637935624`*^9, 
   3.703705368753002*^9}, {3.703847775816551*^9, 3.703847820609113*^9}, {
   3.703849676834283*^9, 3.7038496905620685`*^9}, {3.7040282611457214`*^9, 
   3.7040282642328987`*^9}, {3.704028356338166*^9, 3.7040283566171827`*^9}, {
   3.704028398569582*^9, 3.704028399184617*^9}, {3.704471208248934*^9, 
   3.7044712099760327`*^9}, {3.704471241696847*^9, 3.7044712418798575`*^9}, {
   3.7044719290331607`*^9, 3.7044719302572308`*^9}, {3.7046591737739472`*^9, 
   3.7046591911339397`*^9}, {3.705148359139801*^9, 3.7051483678022966`*^9}, 
   3.7051484133559017`*^9, {3.73756766773046*^9, 3.7375676678554573`*^9}, {
   3.7391166690149665`*^9, 3.7391166877889643`*^9}, 3.7658282742121916`*^9, {
   3.765828806839615*^9, 3.765828816995103*^9}, {3.7658298628464932`*^9, 
   3.765829872598856*^9}, {3.765831890081997*^9, 3.765831893986545*^9}, {
   3.765832009952757*^9, 3.765832011450959*^9}, {3.7658320614405985`*^9, 
   3.7658320749958544`*^9}, {3.765833522198763*^9, 3.7658335223549724`*^9}, {
   3.76589006117338*^9, 3.7658900690632076`*^9}, {3.765890149576587*^9, 
   3.76589015125076*^9}, 3.7658904315306063`*^9, 3.811634637029817*^9},
 CellLabel->
  "In[1044]:=",ExpressionUUID->"47ad5fe9-df61-46e5-9c52-0715036cd717"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev3DoppTestsc2", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", 
      "\[CapitalOmega]c1", ",", "\[CapitalOmega]c2", ",", "\[CapitalDelta]2", 
      ",", "d31", ",", "d41"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "0.005"}], ",", "0.0015", ",", "0.00001"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d32", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]c1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]c2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ab", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3e", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", 
                RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",",
                 "u", ",", "Nat", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3a", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", 
                RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",",
                 "u", ",", "Nat", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3e", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}],
                "]"}], "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3a", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}],
                "]"}], "]"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d", "/", 
           SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Im", "[", 
             RowBox[{"sd3a", "[", 
              RowBox[{
              "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
               ",", 
               RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
               "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",", 
               "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], "+", 
            RowBox[{"Im", "[", 
             RowBox[{"sd3a", "[", 
              RowBox[{
              "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
               ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
               ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}], 
              "]"}], "]"}]}], ")"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"d", "/", 
                SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "2"}], "Pi", "*", 
                 RowBox[{"0.0254", "/", 
                  RowBox[{"(", 
                   RowBox[{"2", "wcn"}], ")"}]}], 
                 RowBox[{"(", 
                  RowBox[{"Im", "[", 
                   RowBox[{
                    RowBox[{"sd3a", "[", 
                    RowBox[{
                    "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", 
                    RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                    "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d42"}], "]"}], "+", 
                    RowBox[{"Im", "[", 
                    RowBox[{"sd3a", "[", 
                    RowBox[{
                    "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", "\[CapitalDelta]", ",", 
                    "\[CapitalOmega]c1", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d32"}], "]"}], 
                    "]"}]}]}]}]}]}]}]}]}], ")"}], "]"}], "}"}], "]"}], "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ab", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", 
                 RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                 "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                 ",", "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], "+", 
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                 ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
                 "d32"}], "]"}], "]"}]}], ")"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", 
                  RowBox[{"sd3a", "[", 
                   RowBox[{
                   "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", 
                    RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                    "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], ")"}]}],
                "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", 
                  RowBox[{"sd3a", "[", 
                   RowBox[{
                   "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", "\[CapitalDelta]", ",", 
                    "\[CapitalOmega]c1", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d32"}], "]"}], "]"}], ")"}]}],
                "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.693574788190744*^9, {3.6935755435451756`*^9, 3.693575582040471*^9}, {
   3.693575719373087*^9, 3.693575828170508*^9}, {3.6935759031158037`*^9, 
   3.693575905413637*^9}, {3.6935759486677485`*^9, 3.693576041202098*^9}, {
   3.6935761437267427`*^9, 3.6935761599640436`*^9}, {3.693576280979597*^9, 
   3.6935762915722256`*^9}, 3.6935763650823193`*^9, {3.6935766166108017`*^9, 
   3.693576617710661*^9}, {3.6935766587788343`*^9, 3.6935766997397213`*^9}, {
   3.6935767327434072`*^9, 3.6935767353280163`*^9}, {3.6935770614397907`*^9, 
   3.693577111380499*^9}, {3.693577264038381*^9, 3.693577276563698*^9}, {
   3.693577330659221*^9, 3.693577332711196*^9}, {3.6935775223232965`*^9, 
   3.6935775586215987`*^9}, {3.6935775904422235`*^9, 3.693577620163538*^9}, {
   3.693578143691578*^9, 3.693578187743436*^9}, {3.693580172595014*^9, 
   3.6935801744940414`*^9}, 3.693580206397213*^9, {3.6935809666682715`*^9, 
   3.6935809844621696`*^9}, {3.693587239997185*^9, 3.693587244819771*^9}, {
   3.6935873185607934`*^9, 3.693587346656555*^9}, {3.6935873844809027`*^9, 
   3.693587498669446*^9}, {3.6935876861200137`*^9, 3.693587686887785*^9}, {
   3.6935877665889225`*^9, 3.6935877679419646`*^9}, {3.693587799978722*^9, 
   3.6935878259060593`*^9}, {3.69358810517807*^9, 3.6935881067093134`*^9}, {
   3.693588151162873*^9, 3.6935881531316166`*^9}, {3.693593416940279*^9, 
   3.69359344391139*^9}, 3.6935935341581116`*^9, 3.693593589781909*^9, 
   3.6935936343447647`*^9, {3.693594268366268*^9, 3.6935943106601176`*^9}, {
   3.6935944158405285`*^9, 3.693594434891628*^9}, {3.693594730152413*^9, 
   3.693594830862494*^9}, {3.693594964090908*^9, 3.6935949803452253`*^9}, {
   3.69359509789993*^9, 3.693595114966015*^9}, {3.69359518461521*^9, 
   3.693595187677732*^9}, {3.6935953181170454`*^9, 3.6935954112130437`*^9}, {
   3.69359698702544*^9, 3.6935969883692255`*^9}, {3.693597545480194*^9, 
   3.69359755757405*^9}, {3.69359935066584*^9, 3.6935993518533506`*^9}, 
   3.693660729226142*^9, 3.693661922923174*^9, {3.6936700260265675`*^9, 
   3.693670026110908*^9}, {3.693670398284234*^9, 3.69367040421292*^9}, 
   3.693670528038734*^9, 3.693671581165148*^9, {3.693671654254927*^9, 
   3.693671668387971*^9}, {3.6936857915901566`*^9, 3.693685792605191*^9}, {
   3.6938634485148563`*^9, 3.6938634598476286`*^9}, {3.7037037318693995`*^9, 
   3.703703733997254*^9}, {3.7037039196618567`*^9, 3.703703949933426*^9}, {
   3.7037045228957405`*^9, 3.7037045951683903`*^9}, {3.7037047677119117`*^9, 
   3.703704790639476*^9}, {3.7037053735870123`*^9, 3.703705396434226*^9}, 
   3.703847577970235*^9, {3.7038477340331616`*^9, 3.703847735488245*^9}, {
   3.7038478500247955`*^9, 3.7038479075210843`*^9}, {3.7038496744021444`*^9, 
   3.7038496877069054`*^9}, {3.703968082809718*^9, 3.7039680995366745`*^9}, {
   3.7039681974812765`*^9, 3.703968198736348*^9}, {3.7040283671537848`*^9, 
   3.704028396040437*^9}, {3.704471203890685*^9, 3.7044712055037775`*^9}, {
   3.704471236761565*^9, 3.7044712396487303`*^9}, {3.704471925432955*^9, 
   3.7044719265850205`*^9}, {3.704659141550104*^9, 3.704659170061735*^9}, {
   3.7051463045892878`*^9, 3.705146346168666*^9}, 3.76582826804615*^9, {
   3.765828779166439*^9, 3.765828785294817*^9}, {3.7658289913406277`*^9, 
   3.765828992868369*^9}, {3.765829306375307*^9, 3.765829323044571*^9}, {
   3.7658312282207747`*^9, 3.7658312338378634`*^9}, {3.7658318958012753`*^9, 
   3.7658318988180285`*^9}, {3.7658320027372627`*^9, 3.765832007552581*^9}, {
   3.765832051698292*^9, 3.7658320724088154`*^9}, {3.765833519131132*^9, 
   3.7658335194123445`*^9}, {3.7658900640284986`*^9, 
   3.7658900735330143`*^9}, {3.7658901452589283`*^9, 3.765890147009178*^9}, {
   3.7658904275931473`*^9, 3.7658904286875505`*^9}, 3.811634640717301*^9},
 CellLabel->
  "In[1045]:=",ExpressionUUID->"1eb8789f-ea72-45a7-af5a-4b7f6c706648"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev4DoppTestsc3", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", 
      "\[CapitalDelta]2", ",", "d31", ",", "d41"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "0.05"}], ",", "0.004", ",", "0.00001"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"omegac2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "/", 
         SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Im", "[", 
           RowBox[{"sd42", "[", 
            RowBox[{
            "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
             ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", 
             "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43",
              ",", "d42"}], "]"}], "]"}], "+", 
          RowBox[{"Im", "[", 
           RowBox[{"sd32", "[", 
            RowBox[{
            "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
             ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", 
             "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43",
              ",", "d32"}], "]"}], "]"}]}], ")"}]}], "\[IndentingNewLine]", 
       "}"}], "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6820777509929857`*^9, 3.682078072258361*^9}, {
   3.6820781686988773`*^9, 3.6820781844017754`*^9}, {3.6820782371557927`*^9, 
   3.6820782387708855`*^9}, {3.6820783386755996`*^9, 
   3.6820783600278206`*^9}, {3.682078390802581*^9, 3.682078409651659*^9}, {
   3.6820785556990128`*^9, 3.6820785577631307`*^9}, {3.682078604887826*^9, 
   3.682078606954944*^9}, 3.682078646275193*^9, 3.6820786817442217`*^9, {
   3.6820787244836664`*^9, 3.6820787256587334`*^9}, {3.682078761002755*^9, 
   3.6820787873862643`*^9}, {3.682078849739831*^9, 3.682078868395898*^9}, {
   3.6820789209479036`*^9, 3.682079036674523*^9}, {3.6820797161803885`*^9, 
   3.6820797163083954`*^9}, {3.6820940847423997`*^9, 3.682094176264634*^9}, {
   3.682100534108282*^9, 3.682100724544174*^9}, {3.682100812826224*^9, 
   3.6821008239058576`*^9}, {3.682100946929894*^9, 3.6821009474969263`*^9}, {
   3.6821010023450637`*^9, 3.6821010049532127`*^9}, {3.682101044296463*^9, 
   3.6821010535839944`*^9}, {3.6821012584737134`*^9, 3.682101261144866*^9}, {
   3.682101316585037*^9, 3.6821013732572784`*^9}, {3.682101414754652*^9, 
   3.6821014312095933`*^9}, {3.6821027458817883`*^9, 
   3.6821029190776944`*^9}, {3.682102981621272*^9, 3.682103063142935*^9}, {
   3.682103152077021*^9, 3.6821031759093847`*^9}, {3.682103228078368*^9, 
   3.682103275783097*^9}, {3.6821033867274427`*^9, 3.6821035279885225`*^9}, {
   3.682103596235426*^9, 3.6821036073870635`*^9}, {3.6821036960071325`*^9, 
   3.6821037775187945`*^9}, {3.6821038740493155`*^9, 
   3.6821038957665577`*^9}, {3.6821039323166485`*^9, 3.68210399843143*^9}, {
   3.6821041484310093`*^9, 3.6821041622938023`*^9}, {3.68210423166377*^9, 
   3.68210423550299*^9}, {3.6821042817676363`*^9, 3.682104281975648*^9}, {
   3.6821044114720545`*^9, 3.6821044835001745`*^9}, {3.6821045457187333`*^9, 
   3.6821045762404785`*^9}, {3.6821046797604*^9, 3.6821047083920374`*^9}, {
   3.682104777109968*^9, 3.682104849645117*^9}, {3.6821057340817037`*^9, 
   3.6821059374293346`*^9}, {3.6821060904780884`*^9, 
   3.6821060922611904`*^9}, {3.6821063118057475`*^9, 3.682106405406101*^9}, 
   3.682106470391818*^9, {3.682106886234603*^9, 3.6821069287290335`*^9}, {
   3.6821069697263784`*^9, 3.6821069703174124`*^9}, {3.6821070483648767`*^9, 
   3.6821070518040733`*^9}, {3.682107090122265*^9, 3.682107090965313*^9}, {
   3.6821071649115424`*^9, 3.6821073019513807`*^9}, {3.68210735596247*^9, 
   3.6821073587036266`*^9}, 3.6821621740358844`*^9, 3.6821627337889004`*^9, {
   3.6821628756690154`*^9, 3.682162909995979*^9}, {3.682163006508499*^9, 
   3.6821630839339275`*^9}, {3.682164960571265*^9, 3.6821650124032297`*^9}, {
   3.6821651296039333`*^9, 3.6821651308580046`*^9}, {3.682165214019761*^9, 
   3.682165249474789*^9}, {3.6821653768800764`*^9, 3.6821654049336815`*^9}, {
   3.6821654393766513`*^9, 3.68216545387048*^9}, 3.6821655581664457`*^9, {
   3.682165620292999*^9, 3.6821656220580997`*^9}, {3.6821656556360207`*^9, 
   3.6821656577791433`*^9}, {3.682165701413639*^9, 3.682165727750145*^9}, {
   3.6821665708493676`*^9, 3.682166634060983*^9}, {3.6821666960175266`*^9, 
   3.6821667514896994`*^9}, 3.682166802514618*^9, {3.6821669432116656`*^9, 
   3.682167060590379*^9}, {3.6821671413930006`*^9, 3.682167202085472*^9}, {
   3.6821673969946203`*^9, 3.6821673999857917`*^9}, {3.6821674579621077`*^9, 
   3.682167471208865*^9}, {3.682167501232582*^9, 3.682167549741357*^9}, {
   3.682167594844937*^9, 3.6821675971000657`*^9}, {3.6821676294889183`*^9, 
   3.6821676371443563`*^9}, {3.6821676871182146`*^9, 
   3.6821676926285295`*^9}, {3.6821678111603093`*^9, 3.682167849935527*^9}, {
   3.682167892151942*^9, 3.6821679025275354`*^9}, {3.6821680476398354`*^9, 
   3.682168050832018*^9}, {3.6821681112514734`*^9, 3.6821681135776067`*^9}, {
   3.6821681662336187`*^9, 3.6821681808154526`*^9}, {3.6821682156534452`*^9, 
   3.682168310363862*^9}, {3.682178802064953*^9, 3.6821788574731226`*^9}, {
   3.6821797845176063`*^9, 3.6821798678863745`*^9}, {3.682179924646621*^9, 
   3.682179933998156*^9}, 3.6821800382591195`*^9, {3.682180103785867*^9, 
   3.6821801191557465`*^9}, {3.6821803064124565`*^9, 3.682180320525264*^9}, {
   3.682180376454463*^9, 3.6821803814617496`*^9}, {3.6821832402242613`*^9, 
   3.682183284751808*^9}, {3.682183418403453*^9, 3.6821834209866004`*^9}, {
   3.682340380078147*^9, 3.682340410220871*^9}, {3.682340522181275*^9, 
   3.682340537612157*^9}, {3.6823406550578747`*^9, 3.682340655896923*^9}, {
   3.682340692157997*^9, 3.68234069326906*^9}, {3.682345730917197*^9, 
   3.682345731045205*^9}, {3.6823458690981007`*^9, 3.682345919492983*^9}, {
   3.682345967318719*^9, 3.6823459676457376`*^9}, {3.6823463858226557`*^9, 
   3.682346387093728*^9}, 3.6823468661441727`*^9, {3.6823507930227776`*^9, 
   3.6823507938398237`*^9}, {3.6823508346331573`*^9, 3.68235083747932*^9}, 
   3.682354138591133*^9, 3.6823566711479864`*^9, {3.682360931208648*^9, 
   3.682360932023695*^9}, {3.6823611770847116`*^9, 3.682361178779808*^9}, {
   3.682361844153866*^9, 3.682361845208926*^9}, {3.682362187881526*^9, 
   3.682362192368782*^9}, {3.6823622281698303`*^9, 3.6823622290728817`*^9}, {
   3.6824245168725133`*^9, 3.682424594002925*^9}, {3.6824260544974604`*^9, 
   3.682426058127668*^9}, {3.6824261036362705`*^9, 3.682426116397001*^9}, {
   3.682426190238224*^9, 3.682426191247282*^9}, {3.6824263261569986`*^9, 
   3.6824263271250534`*^9}, {3.682426566115723*^9, 3.682426577725387*^9}, {
   3.6824266458332825`*^9, 3.6824266595680685`*^9}, {3.682426696979208*^9, 
   3.6824267107099934`*^9}, {3.682427781573243*^9, 3.6824278113079443`*^9}, {
   3.6824355677005672`*^9, 3.682435631502217*^9}, {3.6824362666165433`*^9, 
   3.682436273352928*^9}, {3.6824396749253745`*^9, 3.6824396816717634`*^9}, {
   3.6824466180411763`*^9, 3.682446638837542*^9}, {3.6824477837793245`*^9, 
   3.682447784026745*^9}, {3.6824486976287394`*^9, 3.6824486988314676`*^9}, {
   3.682448741291876*^9, 3.682448758877056*^9}, {3.682528592516034*^9, 
   3.682528601669776*^9}, {3.6825290670606318`*^9, 3.6825290697308183`*^9}, {
   3.682529366905645*^9, 3.6825294632815933`*^9}, {3.6825295212782946`*^9, 
   3.6825295218262405`*^9}, {3.6825326611473746`*^9, 
   3.6825327653305593`*^9}, {3.68253282920498*^9, 3.6825328354504523`*^9}, {
   3.6825337172886257`*^9, 3.6825337966552057`*^9}, {3.682767727311578*^9, 
   3.6827677341416397`*^9}, {3.6827677784039173`*^9, 
   3.6827677817925434`*^9}, {3.6932553797640305`*^9, 
   3.6932554299337807`*^9}, {3.6932554605179*^9, 3.6932559069187527`*^9}, {
   3.6932561402287693`*^9, 3.6932561722799435`*^9}, {3.6933163942079906`*^9, 
   3.693316415693305*^9}, {3.693316580499305*^9, 3.6933166304990816`*^9}, {
   3.693316760505435*^9, 3.6933167713506746`*^9}, {3.693316885693319*^9, 
   3.693316923395423*^9}, {3.6933172128656282`*^9, 3.693317263746234*^9}, {
   3.693325258387647*^9, 3.693325258903158*^9}, {3.693325769156588*^9, 
   3.6933257999974604`*^9}, {3.693335215842825*^9, 3.6933352602877464`*^9}, {
   3.693335513566686*^9, 3.693335518882057*^9}, 3.6933383532074747`*^9, {
   3.69333844096763*^9, 3.6933384435674295`*^9}, {3.6933998013026257`*^9, 
   3.693399826867744*^9}, {3.693399878173236*^9, 3.6933998820731897`*^9}, {
   3.6933999851766276`*^9, 3.693400021978489*^9}, {3.6934001039998937`*^9, 
   3.693400106015895*^9}, {3.6934016718519135`*^9, 3.6934016749356365`*^9}, {
   3.693401768182933*^9, 3.6934017860664177`*^9}, {3.6934045049723034`*^9, 
   3.693404507408079*^9}, {3.6934045480219707`*^9, 3.693404569296521*^9}, {
   3.693404654068478*^9, 3.6934046767251215`*^9}, 3.6934047114649863`*^9, {
   3.693411486854925*^9, 3.6934115557606277`*^9}, {3.693411611637782*^9, 
   3.69341163689961*^9}, {3.6934117443930483`*^9, 3.6934117581565638`*^9}, {
   3.693412031427684*^9, 3.693412061254629*^9}, {3.6934121007632923`*^9, 
   3.6934121063459177`*^9}, {3.6934121673784485`*^9, 
   3.6934121732938156`*^9}, {3.6934126870207553`*^9, 3.693412687851843*^9}, {
   3.6934127270569134`*^9, 3.693412748633364*^9}, {3.693412788765423*^9, 
   3.6934127889652367`*^9}, {3.693413093699652*^9, 3.6934131049158497`*^9}, {
   3.693413158927167*^9, 3.693413165655781*^9}, {3.6934132892354*^9, 
   3.6934132907125025`*^9}, {3.693413694311676*^9, 3.6934138525544806`*^9}, {
   3.6934139623245473`*^9, 3.6934139741439466`*^9}, {3.6934151889872465`*^9, 
   3.6934151913460665`*^9}, {3.693421812342548*^9, 3.693421814260598*^9}, 
   3.693571210634773*^9, {3.6935730363523593`*^9, 3.693573037920248*^9}, {
   3.6935730980366774`*^9, 3.693573098636371*^9}, {3.6935733964485483`*^9, 
   3.693573406451894*^9}, {3.693573469980172*^9, 3.693573501220932*^9}, {
   3.6935735525801334`*^9, 3.6935736322071934`*^9}, {3.693574441972418*^9, 
   3.693574507219281*^9}, {3.693574541832406*^9, 3.6935745742488327`*^9}, {
   3.693575621329663*^9, 3.693575673978572*^9}, {3.69357673871231*^9, 
   3.6935767415254836`*^9}, {3.6935771676067867`*^9, 
   3.6935771693901434`*^9}, {3.6935774277045565`*^9, 3.693577443913048*^9}, {
   3.6935774788521423`*^9, 3.69357748131384*^9}, {3.6935801882381463`*^9, 
   3.693580202383541*^9}, {3.6935809873145914`*^9, 3.69358098944536*^9}, {
   3.6935872517340436`*^9, 3.6935872545426507`*^9}, {3.693587372831433*^9, 
   3.6935873796980495`*^9}, {3.693587562863904*^9, 3.693587616021948*^9}, {
   3.6935876893495855`*^9, 3.6935876903867693`*^9}, {3.6935878379546204`*^9, 
   3.6935878413010764`*^9}, {3.693588112787511*^9, 3.69358811449063*^9}, {
   3.6935881694755335`*^9, 3.693588171288027*^9}, {3.6935935389237742`*^9, 
   3.693593540345663*^9}, 3.6935935945632477`*^9, {3.6935936258290606`*^9, 
   3.693593626766575*^9}, {3.6935941806328535`*^9, 3.693594207086978*^9}, 
   3.6935946950674806`*^9, {3.6935947327149076`*^9, 3.693594734652423*^9}, {
   3.693594941365797*^9, 3.693594955856461*^9}, {3.6935949870952897`*^9, 
   3.693595006821137*^9}, {3.693595054598051*^9, 3.693595087587389*^9}, {
   3.693595156350831*^9, 3.693595162100931*^9}, {3.693595205375044*^9, 
   3.693595214270155*^9}, {3.6935955401391487`*^9, 3.69359554954937*^9}, {
   3.6935957894002223`*^9, 3.693595793535714*^9}, {3.6935975519334*^9, 
   3.6935975545739965`*^9}, 3.6935978494473696`*^9, 3.6935978853782554`*^9, {
   3.693600107714938*^9, 3.6936001086524925`*^9}, {3.6936001461743183`*^9, 
   3.6936001463930244`*^9}, {3.6936004005973363`*^9, 
   3.6936004140829015`*^9}, {3.693600548133373*^9, 3.69360056949905*^9}, 
   3.6936006120421934`*^9, {3.693600743312659*^9, 3.6936007668870306`*^9}, 
   3.6936593079963093`*^9, {3.6936600641823077`*^9, 3.6936600934684105`*^9}, {
   3.6936606802085075`*^9, 3.6936607260416718`*^9}, 3.693661925629023*^9, {
   3.6936700240275917`*^9, 3.6936700241431427`*^9}, {3.693670312478878*^9, 
   3.693670390281993*^9}, 3.693671577434743*^9, {3.693671658053399*^9, 
   3.69367166553496*^9}, {3.6936857949048443`*^9, 3.693685796574098*^9}, {
   3.6938634331019464`*^9, 3.6938634424293127`*^9}, {3.7021506788025312`*^9, 
   3.7021506844738555`*^9}, {3.7037037148134384`*^9, 
   3.7037037294210167`*^9}, {3.703703915278076*^9, 3.7037039469256473`*^9}, {
   3.703704848274563*^9, 3.7037048678076663`*^9}, {3.7037053637935624`*^9, 
   3.703705368753002*^9}, {3.703847775816551*^9, 3.703847820609113*^9}, {
   3.703849676834283*^9, 3.7038496905620685`*^9}, {3.7040282611457214`*^9, 
   3.7040282642328987`*^9}, {3.704028356338166*^9, 3.7040283566171827`*^9}, {
   3.704028398569582*^9, 3.704028399184617*^9}, {3.704471208248934*^9, 
   3.7044712099760327`*^9}, {3.704471241696847*^9, 3.7044712418798575`*^9}, {
   3.7044719290331607`*^9, 3.7044719302572308`*^9}, {3.7046591737739472`*^9, 
   3.7046591911339397`*^9}, {3.705148359139801*^9, 3.7051483678022966`*^9}, 
   3.7051484133559017`*^9, {3.73756766773046*^9, 3.7375676678554573`*^9}, {
   3.7391166690149665`*^9, 3.7391166877889643`*^9}, 3.7658282742121916`*^9, {
   3.765828806839615*^9, 3.765828816995103*^9}, {3.7658298628464932`*^9, 
   3.765829872598856*^9}, {3.765831890081997*^9, 3.765831893986545*^9}, {
   3.765832009952757*^9, 3.765832011450959*^9}, {3.7658320614405985`*^9, 
   3.7658320749958544`*^9}, {3.765833522198763*^9, 3.7658335223549724`*^9}, {
   3.76589006117338*^9, 3.7658900690632076`*^9}, {3.765890149576587*^9, 
   3.76589015125076*^9}, 3.7658904315306063`*^9, {3.76589165759169*^9, 
   3.7658916621575394`*^9}, {3.765891709638466*^9, 3.765891713737749*^9}, {
   3.765891787184879*^9, 3.7658917877764783`*^9}, 3.811634646529772*^9},
 CellLabel->
  "In[283]:=",ExpressionUUID->"a003f62c-0389-42cc-8097-704cb8ca003d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev3DoppTestsc3", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", 
      "\[CapitalOmega]c1", ",", "\[CapitalOmega]c2", ",", "\[CapitalDelta]2", 
      ",", "d31", ",", "d41"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "0.05"}], ",", "0.004", ",", "0.00001"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d32", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]c1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]c2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ab", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3e", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", 
                RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",",
                 "u", ",", "Nat", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3a", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", 
                RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",",
                 "u", ",", "Nat", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3e", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}],
                "]"}], "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3a", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}],
                "]"}], "]"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d", "/", 
           SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Im", "[", 
             RowBox[{"sd3a", "[", 
              RowBox[{
              "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
               ",", 
               RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
               "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",", 
               "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], "+", 
            RowBox[{"Im", "[", 
             RowBox[{"sd3a", "[", 
              RowBox[{
              "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
               ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
               ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}], 
              "]"}], "]"}]}], ")"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"d", "/", 
                SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "2"}], "Pi", "*", 
                 RowBox[{"0.0254", "/", 
                  RowBox[{"(", 
                   RowBox[{"2", "wcn"}], ")"}]}], 
                 RowBox[{"(", 
                  RowBox[{"Im", "[", 
                   RowBox[{
                    RowBox[{"sd3a", "[", 
                    RowBox[{
                    "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", 
                    RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                    "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d42"}], "]"}], "+", 
                    RowBox[{"Im", "[", 
                    RowBox[{"sd3a", "[", 
                    RowBox[{
                    "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", "\[CapitalDelta]", ",", 
                    "\[CapitalOmega]c1", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d32"}], "]"}], 
                    "]"}]}]}]}]}]}]}]}]}], ")"}], "]"}], "}"}], "]"}], "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ab", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", 
                 RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                 "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                 ",", "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], "+", 
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                 ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
                 "d32"}], "]"}], "]"}]}], ")"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", 
                  RowBox[{"sd3a", "[", 
                   RowBox[{
                   "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", 
                    RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                    "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], ")"}]}],
                "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", 
                  RowBox[{"sd3a", "[", 
                   RowBox[{
                   "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", "\[CapitalDelta]", ",", 
                    "\[CapitalOmega]c1", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d32"}], "]"}], "]"}], ")"}]}],
                "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.693574788190744*^9, {3.6935755435451756`*^9, 3.693575582040471*^9}, {
   3.693575719373087*^9, 3.693575828170508*^9}, {3.6935759031158037`*^9, 
   3.693575905413637*^9}, {3.6935759486677485`*^9, 3.693576041202098*^9}, {
   3.6935761437267427`*^9, 3.6935761599640436`*^9}, {3.693576280979597*^9, 
   3.6935762915722256`*^9}, 3.6935763650823193`*^9, {3.6935766166108017`*^9, 
   3.693576617710661*^9}, {3.6935766587788343`*^9, 3.6935766997397213`*^9}, {
   3.6935767327434072`*^9, 3.6935767353280163`*^9}, {3.6935770614397907`*^9, 
   3.693577111380499*^9}, {3.693577264038381*^9, 3.693577276563698*^9}, {
   3.693577330659221*^9, 3.693577332711196*^9}, {3.6935775223232965`*^9, 
   3.6935775586215987`*^9}, {3.6935775904422235`*^9, 3.693577620163538*^9}, {
   3.693578143691578*^9, 3.693578187743436*^9}, {3.693580172595014*^9, 
   3.6935801744940414`*^9}, 3.693580206397213*^9, {3.6935809666682715`*^9, 
   3.6935809844621696`*^9}, {3.693587239997185*^9, 3.693587244819771*^9}, {
   3.6935873185607934`*^9, 3.693587346656555*^9}, {3.6935873844809027`*^9, 
   3.693587498669446*^9}, {3.6935876861200137`*^9, 3.693587686887785*^9}, {
   3.6935877665889225`*^9, 3.6935877679419646`*^9}, {3.693587799978722*^9, 
   3.6935878259060593`*^9}, {3.69358810517807*^9, 3.6935881067093134`*^9}, {
   3.693588151162873*^9, 3.6935881531316166`*^9}, {3.693593416940279*^9, 
   3.69359344391139*^9}, 3.6935935341581116`*^9, 3.693593589781909*^9, 
   3.6935936343447647`*^9, {3.693594268366268*^9, 3.6935943106601176`*^9}, {
   3.6935944158405285`*^9, 3.693594434891628*^9}, {3.693594730152413*^9, 
   3.693594830862494*^9}, {3.693594964090908*^9, 3.6935949803452253`*^9}, {
   3.69359509789993*^9, 3.693595114966015*^9}, {3.69359518461521*^9, 
   3.693595187677732*^9}, {3.6935953181170454`*^9, 3.6935954112130437`*^9}, {
   3.69359698702544*^9, 3.6935969883692255`*^9}, {3.693597545480194*^9, 
   3.69359755757405*^9}, {3.69359935066584*^9, 3.6935993518533506`*^9}, 
   3.693660729226142*^9, 3.693661922923174*^9, {3.6936700260265675`*^9, 
   3.693670026110908*^9}, {3.693670398284234*^9, 3.69367040421292*^9}, 
   3.693670528038734*^9, 3.693671581165148*^9, {3.693671654254927*^9, 
   3.693671668387971*^9}, {3.6936857915901566`*^9, 3.693685792605191*^9}, {
   3.6938634485148563`*^9, 3.6938634598476286`*^9}, {3.7037037318693995`*^9, 
   3.703703733997254*^9}, {3.7037039196618567`*^9, 3.703703949933426*^9}, {
   3.7037045228957405`*^9, 3.7037045951683903`*^9}, {3.7037047677119117`*^9, 
   3.703704790639476*^9}, {3.7037053735870123`*^9, 3.703705396434226*^9}, 
   3.703847577970235*^9, {3.7038477340331616`*^9, 3.703847735488245*^9}, {
   3.7038478500247955`*^9, 3.7038479075210843`*^9}, {3.7038496744021444`*^9, 
   3.7038496877069054`*^9}, {3.703968082809718*^9, 3.7039680995366745`*^9}, {
   3.7039681974812765`*^9, 3.703968198736348*^9}, {3.7040283671537848`*^9, 
   3.704028396040437*^9}, {3.704471203890685*^9, 3.7044712055037775`*^9}, {
   3.704471236761565*^9, 3.7044712396487303`*^9}, {3.704471925432955*^9, 
   3.7044719265850205`*^9}, {3.704659141550104*^9, 3.704659170061735*^9}, {
   3.7051463045892878`*^9, 3.705146346168666*^9}, 3.76582826804615*^9, {
   3.765828779166439*^9, 3.765828785294817*^9}, {3.7658289913406277`*^9, 
   3.765828992868369*^9}, {3.765829306375307*^9, 3.765829323044571*^9}, {
   3.7658312282207747`*^9, 3.7658312338378634`*^9}, {3.7658318958012753`*^9, 
   3.7658318988180285`*^9}, {3.7658320027372627`*^9, 3.765832007552581*^9}, {
   3.765832051698292*^9, 3.7658320724088154`*^9}, {3.765833519131132*^9, 
   3.7658335194123445`*^9}, {3.7658900640284986`*^9, 
   3.7658900735330143`*^9}, {3.7658901452589283`*^9, 3.765890147009178*^9}, {
   3.7658904275931473`*^9, 3.7658904286875505`*^9}, {3.7658916599537954`*^9, 
   3.7658916648918552`*^9}, {3.7658917060624847`*^9, 
   3.7658917166215253`*^9}, {3.76589178301299*^9, 3.765891783386376*^9}, 
   3.811634650373523*^9},
 CellLabel->
  "In[284]:=",ExpressionUUID->"aaddf0be-9880-4855-bef3-414d387af565"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev4DoppTestsc4", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", 
      "\[CapitalDelta]2", ",", "d31", ",", "d41"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "0.015"}], ",", "0.007", ",", "0.000002"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"omegac2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "/", 
         SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Im", "[", 
           RowBox[{"sd42", "[", 
            RowBox[{
            "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
             ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", 
             "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43",
              ",", "d42"}], "]"}], "]"}], "+", 
          RowBox[{"Im", "[", 
           RowBox[{"sd32", "[", 
            RowBox[{
            "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
             ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", 
             "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43",
              ",", "d32"}], "]"}], "]"}]}], ")"}]}], "\[IndentingNewLine]", 
       "}"}], "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6820777509929857`*^9, 3.682078072258361*^9}, {
   3.6820781686988773`*^9, 3.6820781844017754`*^9}, {3.6820782371557927`*^9, 
   3.6820782387708855`*^9}, {3.6820783386755996`*^9, 
   3.6820783600278206`*^9}, {3.682078390802581*^9, 3.682078409651659*^9}, {
   3.6820785556990128`*^9, 3.6820785577631307`*^9}, {3.682078604887826*^9, 
   3.682078606954944*^9}, 3.682078646275193*^9, 3.6820786817442217`*^9, {
   3.6820787244836664`*^9, 3.6820787256587334`*^9}, {3.682078761002755*^9, 
   3.6820787873862643`*^9}, {3.682078849739831*^9, 3.682078868395898*^9}, {
   3.6820789209479036`*^9, 3.682079036674523*^9}, {3.6820797161803885`*^9, 
   3.6820797163083954`*^9}, {3.6820940847423997`*^9, 3.682094176264634*^9}, {
   3.682100534108282*^9, 3.682100724544174*^9}, {3.682100812826224*^9, 
   3.6821008239058576`*^9}, {3.682100946929894*^9, 3.6821009474969263`*^9}, {
   3.6821010023450637`*^9, 3.6821010049532127`*^9}, {3.682101044296463*^9, 
   3.6821010535839944`*^9}, {3.6821012584737134`*^9, 3.682101261144866*^9}, {
   3.682101316585037*^9, 3.6821013732572784`*^9}, {3.682101414754652*^9, 
   3.6821014312095933`*^9}, {3.6821027458817883`*^9, 
   3.6821029190776944`*^9}, {3.682102981621272*^9, 3.682103063142935*^9}, {
   3.682103152077021*^9, 3.6821031759093847`*^9}, {3.682103228078368*^9, 
   3.682103275783097*^9}, {3.6821033867274427`*^9, 3.6821035279885225`*^9}, {
   3.682103596235426*^9, 3.6821036073870635`*^9}, {3.6821036960071325`*^9, 
   3.6821037775187945`*^9}, {3.6821038740493155`*^9, 
   3.6821038957665577`*^9}, {3.6821039323166485`*^9, 3.68210399843143*^9}, {
   3.6821041484310093`*^9, 3.6821041622938023`*^9}, {3.68210423166377*^9, 
   3.68210423550299*^9}, {3.6821042817676363`*^9, 3.682104281975648*^9}, {
   3.6821044114720545`*^9, 3.6821044835001745`*^9}, {3.6821045457187333`*^9, 
   3.6821045762404785`*^9}, {3.6821046797604*^9, 3.6821047083920374`*^9}, {
   3.682104777109968*^9, 3.682104849645117*^9}, {3.6821057340817037`*^9, 
   3.6821059374293346`*^9}, {3.6821060904780884`*^9, 
   3.6821060922611904`*^9}, {3.6821063118057475`*^9, 3.682106405406101*^9}, 
   3.682106470391818*^9, {3.682106886234603*^9, 3.6821069287290335`*^9}, {
   3.6821069697263784`*^9, 3.6821069703174124`*^9}, {3.6821070483648767`*^9, 
   3.6821070518040733`*^9}, {3.682107090122265*^9, 3.682107090965313*^9}, {
   3.6821071649115424`*^9, 3.6821073019513807`*^9}, {3.68210735596247*^9, 
   3.6821073587036266`*^9}, 3.6821621740358844`*^9, 3.6821627337889004`*^9, {
   3.6821628756690154`*^9, 3.682162909995979*^9}, {3.682163006508499*^9, 
   3.6821630839339275`*^9}, {3.682164960571265*^9, 3.6821650124032297`*^9}, {
   3.6821651296039333`*^9, 3.6821651308580046`*^9}, {3.682165214019761*^9, 
   3.682165249474789*^9}, {3.6821653768800764`*^9, 3.6821654049336815`*^9}, {
   3.6821654393766513`*^9, 3.68216545387048*^9}, 3.6821655581664457`*^9, {
   3.682165620292999*^9, 3.6821656220580997`*^9}, {3.6821656556360207`*^9, 
   3.6821656577791433`*^9}, {3.682165701413639*^9, 3.682165727750145*^9}, {
   3.6821665708493676`*^9, 3.682166634060983*^9}, {3.6821666960175266`*^9, 
   3.6821667514896994`*^9}, 3.682166802514618*^9, {3.6821669432116656`*^9, 
   3.682167060590379*^9}, {3.6821671413930006`*^9, 3.682167202085472*^9}, {
   3.6821673969946203`*^9, 3.6821673999857917`*^9}, {3.6821674579621077`*^9, 
   3.682167471208865*^9}, {3.682167501232582*^9, 3.682167549741357*^9}, {
   3.682167594844937*^9, 3.6821675971000657`*^9}, {3.6821676294889183`*^9, 
   3.6821676371443563`*^9}, {3.6821676871182146`*^9, 
   3.6821676926285295`*^9}, {3.6821678111603093`*^9, 3.682167849935527*^9}, {
   3.682167892151942*^9, 3.6821679025275354`*^9}, {3.6821680476398354`*^9, 
   3.682168050832018*^9}, {3.6821681112514734`*^9, 3.6821681135776067`*^9}, {
   3.6821681662336187`*^9, 3.6821681808154526`*^9}, {3.6821682156534452`*^9, 
   3.682168310363862*^9}, {3.682178802064953*^9, 3.6821788574731226`*^9}, {
   3.6821797845176063`*^9, 3.6821798678863745`*^9}, {3.682179924646621*^9, 
   3.682179933998156*^9}, 3.6821800382591195`*^9, {3.682180103785867*^9, 
   3.6821801191557465`*^9}, {3.6821803064124565`*^9, 3.682180320525264*^9}, {
   3.682180376454463*^9, 3.6821803814617496`*^9}, {3.6821832402242613`*^9, 
   3.682183284751808*^9}, {3.682183418403453*^9, 3.6821834209866004`*^9}, {
   3.682340380078147*^9, 3.682340410220871*^9}, {3.682340522181275*^9, 
   3.682340537612157*^9}, {3.6823406550578747`*^9, 3.682340655896923*^9}, {
   3.682340692157997*^9, 3.68234069326906*^9}, {3.682345730917197*^9, 
   3.682345731045205*^9}, {3.6823458690981007`*^9, 3.682345919492983*^9}, {
   3.682345967318719*^9, 3.6823459676457376`*^9}, {3.6823463858226557`*^9, 
   3.682346387093728*^9}, 3.6823468661441727`*^9, {3.6823507930227776`*^9, 
   3.6823507938398237`*^9}, {3.6823508346331573`*^9, 3.68235083747932*^9}, 
   3.682354138591133*^9, 3.6823566711479864`*^9, {3.682360931208648*^9, 
   3.682360932023695*^9}, {3.6823611770847116`*^9, 3.682361178779808*^9}, {
   3.682361844153866*^9, 3.682361845208926*^9}, {3.682362187881526*^9, 
   3.682362192368782*^9}, {3.6823622281698303`*^9, 3.6823622290728817`*^9}, {
   3.6824245168725133`*^9, 3.682424594002925*^9}, {3.6824260544974604`*^9, 
   3.682426058127668*^9}, {3.6824261036362705`*^9, 3.682426116397001*^9}, {
   3.682426190238224*^9, 3.682426191247282*^9}, {3.6824263261569986`*^9, 
   3.6824263271250534`*^9}, {3.682426566115723*^9, 3.682426577725387*^9}, {
   3.6824266458332825`*^9, 3.6824266595680685`*^9}, {3.682426696979208*^9, 
   3.6824267107099934`*^9}, {3.682427781573243*^9, 3.6824278113079443`*^9}, {
   3.6824355677005672`*^9, 3.682435631502217*^9}, {3.6824362666165433`*^9, 
   3.682436273352928*^9}, {3.6824396749253745`*^9, 3.6824396816717634`*^9}, {
   3.6824466180411763`*^9, 3.682446638837542*^9}, {3.6824477837793245`*^9, 
   3.682447784026745*^9}, {3.6824486976287394`*^9, 3.6824486988314676`*^9}, {
   3.682448741291876*^9, 3.682448758877056*^9}, {3.682528592516034*^9, 
   3.682528601669776*^9}, {3.6825290670606318`*^9, 3.6825290697308183`*^9}, {
   3.682529366905645*^9, 3.6825294632815933`*^9}, {3.6825295212782946`*^9, 
   3.6825295218262405`*^9}, {3.6825326611473746`*^9, 
   3.6825327653305593`*^9}, {3.68253282920498*^9, 3.6825328354504523`*^9}, {
   3.6825337172886257`*^9, 3.6825337966552057`*^9}, {3.682767727311578*^9, 
   3.6827677341416397`*^9}, {3.6827677784039173`*^9, 
   3.6827677817925434`*^9}, {3.6932553797640305`*^9, 
   3.6932554299337807`*^9}, {3.6932554605179*^9, 3.6932559069187527`*^9}, {
   3.6932561402287693`*^9, 3.6932561722799435`*^9}, {3.6933163942079906`*^9, 
   3.693316415693305*^9}, {3.693316580499305*^9, 3.6933166304990816`*^9}, {
   3.693316760505435*^9, 3.6933167713506746`*^9}, {3.693316885693319*^9, 
   3.693316923395423*^9}, {3.6933172128656282`*^9, 3.693317263746234*^9}, {
   3.693325258387647*^9, 3.693325258903158*^9}, {3.693325769156588*^9, 
   3.6933257999974604`*^9}, {3.693335215842825*^9, 3.6933352602877464`*^9}, {
   3.693335513566686*^9, 3.693335518882057*^9}, 3.6933383532074747`*^9, {
   3.69333844096763*^9, 3.6933384435674295`*^9}, {3.6933998013026257`*^9, 
   3.693399826867744*^9}, {3.693399878173236*^9, 3.6933998820731897`*^9}, {
   3.6933999851766276`*^9, 3.693400021978489*^9}, {3.6934001039998937`*^9, 
   3.693400106015895*^9}, {3.6934016718519135`*^9, 3.6934016749356365`*^9}, {
   3.693401768182933*^9, 3.6934017860664177`*^9}, {3.6934045049723034`*^9, 
   3.693404507408079*^9}, {3.6934045480219707`*^9, 3.693404569296521*^9}, {
   3.693404654068478*^9, 3.6934046767251215`*^9}, 3.6934047114649863`*^9, {
   3.693411486854925*^9, 3.6934115557606277`*^9}, {3.693411611637782*^9, 
   3.69341163689961*^9}, {3.6934117443930483`*^9, 3.6934117581565638`*^9}, {
   3.693412031427684*^9, 3.693412061254629*^9}, {3.6934121007632923`*^9, 
   3.6934121063459177`*^9}, {3.6934121673784485`*^9, 
   3.6934121732938156`*^9}, {3.6934126870207553`*^9, 3.693412687851843*^9}, {
   3.6934127270569134`*^9, 3.693412748633364*^9}, {3.693412788765423*^9, 
   3.6934127889652367`*^9}, {3.693413093699652*^9, 3.6934131049158497`*^9}, {
   3.693413158927167*^9, 3.693413165655781*^9}, {3.6934132892354*^9, 
   3.6934132907125025`*^9}, {3.693413694311676*^9, 3.6934138525544806`*^9}, {
   3.6934139623245473`*^9, 3.6934139741439466`*^9}, {3.6934151889872465`*^9, 
   3.6934151913460665`*^9}, {3.693421812342548*^9, 3.693421814260598*^9}, 
   3.693571210634773*^9, {3.6935730363523593`*^9, 3.693573037920248*^9}, {
   3.6935730980366774`*^9, 3.693573098636371*^9}, {3.6935733964485483`*^9, 
   3.693573406451894*^9}, {3.693573469980172*^9, 3.693573501220932*^9}, {
   3.6935735525801334`*^9, 3.6935736322071934`*^9}, {3.693574441972418*^9, 
   3.693574507219281*^9}, {3.693574541832406*^9, 3.6935745742488327`*^9}, {
   3.693575621329663*^9, 3.693575673978572*^9}, {3.69357673871231*^9, 
   3.6935767415254836`*^9}, {3.6935771676067867`*^9, 
   3.6935771693901434`*^9}, {3.6935774277045565`*^9, 3.693577443913048*^9}, {
   3.6935774788521423`*^9, 3.69357748131384*^9}, {3.6935801882381463`*^9, 
   3.693580202383541*^9}, {3.6935809873145914`*^9, 3.69358098944536*^9}, {
   3.6935872517340436`*^9, 3.6935872545426507`*^9}, {3.693587372831433*^9, 
   3.6935873796980495`*^9}, {3.693587562863904*^9, 3.693587616021948*^9}, {
   3.6935876893495855`*^9, 3.6935876903867693`*^9}, {3.6935878379546204`*^9, 
   3.6935878413010764`*^9}, {3.693588112787511*^9, 3.69358811449063*^9}, {
   3.6935881694755335`*^9, 3.693588171288027*^9}, {3.6935935389237742`*^9, 
   3.693593540345663*^9}, 3.6935935945632477`*^9, {3.6935936258290606`*^9, 
   3.693593626766575*^9}, {3.6935941806328535`*^9, 3.693594207086978*^9}, 
   3.6935946950674806`*^9, {3.6935947327149076`*^9, 3.693594734652423*^9}, {
   3.693594941365797*^9, 3.693594955856461*^9}, {3.6935949870952897`*^9, 
   3.693595006821137*^9}, {3.693595054598051*^9, 3.693595087587389*^9}, {
   3.693595156350831*^9, 3.693595162100931*^9}, {3.693595205375044*^9, 
   3.693595214270155*^9}, {3.6935955401391487`*^9, 3.69359554954937*^9}, {
   3.6935957894002223`*^9, 3.693595793535714*^9}, {3.6935975519334*^9, 
   3.6935975545739965`*^9}, 3.6935978494473696`*^9, 3.6935978853782554`*^9, {
   3.693600107714938*^9, 3.6936001086524925`*^9}, {3.6936001461743183`*^9, 
   3.6936001463930244`*^9}, {3.6936004005973363`*^9, 
   3.6936004140829015`*^9}, {3.693600548133373*^9, 3.69360056949905*^9}, 
   3.6936006120421934`*^9, {3.693600743312659*^9, 3.6936007668870306`*^9}, 
   3.6936593079963093`*^9, {3.6936600641823077`*^9, 3.6936600934684105`*^9}, {
   3.6936606802085075`*^9, 3.6936607260416718`*^9}, 3.693661925629023*^9, {
   3.6936700240275917`*^9, 3.6936700241431427`*^9}, {3.693670312478878*^9, 
   3.693670390281993*^9}, 3.693671577434743*^9, {3.693671658053399*^9, 
   3.69367166553496*^9}, {3.6936857949048443`*^9, 3.693685796574098*^9}, {
   3.6938634331019464`*^9, 3.6938634424293127`*^9}, {3.7021506788025312`*^9, 
   3.7021506844738555`*^9}, {3.7037037148134384`*^9, 
   3.7037037294210167`*^9}, {3.703703915278076*^9, 3.7037039469256473`*^9}, {
   3.703704848274563*^9, 3.7037048678076663`*^9}, {3.7037053637935624`*^9, 
   3.703705368753002*^9}, {3.703847775816551*^9, 3.703847820609113*^9}, {
   3.703849676834283*^9, 3.7038496905620685`*^9}, {3.7040282611457214`*^9, 
   3.7040282642328987`*^9}, {3.704028356338166*^9, 3.7040283566171827`*^9}, {
   3.704028398569582*^9, 3.704028399184617*^9}, {3.704471208248934*^9, 
   3.7044712099760327`*^9}, {3.704471241696847*^9, 3.7044712418798575`*^9}, {
   3.7044719290331607`*^9, 3.7044719302572308`*^9}, {3.7046591737739472`*^9, 
   3.7046591911339397`*^9}, {3.705148359139801*^9, 3.7051483678022966`*^9}, 
   3.7051484133559017`*^9, {3.73756766773046*^9, 3.7375676678554573`*^9}, {
   3.7391166690149665`*^9, 3.7391166877889643`*^9}, 3.7658282742121916`*^9, {
   3.765828806839615*^9, 3.765828816995103*^9}, {3.7658298628464932`*^9, 
   3.765829872598856*^9}, {3.765831890081997*^9, 3.765831893986545*^9}, {
   3.765832009952757*^9, 3.765832011450959*^9}, {3.7658320614405985`*^9, 
   3.7658320749958544`*^9}, {3.765833522198763*^9, 3.7658335223549724`*^9}, {
   3.76589006117338*^9, 3.7658900690632076`*^9}, {3.765890149576587*^9, 
   3.76589015125076*^9}, 3.7658904315306063`*^9, {3.7658924397006783`*^9, 
   3.7658924492350783`*^9}, {3.765892604209772*^9, 3.7658926046465216`*^9}, {
   3.7658926602178936`*^9, 3.765892688004876*^9}, {3.765892723946334*^9, 
   3.7658927241963425`*^9}, {3.765892814281948*^9, 3.7658928156381693`*^9}, 
   3.8116346549359856`*^9},
 CellLabel->
  "In[285]:=",ExpressionUUID->"304751bf-4a68-4bab-b6ab-bc49683b7c97"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev3DoppTestsc4", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", 
      "\[CapitalOmega]c1", ",", "\[CapitalOmega]c2", ",", "\[CapitalDelta]2", 
      ",", "d31", ",", "d41"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "0.015"}], ",", "0.007", ",", "0.000002"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d32", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]c1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]c2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ab", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3e", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", 
                RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",",
                 "u", ",", "Nat", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3a", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", 
                RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",",
                 "u", ",", "Nat", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3e", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}],
                "]"}], "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3a", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}],
                "]"}], "]"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d", "/", 
           SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Im", "[", 
             RowBox[{"sd3a", "[", 
              RowBox[{
              "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
               ",", 
               RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
               "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",", 
               "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], "+", 
            RowBox[{"Im", "[", 
             RowBox[{"sd3a", "[", 
              RowBox[{
              "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
               ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
               ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}], 
              "]"}], "]"}]}], ")"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"d", "/", 
                SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "2"}], "Pi", "*", 
                 RowBox[{"0.0254", "/", 
                  RowBox[{"(", 
                   RowBox[{"2", "wcn"}], ")"}]}], 
                 RowBox[{"(", 
                  RowBox[{"Im", "[", 
                   RowBox[{
                    RowBox[{"sd3a", "[", 
                    RowBox[{
                    "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", 
                    RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                    "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d42"}], "]"}], "+", 
                    RowBox[{"Im", "[", 
                    RowBox[{"sd3a", "[", 
                    RowBox[{
                    "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", "\[CapitalDelta]", ",", 
                    "\[CapitalOmega]c1", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d32"}], "]"}], 
                    "]"}]}]}]}]}]}]}]}]}], ")"}], "]"}], "}"}], "]"}], "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ab", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", 
                 RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                 "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                 ",", "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], "+", 
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                 ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
                 "d32"}], "]"}], "]"}]}], ")"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", 
                  RowBox[{"sd3a", "[", 
                   RowBox[{
                   "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", 
                    RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                    "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], ")"}]}],
                "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", 
                  RowBox[{"sd3a", "[", 
                   RowBox[{
                   "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", "\[CapitalDelta]", ",", 
                    "\[CapitalOmega]c1", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d32"}], "]"}], "]"}], ")"}]}],
                "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.693574788190744*^9, {3.6935755435451756`*^9, 3.693575582040471*^9}, {
   3.693575719373087*^9, 3.693575828170508*^9}, {3.6935759031158037`*^9, 
   3.693575905413637*^9}, {3.6935759486677485`*^9, 3.693576041202098*^9}, {
   3.6935761437267427`*^9, 3.6935761599640436`*^9}, {3.693576280979597*^9, 
   3.6935762915722256`*^9}, 3.6935763650823193`*^9, {3.6935766166108017`*^9, 
   3.693576617710661*^9}, {3.6935766587788343`*^9, 3.6935766997397213`*^9}, {
   3.6935767327434072`*^9, 3.6935767353280163`*^9}, {3.6935770614397907`*^9, 
   3.693577111380499*^9}, {3.693577264038381*^9, 3.693577276563698*^9}, {
   3.693577330659221*^9, 3.693577332711196*^9}, {3.6935775223232965`*^9, 
   3.6935775586215987`*^9}, {3.6935775904422235`*^9, 3.693577620163538*^9}, {
   3.693578143691578*^9, 3.693578187743436*^9}, {3.693580172595014*^9, 
   3.6935801744940414`*^9}, 3.693580206397213*^9, {3.6935809666682715`*^9, 
   3.6935809844621696`*^9}, {3.693587239997185*^9, 3.693587244819771*^9}, {
   3.6935873185607934`*^9, 3.693587346656555*^9}, {3.6935873844809027`*^9, 
   3.693587498669446*^9}, {3.6935876861200137`*^9, 3.693587686887785*^9}, {
   3.6935877665889225`*^9, 3.6935877679419646`*^9}, {3.693587799978722*^9, 
   3.6935878259060593`*^9}, {3.69358810517807*^9, 3.6935881067093134`*^9}, {
   3.693588151162873*^9, 3.6935881531316166`*^9}, {3.693593416940279*^9, 
   3.69359344391139*^9}, 3.6935935341581116`*^9, 3.693593589781909*^9, 
   3.6935936343447647`*^9, {3.693594268366268*^9, 3.6935943106601176`*^9}, {
   3.6935944158405285`*^9, 3.693594434891628*^9}, {3.693594730152413*^9, 
   3.693594830862494*^9}, {3.693594964090908*^9, 3.6935949803452253`*^9}, {
   3.69359509789993*^9, 3.693595114966015*^9}, {3.69359518461521*^9, 
   3.693595187677732*^9}, {3.6935953181170454`*^9, 3.6935954112130437`*^9}, {
   3.69359698702544*^9, 3.6935969883692255`*^9}, {3.693597545480194*^9, 
   3.69359755757405*^9}, {3.69359935066584*^9, 3.6935993518533506`*^9}, 
   3.693660729226142*^9, 3.693661922923174*^9, {3.6936700260265675`*^9, 
   3.693670026110908*^9}, {3.693670398284234*^9, 3.69367040421292*^9}, 
   3.693670528038734*^9, 3.693671581165148*^9, {3.693671654254927*^9, 
   3.693671668387971*^9}, {3.6936857915901566`*^9, 3.693685792605191*^9}, {
   3.6938634485148563`*^9, 3.6938634598476286`*^9}, {3.7037037318693995`*^9, 
   3.703703733997254*^9}, {3.7037039196618567`*^9, 3.703703949933426*^9}, {
   3.7037045228957405`*^9, 3.7037045951683903`*^9}, {3.7037047677119117`*^9, 
   3.703704790639476*^9}, {3.7037053735870123`*^9, 3.703705396434226*^9}, 
   3.703847577970235*^9, {3.7038477340331616`*^9, 3.703847735488245*^9}, {
   3.7038478500247955`*^9, 3.7038479075210843`*^9}, {3.7038496744021444`*^9, 
   3.7038496877069054`*^9}, {3.703968082809718*^9, 3.7039680995366745`*^9}, {
   3.7039681974812765`*^9, 3.703968198736348*^9}, {3.7040283671537848`*^9, 
   3.704028396040437*^9}, {3.704471203890685*^9, 3.7044712055037775`*^9}, {
   3.704471236761565*^9, 3.7044712396487303`*^9}, {3.704471925432955*^9, 
   3.7044719265850205`*^9}, {3.704659141550104*^9, 3.704659170061735*^9}, {
   3.7051463045892878`*^9, 3.705146346168666*^9}, 3.76582826804615*^9, {
   3.765828779166439*^9, 3.765828785294817*^9}, {3.7658289913406277`*^9, 
   3.765828992868369*^9}, {3.765829306375307*^9, 3.765829323044571*^9}, {
   3.7658312282207747`*^9, 3.7658312338378634`*^9}, {3.7658318958012753`*^9, 
   3.7658318988180285`*^9}, {3.7658320027372627`*^9, 3.765832007552581*^9}, {
   3.765832051698292*^9, 3.7658320724088154`*^9}, {3.765833519131132*^9, 
   3.7658335194123445`*^9}, {3.7658900640284986`*^9, 
   3.7658900735330143`*^9}, {3.7658901452589283`*^9, 3.765890147009178*^9}, {
   3.7658904275931473`*^9, 3.7658904286875505`*^9}, {3.7658924434406157`*^9, 
   3.7658924447492332`*^9}, {3.765892607461681*^9, 3.7658926078566*^9}, {
   3.765892652944547*^9, 3.7658926845473404`*^9}, {3.765892726733111*^9, 
   3.7658927268797865`*^9}, {3.765892810766618*^9, 3.765892812587751*^9}, 
   3.8116346586078434`*^9},
 CellLabel->
  "In[286]:=",ExpressionUUID->"f1a7c904-8c86-45c9-a491-3918cc07b4c5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transmission vs Power", "Chapter",
 CellChangeTimes->{{3.765829027294773*^9, 3.765829037702803*^9}, {
   3.7658298084891195`*^9, 3.7658298126145983`*^9}, 
   3.7658340002613516`*^9},ExpressionUUID->"ee72d3ce-98a3-4b8e-9d32-\
35649bd24763"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ome", "[", 
   RowBox[{"P_", ",", "diam_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1", "/", "\[HBar]"}], " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"P", "/", 
       RowBox[{"(", 
        RowBox[{"Pi", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], "]"}]}], 
    ")"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[HBar]", "\[Rule]", " ", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ",", 
     RowBox[{"e0", "->", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ",", 
     RowBox[{"c", "\[Rule]", " ", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ",", 
     RowBox[{"d31", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.702401357407527*^9, 3.7024014030801396`*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"d9b3add8-62ae-4eb4-9557-1f01e1f4c5e9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  FractionBox[
   RowBox[{"Ome", "[", 
    RowBox[{
     RowBox[{"65", "/", "1000"}], ",", 
     RowBox[{"1", "/", "1000"}]}], "]"}], 
   RowBox[{"2", "Pi"}]], "/", 
  RowBox[{"(", 
   RowBox[{"5.750056", " ", 
    RowBox[{"10", "^", "6"}]}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox[
   RowBox[{"Ome", "[", 
    RowBox[{
     RowBox[{"142.75", "/", "1000"}], ",", 
     RowBox[{"1", "/", "1000"}]}], "]"}], 
   RowBox[{"2", "Pi"}]], "/", 
  RowBox[{"(", 
   RowBox[{"5.750056", " ", 
    RowBox[{"10", "^", "6"}]}], ")"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7024014051622586`*^9, 3.7024014473516717`*^9}, {
  3.765830754845523*^9, 3.765830818416462*^9}, {3.7658308606381693`*^9, 
  3.76583089568029*^9}, {3.7658312846142807`*^9, 3.7658312991191893`*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"30809b63-a631-496c-94ea-f0788ae064fd"],

Cell[BoxData["10.12197121263393`"], "Output",
 CellChangeTimes->{{3.7024014094415035`*^9, 3.7024014477226925`*^9}, 
   3.7027295345252466`*^9, 3.7037023951123347`*^9, 3.703847388028371*^9, 
   3.703872777000537*^9, 3.7044733027777348`*^9, 3.704645574634121*^9, 
   3.7046463919818707`*^9, 3.704646482942073*^9, 3.704649868689727*^9, 
   3.704650146455614*^9, 3.7046502973982477`*^9, 3.704719472289825*^9, 
   3.7047299023073883`*^9, 3.704744259533574*^9, 3.704744583655113*^9, 
   3.7047450328448052`*^9, 3.704825977461687*^9, 3.7050857212941213`*^9, 
   3.7050859323341923`*^9, 3.705147972541689*^9, 3.70526289416383*^9, 
   3.7053364363004913`*^9, 3.7053478409588003`*^9, 3.705417360012063*^9, 
   3.7099226248065767`*^9, 3.71087455780986*^9, 3.7133728642723227`*^9, 
   3.713373388236652*^9, 3.7136434871016436`*^9, 3.716035687575499*^9, 
   3.717171244838092*^9, 3.717172821453122*^9, 3.73747686792862*^9, 
   3.737486325929719*^9, 3.739116642326764*^9, 3.7658281457687483`*^9, 
   3.76582843133962*^9, {3.765830740849605*^9, 3.7658308155238914`*^9}, {
   3.76583086279912*^9, 3.765830895960264*^9}, {3.765831285282982*^9, 
   3.7658312992823124`*^9}, 3.771172167879966*^9, 3.7726277315717497`*^9, 
   3.811634461200471*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"c79cbb11-01b9-46c1-8ee7-d75933293d06"],

Cell[BoxData["15.000180255581252`"], "Output",
 CellChangeTimes->{{3.7024014094415035`*^9, 3.7024014477226925`*^9}, 
   3.7027295345252466`*^9, 3.7037023951123347`*^9, 3.703847388028371*^9, 
   3.703872777000537*^9, 3.7044733027777348`*^9, 3.704645574634121*^9, 
   3.7046463919818707`*^9, 3.704646482942073*^9, 3.704649868689727*^9, 
   3.704650146455614*^9, 3.7046502973982477`*^9, 3.704719472289825*^9, 
   3.7047299023073883`*^9, 3.704744259533574*^9, 3.704744583655113*^9, 
   3.7047450328448052`*^9, 3.704825977461687*^9, 3.7050857212941213`*^9, 
   3.7050859323341923`*^9, 3.705147972541689*^9, 3.70526289416383*^9, 
   3.7053364363004913`*^9, 3.7053478409588003`*^9, 3.705417360012063*^9, 
   3.7099226248065767`*^9, 3.71087455780986*^9, 3.7133728642723227`*^9, 
   3.713373388236652*^9, 3.7136434871016436`*^9, 3.716035687575499*^9, 
   3.717171244838092*^9, 3.717172821453122*^9, 3.73747686792862*^9, 
   3.737486325929719*^9, 3.739116642326764*^9, 3.7658281457687483`*^9, 
   3.76582843133962*^9, {3.765830740849605*^9, 3.7658308155238914`*^9}, {
   3.76583086279912*^9, 3.765830895960264*^9}, {3.765831285282982*^9, 
   3.7658312992823124`*^9}, 3.771172167879966*^9, 3.7726277315717497`*^9, 
   3.811634461200471*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"229c168b-e544-4f18-962a-84f14593a319"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Gamma]=0", "Subchapter",
 CellChangeTimes->{{3.7658297991029167`*^9, 3.7658298012631054`*^9}, 
   3.765829915027057*^9},ExpressionUUID->"c135caf2-1b10-48b8-8bf3-\
ba5f19a948ee"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TvP4", "[", "\[Gamma]", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{
   RowBox[{"TvP3", "[", "\[Gamma]", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"Power", "::", "infy"}], "]"}], ";", 
  RowBox[{"Off", "[", 
   RowBox[{"Infinity", "::", "indet"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "list", ",", "list1", ",", "list3", ",", "list4", ",", "EIT", ",", "ABS", 
     ",", "EIT1", ",", "ABS1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"list", "=", 
       RowBox[{"Lev3DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list1", "=", 
       RowBox[{"Lev3DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list3", "=", 
       RowBox[{"Lev4DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list4", "=", 
       RowBox[{"Lev4DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"EIT", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"EIT1", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ABS", "=", 
       RowBox[{
        RowBox[{"list1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list", ",", "EIT"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS1", "=", 
       RowBox[{
        RowBox[{"list4", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list3", ",", "EIT1"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TvP4", "[", "\[Gamma]", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"TvP4", "[", "\[Gamma]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1", "-", 
            RowBox[{"EIT1", "/", "ABS1"}]}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TvP3", "[", "\[Gamma]", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"TvP3", "[", "\[Gamma]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1", "-", 
            RowBox[{"EIT", "/", "ABS"}]}]}], "}"}]}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0", ",", "100", ",", "10"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.765829089641389*^9, 3.7658292318963723`*^9}, {
  3.7658292853196664`*^9, 3.7658292871639733`*^9}, {3.7658293320655184`*^9, 
  3.7658294847660823`*^9}, {3.765829757651656*^9, 3.7658297653284125`*^9}, {
  3.7658299219744377`*^9, 3.7658299667544694`*^9}, {3.7658300840041547`*^9, 
  3.7658301261594133`*^9}, {3.765830210826744*^9, 3.7658303345335846`*^9}, {
  3.7658304859698343`*^9, 3.7658305295086613`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"352dd104-99f1-41b7-a702-42e1b5a5f577"],

Cell[BoxData[
 TemplateBox[{
  "General", "ovfl", "\"Overflow occurred in computation.\"", 2, 140, 53, 
   20751890711878765395, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8116344619817157`*^9},
 CellLabel->
  "During evaluation of \
In[137]:=",ExpressionUUID->"49262d22-b365-47c7-acfd-f1f89b425d8c"],

Cell[BoxData[
 TemplateBox[{
  "General", "ovfl", "\"Overflow occurred in computation.\"", 2, 140, 54, 
   20751890711878765395, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811634462075466*^9},
 CellLabel->
  "During evaluation of \
In[137]:=",ExpressionUUID->"ccbf3626-d13f-49f0-b77a-a41db3f889d5"],

Cell[BoxData[
 TemplateBox[{
  "General", "ovfl", "\"Overflow occurred in computation.\"", 2, 140, 55, 
   20751890711878765395, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8116344623723392`*^9},
 CellLabel->
  "During evaluation of \
In[137]:=",ExpressionUUID->"13ed9950-26a8-48df-8fc3-3211177e8ed8"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \
\\\"::\\\", \\\"ovfl\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 140, 56, 20751890711878765395, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8116344623723392`*^9},
 CellLabel->
  "During evaluation of \
In[137]:=",ExpressionUUID->"21466c65-533b-41fb-b3f1-070005d14a76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"LineLegend", "[", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Darker", "[", "Red", "]"}], ",", "Blue", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Darker", "[", "Gray", "]"}], ",", "Dashed"}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<4 Level\>\"", ",", 
         RowBox[{"Darker", "[", "Red", "]"}]}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<3 Level\>\"", ",", "Blue"}], "]"}]}], "}"}], ",", 
     RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"TvP4", "[", "\[Gamma]", "]"}], ",", 
     RowBox[{"TvP3", "[", "\[Gamma]", "]"}]}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "40", "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"legend", ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "Center"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Blue"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Black", ",", 
        "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Power (mW)\>\"", ",", "50", ",", "Black"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Transparancy\>\"", ",", "50", ",", "Black"}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.1"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.765829631536768*^9, 3.765829632743741*^9}, {
  3.7658296806517997`*^9, 3.765829681665415*^9}, {3.7658297444089584`*^9, 
  3.7658297536539*^9}, {3.7658301588193398`*^9, 3.76583016469881*^9}, {
  3.7658304774870143`*^9, 3.7658304776901264`*^9}, {3.7658305163681355`*^9, 
  3.7658305187534957`*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"305232fc-ed5d-4b24-b1f4-f7b1a228a899"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
       0.012833333333333334`], AbsoluteThickness[3], 
       LineBox[{{0., 0.}, {10., 1.}, {20., 1.}, {30., 1.}, {40., 1.}, {50., 
        1.}, {60., 1.}, {70., 1.}, {80., 1.}, {90., 1.}, {100., 1.}}]}, 
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       3], LineBox[{{0., 0.}, {10., 1.}, {20., 1.0063554513944468`}, {30., 
        1.}, {40., 1.0062746169917876`}, {50., 1.0068610615621654`}, {60., 
        1.0061948025831648`}, {70., 1.}, {80., 1.006115995284056}, {90., 
        1.}, {100., 1.0066628646920235`}}]}}, {{}, {}}}, InsetBox[
     TemplateBox[{
       StyleBox["\"4 Level\"", 
        RGBColor[
         Rational[2, 3], 0, 0], StripOnInput -> False], 
       StyleBox["\"3 Level\"", 
        RGBColor[0, 0, 1], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontSize -> 45, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0", ",", "0"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.33333333333333337`", ",", 
                    "0.33333333333333337`", ",", "0.33333333333333337`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}]}], "]"}]& )], 
     Scaled[{0.99, 0.5}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"Transparancy\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Power (mW)\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
   FrameTicks->{{True, True}, {True, True}},
   FrameTicksStyle->Directive[40],
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->1020,
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 200}, {0, 1.1}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[
           Rational[2, 3], 0, 0]], 
         Line[{{0., 0.}, {10., 1.}, {20., 1.}, {30., 1.}, {40., 1.}, {50., 
          1.}, {60., 1.}, {70., 1.}, {80., 1.}, {90., 1.}, {100., 1.}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 1]], 
         Line[{{0., 0.}, {10., 1.}, {20., 1.0063554513944468`}, {30., 1.}, {
          40., 1.0062746169917876`}, {50., 1.0068610615621654`}, {60., 
          1.0061948025831648`}, {70., 1.}, {80., 1.006115995284056}, {90., 
          1.}, {100., 1.0066628646920235`}}]}}}, {{}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {False, False}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["Transparancy", 50, 
          GrayLevel[0]], None}, {
         Style["Power (mW)", 50, 
          GrayLevel[0]], None}}, FrameTicks -> {{True, True}, {True, True}}, 
      FrameTicksStyle -> Directive[40], GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 200}, {0, 1.1}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[
          Rational[2, 3], 0, 0], 
         AbsoluteThickness[10]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[10]], 
        Directive[{
          RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
          Dashing[{Small, Small}]}, 
         AbsoluteThickness[10]]}, {
        Style["4 Level", 
         RGBColor[
          Rational[2, 3], 0, 0]], 
        Style["3 Level", 
         RGBColor[0, 0, 1]]}, Joined -> {True, True}, 
       LabelStyle -> {FontSize -> 45}, LegendFunction -> "Frame", 
       LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       LegendMarkerSize -> Large]], {Right, Center}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7658291811412697`*^9, 3.765829199257653*^9}, {
   3.765829647521124*^9, 3.7658296819967103`*^9}, {3.7658297451569653`*^9, 
   3.7658297539095774`*^9}, 3.7658298107230415`*^9, 3.765829904553975*^9, 
   3.765830181677425*^9, 3.7658303639720573`*^9, 3.7658304779573884`*^9, 
   3.765830558574026*^9, 3.811634486231606*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"30ef59a9-afe5-45f6-9a0e-69fb4fe8ee19"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Gamma]=0.1", "Subchapter",
 CellChangeTimes->{{3.7658297991029167`*^9, 3.7658298012631054`*^9}, 
   3.765829915027057*^9, {3.7658305440638323`*^9, 3.7658305445959687`*^9}, {
   3.76583059158514*^9, 
   3.7658305925543447`*^9}},ExpressionUUID->"c05c4d7f-c6fc-4dc4-9294-\
3d4fa9938762"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"0.1", "*", "5.750056"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TvP4", "[", "\[Gamma]", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{
   RowBox[{"TvP3", "[", "\[Gamma]", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"Power", "::", "infy"}], "]"}], ";", 
  RowBox[{"Off", "[", 
   RowBox[{"Infinity", "::", "indet"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "list", ",", "list1", ",", "list3", ",", "list4", ",", "EIT", ",", "ABS", 
     ",", "EIT1", ",", "ABS1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"list", "=", 
       RowBox[{"Lev3DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list1", "=", 
       RowBox[{"Lev3DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list3", "=", 
       RowBox[{"Lev4DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list4", "=", 
       RowBox[{"Lev4DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"EIT", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"EIT1", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ABS", "=", 
       RowBox[{
        RowBox[{"list1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list", ",", "EIT"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS1", "=", 
       RowBox[{
        RowBox[{"list4", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list3", ",", "EIT1"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TvP4", "[", "\[Gamma]", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"TvP4", "[", "\[Gamma]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1", "-", 
            RowBox[{"EIT1", "/", "ABS1"}]}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TvP3", "[", "\[Gamma]", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"TvP3", "[", "\[Gamma]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1", "-", 
            RowBox[{"EIT", "/", "ABS"}]}]}], "}"}]}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0", ",", "200", ",", "10"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.765829089641389*^9, 3.7658292318963723`*^9}, {
  3.7658292853196664`*^9, 3.7658292871639733`*^9}, {3.7658293320655184`*^9, 
  3.7658294847660823`*^9}, {3.765829757651656*^9, 3.7658297653284125`*^9}, {
  3.7658299219744377`*^9, 3.7658299667544694`*^9}, {3.7658300840041547`*^9, 
  3.7658301261594133`*^9}, {3.765830210826744*^9, 3.7658303345335846`*^9}, {
  3.7658304859698343`*^9, 3.7658305295086613`*^9}, {3.765830564361416*^9, 
  3.7658305952136946`*^9}, {3.765882167306618*^9, 3.7658821677966557`*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"eb4c932e-2934-4c7b-93ef-b8697b683045"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"713.1718366080313`\\\"}], \\\"-\\\", RowBox[{\\\"383.0397823249889`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\"]\\\"}]\\) is too small to \
represent as a normalized machine number; precision may be lost.\"", 2, 146, 
   57, 20751890711878765395, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8116345041949177`*^9},
 CellLabel->
  "During evaluation of \
In[143]:=",ExpressionUUID->"497fd8b5-d92f-4be8-b3b8-9d98526cdafa"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"730.0878879640799`\\\"}], \\\"-\\\", RowBox[{\\\"361.5433875296701`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\"]\\\"}]\\) is too small to \
represent as a normalized machine number; precision may be lost.\"", 2, 146, 
   58, 20751890711878765395, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8116345042105427`*^9},
 CellLabel->
  "During evaluation of \
In[143]:=",ExpressionUUID->"560af1ff-fe59-429f-a981-2bb0b373c87f"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"746.0684492959174`\\\"}], \\\"-\\\", RowBox[{\\\"339.00477198377973`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\"]\\\"}]\\) is too small to \
represent as a normalized machine number; precision may be lost.\"", 2, 146, 
   59, 20751890711878765395, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8116345042105427`*^9},
 CellLabel->
  "During evaluation of \
In[143]:=",ExpressionUUID->"19e8a4a7-167f-4903-8f0b-0d3199fdab38"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \
\\\"::\\\", \\\"munfl\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 146, 60, 20751890711878765395, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8116345042261677`*^9},
 CellLabel->
  "During evaluation of \
In[143]:=",ExpressionUUID->"7796da71-9790-4e1a-a6d5-0e572e9e3d88"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7711721869434896`*^9, 3.8116345287095766`*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"2a7d21c8-39b9-4ec5-80b3-f9a09ab56b25"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"LineLegend", "[", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Darker", "[", "Red", "]"}], ",", "Blue", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Darker", "[", "Gray", "]"}], ",", "Dashed"}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<4 Level\>\"", ",", 
         RowBox[{"Darker", "[", "Red", "]"}]}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<3 Level\>\"", ",", "Blue"}], "]"}]}], "}"}], ",", 
     RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"TvP4", "[", "\[Gamma]", "]"}], ",", 
     RowBox[{"TvP3", "[", "\[Gamma]", "]"}]}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "40", "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"legend", ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "Center"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Blue"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Black", ",", 
        "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Power (mW)\>\"", ",", "50", ",", "Black"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Transparancy\>\"", ",", "50", ",", "Black"}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.0"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.765829631536768*^9, 3.765829632743741*^9}, {
  3.7658296806517997`*^9, 3.765829681665415*^9}, {3.7658297444089584`*^9, 
  3.7658297536539*^9}, {3.7658301588193398`*^9, 3.76583016469881*^9}, {
  3.7658304774870143`*^9, 3.7658304776901264`*^9}, {3.7658305163681355`*^9, 
  3.7658305187534957`*^9}, {3.7658821795713625`*^9, 
  3.7658821990397167`*^9}},ExpressionUUID->"0af0c5be-94d9-40b7-a824-\
67126934a7bc"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
       0.012833333333333334`], AbsoluteThickness[3], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjR2oOERvefjLwuWxPYRv4vAgKqk5lOc5lG/n8CSn
8+Sf0y+gfBeHyBvzvAuvvITyPR0ePL4v8qnlFZTv59DHWPvxLPNrCL8h0KGi
OIljbTKUzxDisGT5jpyz62DyYQ5m/09lh7yGyUc63FawO64k+wYqH+1gdM8/
9a4blM8Q57BzjeDtgCwo3yHBofr739OXOmDqEx3aZr3MCV8M5R9Icui91bF7
5i6Y/hSH1/Ol6zXPw/SnOjxddU2h/CFMf5pD7Pb087c/wvSnO3SbGu5dyPAW
qj/TYe69wt5/vG/tAYQVbNg=
        "]]}, 
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       3], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjR2oOPw7drbWpPuOPYRv4tAcmXVZIPoJlG/nICfF
2/K/5jmU7+LQ1xXoIxXxEsr3dCi7JXfKu+8VlO/n8Om/4SnP9NcQfkOgw+v+
6Flf2N5A5UMcls8J/yncCOU3hDk4fD6wN+YhTD7Sge30jhOq+m+h8tEOfX4n
PB3zoXyGOIdti99t+bkEyndIcDiyYcGTBZdg6hMdahRYuJ/+hPIPJDm4s9br
s8q8g+pPcfA0tD3yyRLKd0h1eGtVdzo9BMpvSHMwOVMv/z0byj+Q7vBu5rRV
go0w/ZkO0UI3ukWnvLMHAKxUZZ4=
        "]]}}, {}, {}, {{}, {}}}, InsetBox[
     TemplateBox[{
       StyleBox["\"4 Level\"", 
        RGBColor[
         Rational[2, 3], 0, 0], StripOnInput -> False], 
       StyleBox["\"3 Level\"", 
        RGBColor[0, 0, 1], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontSize -> 45, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[2/3, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.33333333333333337, 0.33333333333333337, \
0.33333333333333337]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}]}], "]"}]& )], 
     Scaled[{0.99, 0.5}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"Transparancy\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Power (mW)\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
   FrameTicks->{{True, True}, {True, True}},
   FrameTicksStyle->Directive[40],
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->1020,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 200}, {0, 1.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[
           Rational[2, 3], 0, 0]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjR2oOERvefjLwuWxPYRv4vAgKqk5lOc5lG/n8CSn
8+Sf0y+gfBeHyBvzvAuvvITyPR0ePL4v8qnlFZTv59DHWPvxLPNrCL8h0KGi
OIljbTKUzxDisGT5jpyz62DyYQ5m/09lh7yGyUc63FawO64k+wYqH+1gdM8/
9a4blM8Q57BzjeDtgCwo3yHBofr739OXOmDqEx3aZr3MCV8M5R9Icui91bF7
5i6Y/hSH1/Ol6zXPw/SnOjxddU2h/CFMf5pD7Pb087c/wvSnO3SbGu5dyPAW
qj/TYe69wt5/vG/tAYQVbNg=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjR2oOPw7drbWpPuOPYRv4tAcmXVZIPoJlG/nICfF
2/K/5jmU7+LQ1xXoIxXxEsr3dCi7JXfKu+8VlO/n8Om/4SnP9NcQfkOgw+v+
6Flf2N5A5UMcls8J/yncCOU3hDk4fD6wN+YhTD7Sge30jhOq+m+h8tEOfX4n
PB3zoXyGOIdti99t+bkEyndIcDiyYcGTBZdg6hMdahRYuJ/+hPIPJDm4s9br
s8q8g+pPcfA0tD3yyRLKd0h1eGtVdzo9BMpvSHMwOVMv/z0byj+Q7vBu5rRV
go0w/ZkO0UI3ukWnvLMHAKxUZZ4=
          "]]}}}, {}, {}, {{}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      AxesOrigin -> {0, 0}, PlotRange -> {{0, 200}, {0, 1.}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {False, False}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["Transparancy", 50, 
          GrayLevel[0]], None}, {
         Style["Power (mW)", 50, 
          GrayLevel[0]], None}}, FrameTicks -> {{True, True}, {True, True}}, 
      FrameTicksStyle -> Directive[40], GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 200}, {0, 1.}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[
          Rational[2, 3], 0, 0], 
         AbsoluteThickness[10]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[10]], 
        Directive[{
          RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
          Dashing[{Small, Small}]}, 
         AbsoluteThickness[10]]}, {
        Style["4 Level", 
         RGBColor[
          Rational[2, 3], 0, 0]], 
        Style["3 Level", 
         RGBColor[0, 0, 1]]}, Joined -> {True, True}, 
       LabelStyle -> {FontSize -> 45}, LegendFunction -> "Frame", 
       LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       LegendMarkerSize -> Large]], {Right, Center}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7658291811412697`*^9, 3.765829199257653*^9}, {
   3.765829647521124*^9, 3.7658296819967103`*^9}, {3.7658297451569653`*^9, 
   3.7658297539095774`*^9}, 3.7658298107230415`*^9, 3.765829904553975*^9, 
   3.765830181677425*^9, 3.7658303639720573`*^9, 3.7658304779573884`*^9, 
   3.765830613439003*^9, {3.765882236077614*^9, 
   3.7658822362098217`*^9}},ExpressionUUID->"e1ed8b2d-f9a1-48a8-9c8e-\
3c8bbea52934"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Gamma]=0.25", "Subchapter",
 CellChangeTimes->{{3.7658297991029167`*^9, 3.7658298012631054`*^9}, 
   3.765829915027057*^9, {3.7658305440638323`*^9, 3.7658305445959687`*^9}, {
   3.76583059158514*^9, 3.7658305925543447`*^9}, {3.7658314166089573`*^9, 
   3.7658314170147433`*^9}},ExpressionUUID->"0a791ea4-b0aa-4d29-8fcd-\
cdfa4b00aea6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"p", "=", "200"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"Lev3DoppTestsc", "[", 
    RowBox[{"50", ",", 
     RowBox[{"p", "/", "1000"}], ",", 
     RowBox[{"1", "/", "1000"}], ",", 
     RowBox[{"\[Gamma]", "*", 
      RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list1", "=", 
   RowBox[{"Lev3DoppTestsc", "[", 
    RowBox[{"50", ",", 
     RowBox[{"0", "/", "1000"}], ",", 
     RowBox[{"1", "/", "1000"}], ",", 
     RowBox[{"\[Gamma]", "*", 
      RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list3", "=", 
   RowBox[{"Lev4DoppTestsc", "[", 
    RowBox[{"50", ",", 
     RowBox[{"p", "/", "1000"}], ",", 
     RowBox[{"1", "/", "1000"}], ",", 
     RowBox[{"\[Gamma]", "*", 
      RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list4", "=", 
   RowBox[{"Lev4DoppTestsc", "[", 
    RowBox[{"50", ",", 
     RowBox[{"0", "/", "1000"}], ",", 
     RowBox[{"1", "/", "1000"}], ",", 
     RowBox[{"\[Gamma]", "*", 
      RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"{", 
   RowBox[{"list3", ",", "list4"}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"EIT", "=", 
  RowBox[{"Min", "[", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"list", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], "]"}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EIT1", "=", 
   RowBox[{"Min", "[", 
    RowBox[{"DeleteCases", "[", 
     RowBox[{
      RowBox[{"list3", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
     "]"}], "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ABS", "=", 
  RowBox[{
   RowBox[{"list1", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"list", ",", "EIT"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ABS1", "=", 
  RowBox[{
   RowBox[{"list4", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"list3", ",", "EIT1"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.811635659908209*^9, 3.8116358045272336`*^9}, {
  3.8116358927788196`*^9, 3.8116358955783668`*^9}, {3.8116359467066765`*^9, 
  3.81163594748135*^9}, {3.811636157751419*^9, 3.8116362014420977`*^9}, {
  3.8116363153544683`*^9, 3.8116363181938963`*^9}, {3.8116363520383935`*^9, 
  3.811636364374763*^9}, {3.812154864054277*^9, 3.812154870798395*^9}, {
  3.8121585639073343`*^9, 3.8121585646540127`*^9}},
 CellLabel->
  "In[1524]:=",ExpressionUUID->"ae437aac-d937-43f5-a706-9bd9c5063a48"],

Cell[BoxData["200"], "Output",
 CellChangeTimes->{{3.811635674414415*^9, 3.8116358058564434`*^9}, {
   3.8116358859405923`*^9, 3.811635895899659*^9}, {3.8116359307703934`*^9, 
   3.811635947685536*^9}, 3.8116360707733912`*^9, {3.8116361083060026`*^9, 
   3.811636201602244*^9}, {3.811636260481361*^9, 3.8116362728785067`*^9}, {
   3.8116363128672047`*^9, 3.811636318512751*^9}, {3.8116363497883453`*^9, 
   3.8116363783130536`*^9}, 3.8121522453500834`*^9, 3.812152311730302*^9, 
   3.8121532064376593`*^9, {3.8121548648399878`*^9, 3.812154871184746*^9}, {
   3.812154912367817*^9, 3.812154937518106*^9}, 3.812158520798214*^9, 
   3.8121585649973235`*^9, 3.8121586012322063`*^9, 3.812158637563177*^9},
 CellLabel->
  "Out[1524]=",ExpressionUUID->"f5ea470a-055d-4879-a16c-ff37b06f82ba"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
jVrAw3502ZbSo1jjo8MeuNQCfwFFVB6Y
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.01, 0.014960000000000005`}, {0, 0.000020433943930356038`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.811635674414415*^9, 3.8116358058564434`*^9}, {
   3.8116358859405923`*^9, 3.811635895899659*^9}, {3.8116359307703934`*^9, 
   3.811635947685536*^9}, 3.8116360707733912`*^9, {3.8116361083060026`*^9, 
   3.811636201602244*^9}, {3.811636260481361*^9, 3.8116362728785067`*^9}, {
   3.8116363128672047`*^9, 3.811636318512751*^9}, {3.8116363497883453`*^9, 
   3.8116363783130536`*^9}, 3.8121522453500834`*^9, 3.812152311730302*^9, 
   3.8121532064376593`*^9, {3.8121548648399878`*^9, 3.812154871184746*^9}, {
   3.812154912367817*^9, 3.812154937518106*^9}, 3.812158520798214*^9, 
   3.8121585649973235`*^9, 3.8121586012322063`*^9, 3.8121586377933865`*^9},
 CellLabel->
  "Out[1529]=",ExpressionUUID->"ed6b1f50-1dc6-4892-a715-bc8d6512ae77"],

Cell[BoxData["1.9875539789012824`*^-6"], "Output",
 CellChangeTimes->{{3.811635674414415*^9, 3.8116358058564434`*^9}, {
   3.8116358859405923`*^9, 3.811635895899659*^9}, {3.8116359307703934`*^9, 
   3.811635947685536*^9}, 3.8116360707733912`*^9, {3.8116361083060026`*^9, 
   3.811636201602244*^9}, {3.811636260481361*^9, 3.8116362728785067`*^9}, {
   3.8116363128672047`*^9, 3.811636318512751*^9}, {3.8116363497883453`*^9, 
   3.8116363783130536`*^9}, 3.8121522453500834`*^9, 3.812152311730302*^9, 
   3.8121532064376593`*^9, {3.8121548648399878`*^9, 3.812154871184746*^9}, {
   3.812154912367817*^9, 3.812154937518106*^9}, 3.812158520798214*^9, 
   3.8121585649973235`*^9, 3.8121586012322063`*^9, 3.8121586377993917`*^9},
 CellLabel->
  "Out[1530]=",ExpressionUUID->"60371b9a-aecc-4994-b56b-a2565a095af8"],

Cell[BoxData["2.509323104215796`*^-6"], "Output",
 CellChangeTimes->{{3.811635674414415*^9, 3.8116358058564434`*^9}, {
   3.8116358859405923`*^9, 3.811635895899659*^9}, {3.8116359307703934`*^9, 
   3.811635947685536*^9}, 3.8116360707733912`*^9, {3.8116361083060026`*^9, 
   3.811636201602244*^9}, {3.811636260481361*^9, 3.8116362728785067`*^9}, {
   3.8116363128672047`*^9, 3.811636318512751*^9}, {3.8116363497883453`*^9, 
   3.8116363783130536`*^9}, 3.8121522453500834`*^9, 3.812152311730302*^9, 
   3.8121532064376593`*^9, {3.8121548648399878`*^9, 3.812154871184746*^9}, {
   3.812154912367817*^9, 3.812154937518106*^9}, 3.812158520798214*^9, 
   3.8121585649973235`*^9, 3.8121586012322063`*^9, 3.8121586378043966`*^9},
 CellLabel->
  "Out[1531]=",ExpressionUUID->"8a77dfd7-d543-46cd-82ad-6f960b625ab9"],

Cell[BoxData["0.00002019705859365758`"], "Output",
 CellChangeTimes->{{3.811635674414415*^9, 3.8116358058564434`*^9}, {
   3.8116358859405923`*^9, 3.811635895899659*^9}, {3.8116359307703934`*^9, 
   3.811635947685536*^9}, 3.8116360707733912`*^9, {3.8116361083060026`*^9, 
   3.811636201602244*^9}, {3.811636260481361*^9, 3.8116362728785067`*^9}, {
   3.8116363128672047`*^9, 3.811636318512751*^9}, {3.8116363497883453`*^9, 
   3.8116363783130536`*^9}, 3.8121522453500834`*^9, 3.812152311730302*^9, 
   3.8121532064376593`*^9, {3.8121548648399878`*^9, 3.812154871184746*^9}, {
   3.812154912367817*^9, 3.812154937518106*^9}, 3.812158520798214*^9, 
   3.8121585649973235`*^9, 3.8121586012322063`*^9, 3.8121586378083997`*^9},
 CellLabel->
  "Out[1532]=",ExpressionUUID->"96524bf4-7c0d-44e6-82c7-a6ba990de7d2"],

Cell[BoxData["0.000019920588448551536`"], "Output",
 CellChangeTimes->{{3.811635674414415*^9, 3.8116358058564434`*^9}, {
   3.8116358859405923`*^9, 3.811635895899659*^9}, {3.8116359307703934`*^9, 
   3.811635947685536*^9}, 3.8116360707733912`*^9, {3.8116361083060026`*^9, 
   3.811636201602244*^9}, {3.811636260481361*^9, 3.8116362728785067`*^9}, {
   3.8116363128672047`*^9, 3.811636318512751*^9}, {3.8116363497883453`*^9, 
   3.8116363783130536`*^9}, 3.8121522453500834`*^9, 3.812152311730302*^9, 
   3.8121532064376593`*^9, {3.8121548648399878`*^9, 3.812154871184746*^9}, {
   3.812154912367817*^9, 3.812154937518106*^9}, 3.812158520798214*^9, 
   3.8121585649973235`*^9, 3.8121586012322063`*^9, 3.812158637813404*^9},
 CellLabel->
  "Out[1533]=",ExpressionUUID->"a279c752-7212-42f8-a467-4d642163262a"]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{
  3.812153804744419*^9},ExpressionUUID->"ab548791-7657-495f-852b-\
c36c883cc65a"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.811635984669612*^9, 
  3.8116360439354067`*^9}},ExpressionUUID->"6aebef9c-d636-4096-83ac-\
8854696b5279"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.007`"}], ",", 
   RowBox[{"-", "0.00674`"}], ",", 
   RowBox[{"-", "0.0064800000000000005`"}], ",", 
   RowBox[{"-", "0.00622`"}], ",", 
   RowBox[{"-", "0.00596`"}], ",", 
   RowBox[{"-", "0.0057`"}], ",", 
   RowBox[{"-", "0.00544`"}], ",", 
   RowBox[{"-", "0.005180000000000001`"}], ",", 
   RowBox[{"-", "0.004920000000000001`"}], ",", 
   RowBox[{"-", "0.004660000000000001`"}], ",", 
   RowBox[{"-", "0.0044`"}], ",", 
   RowBox[{"-", "0.0041400000000000005`"}], ",", 
   RowBox[{"-", "0.0038800000000000006`"}], ",", 
   RowBox[{"-", "0.0036200000000000004`"}], ",", 
   RowBox[{"-", "0.0033600000000000006`"}], ",", 
   RowBox[{"-", "0.0031000000000000003`"}], ",", 
   RowBox[{"-", "0.0028400000000000005`"}], ",", 
   RowBox[{"-", "0.0025800000000000007`"}], ",", 
   RowBox[{"-", "0.002320000000000001`"}], ",", 
   RowBox[{"-", "0.00206`"}], ",", 
   RowBox[{"-", "0.0018000000000000004`"}], ",", 
   RowBox[{"-", "0.0015400000000000006`"}], ",", 
   RowBox[{"-", "0.0012800000000000008`"}], ",", 
   RowBox[{"-", "0.001020000000000001`"}], ",", "0.0010599999999999993`", ",",
    "0.0013199999999999991`", ",", "0.001579999999999999`", ",", 
   "0.0018399999999999988`", ",", "0.0020999999999999986`", ",", 
   "0.0023599999999999984`", ",", "0.002619999999999998`", ",", 
   "0.0028799999999999997`", ",", "0.0031399999999999996`", ",", 
   "0.0033999999999999994`", ",", "0.003659999999999999`", ",", 
   "0.003919999999999999`", ",", "0.004179999999999999`", ",", 
   "0.004439999999999999`", ",", "0.0046999999999999984`", ",", 
   "0.004959999999999998`", ",", "0.005219999999999998`", ",", 
   "0.005479999999999998`", ",", "0.0057399999999999994`", ",", 
   "0.005999999999999999`", ",", "0.006259999999999999`", ",", 
   "0.006519999999999999`", ",", "0.006779999999999999`"}], "}"}]], "Output",
 CellChangeTimes->{{3.811636019164014*^9, 3.811636041735404*^9}},
 CellLabel->
  "Out[327]=",ExpressionUUID->"ff7b70b5-cac0-4505-86b4-42920958177f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"0.25", "*", "5.750056"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TvP4", "[", "\[Gamma]", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{
   RowBox[{"TvP3", "[", "\[Gamma]", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"Power", "::", "infy"}], "]"}], ";", 
  RowBox[{"Off", "[", 
   RowBox[{"Infinity", "::", "indet"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "list", ",", "list1", ",", "list3", ",", "list4", ",", "EIT", ",", "ABS", 
     ",", "EIT1", ",", "ABS1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"list", "=", 
       RowBox[{"Lev3DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list1", "=", 
       RowBox[{"Lev3DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list3", "=", 
       RowBox[{"Lev4DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list4", "=", 
       RowBox[{"Lev4DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"EIT", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"EIT1", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ABS", "=", 
       RowBox[{
        RowBox[{"list1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list", ",", "EIT"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS1", "=", 
       RowBox[{
        RowBox[{"list4", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list3", ",", "EIT1"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TvP4", "[", "\[Gamma]", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"TvP4", "[", "\[Gamma]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1", "-", 
            RowBox[{"EIT1", "/", "ABS1"}]}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TvP3", "[", "\[Gamma]", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"TvP3", "[", "\[Gamma]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1", "-", 
            RowBox[{"EIT", "/", "ABS"}]}]}], "}"}]}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0", ",", "200", ",", "2"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.765829089641389*^9, 3.7658292318963723`*^9}, {
   3.7658292853196664`*^9, 3.7658292871639733`*^9}, {3.7658293320655184`*^9, 
   3.7658294847660823`*^9}, {3.765829757651656*^9, 3.7658297653284125`*^9}, {
   3.7658299219744377`*^9, 3.7658299667544694`*^9}, {3.7658300840041547`*^9, 
   3.7658301261594133`*^9}, {3.765830210826744*^9, 3.7658303345335846`*^9}, {
   3.7658304859698343`*^9, 3.7658305295086613`*^9}, {3.765830564361416*^9, 
   3.7658305952136946`*^9}, {3.7658314187015557`*^9, 3.765831433576153*^9}, {
   3.776600145364727*^9, 3.7766001646088257`*^9}, {3.776600779137615*^9, 
   3.7766007793094244`*^9}, 3.776600863034094*^9, {3.812147938447995*^9, 
   3.812147938991488*^9}, {3.8121493973952727`*^9, 3.81214940138787*^9}, {
   3.8121521224859734`*^9, 3.812152122990431*^9}, {3.8121521608753366`*^9, 
   3.8121521644826107`*^9}, {3.8121527530688763`*^9, 3.812152753450222*^9}},
 CellLabel->
  "In[1534]:=",ExpressionUUID->"0456a67d-93db-497e-b973-ba312a7a891d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"LineLegend", "[", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Darker", "[", "Red", "]"}], ",", "Blue", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Darker", "[", "Gray", "]"}], ",", "Dashed"}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<4 Level\>\"", ",", 
         RowBox[{"Darker", "[", "Red", "]"}]}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<3 Level\>\"", ",", "Blue"}], "]"}]}], "}"}], ",", 
     RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"tp1", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"TvP4", "[", "\[Gamma]", "]"}], ",", 
      RowBox[{"TvP3", "[", "\[Gamma]", "]"}]}], "}"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", "40", "]"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{"legend", ",", 
       RowBox[{"{", 
        RowBox[{"Right", ",", "0.4"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
         RowBox[{"Darker", "[", "Red", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Blue"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Black", ",", 
         "Dashed"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Power (mW)\>\"", ",", "50", ",", "Black"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Transparancy\>\"", ",", "50", ",", "Black"}], "]"}]}], 
      "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "200"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1.0"}], "}"}]}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.765829631536768*^9, 3.765829632743741*^9}, {
  3.7658296806517997`*^9, 3.765829681665415*^9}, {3.7658297444089584`*^9, 
  3.7658297536539*^9}, {3.7658301588193398`*^9, 3.76583016469881*^9}, {
  3.7658304774870143`*^9, 3.7658304776901264`*^9}, {3.7658305163681355`*^9, 
  3.7658305187534957`*^9}, {3.7658340431172915`*^9, 3.7658340437752233`*^9}, {
  3.765882203339857*^9, 3.7658822076022067`*^9}, {3.8116347218579006`*^9, 
  3.811634721966942*^9}, {3.8121479791079683`*^9, 3.8121480106723356`*^9}, {
  3.8121548469692163`*^9, 3.8121548473155317`*^9}, {3.8121585443265653`*^9, 
  3.8121585447029066`*^9}},
 CellLabel->
  "In[1538]:=",ExpressionUUID->"79e8331b-e1e3-4e10-95a4-11f9131b1cd1"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
       0.009166666666666668], AbsoluteThickness[3], LineBox[CompressedData["
1:eJx1y38wF3Ycx/HvOnQbZ0hWK7J0adUVMteMvPIjPwtfXyQ/vl/f32wSRreJ
Wb40SkPbdwqN7/zMdWJhJ99FdpoW+fFdOcqmld+G78Zcm7Pt9nn/uc/d5z73
uNfn+YYwnitZx+FwJP/cf9//OciQ9BucOt/h8h+NIC/lLqg4vcybkBh6eadl
2yCzJd5PW7W2THrEvAMGvg0TTsnDzLvgykmpa15+zLwXiT3S/gLjn5htcDbf
eCE78WdmO1zraVyrcRpjtsfOxsvmefNkBwztkxl9ePEp80HUzN4dPbnlF2ZH
KD8t9rAvJTtBVlTh7W/8jPkQ1KlzcSWpZIA/7mIlekI+jFkzvYoch+fMrkj7
I9PsRg7ZDdzh5ra6h2R3xJbq7SsxH2f2gEOhQlwoIB+B1jehd+0q2RMXJjvr
Y3vIXrCoecDp05lg9gbvT83nwwfJPij7ZL2eIobsi1DJyLGpL8h+4Kk8zox3
ko9CZ0OHOebIx3Du+2zdatNJZn9o4xerZY7kAHx8oDbJIIo5IwBDvdfjv/2I
9kBcSyrNbS6jPRCZR7wVD27TzkWS1q3K/wntXFxZaTz10gvag5ByNXE2duMU
24Nw1uTouoz9zBwe4u5tv9fqQzsPEX7eFpNC2oORvDR+YOUD2oPhmanRFObT
HoIOHf60cxXtIRisMApfaqU9FIPb/Ua6emkPhdpVqi56Svtx1Cv7XuEt0X4c
9nnhtl7rp9kehvvnI3fobmbOCINz39ciw920n8DIHuuSGEfaT8DiTbugbT60
h0OtnjGYD6M9HMsJAr0pOe0R8NrQ1R9wmvYIvN5ialiSRXsk2jOvKIWXaI/E
8qO75tVltEdh89t2h+Kv0x6FVZ3uudBW2vloatj1TUkX7XyM2tz8NWGAdgF0
tk4XvTXKDAF8VdPpRVP0X4C4dv53yt+Z2wXYbZjrZr9GfTRsbgrPLL48w/po
eN0qvWBjypwRDb61bdtrFszt0dAUVA4vWjNzhDj8m+KvLFvqhTAzyVnudqRe
iGFV07l2N+qF+Coq/8dBP+pFcG3ca5gVTL0IDRFD7vOR1IvAK7DqNJVSL8K8
xjMw9ST1Yrza5lMrTaFejI5neZUm6dSL0ZJenD2URb0Y3ID7dwLyqJcgV/1C
ePEz6iV4d3R1y6Vi6iUYe+9L8YCKegmaVIqEulrqpQgx9i73v0G9FO7lVlr9
FuqliPT/QT9HTb0UdwLrn2s6qZdhW4WsZ6Gbehl8eGm9rn3Uy5BcqVU6P6Re
hq1Vt3P1H1Mvx7iR2TuLY9TLsd/ALKZ8gno5BpSnC63nqJcjXnfPLYWW+hjU
blpL27gy4/I3/Xv15A==
        "]]}, 
      {RGBColor[0, 0, 1], PointSize[0.009166666666666668], AbsoluteThickness[
       3], LineBox[CompressedData["
1:eJx1y31MFHQcx/EbE0QSR1CC0hEImgkKu6Eg8vAhlSeJ4E7gOA7hHnmIhMEm
iE83DQGHKSnCeE4yAoOIJsghTggUUiNzeCAH0QFiJ8RjNdnAav6+f/bbfvvt
tc/vbSdN4SsMOByO4t/73/s/B2YRw27coTqf1zTDzavuJtcaWpmtwIlJ+NO/
vJPZFg4r7Q2mm3qYHSBsXh55IHjIvBWr1ssXtNaPmJ3QyXW0tEh+zOwCj9V3
g4cK+pl5KGmVCRYuaJhdoepMlQcmDjLvQnPQ7Nf3bIeY3ZEveBncf0vL7IFN
tY7Bx7xGmD1xJLtn/drqX5m9kb4m7YfFjFFmIE83Y/WuxW/MvuBrA9/hfEn+
AFLzLZ9lOeqY98KFW/VSVEfeh/tV5X1RdmPM+5EkNEriFpD9sPhFtH7PEtkf
ToKyPzxjxpkDILKvsS5VkwPh6lh3stt8gjkIzeHyHlsl+QB0wmyF8Q1yMMzV
JRl9r8gfQrM0+l2H3zPmENwI38h1OEf+CMFNAd07fySHYnzvqMBl9eRrq0Jx
2aajOMCXmROG1L8NVn2bSXsYrErjzC/W085Hl9lg/VujtPPh06I/IzV7znYB
jmuq+GXezCoBItKzt+uSaD+IxsD4trBC2g9it/LuJ0a3aQ/HorqyacME7eHQ
qXfbVZv8zvYIZJirrt7cwayKgN4wufBwGO2RKFp8NqNJoz0SM325YqNLtAsR
0p8TbtJEuxAPf3HwWuijPQpuooH0vinao3A+Nyv5G2M920UYcii9fcWeWSXC
RKq7W4kX7dHYELwy2RFBezTONPB2WqXQLsbzrFTdV2dpF+NzbohNRjntMZg7
YHK+4HvaY5CWHsFf6aH9EB7PCzZ2D9N+CMamGrvpOdpjob7M8T5h+ILtsXiv
xGvsmBUzJw5ardpxZhsz4pCvFA5rPel/HIZPbE0JCmG+E4e3TT5d5xVLvQT7
8tqrW1Ool8D8adaTrlPUS8CLbH9TdoF6CazXVuYUV1AvhbvTfdfEeuqluKho
GRtoo16Kw1uqnV/0Ui9FzRFJTrWGehmSKuecDSeol6HiqN7PYp56GTon27p+
XqFehuuNvSfxxhTr5bh0Xfq+wpIZcmyevhLla8+skqPx45mzmh3Md+RoEa8x
3eZBvQKzMZbb9+ynXoGOrqpMn1DqFch7MFI7IKJegUHeNckuBfVKZFUV5YpS
qFfi6a3Zeb+j1Ctx73i+ZPk09UoUn9OdPpVPfTzE2rmFnwqpjwcv08Z3uoL6
eKwTGEwO1VAfj8DNPEFZI/UJqH3117hzK/UJeBK9PF3UQX0ChJFLTf291CdA
rPZP1j+iPhFLsRl+msEpn38ABe/weg==
        "]]}}, {{}, {}}}, InsetBox[
     TemplateBox[{
       StyleBox["\"4 Level\"", 
        RGBColor[
         Rational[2, 3], 0, 0], StripOnInput -> False], 
       StyleBox["\"3 Level\"", 
        RGBColor[0, 0, 1], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontSize -> 45, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0", ",", "0"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.33333333333333337`", ",", 
                    "0.33333333333333337`", ",", "0.33333333333333337`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}]}], "]"}]& )], 
     Scaled[{0.99, 0.4}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"Transparancy\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Power (mW)\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
   FrameTicks->{{True, True}, {True, True}},
   FrameTicksStyle->Directive[40],
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->1020,
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 200}, {0, 1.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[3], 
          RGBColor[
           Rational[2, 3], 0, 0]], 
         Line[CompressedData["
1:eJx1y38wF3Ycx/HvOnQbZ0hWK7J0adUVMteMvPIjPwtfXyQ/vl/f32wSRreJ
Wb40SkPbdwqN7/zMdWJhJ99FdpoW+fFdOcqmld+G78Zcm7Pt9nn/uc/d5z73
uNfn+YYwnitZx+FwJP/cf9//OciQ9BucOt/h8h+NIC/lLqg4vcybkBh6eadl
2yCzJd5PW7W2THrEvAMGvg0TTsnDzLvgykmpa15+zLwXiT3S/gLjn5htcDbf
eCE78WdmO1zraVyrcRpjtsfOxsvmefNkBwztkxl9ePEp80HUzN4dPbnlF2ZH
KD8t9rAvJTtBVlTh7W/8jPkQ1KlzcSWpZIA/7mIlekI+jFkzvYoch+fMrkj7
I9PsRg7ZDdzh5ra6h2R3xJbq7SsxH2f2gEOhQlwoIB+B1jehd+0q2RMXJjvr
Y3vIXrCoecDp05lg9gbvT83nwwfJPij7ZL2eIobsi1DJyLGpL8h+4Kk8zox3
ko9CZ0OHOebIx3Du+2zdatNJZn9o4xerZY7kAHx8oDbJIIo5IwBDvdfjv/2I
9kBcSyrNbS6jPRCZR7wVD27TzkWS1q3K/wntXFxZaTz10gvag5ByNXE2duMU
24Nw1uTouoz9zBwe4u5tv9fqQzsPEX7eFpNC2oORvDR+YOUD2oPhmanRFObT
HoIOHf60cxXtIRisMApfaqU9FIPb/Ua6emkPhdpVqi56Svtx1Cv7XuEt0X4c
9nnhtl7rp9kehvvnI3fobmbOCINz39ciw920n8DIHuuSGEfaT8DiTbugbT60
h0OtnjGYD6M9HMsJAr0pOe0R8NrQ1R9wmvYIvN5ialiSRXsk2jOvKIWXaI/E
8qO75tVltEdh89t2h+Kv0x6FVZ3uudBW2vloatj1TUkX7XyM2tz8NWGAdgF0
tk4XvTXKDAF8VdPpRVP0X4C4dv53yt+Z2wXYbZjrZr9GfTRsbgrPLL48w/po
eN0qvWBjypwRDb61bdtrFszt0dAUVA4vWjNzhDj8m+KvLFvqhTAzyVnudqRe
iGFV07l2N+qF+Coq/8dBP+pFcG3ca5gVTL0IDRFD7vOR1IvAK7DqNJVSL8K8
xjMw9ST1Yrza5lMrTaFejI5neZUm6dSL0ZJenD2URb0Y3ID7dwLyqJcgV/1C
ePEz6iV4d3R1y6Vi6iUYe+9L8YCKegmaVIqEulrqpQgx9i73v0G9FO7lVlr9
FuqliPT/QT9HTb0UdwLrn2s6qZdhW4WsZ6Gbehl8eGm9rn3Uy5BcqVU6P6Re
hq1Vt3P1H1Mvx7iR2TuLY9TLsd/ALKZ8gno5BpSnC63nqJcjXnfPLYWW+hjU
blpL27gy4/I3/Xv15A==
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1:eJx1y31MFHQcx/EbE0QSR1CC0hEImgkKu6Eg8vAhlSeJ4E7gOA7hHnmIhMEm
iE83DQGHKSnCeE4yAoOIJsghTggUUiNzeCAH0QFiJ8RjNdnAav6+f/bbfvvt
tc/vbSdN4SsMOByO4t/73/s/B2YRw27coTqf1zTDzavuJtcaWpmtwIlJ+NO/
vJPZFg4r7Q2mm3qYHSBsXh55IHjIvBWr1ssXtNaPmJ3QyXW0tEh+zOwCj9V3
g4cK+pl5KGmVCRYuaJhdoepMlQcmDjLvQnPQ7Nf3bIeY3ZEveBncf0vL7IFN
tY7Bx7xGmD1xJLtn/drqX5m9kb4m7YfFjFFmIE83Y/WuxW/MvuBrA9/hfEn+
AFLzLZ9lOeqY98KFW/VSVEfeh/tV5X1RdmPM+5EkNEriFpD9sPhFtH7PEtkf
ToKyPzxjxpkDILKvsS5VkwPh6lh3stt8gjkIzeHyHlsl+QB0wmyF8Q1yMMzV
JRl9r8gfQrM0+l2H3zPmENwI38h1OEf+CMFNAd07fySHYnzvqMBl9eRrq0Jx
2aajOMCXmROG1L8NVn2bSXsYrErjzC/W085Hl9lg/VujtPPh06I/IzV7znYB
jmuq+GXezCoBItKzt+uSaD+IxsD4trBC2g9it/LuJ0a3aQ/HorqyacME7eHQ
qXfbVZv8zvYIZJirrt7cwayKgN4wufBwGO2RKFp8NqNJoz0SM325YqNLtAsR
0p8TbtJEuxAPf3HwWuijPQpuooH0vinao3A+Nyv5G2M920UYcii9fcWeWSXC
RKq7W4kX7dHYELwy2RFBezTONPB2WqXQLsbzrFTdV2dpF+NzbohNRjntMZg7
YHK+4HvaY5CWHsFf6aH9EB7PCzZ2D9N+CMamGrvpOdpjob7M8T5h+ILtsXiv
xGvsmBUzJw5ardpxZhsz4pCvFA5rPel/HIZPbE0JCmG+E4e3TT5d5xVLvQT7
8tqrW1Ool8D8adaTrlPUS8CLbH9TdoF6CazXVuYUV1AvhbvTfdfEeuqluKho
GRtoo16Kw1uqnV/0Ui9FzRFJTrWGehmSKuecDSeol6HiqN7PYp56GTon27p+
XqFehuuNvSfxxhTr5bh0Xfq+wpIZcmyevhLla8+skqPx45mzmh3Md+RoEa8x
3eZBvQKzMZbb9+ynXoGOrqpMn1DqFch7MFI7IKJegUHeNckuBfVKZFUV5YpS
qFfi6a3Zeb+j1Ctx73i+ZPk09UoUn9OdPpVPfTzE2rmFnwqpjwcv08Z3uoL6
eKwTGEwO1VAfj8DNPEFZI/UJqH3117hzK/UJeBK9PF3UQX0ChJFLTf291CdA
rPZP1j+iPhFLsRl+msEpn38ABe/weg==
          "]]}}}, {{}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {False, False}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["Transparancy", 50, 
          GrayLevel[0]], None}, {
         Style["Power (mW)", 50, 
          GrayLevel[0]], None}}, FrameTicks -> {{True, True}, {True, True}}, 
      FrameTicksStyle -> Directive[40], GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 200}, {0, 1.}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[
          Rational[2, 3], 0, 0], 
         AbsoluteThickness[10]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[10]], 
        Directive[{
          RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
          Dashing[{Small, Small}]}, 
         AbsoluteThickness[10]]}, {
        Style["4 Level", 
         RGBColor[
          Rational[2, 3], 0, 0]], 
        Style["3 Level", 
         RGBColor[0, 0, 1]]}, Joined -> {True, True}, 
       LabelStyle -> {FontSize -> 45}, LegendFunction -> "Frame", 
       LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       LegendMarkerSize -> Large]], {Right, 0.4}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7658291811412697`*^9, 3.765829199257653*^9}, {
   3.765829647521124*^9, 3.7658296819967103`*^9}, {3.7658297451569653`*^9, 
   3.7658297539095774`*^9}, 3.7658298107230415`*^9, 3.765829904553975*^9, 
   3.765830181677425*^9, 3.7658303639720573`*^9, 3.7658304779573884`*^9, 
   3.765830613439003*^9, 3.765834438030327*^9, 3.76588223631919*^9, 
   3.7659013630901985`*^9, 3.772628132412792*^9, {3.8116347187013135`*^9, 
   3.8116347221390133`*^9}, 3.811635293893021*^9, 3.811636401535325*^9, {
   3.8121479799167023`*^9, 3.8121480111067295`*^9}, 3.812149414353837*^9, 
   3.8121521433338923`*^9, 3.8121521899796*^9, 3.8121523480721655`*^9, {
   3.8121524349870377`*^9, 3.8121524543922696`*^9}, 3.812152619109256*^9, {
   3.81215274707944*^9, 3.81215277015338*^9}, 3.812154847692874*^9, 
   3.812154957902658*^9, {3.8121585381899962`*^9, 3.812158545112278*^9}, 
   3.812158654334397*^9},
 CellLabel->
  "Out[1539]=",ExpressionUUID->"35cff87b-6b86-46ca-9454-5a45b07609cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SetDirectory", "[", 
  "\"\<C:\\\\Users\\\\Saesun Kim\\\\Desktop\\\\Saesun Kim\\\\Files\\\\EIT \
file\\\\Fig\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Figure41U.eps\>\"", ",", "tp1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8116364496550207`*^9, 3.8116364587046323`*^9}, 
   3.8121586950263247`*^9},
 CellLabel->
  "In[1540]:=",ExpressionUUID->"0d099760-1f0f-4ea4-8d0f-2d3ebdd958e7"],

Cell[BoxData["\<\"C:\\\\Users\\\\Saesun Kim\\\\Desktop\\\\Saesun Kim\\\\Files\
\\\\EIT file\\\\Fig\"\>"], "Output",
 CellChangeTimes->{3.811636459590439*^9, 3.8121480284734898`*^9, 
  3.812149418240474*^9, 3.8121549602097516`*^9, 3.8121586963865585`*^9},
 CellLabel->
  "Out[1540]=",ExpressionUUID->"5825c13a-378a-4fc2-9ede-07fba619d4e2"],

Cell[BoxData["\<\"Figure41U.eps\"\>"], "Output",
 CellChangeTimes->{3.811636459590439*^9, 3.8121480284734898`*^9, 
  3.812149418240474*^9, 3.8121549602097516`*^9, 3.8121586971062117`*^9},
 CellLabel->
  "Out[1541]=",ExpressionUUID->"65e79225-84b9-4331-9727-1dcf9c93e169"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Gamma]=0.5", "Subchapter",
 CellChangeTimes->{{3.7658297991029167`*^9, 3.7658298012631054`*^9}, 
   3.765829915027057*^9, {3.7658305440638323`*^9, 3.7658305445959687`*^9}, {
   3.7658306147487955`*^9, 
   3.7658306152961297`*^9}},ExpressionUUID->"b56f99fe-5ec1-40c1-bf56-\
a8fe6899ce9b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"0.5", "*", "5.750056"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TvP4", "[", "\[Gamma]", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{
   RowBox[{"TvP3", "[", "\[Gamma]", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"Power", "::", "infy"}], "]"}], ";", 
  RowBox[{"Off", "[", 
   RowBox[{"Infinity", "::", "indet"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "list", ",", "list1", ",", "list3", ",", "list4", ",", "EIT", ",", "ABS", 
     ",", "EIT1", ",", "ABS1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"list", "=", 
       RowBox[{"Lev3DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list1", "=", 
       RowBox[{"Lev3DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list3", "=", 
       RowBox[{"Lev4DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list4", "=", 
       RowBox[{"Lev4DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"EIT", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"EIT1", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ABS", "=", 
       RowBox[{
        RowBox[{"list1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list", ",", "EIT"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS1", "=", 
       RowBox[{
        RowBox[{"list4", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list3", ",", "EIT1"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TvP4", "[", "\[Gamma]", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"TvP4", "[", "\[Gamma]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1", "-", 
            RowBox[{"EIT1", "/", "ABS1"}]}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TvP3", "[", "\[Gamma]", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"TvP3", "[", "\[Gamma]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1", "-", 
            RowBox[{"EIT", "/", "ABS"}]}]}], "}"}]}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0", ",", "100", ",", "10"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.765829089641389*^9, 3.7658292318963723`*^9}, {
  3.7658292853196664`*^9, 3.7658292871639733`*^9}, {3.7658293320655184`*^9, 
  3.7658294847660823`*^9}, {3.765829757651656*^9, 3.7658297653284125`*^9}, {
  3.7658299219744377`*^9, 3.7658299667544694`*^9}, {3.7658300840041547`*^9, 
  3.7658301261594133`*^9}, {3.765830210826744*^9, 3.7658303345335846`*^9}, {
  3.7658304859698343`*^9, 3.7658305295086613`*^9}, {3.765830564361416*^9, 
  3.7658305674564667`*^9}, {3.7658306171261005`*^9, 
  3.765830617423918*^9}},ExpressionUUID->"1b6c0bbf-17cc-4769-9f69-\
b1b8e7a954db"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"0.5", "*", "5.750056"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"LineLegend", "[", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Darker", "[", "Red", "]"}], ",", "Blue", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Darker", "[", "Gray", "]"}], ",", "Dashed"}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<4 Level\>\"", ",", 
         RowBox[{"Darker", "[", "Red", "]"}]}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<3 Level\>\"", ",", "Blue"}], "]"}]}], "}"}], ",", 
     RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"TvP4", "[", "\[Gamma]", "]"}], ",", 
     RowBox[{"TvP3", "[", "\[Gamma]", "]"}]}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "40", "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"legend", ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "Center"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Blue"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Black", ",", 
        "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Power (mW)\>\"", ",", "50", ",", "Black"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Transparancy\>\"", ",", "50", ",", "Black"}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.0"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.765829631536768*^9, 3.765829632743741*^9}, {
  3.7658296806517997`*^9, 3.765829681665415*^9}, {3.7658297444089584`*^9, 
  3.7658297536539*^9}, {3.7658301588193398`*^9, 3.76583016469881*^9}, {
  3.7658304774870143`*^9, 3.7658304776901264`*^9}, {3.7658305163681355`*^9, 
  3.7658305187534957`*^9}, {3.7658822146801186`*^9, 
  3.7658822197431545`*^9}},ExpressionUUID->"cc44ac75-367e-4c47-a74e-\
34b7b789e529"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
       0.012833333333333334`], AbsoluteThickness[3], 
       LineBox[{{0., 0.}, {10., 0.26801326720376895`}, {20., 
        0.4107891599759744}, {30., 0.49858406162799385`}, {40., 
        0.5584174305403621}, {50., 0.6022644637994661}, {60., 
        0.6360593011700777}, {70., 0.6630651607173244}, {80., 
        0.6852393034720912}, {90., 0.7038275417991877}, {100., 
        0.7196695967317984}}]}, 
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       3], LineBox[{{0., 0.}, {10., 0.13116126673059791`}, {20., 
        0.23251115936055755`}, {30., 0.31640132834238344`}, {40., 
        0.38682250162794596`}, {50., 0.446203945987637}, {60., 
        0.49653479623511676`}, {70., 0.5394840144814108}, {80., 
        0.5763987103512754}, {90., 0.6083663859284586}, {100., 
        0.6362391624887284}}]}}, {}, {}, {{}, {}}}, InsetBox[
     TemplateBox[{
       StyleBox["\"4 Level\"", 
        RGBColor[
         Rational[2, 3], 0, 0], StripOnInput -> False], 
       StyleBox["\"3 Level\"", 
        RGBColor[0, 0, 1], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontSize -> 45, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[2/3, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.33333333333333337, 0.33333333333333337, \
0.33333333333333337]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}]}], "]"}]& )], 
     Scaled[{0.99, 0.5}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"Transparancy\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Power (mW)\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
   FrameTicks->{{True, True}, {True, True}},
   FrameTicksStyle->Directive[40],
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->1020,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 200}, {0, 1.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[
           Rational[2, 3], 0, 0]], 
         Line[{{0., 0.}, {10., 0.26801326720376895`}, {20., 
          0.4107891599759744}, {30., 0.49858406162799385`}, {40., 
          0.5584174305403621}, {50., 0.6022644637994661}, {60., 
          0.6360593011700777}, {70., 0.6630651607173244}, {80., 
          0.6852393034720912}, {90., 0.7038275417991877}, {100., 
          0.7196695967317984}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 1]], 
         Line[{{0., 0.}, {10., 0.13116126673059791`}, {20., 
          0.23251115936055755`}, {30., 0.31640132834238344`}, {40., 
          0.38682250162794596`}, {50., 0.446203945987637}, {60., 
          0.49653479623511676`}, {70., 0.5394840144814108}, {80., 
          0.5763987103512754}, {90., 0.6083663859284586}, {100., 
          0.6362391624887284}}]}}}, {}, {}, {{}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      AxesOrigin -> {0, 0}, PlotRange -> {{0, 200}, {0, 1.}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {False, False}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["Transparancy", 50, 
          GrayLevel[0]], None}, {
         Style["Power (mW)", 50, 
          GrayLevel[0]], None}}, FrameTicks -> {{True, True}, {True, True}}, 
      FrameTicksStyle -> Directive[40], GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 200}, {0, 1.}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[
          Rational[2, 3], 0, 0], 
         AbsoluteThickness[10]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[10]], 
        Directive[{
          RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
          Dashing[{Small, Small}]}, 
         AbsoluteThickness[10]]}, {
        Style["4 Level", 
         RGBColor[
          Rational[2, 3], 0, 0]], 
        Style["3 Level", 
         RGBColor[0, 0, 1]]}, Joined -> {True, True}, 
       LabelStyle -> {FontSize -> 45}, LegendFunction -> "Frame", 
       LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       LegendMarkerSize -> Large]], {Right, Center}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7658291811412697`*^9, 3.765829199257653*^9}, {
   3.765829647521124*^9, 3.7658296819967103`*^9}, {3.7658297451569653`*^9, 
   3.7658297539095774`*^9}, 3.7658298107230415`*^9, 3.765829904553975*^9, 
   3.765830181677425*^9, 3.7658303639720573`*^9, 3.7658304779573884`*^9, 
   3.765830587399908*^9, 3.7658306295249214`*^9, 
   3.7658822364090033`*^9},ExpressionUUID->"2ea97d13-148c-4ad2-9c16-\
35ff23c66c97"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Trans vs decoherence", "Chapter",
 CellChangeTimes->{{3.7658306508487835`*^9, 
  3.76583065990334*^9}},ExpressionUUID->"ae2e2b1f-10d9-40fe-a7cf-\
3d8ebd8fc560"],

Cell[CellGroupData[{

Cell["P=0\[Gamma]", "Subchapter",
 CellChangeTimes->{{3.7658297991029167`*^9, 3.7658298012631054`*^9}, 
   3.765829915027057*^9, {3.765830698232728*^9, 3.7658307045519304`*^9}, {
   3.765831054135146*^9, 
   3.765831054433466*^9}},ExpressionUUID->"a699c2b3-0219-4b6f-b096-\
8a9e901f8cf5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tv\[Gamma]4", "[", "p", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{
   RowBox[{"Tv\[Gamma]3", "[", "p", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"Power", "::", "infy"}], "]"}], ";", 
  RowBox[{"Off", "[", 
   RowBox[{"Infinity", "::", "indet"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "list", ",", "list1", ",", "list3", ",", "list4", ",", "EIT", ",", "ABS", 
     ",", "EIT1", ",", "ABS1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"list", "=", 
       RowBox[{"Lev3DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list1", "=", 
       RowBox[{"Lev3DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list3", "=", 
       RowBox[{"Lev4DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list4", "=", 
       RowBox[{"Lev4DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"EIT", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"EIT1", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ABS", "=", 
       RowBox[{
        RowBox[{"list1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list", ",", "EIT"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS1", "=", 
       RowBox[{
        RowBox[{"list4", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list3", ",", "EIT1"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Tv\[Gamma]4", "[", "p", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Tv\[Gamma]4", "[", "p", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]", ",", 
           RowBox[{"1", "-", 
            RowBox[{"EIT1", "/", "ABS1"}]}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Tv\[Gamma]3", "[", "p", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Tv\[Gamma]3", "[", "p", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]", ",", 
           RowBox[{"1", "-", 
            RowBox[{"EIT", "/", "ABS"}]}]}], "}"}]}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0", ",", "10", ",", "0.5"}], "}"}]}], "]"}]}],
   "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.765829089641389*^9, 3.7658292318963723`*^9}, {
  3.7658292853196664`*^9, 3.7658292871639733`*^9}, {3.7658293320655184`*^9, 
  3.7658294847660823`*^9}, {3.765829757651656*^9, 3.7658297653284125`*^9}, {
  3.7658299219744377`*^9, 3.7658299667544694`*^9}, {3.7658300840041547`*^9, 
  3.7658301261594133`*^9}, {3.765830210826744*^9, 3.7658303345335846`*^9}, {
  3.7658304859698343`*^9, 3.7658305295086613`*^9}, {3.7658309469869137`*^9, 
  3.765831003557434*^9}, {3.7658310370777907`*^9, 3.7658310568007545`*^9}},
 CellLabel->
  "In[585]:=",ExpressionUUID->"13764439-6678-4116-b8e5-2601f1e9b565"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"LineLegend", "[", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Darker", "[", "Red", "]"}], ",", "Blue", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Darker", "[", "Gray", "]"}], ",", "Dashed"}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<4 Level\>\"", ",", 
         RowBox[{"Darker", "[", "Red", "]"}]}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<3 Level\>\"", ",", "Blue"}], "]"}]}], "}"}], ",", 
     RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Tv\[Gamma]4", "[", "p", "]"}], ",", 
     RowBox[{"Tv\[Gamma]3", "[", "p", "]"}]}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "40", "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"legend", ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "Center"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Blue"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Black", ",", 
        "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Decoherence \[Gamma][MHz]\>\"", ",", "50", ",", "Black"}],
        "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Transparancy\>\"", ",", "50", ",", "Black"}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.0"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.765829631536768*^9, 3.765829632743741*^9}, {
  3.7658296806517997`*^9, 3.765829681665415*^9}, {3.7658297444089584`*^9, 
  3.7658297536539*^9}, {3.7658301588193398`*^9, 3.76583016469881*^9}, {
  3.7658304774870143`*^9, 3.7658304776901264`*^9}, {3.7658305163681355`*^9, 
  3.7658305187534957`*^9}, {3.765830979239729*^9, 3.7658309817344575`*^9}, {
  3.7658310699597816`*^9, 3.765831070037924*^9}, {3.7658820233101234`*^9, 
  3.765882047735544*^9}, {3.7658821098431206`*^9, 3.7658821100931053`*^9}},
 CellLabel->
  "In[589]:=",ExpressionUUID->"2d1757e0-0447-4c5c-8038-56709dfbb191"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
       0.012833333333333334`], AbsoluteThickness[3], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjR08sEflf0Dj/0DjMzigclnQ+BxofB40vgAaXwiN
L4LGF0PjS6DxpdD4Mmh8OTS+AhpfEY2vhMZXRuOrwPkAWvgLAg==
        "]]}, 
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       3], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjR08sEflf0Dj/0DjMzigclnQ+BxofB40vgAaXwiN
L4LGF0PjS6DxpdD4Mmh8OTS+AhpfEY2vhMZXRuOrwPkAWvgLAg==
        "]]}}, {{}, {}}}, InsetBox[
     TemplateBox[{
       StyleBox["\"4 Level\"", 
        RGBColor[
         Rational[2, 3], 0, 0], StripOnInput -> False], 
       StyleBox["\"3 Level\"", 
        RGBColor[0, 0, 1], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontSize -> 45, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0", ",", "0"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.33333333333333337`", ",", 
                    "0.33333333333333337`", ",", "0.33333333333333337`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}]}], "]"}]& )], 
     Scaled[{0.99, 0.5}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"Transparancy\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Decoherence \[Gamma][MHz]\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
   FrameTicks->{{True, True}, {True, True}},
   FrameTicksStyle->Directive[40],
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->1020,
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 10}, {0, 1.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[
           Rational[2, 3], 0, 0]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjR08sEflf0Dj/0DjMzigclnQ+BxofB40vgAaXwiN
L4LGF0PjS6DxpdD4Mmh8OTS+AhpfEY2vhMZXRuOrwPkAWvgLAg==
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjR08sEflf0Dj/0DjMzigclnQ+BxofB40vgAaXwiN
L4LGF0PjS6DxpdD4Mmh8OTS+AhpfEY2vhMZXRuOrwPkAWvgLAg==
          "]]}}}, {{}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {False, False}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["Transparancy", 50, 
          GrayLevel[0]], None}, {
         Style["Decoherence \[Gamma][MHz]", 50, 
          GrayLevel[0]], None}}, FrameTicks -> {{True, True}, {True, True}}, 
      FrameTicksStyle -> Directive[40], GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 10}, {0, 1.}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[
          Rational[2, 3], 0, 0], 
         AbsoluteThickness[10]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[10]], 
        Directive[{
          RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
          Dashing[{Small, Small}]}, 
         AbsoluteThickness[10]]}, {
        Style["4 Level", 
         RGBColor[
          Rational[2, 3], 0, 0]], 
        Style["3 Level", 
         RGBColor[0, 0, 1]]}, Joined -> {True, True}, 
       LabelStyle -> {FontSize -> 45}, LegendFunction -> "Frame", 
       LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       LegendMarkerSize -> Large]], {Right, Center}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7658291811412697`*^9, 3.765829199257653*^9}, {
   3.765829647521124*^9, 3.7658296819967103`*^9}, {3.7658297451569653`*^9, 
   3.7658297539095774`*^9}, 3.7658298107230415`*^9, 3.765829904553975*^9, 
   3.765830181677425*^9, 3.7658303639720573`*^9, 3.7658304779573884`*^9, 
   3.765830558574026*^9, 3.7658310273797*^9, 3.765831085031109*^9, {
   3.76588204129*^9, 3.7658820480964794`*^9}, 3.765882110302762*^9, 
   3.8116364746451387`*^9},
 CellLabel->
  "Out[591]=",ExpressionUUID->"19340d2e-2862-403a-8a99-30deb4c9ae00"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["P=2.5\[Gamma]", "Subchapter",
 CellChangeTimes->{{3.7658297991029167`*^9, 3.7658298012631054`*^9}, 
   3.765829915027057*^9, {3.765830698232728*^9, 3.7658307045519304`*^9}, {
   3.7658311051086817`*^9, 
   3.7658311062187495`*^9}},ExpressionUUID->"3f00cb6e-c10c-4c0c-bea9-\
f5031597b1ab"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", "3.99"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tv\[Gamma]4", "[", "p", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{
   RowBox[{"Tv\[Gamma]3", "[", "p", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"Power", "::", "infy"}], "]"}], ";", 
  RowBox[{"Off", "[", 
   RowBox[{"Infinity", "::", "indet"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "list", ",", "list1", ",", "list3", ",", "list4", ",", "EIT", ",", "ABS", 
     ",", "EIT1", ",", "ABS1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"list", "=", 
       RowBox[{"Lev3DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list1", "=", 
       RowBox[{"Lev3DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list3", "=", 
       RowBox[{"Lev4DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list4", "=", 
       RowBox[{"Lev4DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"EIT", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"EIT1", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ABS", "=", 
       RowBox[{
        RowBox[{"list1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list", ",", "EIT"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS1", "=", 
       RowBox[{
        RowBox[{"list4", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list3", ",", "EIT1"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Tv\[Gamma]4", "[", "p", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Tv\[Gamma]4", "[", "p", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]", ",", 
           RowBox[{"1", "-", 
            RowBox[{"EIT1", "/", "ABS1"}]}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Tv\[Gamma]3", "[", "p", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Tv\[Gamma]3", "[", "p", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]", ",", 
           RowBox[{"1", "-", 
            RowBox[{"EIT", "/", "ABS"}]}]}], "}"}]}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0", ",", "10", ",", "0.5"}], "}"}]}], "]"}]}],
   "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.765829089641389*^9, 3.7658292318963723`*^9}, {
  3.7658292853196664`*^9, 3.7658292871639733`*^9}, {3.7658293320655184`*^9, 
  3.7658294847660823`*^9}, {3.765829757651656*^9, 3.7658297653284125`*^9}, {
  3.7658299219744377`*^9, 3.7658299667544694`*^9}, {3.7658300840041547`*^9, 
  3.7658301261594133`*^9}, {3.765830210826744*^9, 3.7658303345335846`*^9}, {
  3.7658304859698343`*^9, 3.7658305295086613`*^9}, {3.7658309469869137`*^9, 
  3.765831003557434*^9}, {3.7658310370777907`*^9, 3.7658310392872553`*^9}, {
  3.7658311284559946`*^9, 3.765831129008172*^9}},
 CellLabel->
  "In[592]:=",ExpressionUUID->"b21dbb24-6586-4519-96b5-e456ae444b03"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", "3.99"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"LineLegend", "[", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Darker", "[", "Red", "]"}], ",", "Blue", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Darker", "[", "Gray", "]"}], ",", "Dashed"}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<4 Level\>\"", ",", 
         RowBox[{"Darker", "[", "Red", "]"}]}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<3 Level\>\"", ",", "Blue"}], "]"}]}], "}"}], ",", 
     RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Tv\[Gamma]4", "[", "p", "]"}], ",", 
     RowBox[{"Tv\[Gamma]3", "[", "p", "]"}]}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "40", "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"legend", ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "Center"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Blue"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Black", ",", 
        "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Decoherence \[Gamma][MHz]\>\"", ",", "50", ",", "Black"}],
        "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Transparancy\>\"", ",", "50", ",", "Black"}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.2"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.765829631536768*^9, 3.765829632743741*^9}, {
  3.7658296806517997`*^9, 3.765829681665415*^9}, {3.7658297444089584`*^9, 
  3.7658297536539*^9}, {3.7658301588193398`*^9, 3.76583016469881*^9}, {
  3.7658304774870143`*^9, 3.7658304776901264`*^9}, {3.7658305163681355`*^9, 
  3.7658305187534957`*^9}, {3.765830979239729*^9, 3.7658309817344575`*^9}, {
  3.7658310623792453`*^9, 3.7658310658466225`*^9}, {3.765882059312689*^9, 
  3.7658820634972277`*^9}, {3.7658821066609178`*^9, 3.765882106897574*^9}, {
  3.811636485518431*^9, 3.811636485701598*^9}},
 CellLabel->
  "In[599]:=",ExpressionUUID->"73f9df7c-6e7b-43c6-941b-0c41fedbb760"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
       0.012833333333333334`], AbsoluteThickness[3], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQOGa0OfhF74ZA/hPbB//b+gRZblDZT/wb7hjIVQ
e/gzKP+HfeTjTyWZVY+gfAYHjqUs/tH596F8Fge2GSYSRwJvQ/kcDu+mOU7d
oHIDyudxOLZLKdlv/lUoX8Bhg5pwd0b/ZShfyKHJa5l+0b2LUL6Iw6UTpiuU
ii5A+WIOBSmdJmK556B8CQeF7g1q3OFnoHwpB4t4/pt9VaegfBmHgs2mG4Uf
n4Dy5RxalngvFsk/DuUrOOypSf+Vr3QMyld0UPjf/I+D5SiUr+TAcFuPLevb
YShf2eFPxoewRYwwvorDm4NhPG1Kh+wB3D5aVw==
        "]]}, 
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       3], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQNfnW5sc/r33h7Ce2Cf9vLtN33Ga1D+B/srzL+t
tx88CeX/sJfgeZ7xy+QQlM/gEPFXs+6z4h4on8VhB/fNy58vboPyORxOBH4u
E3TfDOXzOBiEKrA/mbUByhdw+CBfKrJdcS2UL+QQkLpQ+c+blVC+iMOEq7vu
H1ZcDuWLOVwINFaQ4lgK5Us4GCTP3XlXeDGUL+VgkOl251LmQihfxsFhyt8Z
izrmQ/lyDg6vPB+uWTQHyldwUDgc+dlMbBaUr+iQYHp6Nv+N6VC+koOD61vv
/JypUL6yA8OyuUfYzk+yr3SOOeV6CciHAgAVVl12
        "]]}}, {{}, {}}}, InsetBox[
     TemplateBox[{
       StyleBox["\"4 Level\"", 
        RGBColor[
         Rational[2, 3], 0, 0], StripOnInput -> False], 
       StyleBox["\"3 Level\"", 
        RGBColor[0, 0, 1], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontSize -> 45, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0", ",", "0"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.33333333333333337`", ",", 
                    "0.33333333333333337`", ",", "0.33333333333333337`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}]}], "]"}]& )], 
     Scaled[{0.99, 0.5}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"Transparancy\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Decoherence \[Gamma][MHz]\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
   FrameTicks->{{True, True}, {True, True}},
   FrameTicksStyle->Directive[40],
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->1020,
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 10}, {0, 1.2}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[
           Rational[2, 3], 0, 0]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQOGa0OfhF74ZA/hPbB//b+gRZblDZT/wb7hjIVQ
e/gzKP+HfeTjTyWZVY+gfAYHjqUs/tH596F8Fge2GSYSRwJvQ/kcDu+mOU7d
oHIDyudxOLZLKdlv/lUoX8Bhg5pwd0b/ZShfyKHJa5l+0b2LUL6Iw6UTpiuU
ii5A+WIOBSmdJmK556B8CQeF7g1q3OFnoHwpB4t4/pt9VaegfBmHgs2mG4Uf
n4Dy5RxalngvFsk/DuUrOOypSf+Vr3QMyld0UPjf/I+D5SiUr+TAcFuPLevb
YShf2eFPxoewRYwwvorDm4NhPG1Kh+wB3D5aVw==
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQNfnW5sc/r33h7Ce2Cf9vLtN33Ga1D+B/srzL+t
tx88CeX/sJfgeZ7xy+QQlM/gEPFXs+6z4h4on8VhB/fNy58vboPyORxOBH4u
E3TfDOXzOBiEKrA/mbUByhdw+CBfKrJdcS2UL+QQkLpQ+c+blVC+iMOEq7vu
H1ZcDuWLOVwINFaQ4lgK5Us4GCTP3XlXeDGUL+VgkOl251LmQihfxsFhyt8Z
izrmQ/lyDg6vPB+uWTQHyldwUDgc+dlMbBaUr+iQYHp6Nv+N6VC+koOD61vv
/JypUL6yA8OyuUfYzk+yr3SOOeV6CciHAgAVVl12
          "]]}}}, {{}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {False, False}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["Transparancy", 50, 
          GrayLevel[0]], None}, {
         Style["Decoherence \[Gamma][MHz]", 50, 
          GrayLevel[0]], None}}, FrameTicks -> {{True, True}, {True, True}}, 
      FrameTicksStyle -> Directive[40], GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 10}, {0, 1.2}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[
          Rational[2, 3], 0, 0], 
         AbsoluteThickness[10]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[10]], 
        Directive[{
          RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
          Dashing[{Small, Small}]}, 
         AbsoluteThickness[10]]}, {
        Style["4 Level", 
         RGBColor[
          Rational[2, 3], 0, 0]], 
        Style["3 Level", 
         RGBColor[0, 0, 1]]}, Joined -> {True, True}, 
       LabelStyle -> {FontSize -> 45}, LegendFunction -> "Frame", 
       LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       LegendMarkerSize -> Large]], {Right, Center}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7658291811412697`*^9, 3.765829199257653*^9}, {
   3.765829647521124*^9, 3.7658296819967103`*^9}, {3.7658297451569653`*^9, 
   3.7658297539095774`*^9}, 3.7658298107230415`*^9, 3.765829904553975*^9, 
   3.765830181677425*^9, 3.7658303639720573`*^9, 3.7658304779573884`*^9, 
   3.765830558574026*^9, {3.7658310273797*^9, 3.7658310660963173`*^9}, 
   3.7658311431393194`*^9, 3.765831258733539*^9, 3.7658820638943653`*^9, 
   3.7658821071215196`*^9, {3.8116364809002275`*^9, 3.8116364858767586`*^9}},
 CellLabel->
  "Out[601]=",ExpressionUUID->"583cd613-636a-4d0d-b1d9-db95393530a8"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7766005689342327`*^9, 3.776600618845665*^9}, {
   3.776600662431342*^9, 3.776600697732683*^9}, {3.7766007284746237`*^9, 
   3.776600738218285*^9}, 
   3.7766008799743023`*^9},ExpressionUUID->"fbac0e28-45b3-411d-acc9-\
f3858143d5eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["P=5\[Gamma]", "Subchapter",
 CellChangeTimes->{{3.7658297991029167`*^9, 3.7658298012631054`*^9}, 
   3.765829915027057*^9, {3.765830698232728*^9, 
   3.7658307045519304`*^9}},ExpressionUUID->"eb5c2b51-e1b5-4ad5-986a-\
02b61746c509"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", "15.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tv\[Gamma]4", "[", "p", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{
   RowBox[{"Tv\[Gamma]3", "[", "p", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"Power", "::", "infy"}], "]"}], ";", 
  RowBox[{"Off", "[", 
   RowBox[{"Infinity", "::", "indet"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "list", ",", "list1", ",", "list3", ",", "list4", ",", "EIT", ",", "ABS", 
     ",", "EIT1", ",", "ABS1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"list", "=", 
       RowBox[{"Lev3DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list1", "=", 
       RowBox[{"Lev3DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list3", "=", 
       RowBox[{"Lev4DoppTestsc\[Gamma]", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list4", "=", 
       RowBox[{"Lev4DoppTestsc\[Gamma]", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"EIT", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"EIT1", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ABS", "=", 
       RowBox[{
        RowBox[{"list1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list", ",", "EIT"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS1", "=", 
       RowBox[{
        RowBox[{"list4", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list3", ",", "EIT1"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Tv\[Gamma]4", "[", "p", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Tv\[Gamma]4", "[", "p", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]", ",", 
           RowBox[{"1", "-", 
            RowBox[{"EIT1", "/", "ABS1"}]}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Tv\[Gamma]3", "[", "p", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Tv\[Gamma]3", "[", "p", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]", ",", 
           RowBox[{"1", "-", 
            RowBox[{"EIT", "/", "ABS"}]}]}], "}"}]}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0", ",", "3", ",", "0.01"}], "}"}]}], "]"}]}],
   "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.765829089641389*^9, 3.7658292318963723`*^9}, {
  3.7658292853196664`*^9, 3.7658292871639733`*^9}, {3.7658293320655184`*^9, 
  3.7658294847660823`*^9}, {3.765829757651656*^9, 3.7658297653284125`*^9}, {
  3.7658299219744377`*^9, 3.7658299667544694`*^9}, {3.7658300840041547`*^9, 
  3.7658301261594133`*^9}, {3.765830210826744*^9, 3.7658303345335846`*^9}, {
  3.7658304859698343`*^9, 3.7658305295086613`*^9}, {3.7658309469869137`*^9, 
  3.765831003557434*^9}, {3.7658310370777907`*^9, 3.7658310392872553`*^9}, {
  3.7658314584226213`*^9, 3.765831458578862*^9}, {3.7658822669089007`*^9, 
  3.765882275495222*^9}, {3.771172339521043*^9, 3.771172355112183*^9}, {
  3.8116366461063995`*^9, 3.8116366467309647`*^9}, {3.8121494350055094`*^9, 
  3.8121494391896825`*^9}, {3.8121549697546377`*^9, 3.812154975219596*^9}},
 CellLabel->
  "In[1552]:=",ExpressionUUID->"ef4e09e2-db93-4fcf-b511-0f76b5aa037e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"nf1", "=", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/", 
        RowBox[{"(", " ", "5.750056", ")"}]}], ",", 
       RowBox[{"x", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "/@", 
   RowBox[{"Tv\[Gamma]4", "[", "p", "]"}]}]}], "\n", 
 RowBox[{"nf2", "=", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/", 
        RowBox[{"(", " ", "5.750056", ")"}]}], ",", 
       RowBox[{"x", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "/@", 
   RowBox[{
   "Tv\[Gamma]3", "[", "p", "]"}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.776600893206712*^9, 3.776600895644049*^9}, {
  3.7766009377002735`*^9, 3.776600945558471*^9}, {3.7766010151455116`*^9, 
  3.7766010291778684`*^9}},
 CellLabel->
  "In[1556]:=",ExpressionUUID->"22f34eee-57ea-4f93-b517-a8ae62c4902d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.9545735874446876`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0017391134973294173`", ",", "0.946689940824781`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0034782269946588345`", ",", "0.9390037326500563`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.005217340491988251`", ",", "0.9315475629616546`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.006956453989317669`", ",", "0.9243249889745223`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.008695567486647087`", ",", "0.9172822743479083`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.010434680983976503`", ",", "0.9104157354943486`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.012173794481305922`", ",", "0.9037703300028899`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.013912907978635338`", ",", "0.8972821925477882`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.015652021475964756`", ",", "0.8909464413270435`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.017391134973294173`", ",", "0.8847592367025936`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.01913024847062359`", ",", "0.8787450198974597`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.020869361967953005`", ",", "0.8728607286614628`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.022608475465282427`", ",", "0.8671010070604084`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.024347588962611844`", ",", "0.8614604399607295`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.02608670245994126`", ",", "0.8559590634549472`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.027825815957270676`", ",", "0.8505672561202394`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.029564929454600097`", ",", "0.8452770977401365`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.03130404295192951`", ",", "0.8400842279254905`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.033043156449258926`", ",", "0.8350070849695178`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.03478226994658835`", ",", "0.8300210835752166`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.03652138344391776`", ",", "0.8251190590430867`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.03826049694124718`", ",", "0.8203005788468865`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0399996104385766`", ",", "0.8155813212270714`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04173872393590601`", ",", "0.8109352698519718`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04347783743323543`", ",", "0.8063597601425563`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04521695093056485`", ",", "0.8018671496684318`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04695606442789427`", ",", "0.7974485004068074`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04869517792522369`", ",", "0.7930921321791946`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.050434291422553096`", ",", "0.7888035893742429`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05217340491988252`", ",", "0.7845886583897976`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05391251841721194`", ",", "0.780429186102312`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05565163191454135`", ",", "0.7763278384534981`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.057390745411870774`", ",", "0.7722967691952575`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.059129858909200195`", ",", "0.7683154674711794`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.06086897240652961`", ",", "0.7643866755081036`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.06260808590385902`", ",", "0.7605226426180218`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.06434719940118844`", ",", "0.7567035840083625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.06608631289851785`", ",", "0.7529345174087045`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.06782542639584728`", ",", "0.749189753334815`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0695645398931767`", ",", "0.7454693694849963`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07130365339050611`", ",", "0.7417734296792392`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07304276688783552`", ",", "0.7381019844527492`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07478188038516494`", ",", "0.7344550716363982`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07652099388249436`", ",", "0.7308327169233187`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07826010737982378`", ",", "0.7272349344210518`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0799992208771532`", ",", "0.7236617271887775`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.08173833437448262`", ",", "0.7201130877592679`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.08347744787181202`", ",", "0.7165889986453491`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.08521656136914145`", ",", "0.7130894328307008`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.08695567486647086`", ",", "0.7096143542449524`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.08869478836380028`", ",", "0.7061637182230993`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0904339018611297`", ",", "0.7027374719492779`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.09217301535845912`", ",", "0.6993355548850839`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.09391212885578853`", ",", "0.6959578991825649`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.09565124235311796`", ",", "0.692604430082145`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.09739035585044738`", ",", "0.689275066295712`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.09912946934777679`", ",", "0.6859697203751649`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10086858284510619`", ",", "0.6826882990667096`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10260769634243562`", ",", "0.6794307036512565`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10434680983976503`", ",", "0.6761968302712251`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10608592333709445`", ",", "0.6729865702441511`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10782503683442388`", ",", "0.6697998103634144`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10956415033175329`", ",", "0.6666364331864857`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1113032638290827`", ",", "0.6634963173110593`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.11304237732641213`", ",", "0.660379337639422`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.11478149082374155`", ",", "0.6572853656314739`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.11652060432107096`", ",", "0.6542142695467307`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.11825971781840039`", ",", "0.6511659146756962`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1199988313157298`", ",", "0.648140163560983`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.12173794481305922`", ",", "0.6451368762085028`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.12347705831038862`", ",", "0.6421559102891228`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.12521617180771805`", ",", "0.6391971213311074`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.12695528530504746`", ",", "0.6362603629036923`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.12869439880237687`", ",", "0.6333454867921271`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1304335122997063`", ",", "0.6304523431645079`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1321726257970357`", ",", "0.6275807807307134`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.13391173929436515`", ",", "0.6247306468937636`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.13565085279169456`", ",", "0.6219017878938773`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.13738996628902397`", ",", "0.6190940489455399`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1391290797863534`", ",", "0.6163072743678579`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1408681932836828`", ",", "0.6135413077085965`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.14260730678101222`", ",", "0.610795991861653`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.14434642027834166`", ",", "0.6080711691788606`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.14608553377567104`", ",", "0.6053666815754661`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.14782464727300046`", ",", "0.6033092238826214`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.14956376077032987`", ",", "0.6015620032334064`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.15130287426765932`", ",", "0.5998194716593734`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.15304198776498873`", ",", "0.598081664129754`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.15478110126231814`", ",", "0.5963486145687737`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.15652021475964756`", ",", "0.5946203558675882`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.15825932825697697`", ",", "0.5928969198963091`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1599984417543064`", ",", "0.5911783375161311`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.16173755525163583`", ",", "0.5894646385915139`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.16347666874896524`", ",", "0.5877558520024488`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.16521578224629466`", ",", "0.5860520056567802`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.16695489574362404`", ",", "0.5843531265025739`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.16869400924095349`", ",", "0.5826592405405373`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1704331227382829`", ",", "0.5809703728364766`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1721722362356123`", ",", "0.579286547533777`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.17391134973294173`", ",", "0.5776077878659134`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.17565046323027114`", ",", "0.5759341161689715`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.17738957672760056`", ",", "0.5742655538941891`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.17912869022492997`", ",", "0.5726021216204789`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1808678037222594`", ",", "0.5709438390669752`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.18260691721958883`", ",", "0.5692907251055408`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.18434603071691824`", ",", "0.5676427977733014`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.18608514421424766`", ",", "0.5660000742851026`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.18782425771157707`", ",", "0.564362571045989`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.18956337120890648`", ",", "0.5627303036636278`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.19130248470623593`", ",", "0.5611032869607071`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.19304159820356534`", ",", "0.5594815349872673`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.19478071170089475`", ",", "0.5578650610330236`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.19651982519822417`", ",", "0.556253877639615`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.19825893869555358`", ",", "0.5546479966127844`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.199998052192883`", ",", "0.5530474290345401`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.20173716569021238`", ",", "0.5514521852752035`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2034762791875418`", ",", "0.5498622750054245`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.20521539268487124`", ",", "0.5482777072081225`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.20695450618220065`", ",", "0.5466984901903325`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.20869361967953007`", ",", "0.5451246315949825`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.21043273317685948`", ",", "0.5435561384126071`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2121718466741889`", ",", "0.541993016992943`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2139109601715183`", ",", "0.5404352730564612`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.21565007366884775`", ",", "0.5388829117058132`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.21738918716617717`", ",", "0.5373359374371582`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.21912830066350658`", ",", "0.5357943541514144`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.220867414160836`", ",", "0.5342581651654169`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2226065276581654`", ",", "0.5327273732229533`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.22434564115549482`", ",", "0.53120198050573`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.22608475465282427`", ",", "0.5296819886441995`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.22782386815015368`", ",", "0.5281673987283093`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2295629816474831`", ",", "0.526658211318134`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2313020951448125`", ",", "0.525154426454394`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.23304120864214192`", ",", "0.5236560436688749`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.23478032213947134`", ",", "0.5221630619947224`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.23651943563680078`", ",", "0.5206754799766398`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2382585491341302`", ",", "0.5191932956809625`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2399976626314596`", ",", "0.5177165067056184`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24173677612878902`", ",", "0.5162451101899728`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24347588962611844`", ",", "0.5147791028245683`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24521500312344782`", ",", "0.5133184808607258`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24695411662077724`", ",", "0.5118632401200576`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24869323011810665`", ",", "0.5104133760038284`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2504323436154361`", ",", "0.5089688835022352`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2521714571127655`", ",", "0.5075297572035322`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2539105706100949`", ",", "0.506095991303078`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.25564968410742434`", ",", "0.5046675796121993`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.25738879760475375`", ",", "0.5032445155670613`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.25912791110208316`", ",", "0.5018267922371953`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2608670245994126`", ",", "0.5004144023342155`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.262606138096742`", ",", "0.4990073382201158`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2643452515940714`", ",", "0.49760559191566567`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2660843650914008`", ",", "0.4962091551085317`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2678234785887303`", ",", "0.4948180191614222`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2695625920860597`", ",", "0.4934321751200046`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2713017055833891`", ",", "0.49206348356777085`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.27304081908071853`", ",", "0.4906945353397919`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.27477993257804795`", ",", "0.4893418367472052`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.27651904607537736`", ",", "0.48798946021540435`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2782581595727068`", ",", "0.48664217449114433`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2799972730700362`", ",", "0.4853162986159373`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2817363865673656`", ",", "0.48398517697272636`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.283475500064695`", ",", "0.4826744182685577`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.28521461356202443`", ",", "0.48135915620988545`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.28695372705935385`", ",", "0.4800632050607836`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2886928405566833`", ",", "0.4787635062272204`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2904319540540127`", ",", "0.4774820623736228`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2921710675513421`", ",", "0.4761976382624168`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2939101810486715`", ",", "0.47493041044391526`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2956492945460009`", ",", "0.4736609801401085`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.29738840804333033`", ",", "0.47240768575443504`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.29912752154065975`", ",", "0.4711529756729165`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.30086663503798916`", ",", "0.469902827146119`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.30260574853531863`", ",", "0.4686730840883072`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.30434486203264804`", ",", "0.46743730985084175`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.30608397552997746`", ",", "0.46622077947991714`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3078230890273069`", ",", "0.4649991217694095`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3095622025246363`", ",", "0.46379555028215713`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3113013160219657`", ",", "0.4625877578943334`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3130404295192951`", ",", "0.46139689876692636`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.31477954301662453`", ",", "0.46020272683886143`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.31651865651395394`", ",", "0.45902434056135144`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.31825777001128336`", ",", "0.45784355036328994`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3199968835086128`", ",", "0.4566669349629783`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3217359970059422`", ",", "0.45550976292089596`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.32347511050327166`", ",", "0.45434622606477637`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.32521422400060107`", ",", "0.45320091122254413`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3269533374979305`", ",", "0.45205022747557655`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3286924509952599`", ",", "0.45091655381906737`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3304315644925893`", ",", "0.4497785032538374`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.33217067798991873`", ",", "0.4486562607005976`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3339097914872481`", ",", "0.4475306287215354`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3356489049845775`", ",", "0.4464088918860667`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.33738801848190697`", ",", "0.44530619008640293`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3391271319792364`", ",", "0.44419659833843783`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3408662454765658`", ",", "0.4431047840792436`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3426053589738952`", ",", "0.44200713442010175`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3443444724712246`", ",", "0.4409260176056615`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.34608358596855404`", ",", "0.43984011183857197`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.34782269946588346`", ",", "0.4387695074115273`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3495618129632129`", ",", "0.43769515199267195`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3513009264605423`", ",", "0.4366244366293486`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35304003995787175`", ",", "0.43557188565672167`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3547791534552011`", ",", "0.4345124731525284`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3565182669525305`", ",", "0.4334699526770064`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35825738044985994`", ",", "0.43242165964160095`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35999649394718936`", ",", "0.43138900167999294`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3617356074445188`", ",", "0.43035164892546296`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3634747209418482`", ",", "0.42931775763050506`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.36521383443917765`", ",", "0.4283021022059311`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.366952947936507`", ",", "0.42727892145308144`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3686920614338365`", ",", "0.4262726887925472`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.37043117493116584`", ",", "0.4252600485882785`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3721702884284953`", ",", "0.4242630858474471`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3739094019258247`", ",", "0.4232608200018064`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.37564851542315414`", ",", "0.42226184843903936`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.37738762892048355`", ",", "0.42128092415427865`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.37912674241781297`", ",", "0.42029211333871275`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3808658559151424`", ",", "0.41932005676895556`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.38260496941247185`", ",", "0.41834124885365365`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3843440829098012`", ",", "0.41737792060813583`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3860831964071307`", ",", "0.41640896119592075`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.38782230990446004`", ",", "0.41544313939840927`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3895614234017895`", ",", "0.41449496330174684`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.39130053689911887`", ",", "0.4135387910774537`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.39303965039644834`", ",", "0.41258570211010004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.39477876389377775`", ",", "0.411635689845839`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.39651787739110717`", ",", "0.41068874765376606`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3982569908884366`", ",", "0.4097448688278186`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.399996104385766`", ",", "0.408804046588652`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4017352178830954`", ",", "0.4079371246230856`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.40347433138042477`", ",", "0.4070184483803351`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.40521344487775424`", ",", "0.40610264832919885`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4069525583750836`", ",", "0.4051897186716853`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.40869167187241306`", ",", "0.40427965353936535`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4104307853697425`", ",", "0.4033724469950384`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4121698988670719`", ",", "0.40246809303436215`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4139090123644013`", ",", "0.40156658558746916`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4156481258617308`", ",", "0.40066791852055583`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.41738723935906014`", ",", "0.39977208563745026`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4191263528563896`", ",", "0.39887908068115563`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.42086546635371896`", ",", "0.3979888973353778`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.42260457985104843`", ",", "0.3971015292260254`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4243436933483778`", ",", "0.39621696992269295`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.42608280684570726`", ",", "0.39533521294011453`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4278219203430366`", ",", "0.39445625173960985`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4295610338403661`", ",", "0.39358007973049614`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4313001473376955`", ",", "0.39270669027148586`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4330392608350249`", ",", "0.39197738832220697`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.43477837433235433`", ",", "0.391137520496212`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4365174878296838`", ",", "0.39030014818643266`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.43825660132701316`", ",", "0.38946526659174696`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.43999571482434263`", ",", "0.38863287085712617`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.441734828321672`", ",", "0.38780295607483906`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.44347394181900146`", ",", "0.38697551728564017`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4452130553163308`", ",", "0.38615054947994065`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.44695216881366023`", ",", "0.38532804759896855`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.44869128231098965`", ",", "0.384508006535909`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.45043039580831906`", ",", "0.38369042113703156`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.45216950930564853`", ",", "0.38287528620280276`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4539086228029779`", ",", "0.38206259648897967`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.45564773630030736`", ",", "0.3812523467076968`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4573868497976367`", ",", "0.38044453152853186`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4591259632949662`", ",", "0.37963914557955525`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.46086507679229555`", ",", "0.3788361834483752`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.462604190289625`", ",", "0.37803563968315546`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4643433037869544`", ",", "0.3772375087936298`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.46608241728428385`", ",", "0.3764417852520955`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.46782153078161326`", ",", "0.37564846349439884`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4695606442789427`", ",", "0.3748575379208998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4712997577762721`", ",", "0.3740690028974295`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.47303887127360156`", ",", "0.3732828527562305`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4747779847709309`", ",", "0.3724990817968876`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4765170982682604`", ",", "0.37186610476874116`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.47825621176558974`", ",", "0.37111046412025395`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4799953252629192`", ",", "0.37035697367773035`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4817344387602486`", ",", "0.3696056291613118`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.48347355225757804`", ",", "0.3688564262552687`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4852126657549074`", ",", "0.3681093606088077`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.48695177925223687`", ",", "0.3673644278368803`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4886908927495663`", ",", "0.36662162352097283`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.49043000624689564`", ",", "0.3658809432098886`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4921691197442251`", ",", "0.3651423824205242`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4939082332415545`", ",", "0.36440593663862597`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.49564734673888394`", ",", "0.36367160131955056`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4973864602362133`", ",", "0.36293937188900016`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.49912557373354277`", ",", "0.36220924374376207`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5008646872308722`", ",", "0.3614812122524276`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5026038007282017`", ",", "0.36075527275610675`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.504342914225531`", ",", "0.3600314205691356`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5060820277228605`", ",", "0.35930965097976775`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5078211412201898`", ",", "0.3585899592508637`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5095602547175193`", ",", "0.3578723406205615`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5112993682148487`", ",", "0.3571567903029511`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5130384817121781`", ",", "0.35644330348872855`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5147775952095075`", ",", "0.3557318753458454`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.516516708706837`", ",", "0.35502250102015065`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5182558222041663`", ",", "0.3543151756360208`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5199949357014958`", ",", "0.35375115872459617`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5217340491988252`", ",", "0.35306773574756145`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7766012025369606`*^9, 3.8116365150407124`*^9, 
  3.8116366629909773`*^9, 3.8121480792957864`*^9, 3.812149471138142*^9, 
  3.8121550056121955`*^9, 3.812158755574271*^9, 3.812158812204663*^9},
 CellLabel->
  "Out[1556]=",ExpressionUUID->"044d064c-3610-4460-8ffe-5abdc38100d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.9999838651614458`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0017391134973294173`", ",", "0.9927654147137983`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.0034782269946588345`", ",", "0.9855544105388705`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.005217340491988251`", ",", "0.9732283796600043`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.006956453989317669`", ",", "0.9643413400552032`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.008695567486647087`", ",", "0.9554790788217608`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.010434680983976503`", ",", "0.946646900148035`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.012173794481305922`", ",", "0.9378499055905569`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.013912907978635338`", ",", "0.929092967871591`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.015652021475964756`", ",", "0.9203807098603748`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.017391134973294173`", ",", "0.9117174886840925`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.01913024847062359`", ",", "0.9031073847236826`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.020869361967953005`", ",", "0.8945541951110657`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.022608475465282427`", ",", "0.8860614312555278`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.024347588962611844`", ",", "0.8776323198810939`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.02608670245994126`", ",", "0.8692698070450894`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.027825815957270676`", ",", "0.8609765646220564`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.029564929454600097`", ",", "0.8527549987688277`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.03130404295192951`", ",", "0.8446072599291063`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.033043156449258926`", ",", "0.8365352539842168`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.03478226994658835`", ",", "0.8285867064393905`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.03652138344391776`", ",", "0.8208296100041664`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.03826049694124718`", ",", "0.813161756866476`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0399996104385766`", ",", "0.8055832520130448`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04173872393590601`", ",", "0.7980940504232326`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04347783743323543`", ",", "0.7906939745451463`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04521695093056485`", ",", "0.7833827299455407`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04695606442789427`", ",", "0.7761599193116911`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04869517792522369`", ",", "0.7690250549711228`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.050434291422553096`", ",", "0.7619775700819079`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05217340491988252`", ",", "0.7550168286334864`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05391251841721194`", ",", "0.7481421343827801`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05565163191454135`", ",", "0.7413527388401054`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.057390745411870774`", ",", "0.7346478484059985`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.059129858909200195`", ",", "0.728026630750102`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.06086897240652961`", ",", "0.7214882205130364`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.06260808590385902`", ",", "0.7150317244037367`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.06434719940118844`", ",", "0.7086562257563966`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.06608631289851785`", ",", "0.7023607886043293`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.06782542639584728`", ",", "0.6961444613215503`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0695645398931767`", ",", "0.6900062798774536`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07130365339050611`", ",", "0.6839452707447634`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07304276688783552`", ",", "0.6779604534966825`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07478188038516494`", ",", "0.6720508431251986`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07652099388249436`", ",", "0.666215452109012`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07826010737982378`", ",", "0.6604532922565471`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0799992208771532`", ",", "0.6547633763467539`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.08173833437448262`", ",", "0.6491447195880109`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.08347744787181202`", ",", "0.6435963409133225`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.08521656136914145`", ",", "0.6381172641281039`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.08695567486647086`", ",", "0.6327065189251627`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.08869478836380028`", ",", "0.6273631417799946`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0904339018611297`", ",", "0.6220861767381916`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.09217301535845912`", ",", "0.6168746761055606`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.09391212885578853`", ",", "0.6117277010505001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.09565124235311796`", ",", "0.6066443221272511`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.09739035585044738`", ",", "0.6016236197277516`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.09912946934777679`", ",", "0.5966646844691388`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10086858284510619`", ",", "0.5917666175231792`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10260769634243562`", ",", "0.5869285308933703`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10434680983976503`", ",", "0.5821495476448691`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10608592333709445`", ",", "0.5774288020919391`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10782503683442388`", ",", "0.5727654399471193`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10956415033175329`", ",", "0.5681586184359793`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1113032638290827`", ",", "0.5636075063809138`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.11304237732641213`", ",", "0.5591112842571424`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.11478149082374155`", ",", "0.554669144223747`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.11652060432107096`", ",", "0.5502802901323567`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.11825971781840039`", ",", "0.5459439375158114`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1199988313157298`", ",", "0.5416593135589494`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.12173794481305922`", ",", "0.5374256570534401`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.12347705831038862`", ",", "0.53324221833842`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.12521617180771805`", ",", "0.5291082592285186`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.12695528530504746`", ",", "0.5250230529307305`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.12869439880237687`", ",", "0.5209858839514279`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1304335122997063`", ",", "0.5169960479947092`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1321726257970357`", ",", "0.5130528518531656`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.13391173929436515`", ",", "0.5091556132920284`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.13565085279169456`", ",", "0.5053036609276003`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.13738996628902397`", ",", "0.5014963341007619`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1391290797863534`", ",", "0.4977329827462763`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1408681932836828`", ",", "0.49401296725856425`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.14260730678101222`", ",", "0.4903356583545291`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.14434642027834166`", ",", "0.4867004369339786`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.14608553377567104`", ",", "0.4831066939381258`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.14782464727300046`", ",", "0.47955383020660947`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.14956376077032987`", ",", "0.47604125633342664`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.15130287426765932`", ",", "0.4727910410945767`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.15304198776498873`", ",", "0.4695567494413806`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.15478110126231814`", ",", "0.46635626461981605`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.15652021475964756`", ",", "0.4631891244097097`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.15825932825697697`", ",", "0.460054874893181`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1599984417543064`", ",", "0.4569530702352279`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.16173755525163583`", ",", "0.45388327247344884`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.16347666874896524`", ",", "0.45084505131634467`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.16521578224629466`", ",", "0.4478379839497163`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.16695489574362404`", ",", "0.4448616548507379`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.16869400924095349`", ",", "0.44191565560922186`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1704331227382829`", ",", "0.43899958475570666`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1721722362356123`", ",", "0.43611304759600145`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.17391134973294173`", ",", "0.43325565605183813`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.17565046323027114`", ",", "0.43042702850730485`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.17738957672760056`", ",", "0.42762678966073364`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.17912869022492997`", ",", "0.42485457038181773`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1808678037222594`", ",", "0.4221100075736248`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.18260691721958883`", ",", "0.41939274403931925`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.18434603071691824`", ",", "0.41670242835330895`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.18608514421424766`", ",", "0.41403871473664566`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.18782425771157707`", ",", "0.41140126293643475`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.18956337120890648`", ",", "0.40878973810908104`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.19130248470623593`", ",", "0.4062038107072007`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.19304159820356534`", ",", "0.40364315637000747`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.19478071170089475`", ",", "0.401107455817022`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.19651982519822417`", ",", "0.39859639474497033`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.19825893869555358`", ",", "0.3961096637277014`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.199998052192883`", ",", "0.39364695811901806`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.20173716569021238`", ",", "0.3912079779582771`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2034762791875418`", ",", "0.38879242787865453`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.20521539268487124`", ",", "0.3864000170179487`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.20695450618220065`", ",", "0.3840304589318352`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.20869361967953007`", ",", "0.3816834715094568`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.21043273317685948`", ",", "0.3793587768912662`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2121718466741889`", ",", "0.3770561013890269`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2139109601715183`", ",", "0.3747751754078872`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.21565007366884775`", ",", "0.37251573337044896`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.21738918716617717`", ",", "0.37027751364277217`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.21912830066350658`", ",", "0.36806025846219637`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.220867414160836`", ",", "0.3658637138669735`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2226065276581654`", ",", "0.3638308543293586`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.22434564115549482`", ",", "0.36180311788893116`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.22608475465282427`", ",", "0.3597924614705814`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.22782386815015368`", ",", "0.35779870597813823`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2295629816474831`", ",", "0.35582167450141644`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2313020951448125`", ",", "0.35386119228316104`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.23304120864214192`", ",", "0.3519170866868111`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.23478032213947134`", ",", "0.3499891871650397`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.23651943563680078`", ",", "0.34807732522902923`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2382585491341302`", ",", "0.34618133441847687`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2399976626314596`", ",", "0.34430105027225455`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24173677612878902`", ",", "0.34243631029974764`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24347588962611844`", ",", "0.3405869539527948`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24521500312344782`", ",", "0.3387528225982437`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24695411662077724`", ",", "0.33693375949108073`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24869323011810665`", ",", "0.3351296097481087`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2504323436154361`", ",", "0.3333402203221558`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2521714571127655`", ",", "0.331565439976805`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2539105706100949`", ",", "0.32980511926161393`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.25564968410742434`", ",", "0.3280591104878038`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.25738879760475375`", ",", "0.32632726770441356`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.25912791110208316`", ",", "0.32460944667489733`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2608670245994126`", ",", "0.32290550485414593`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.262606138096742`", ",", "0.3212153013659199`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2643452515940714`", ",", "0.3195386969806925`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2660843650914008`", ",", "0.31787555409386803`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2678234785887303`", ",", "0.31622573670437903`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2695625920860597`", ",", "0.3145891103936539`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2713017055833891`", ",", "0.3129655423049279`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.27304081908071853`", ",", "0.311354901122897`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.27477993257804795`", ",", "0.3097570570537138`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.27651904607537736`", ",", "0.308171881805296`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2782581595727068`", ",", "0.3065992485679512`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2799972730700362`", ",", "0.30503903199531535`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2817363865673656`", ",", "0.30349110818557634`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.283475500064695`", ",", "0.3019553546630004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.28521461356202443`", ",", "0.30065643178186163`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.28695372705935385`", ",", "0.2992293570590284`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2886928405566833`", ",", "0.29781238535847265`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2904319540540127`", ",", "0.29640543205804215`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2921710675513421`", ",", "0.2950084132275632`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2939101810486715`", ",", "0.29362124562595004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2956492945460009`", ",", "0.29224384669822356`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.29738840804333033`", ",", "0.29087613457244543`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.29912752154065975`", ",", "0.28951802805656324`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.30086663503798916`", ",", "0.2881694466351823`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.30260574853531863`", ",", "0.2868303104662575`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.30434486203264804`", ",", "0.2855005403777161`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.30608397552997746`", ",", "0.2841800578640088`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3078230890273069`", ",", "0.2828687850825986`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3095622025246363`", ",", "0.28156664485038774`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3113013160219657`", ",", "0.28027356064008224`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3130404295192951`", ",", "0.27898945657650676`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.31477954301662453`", ",", "0.2777142574328645`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.31651865651395394`", ",", "0.27644788862694547`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.31825777001128336`", ",", "0.275190276217293`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3199968835086128`", ",", "0.2739413468993249`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3217359970059422`", ",", "0.27270102800141005`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.32347511050327166`", ",", "0.2714692474809147`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.32521422400060107`", ",", "0.27024593392020546`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3269533374979305`", ",", "0.2690310165226242`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3286924509952599`", ",", "0.2678244251084294`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3304315644925893`", ",", "0.2666260901107126`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.33217067798991873`", ",", "0.26543594257128367`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3339097914872481`", ",", "0.2642539141365381`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3356489049845775`", ",", "0.2630799370532976`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.33738801848190697`", ",", "0.2619139441646342`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3391271319792364`", ",", "0.2609113016575646`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3408662454765658`", ",", "0.2598221824244904`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3426053589738952`", ",", "0.25873974768911767`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3443444724712246`", ",", "0.25766395128767894`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.34608358596855404`", ",", "0.25659474729885945`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.34782269946588346`", ",", "0.25553209004594646`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3495618129632129`", ",", "0.2544759340988392`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3513009264605423`", ",", "0.2534262342759219`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35304003995787175`", ",", "0.2523829456457978`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3547791534552011`", ",", "0.2513460235289021`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3565182669525305`", ",", "0.25031542349898983`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35825738044985994`", ",", "0.24929110138449628`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35999649394718936`", ",", "0.24827301326979367`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3617356074445188`", ",", "0.2472611154963248`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3634747209418482`", ",", "0.24625536466363918`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.36521383443917765`", ",", "0.24525571763031584`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.366952947936507`", ",", "0.2442621315147946`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3686920614338365`", ",", "0.24327456369610112`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.37043117493116584`", ",", "0.24229297181448828`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3721702884284953`", ",", "0.2413173137719783`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3739094019258247`", ",", "0.2403475477328274`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.37564851542315414`", ",", "0.23938363212389857`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.37738762892048355`", ",", "0.238425525634955`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.37912674241781297`", ",", "0.23747318721888344`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3808658559151424`", ",", "0.23652657609183148`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.38260496941247185`", ",", "0.23558565173328005`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3843440829098012`", ",", "0.2346503738860427`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3860831964071307`", ",", "0.23372070255620303`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.38782230990446004`", ",", "0.23279659801298025`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3895614234017895`", ",", "0.23187802078853725`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.39130053689911887`", ",", "0.23113178282643831`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.39303965039644834`", ",", "0.23026909852850264`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.39477876389377775`", ",", "0.2294110927844255`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.39651787739110717`", ",", "0.2285577382902646`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3982569908884366`", ",", "0.22770900782703796`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.399996104385766`", ",", "0.22686487426317015`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4017352178830954`", ",", "0.22602531055683506`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.40347433138042477`", ",", "0.22519028975820166`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.40521344487775424`", ",", "0.22435978501158738`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4069525583750836`", ",", "0.2235337695575198`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.40869167187241306`", ",", "0.22271221673470787`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4104307853697425`", ",", "0.2218950999819277`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4121698988670719`", ",", "0.2210823928398271`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4139090123644013`", ",", "0.220274068952645`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4156481258617308`", ",", "0.21947010206985507`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.41738723935906014`", ",", "0.21867046604773233`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4191263528563896`", ",", "0.21787513485084242`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.42086546635371896`", ",", "0.2170840825534669`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.42260457985104843`", ",", "0.21629728334094822`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4243436933483778`", ",", "0.21551471151097523`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.42608280684570726`", ",", "0.21473634147479792`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4278219203430366`", ",", "0.21396214775838207`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4295610338403661`", ",", "0.2131921050034986`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4313001473376955`", ",", "0.21242618796875734`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4330392608350249`", ",", "0.21166437153057482`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.43477837433235433`", ",", "0.21090663068409676`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4365174878296838`", ",", "0.21015294054405442`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.43825660132701316`", ",", "0.20940327634557687`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.43999571482434263`", ",", "0.2086576134449456`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.441734828321672`", ",", "0.20810191892323515`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.44347394181900146`", ",", "0.20739812575367567`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4452130553163308`", ",", "0.20669775708368254`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.44695216881366023`", ",", "0.20600079567094742`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.44869128231098965`", ",", "0.20530722429960568`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.45043039580831906`", ",", "0.20461702578214946`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.45216950930564853`", ",", "0.20393018296128318`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4539086228029779`", ",", "0.20324667871170998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.45564773630030736`", ",", "0.2025664959418665`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4573868497976367`", ",", "0.2018896175955951`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4591259632949662`", ",", "0.2012160266537607`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.46086507679229555`", ",", "0.20054570613581202`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.462604190289625`", ",", "0.19987863910129178`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4643433037869544`", ",", "0.19921480865129038`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.46608241728428385`", ",", "0.19855419792985307`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.46782153078161326`", ",", "0.19789679012533312`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4695606442789427`", ",", "0.19724256847170185`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4712997577762721`", ",", "0.19659151624980709`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.47303887127360156`", ",", "0.1959436167885874`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4747779847709309`", ",", "0.19529885346624343`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4765170982682604`", ",", "0.1946572097113629`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.47825621176558974`", ",", "0.19401866900400444`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4799953252629192`", ",", "0.1933832148767416`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4817344387602486`", ",", "0.1927508309156648`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.48347355225757804`", ",", "0.1921215007613437`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4852126657549074`", ",", "0.1914952081097555`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.48695177925223687`", ",", "0.1908719367131707`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4886908927495663`", ",", "0.1904203639529709`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.49043000624689564`", ",", "0.18982975596159257`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4921691197442251`", ",", "0.18924175777205554`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4939082332415545`", ",", "0.1886563579066758`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.49564734673888394`", ",", "0.18807354489027273`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4973864602362133`", ",", "0.1874933072515922`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.49912557373354277`", ",", "0.18691563352469898`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5008646872308722`", ",", "0.18634051225032078`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5026038007282017`", ",", "0.18576793197716357`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.504342914225531`", ",", "0.18519788126318104`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5060820277228605`", ",", "0.1846303486768135`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5078211412201898`", ",", "0.18406532279819132`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5095602547175193`", ",", "0.18350279222030041`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5112993682148487`", ",", "0.18294274555011503`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5130384817121781`", ",", "0.18238517140970034`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5147775952095075`", ",", "0.18183005843727829`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.516516708706837`", ",", "0.18127739528826559`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5182558222041663`", ",", "0.1807271706362783`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5199949357014958`", ",", "0.1801793731741086`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5217340491988252`", ",", "0.17963399161466942`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7766012025369606`*^9, 3.8116365150407124`*^9, 
  3.8116366629909773`*^9, 3.8121480792957864`*^9, 3.812149471138142*^9, 
  3.8121550056121955`*^9, 3.812158755574271*^9, 3.81215881223469*^9},
 CellLabel->
  "Out[1557]=",ExpressionUUID->"52a99d17-9b00-44d3-a179-b7ea9086bd98"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", "15.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"LineLegend", "[", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Darker", "[", "Red", "]"}], ",", "Blue", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Darker", "[", "Gray", "]"}], ",", "Dashed"}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<4 Level\>\"", ",", 
         RowBox[{"Darker", "[", "Red", "]"}]}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<3 Level\>\"", ",", "Blue"}], "]"}]}], "}"}], ",", 
     RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"td1", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nf1", ",", "nf2"}], "}"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", "40", "]"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{"legend", ",", 
       RowBox[{"{", 
        RowBox[{"Right", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
         RowBox[{"Darker", "[", "Red", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Blue"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Black", ",", 
         "Dashed"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Decoherence [\[Gamma]]\>\"", ",", "50", ",", "Black"}], 
        "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Transparancy\>\"", ",", "50", ",", "Black"}], "]"}]}], 
      "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.0", ",", "1.0"}], "}"}]}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7766009559073954`*^9, 3.7766009580493746`*^9}, {
  3.7766012919621344`*^9, 3.776601308990782*^9}, {3.811636519476532*^9, 
  3.811636519721755*^9}, {3.811636673783283*^9, 3.811636673885376*^9}, {
  3.812149479955871*^9, 3.812149485308349*^9}, {3.8121551887847023`*^9, 
  3.812155220747693*^9}, {3.8121587323431892`*^9, 3.8121587326704865`*^9}},
 CellLabel->
  "In[1558]:=",ExpressionUUID->"a03f00d6-aef5-43dc-9c08-f9718ce75ebd"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
       0.007333333333333334], AbsoluteThickness[3], LineBox[CompressedData["
1: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
fSFczI9IOffppF8JYVZ56+iDKS78D6ocWV8=
        "]]}, 
      {RGBColor[0, 0, 1], PointSize[0.007333333333333334], AbsoluteThickness[
       3], LineBox[CompressedData["
1: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
        "]]}}, {{}, {}}}, InsetBox[
     TemplateBox[{
       StyleBox["\"4 Level\"", 
        RGBColor[
         Rational[2, 3], 0, 0], StripOnInput -> False], 
       StyleBox["\"3 Level\"", 
        RGBColor[0, 0, 1], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontSize -> 45, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0", ",", "0"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.33333333333333337`", ",", 
                    "0.33333333333333337`", ",", "0.33333333333333337`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}]}], "]"}]& )], 
     Scaled[{0.99, 0.8}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"Transparancy\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Decoherence [\[Gamma]]\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
   FrameTicks->{{True, True}, {True, True}},
   FrameTicksStyle->Directive[40],
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->1020,
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 0.5}, {0., 1.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[3], 
          RGBColor[
           Rational[2, 3], 0, 0]], 
         Line[CompressedData["
1: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
fSFczI9IOffppF8JYVZ56+iDKS78D6ocWV8=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1: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
          "]]}}}, {{}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {False, False}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["Transparancy", 50, 
          GrayLevel[0]], None}, {
         Style["Decoherence [\[Gamma]]", 50, 
          GrayLevel[0]], None}}, FrameTicks -> {{True, True}, {True, True}}, 
      FrameTicksStyle -> Directive[40], GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 0.5}, {0., 1.}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[
          Rational[2, 3], 0, 0], 
         AbsoluteThickness[10]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[10]], 
        Directive[{
          RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
          Dashing[{Small, Small}]}, 
         AbsoluteThickness[10]]}, {
        Style["4 Level", 
         RGBColor[
          Rational[2, 3], 0, 0]], 
        Style["3 Level", 
         RGBColor[0, 0, 1]]}, Joined -> {True, True}, 
       LabelStyle -> {FontSize -> 45}, LegendFunction -> "Frame", 
       LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       LegendMarkerSize -> Large]], {Right, 0.8}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.776601288827533*^9, 3.7766013096248927`*^9}, {
   3.8116365073877783`*^9, 3.8116365199069233`*^9}, {3.8116366658871746`*^9, 
   3.8116366740745487`*^9}, 3.812148082780949*^9, {3.812149471714665*^9, 
   3.8121494857088304`*^9}, 3.812155006204734*^9, {3.81215518945731*^9, 
   3.812155221151059*^9}, 3.812158756176818*^9, 3.812158812823224*^9},
 CellLabel->
  "Out[1560]=",ExpressionUUID->"b78795b7-c818-4a54-be1c-ccccacea90bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SetDirectory", "[", 
  "\"\<C:\\\\Users\\\\Saesun Kim\\\\Desktop\\\\Saesun Kim\\\\Files\\\\EIT \
file\\\\Fig\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Figure42U.eps\>\"", ",", "td1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8116367058233566`*^9, 3.8116367087039795`*^9}, 
   3.8121588249051886`*^9},
 CellLabel->
  "In[1561]:=",ExpressionUUID->"cf2893b1-2ae9-485b-8ce4-b5c08ca78033"],

Cell[BoxData["\<\"C:\\\\Users\\\\Saesun Kim\\\\Desktop\\\\Saesun Kim\\\\Files\
\\\\EIT file\\\\Fig\"\>"], "Output",
 CellChangeTimes->{3.8116367100191765`*^9, 3.8121480964243307`*^9, 
  3.8121495026554513`*^9, 3.8121552249745708`*^9, 3.8121588257899914`*^9},
 CellLabel->
  "Out[1561]=",ExpressionUUID->"5b38b04f-4386-4771-af4e-fa6cd3f88189"],

Cell[BoxData["\<\"Figure42U.eps\"\>"], "Output",
 CellChangeTimes->{3.8116367100191765`*^9, 3.8121480964243307`*^9, 
  3.8121495026554513`*^9, 3.8121552249745708`*^9, 3.812158826502639*^9},
 CellLabel->
  "Out[1562]=",ExpressionUUID->"74e9534f-193b-4ba2-a0d2-2e68682ebc4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", "15.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"LineLegend", "[", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Darker", "[", "Red", "]"}], ",", "Blue", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Darker", "[", "Gray", "]"}], ",", "Dashed"}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<4 Level\>\"", ",", 
         RowBox[{"Darker", "[", "Red", "]"}]}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<3 Level\>\"", ",", "Blue"}], "]"}]}], "}"}], ",", 
     RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"td1", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Tv\[Gamma]4", "[", "p", "]"}], ",", 
      RowBox[{"Tv\[Gamma]3", "[", "p", "]"}]}], "}"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", "40", "]"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{"legend", ",", 
       RowBox[{"{", 
        RowBox[{"Right", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
         RowBox[{"Darker", "[", "Red", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Blue"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Black", ",", 
         "Dashed"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<Decoherence \[Gamma][MHz]\>\"", ",", "50", ",", "Black"}], "]"}],
        ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Transparancy\>\"", ",", "50", ",", "Black"}], "]"}]}], 
      "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1.0"}], "}"}]}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.765829631536768*^9, 3.765829632743741*^9}, {
   3.7658296806517997`*^9, 3.765829681665415*^9}, {3.7658297444089584`*^9, 
   3.7658297536539*^9}, {3.7658301588193398`*^9, 3.76583016469881*^9}, {
   3.7658304774870143`*^9, 3.7658304776901264`*^9}, {3.7658305163681355`*^9, 
   3.7658305187534957`*^9}, {3.765830979239729*^9, 3.7658309817344575`*^9}, {
   3.7658310623792453`*^9, 3.7658310658466225`*^9}, {3.7658340572504888`*^9, 
   3.7658340594128723`*^9}, {3.7658820030717735`*^9, 
   3.7658820033426657`*^9}, {3.7658820680004063`*^9, 3.765882070162397*^9}, 
   3.7658821030309505`*^9, {3.7659013294478283`*^9, 3.7659013472121325`*^9}, 
   3.77117226588198*^9, 3.7711723577651076`*^9, {3.771172578739502*^9, 
   3.7711725790313606`*^9}},ExpressionUUID->"982badb5-8f00-4fae-bb36-\
3785b06171c9"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
       0.007333333333333334], AbsoluteThickness[3], LineBox[CompressedData["
1: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
PDA=
        "]]}, 
      {RGBColor[0, 0, 1], PointSize[0.007333333333333334], AbsoluteThickness[
       3], LineBox[CompressedData["
1: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
NzgoyUUPfRIRnLaslp0L/wNN7SBt
        "]]}}, {}, {}, {{}, {}}}, InsetBox[
     TemplateBox[{
       StyleBox["\"4 Level\"", 
        RGBColor[
         Rational[2, 3], 0, 0], StripOnInput -> False], 
       StyleBox["\"3 Level\"", 
        RGBColor[0, 0, 1], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontSize -> 45, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[2/3, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.33333333333333337, 0.33333333333333337, \
0.33333333333333337]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}]}], "]"}]& )], 
     Scaled[{0.99, 0.8}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"Transparancy\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Decoherence \[Gamma][MHz]\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
   FrameTicks->{{True, True}, {True, True}},
   FrameTicksStyle->Directive[40],
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->1020,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 3}, {0, 1.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[3], 
          RGBColor[
           Rational[2, 3], 0, 0]], 
         Line[CompressedData["
1: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
PDA=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1: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
NzgoyUUPfRIRnLaslp0L/wNN7SBt
          "]]}}}, {}, {}, {{}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      AxesOrigin -> {0, 0}, PlotRange -> {{0, 3}, {0, 1.}}, PlotRangeClipping -> 
      True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {False, False}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["Transparancy", 50, 
          GrayLevel[0]], None}, {
         Style["Decoherence \[Gamma][MHz]", 50, 
          GrayLevel[0]], None}}, FrameTicks -> {{True, True}, {True, True}}, 
      FrameTicksStyle -> Directive[40], GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 3}, {0, 1.}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[
          Rational[2, 3], 0, 0], 
         AbsoluteThickness[10]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[10]], 
        Directive[{
          RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
          Dashing[{Small, Small}]}, 
         AbsoluteThickness[10]]}, {
        Style["4 Level", 
         RGBColor[
          Rational[2, 3], 0, 0]], 
        Style["3 Level", 
         RGBColor[0, 0, 1]]}, Joined -> {True, True}, 
       LabelStyle -> {FontSize -> 45}, LegendFunction -> "Frame", 
       LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       LegendMarkerSize -> Large]], {Right, 0.8}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7658291811412697`*^9, 3.765829199257653*^9}, {
   3.765829647521124*^9, 3.7658296819967103`*^9}, {3.7658297451569653`*^9, 
   3.7658297539095774`*^9}, 3.7658298107230415`*^9, 3.765829904553975*^9, 
   3.765830181677425*^9, 3.7658303639720573`*^9, 3.7658304779573884`*^9, 
   3.765830558574026*^9, {3.7658310273797*^9, 3.7658310660963173`*^9}, 
   3.765834438155324*^9, 3.7658820037395844`*^9, 3.7658820704807196`*^9, 
   3.7658821037154865`*^9, 3.765882754518943*^9, {3.7659013324955406`*^9, 
   3.765901347958645*^9}, 3.7711723354594107`*^9, 3.7711725063303804`*^9, 
   3.771172579282241*^9},ExpressionUUID->"3635ba6d-06f7-4c0c-a66a-\
b48650b5b550"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7658290571937065`*^9, 3.7658290841193247`*^9}, 
   3.7658291321097507`*^9},ExpressionUUID->"d0abb309-36a7-47c5-a074-\
bd0a4a41fd28"]
}, Open  ]],

Cell[CellGroupData[{

Cell["P=10\[Gamma]", "Subchapter",
 CellChangeTimes->{{3.7658297991029167`*^9, 3.7658298012631054`*^9}, 
   3.765829915027057*^9, {3.765830698232728*^9, 3.7658307045519304`*^9}, {
   3.7658312751051006`*^9, 
   3.765831275662857*^9}},ExpressionUUID->"7e95eaed-5241-48e0-aade-\
9ff4f4f61e8c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", "65"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tv\[Gamma]4", "[", "p", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{
   RowBox[{"Tv\[Gamma]3", "[", "p", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"Power", "::", "infy"}], "]"}], ";", 
  RowBox[{"Off", "[", 
   RowBox[{"Infinity", "::", "indet"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "list", ",", "list1", ",", "list3", ",", "list4", ",", "EIT", ",", "ABS", 
     ",", "EIT1", ",", "ABS1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"list", "=", 
       RowBox[{"Lev3DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list1", "=", 
       RowBox[{"Lev3DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list3", "=", 
       RowBox[{"Lev4DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list4", "=", 
       RowBox[{"Lev4DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"EIT", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"EIT1", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ABS", "=", 
       RowBox[{
        RowBox[{"list1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list", ",", "EIT"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS1", "=", 
       RowBox[{
        RowBox[{"list4", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list3", ",", "EIT1"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Tv\[Gamma]4", "[", "p", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Tv\[Gamma]4", "[", "p", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]", ",", 
           RowBox[{"1", "-", 
            RowBox[{"EIT1", "/", "ABS1"}]}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Tv\[Gamma]3", "[", "p", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Tv\[Gamma]3", "[", "p", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]", ",", 
           RowBox[{"1", "-", 
            RowBox[{"EIT", "/", "ABS"}]}]}], "}"}]}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0", ",", "10", ",", "0.5"}], "}"}]}], "]"}]}],
   "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.765829089641389*^9, 3.7658292318963723`*^9}, {
  3.7658292853196664`*^9, 3.7658292871639733`*^9}, {3.7658293320655184`*^9, 
  3.7658294847660823`*^9}, {3.765829757651656*^9, 3.7658297653284125`*^9}, {
  3.7658299219744377`*^9, 3.7658299667544694`*^9}, {3.7658300840041547`*^9, 
  3.7658301261594133`*^9}, {3.765830210826744*^9, 3.7658303345335846`*^9}, {
  3.7658304859698343`*^9, 3.7658305295086613`*^9}, {3.7658309469869137`*^9, 
  3.765831003557434*^9}, {3.7658310370777907`*^9, 3.7658310392872553`*^9}, {
  3.765831309057706*^9, 
  3.765831309173689*^9}},ExpressionUUID->"7b339f36-12f4-4d0f-9e6d-\
2cf2f9cb9d80"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", "65"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"LineLegend", "[", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Darker", "[", "Red", "]"}], ",", "Blue", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Darker", "[", "Gray", "]"}], ",", "Dashed"}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<4 Level\>\"", ",", 
         RowBox[{"Darker", "[", "Red", "]"}]}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<3 Level\>\"", ",", "Blue"}], "]"}]}], "}"}], ",", 
     RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Tv\[Gamma]4", "[", "p", "]"}], ",", 
     RowBox[{"Tv\[Gamma]3", "[", "p", "]"}]}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "40", "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"legend", ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "Center"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Blue"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Black", ",", 
        "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Decoherence \[Gamma][MHz]\>\"", ",", "50", ",", "Black"}],
        "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Transparancy\>\"", ",", "50", ",", "Black"}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.0"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.765829631536768*^9, 3.765829632743741*^9}, {
  3.7658296806517997`*^9, 3.765829681665415*^9}, {3.7658297444089584`*^9, 
  3.7658297536539*^9}, {3.7658301588193398`*^9, 3.76583016469881*^9}, {
  3.7658304774870143`*^9, 3.7658304776901264`*^9}, {3.7658305163681355`*^9, 
  3.7658305187534957`*^9}, {3.765830979239729*^9, 3.7658309817344575`*^9}, {
  3.7658310623792453`*^9, 3.7658310658466225`*^9}, {3.765882077356222*^9, 
  3.7658820997714043`*^9}},ExpressionUUID->"d20af0b1-2838-474c-a3cd-\
57d768e4f12b"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
       0.012833333333333334`], AbsoluteThickness[3], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQO2zFNXqBq/s4fwHtjnTGJISel6DeV/sP/4XoA5
bPpLKP+HPdeEvxZM7C+gfAaHR1vPflHf9gzKZ3FgfH5o5rxJT6F8DofIiQJN
HROfQPk8DmkcS9f0r34M5Qs4OKisSN58+xGUL+Rwb/ndSGU5GF/EoSX16iuJ
godQvpjDra1iS9LPP4DyJRzmbb4llmIF40s5/Atx+mYffx/Kl3GI8Tr9jCPm
HpQv59AnFHjHJvMulK/gcOtNjp196x0oX9HhmMGu3pPrbkP5Sg5936cfLHhy
C8pXdnhUcbc8XhXGV3FQWJF2srvgpj0ATnhh2A==
        "]]}, 
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       3], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/SE586YG02R7BjD4AKUf2Dfej/h70uUNXHxZ1g3D
g+9fQPk/7Os8qmrK5Z9B+QwObu9skv1OPobyWRzWHzn/o+bGQyifw+GJ5lZb
a8sHUD6PA0+NV0zatrtQvoBDiu2vWbeSbkP5Qg5FserRZ5NvQvkiDiu4zv7K
WXkdyhdzKGCMVMpXvwblSzh4MP48w3zlCpQv5WDkG+81Y/llKF/GoeSe0yGW
OZegfDmHru6cAN01F6F8BYc3n7apsl65AOUrOsxhlmKJF4DxlRzmJG8/krHn
HJSv7DAlWmkmX/lZKF/FgSGif4mHzxl7APs7XkU=
        "]]}}, {}, {}, {{}, {}}}, InsetBox[
     TemplateBox[{
       StyleBox["\"4 Level\"", 
        RGBColor[
         Rational[2, 3], 0, 0], StripOnInput -> False], 
       StyleBox["\"3 Level\"", 
        RGBColor[0, 0, 1], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontSize -> 45, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[2/3, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.33333333333333337, 0.33333333333333337, \
0.33333333333333337]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}]}], "]"}]& )], 
     Scaled[{0.99, 0.5}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"Transparancy\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Decoherence \[Gamma][MHz]\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
   FrameTicks->{{True, True}, {True, True}},
   FrameTicksStyle->Directive[40],
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->1020,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 10}, {0, 1.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[
           Rational[2, 3], 0, 0]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQO2zFNXqBq/s4fwHtjnTGJISel6DeV/sP/4XoA5
bPpLKP+HPdeEvxZM7C+gfAaHR1vPflHf9gzKZ3FgfH5o5rxJT6F8DofIiQJN
HROfQPk8DmkcS9f0r34M5Qs4OKisSN58+xGUL+Rwb/ndSGU5GF/EoSX16iuJ
godQvpjDra1iS9LPP4DyJRzmbb4llmIF40s5/Atx+mYffx/Kl3GI8Tr9jCPm
HpQv59AnFHjHJvMulK/gcOtNjp196x0oX9HhmMGu3pPrbkP5Sg5936cfLHhy
C8pXdnhUcbc8XhXGV3FQWJF2srvgpj0ATnhh2A==
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/SE586YG02R7BjD4AKUf2Dfej/h70uUNXHxZ1g3D
g+9fQPk/7Os8qmrK5Z9B+QwObu9skv1OPobyWRzWHzn/o+bGQyifw+GJ5lZb
a8sHUD6PA0+NV0zatrtQvoBDiu2vWbeSbkP5Qg5FserRZ5NvQvkiDiu4zv7K
WXkdyhdzKGCMVMpXvwblSzh4MP48w3zlCpQv5WDkG+81Y/llKF/GoeSe0yGW
OZegfDmHru6cAN01F6F8BYc3n7apsl65AOUrOsxhlmKJF4DxlRzmJG8/krHn
HJSv7DAlWmkmX/lZKF/FgSGif4mHzxl7APs7XkU=
          "]]}}}, {}, {}, {{}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      AxesOrigin -> {0, 0}, PlotRange -> {{0, 10}, {0, 1.}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {False, False}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["Transparancy", 50, 
          GrayLevel[0]], None}, {
         Style["Decoherence \[Gamma][MHz]", 50, 
          GrayLevel[0]], None}}, FrameTicks -> {{True, True}, {True, True}}, 
      FrameTicksStyle -> Directive[40], GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 10}, {0, 1.}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[
          Rational[2, 3], 0, 0], 
         AbsoluteThickness[10]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[10]], 
        Directive[{
          RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
          Dashing[{Small, Small}]}, 
         AbsoluteThickness[10]]}, {
        Style["4 Level", 
         RGBColor[
          Rational[2, 3], 0, 0]], 
        Style["3 Level", 
         RGBColor[0, 0, 1]]}, Joined -> {True, True}, 
       LabelStyle -> {FontSize -> 45}, LegendFunction -> "Frame", 
       LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       LegendMarkerSize -> Large]], {Right, Center}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7658291811412697`*^9, 3.765829199257653*^9}, {
   3.765829647521124*^9, 3.7658296819967103`*^9}, {3.7658297451569653`*^9, 
   3.7658297539095774`*^9}, 3.7658298107230415`*^9, 3.765829904553975*^9, 
   3.765830181677425*^9, 3.7658303639720573`*^9, 3.7658304779573884`*^9, 
   3.765830558574026*^9, {3.7658310273797*^9, 3.7658310660963173`*^9}, 
   3.765831329357546*^9, {3.765882079821618*^9, 
   3.765882100394461*^9}},ExpressionUUID->"11adba35-653f-4e4d-b019-\
ec9cd6d8b019"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["P=15\[Gamma]", "Subchapter",
 CellChangeTimes->{{3.7658297991029167`*^9, 3.7658298012631054`*^9}, 
   3.765829915027057*^9, {3.765830698232728*^9, 3.7658307045519304`*^9}, {
   3.7658312751051006`*^9, 3.765831275662857*^9}, {3.7658313307134724`*^9, 
   3.765831331405792*^9}},ExpressionUUID->"51c72466-3db1-440e-b2bc-\
0b6d34321837"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", "142.75"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tv\[Gamma]4", "[", "p", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{
   RowBox[{"Tv\[Gamma]3", "[", "p", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"Power", "::", "infy"}], "]"}], ";", 
  RowBox[{"Off", "[", 
   RowBox[{"Infinity", "::", "indet"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "list", ",", "list1", ",", "list3", ",", "list4", ",", "EIT", ",", "ABS", 
     ",", "EIT1", ",", "ABS1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"list", "=", 
       RowBox[{"Lev3DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list1", "=", 
       RowBox[{"Lev3DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list3", "=", 
       RowBox[{"Lev4DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list4", "=", 
       RowBox[{"Lev4DoppTestsc", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"EIT", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"EIT1", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ABS", "=", 
       RowBox[{
        RowBox[{"list1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list", ",", "EIT"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS1", "=", 
       RowBox[{
        RowBox[{"list4", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list3", ",", "EIT1"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Tv\[Gamma]4", "[", "p", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Tv\[Gamma]4", "[", "p", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]", ",", 
           RowBox[{"1", "-", 
            RowBox[{"EIT1", "/", "ABS1"}]}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Tv\[Gamma]3", "[", "p", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Tv\[Gamma]3", "[", "p", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]", ",", 
           RowBox[{"1", "-", 
            RowBox[{"EIT", "/", "ABS"}]}]}], "}"}]}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0", ",", "10", ",", "0.5"}], "}"}]}], "]"}]}],
   "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.765829089641389*^9, 3.7658292318963723`*^9}, {
  3.7658292853196664`*^9, 3.7658292871639733`*^9}, {3.7658293320655184`*^9, 
  3.7658294847660823`*^9}, {3.765829757651656*^9, 3.7658297653284125`*^9}, {
  3.7658299219744377`*^9, 3.7658299667544694`*^9}, {3.7658300840041547`*^9, 
  3.7658301261594133`*^9}, {3.765830210826744*^9, 3.7658303345335846`*^9}, {
  3.7658304859698343`*^9, 3.7658305295086613`*^9}, {3.7658309469869137`*^9, 
  3.765831003557434*^9}, {3.7658310370777907`*^9, 3.7658310392872553`*^9}, {
  3.765831309057706*^9, 
  3.765831333614175*^9}},ExpressionUUID->"ba0b09d6-5066-42ed-bea6-\
cd7e2836b25d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", "142.75"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"LineLegend", "[", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Darker", "[", "Red", "]"}], ",", "Blue", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Darker", "[", "Gray", "]"}], ",", "Dashed"}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<4 Level\>\"", ",", 
         RowBox[{"Darker", "[", "Red", "]"}]}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<3 Level\>\"", ",", "Blue"}], "]"}]}], "}"}], ",", 
     RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Tv\[Gamma]4", "[", "p", "]"}], ",", 
     RowBox[{"Tv\[Gamma]3", "[", "p", "]"}]}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "40", "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"legend", ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "Center"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Blue"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Black", ",", 
        "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Decoherence \[Gamma][MHz]\>\"", ",", "50", ",", "Black"}],
        "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Transparancy\>\"", ",", "50", ",", "Black"}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.0"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.765829631536768*^9, 3.765829632743741*^9}, {
  3.7658296806517997`*^9, 3.765829681665415*^9}, {3.7658297444089584`*^9, 
  3.7658297536539*^9}, {3.7658301588193398`*^9, 3.76583016469881*^9}, {
  3.7658304774870143`*^9, 3.7658304776901264`*^9}, {3.7658305163681355`*^9, 
  3.7658305187534957`*^9}, {3.765830979239729*^9, 3.7658309817344575`*^9}, {
  3.7658310623792453`*^9, 3.7658310658466225`*^9}, {3.765882084145937*^9, 
  3.76588209514425*^9}},ExpressionUUID->"d4149a23-3769-4b91-9674-\
c6151a9480da"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
       0.012833333333333334`], AbsoluteThickness[3], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQO27gaqJw3e2UN4D+zFFH0UWm68gfI/2DfM6hVT
3/4ayv9hv2z+noLEva+gfAaH/9y7vfofvITyWRwYQuVuP5CE8TkcXK6pnz2X
8gLK53E49GNnium+51C+gMOThZ1/zinD+EIOLvnnDj6e/AzKF3FIY/1XwsoL
44s57DYoktLoewrlSzjUlC71SBGD8aUcuNKlND4seQLlyzhsiq9KMbSE8eUc
wqUT0+ZeegzlKzjoZZyK3FwA4ys6mBtbJogKw/hKDrs6mrZn7nwE5Ss7rAhn
ssxJhvFVHG5Y2q07JPDIHgAo7lvG
        "]]}, 
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       3], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQPePvnHzxOYvtGcDgA5R+YL/rSYxDuOs7uPgTfWsd
rulvoPwf9lYdzOo3/76C8hkcZH0+ex6uewnlszikCM9KmCX9AsrncHBjs2+3
u/IMyudx0NbPY05b/hTKF3C4vErFQWvyEyhfyKFglcWNzqmPoXwRhx26pQ/b
1jyC8sUcskyWbJS99hDKl3DwrvvxqEcAxpdymHhFpsEo6gGUL+MQd2mhuWDy
fShfziEgg9t3jdY9KF/B4cFmI5mlHHehfEUHBdGnR+7+ug3lKzlc44437f9/
C8pXdnhgLmbGIwrjqzhc+P3k1HbLm/YAQCJdVA==
        "]]}}, {}, {}, {{}, {}}}, InsetBox[
     TemplateBox[{
       StyleBox["\"4 Level\"", 
        RGBColor[
         Rational[2, 3], 0, 0], StripOnInput -> False], 
       StyleBox["\"3 Level\"", 
        RGBColor[0, 0, 1], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontSize -> 45, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[2/3, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.33333333333333337, 0.33333333333333337, \
0.33333333333333337]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}]}], "]"}]& )], 
     Scaled[{0.99, 0.5}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"Transparancy\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Decoherence \[Gamma][MHz]\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
   FrameTicks->{{True, True}, {True, True}},
   FrameTicksStyle->Directive[40],
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->1020,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 10}, {0, 1.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[
           Rational[2, 3], 0, 0]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQO27gaqJw3e2UN4D+zFFH0UWm68gfI/2DfM6hVT
3/4ayv9hv2z+noLEva+gfAaH/9y7vfofvITyWRwYQuVuP5CE8TkcXK6pnz2X
8gLK53E49GNnium+51C+gMOThZ1/zinD+EIOLvnnDj6e/AzKF3FIY/1XwsoL
44s57DYoktLoewrlSzjUlC71SBGD8aUcuNKlND4seQLlyzhsiq9KMbSE8eUc
wqUT0+ZeegzlKzjoZZyK3FwA4ys6mBtbJogKw/hKDrs6mrZn7nwE5Ss7rAhn
ssxJhvFVHG5Y2q07JPDIHgAo7lvG
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQPePvnHzxOYvtGcDgA5R+YL/rSYxDuOs7uPgTfWsd
rulvoPwf9lYdzOo3/76C8hkcZH0+ex6uewnlszikCM9KmCX9AsrncHBjs2+3
u/IMyudx0NbPY05b/hTKF3C4vErFQWvyEyhfyKFglcWNzqmPoXwRhx26pQ/b
1jyC8sUcskyWbJS99hDKl3DwrvvxqEcAxpdymHhFpsEo6gGUL+MQd2mhuWDy
fShfziEgg9t3jdY9KF/B4cFmI5mlHHehfEUHBdGnR+7+ug3lKzlc44437f9/
C8pXdnhgLmbGIwrjqzhc+P3k1HbLm/YAQCJdVA==
          "]]}}}, {}, {}, {{}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      AxesOrigin -> {0, 0}, PlotRange -> {{0, 10}, {0, 1.}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {False, False}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["Transparancy", 50, 
          GrayLevel[0]], None}, {
         Style["Decoherence \[Gamma][MHz]", 50, 
          GrayLevel[0]], None}}, FrameTicks -> {{True, True}, {True, True}}, 
      FrameTicksStyle -> Directive[40], GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 10}, {0, 1.}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[
          Rational[2, 3], 0, 0], 
         AbsoluteThickness[10]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[10]], 
        Directive[{
          RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
          Dashing[{Small, Small}]}, 
         AbsoluteThickness[10]]}, {
        Style["4 Level", 
         RGBColor[
          Rational[2, 3], 0, 0]], 
        Style["3 Level", 
         RGBColor[0, 0, 1]]}, Joined -> {True, True}, 
       LabelStyle -> {FontSize -> 45}, LegendFunction -> "Frame", 
       LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       LegendMarkerSize -> Large]], {Right, Center}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7658291811412697`*^9, 3.765829199257653*^9}, {
   3.765829647521124*^9, 3.7658296819967103`*^9}, {3.7658297451569653`*^9, 
   3.7658297539095774`*^9}, 3.7658298107230415`*^9, 3.765829904553975*^9, 
   3.765830181677425*^9, 3.7658303639720573`*^9, 3.7658304779573884`*^9, 
   3.765830558574026*^9, {3.7658310273797*^9, 3.7658310660963173`*^9}, 
   3.7658313795652194`*^9, {3.765882089560088*^9, 
   3.7658820957903275`*^9}},ExpressionUUID->"38b1be69-217d-4f7f-b163-\
38c881fadf4b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FWHM vs power", "Chapter",
 CellChangeTimes->{{3.7658313584556675`*^9, 
  3.7658313620823646`*^9}},ExpressionUUID->"fa7aa0d8-1807-492a-bbd5-\
8454472204eb"],

Cell[CellGroupData[{

Cell["\[Gamma]=0", "Subchapter",
 CellChangeTimes->{{3.7658297991029167`*^9, 3.7658298012631054`*^9}, 
   3.765829915027057*^9, {3.7658305440638323`*^9, 3.7658305445959687`*^9}, {
   3.76583059158514*^9, 3.7658305925543447`*^9}, {3.7658314166089573`*^9, 
   3.7658314170147433`*^9}, {3.7658911672993174`*^9, 
   3.765891197757675*^9}},ExpressionUUID->"8efe0a05-78cc-4a95-8235-\
a8ef40d985d5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"0", "*", "5.750056"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FvP4", "[", "\[Gamma]", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{
   RowBox[{"FvP3", "[", "\[Gamma]", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"Power", "::", "infy"}], "]"}], ";", 
   RowBox[{"Off", "[", 
    RowBox[{"Infinity", "::", "indet"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "list", ",", "list1", ",", "list3", ",", "list4", ",", "EIT", ",", "ABS", 
     ",", "EIT1", ",", "ABS1", ",", "LL", ",", "LL1", ",", "Midpoints", ",", 
     "Midpoints1", ",", "cluster", ",", "cluster1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"list", "=", 
       RowBox[{"Lev4DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list1", "=", 
       RowBox[{"Lev4DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list3", "=", 
       RowBox[{"Lev3DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list4", "=", 
       RowBox[{"Lev3DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"EIT", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS", "=", 
       RowBox[{
        RowBox[{"list1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list", ",", "EIT"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"EIT1", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS1", "=", 
       RowBox[{
        RowBox[{"list4", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list3", ",", "EIT1"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"LL", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"EIT", "-", "ABS"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Midpoints", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"list", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"EIT", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL", ")"}]}], "-", 
            RowBox[{"LL", "/", "50"}]}], "<", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "<", 
           RowBox[{"EIT", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL", ")"}]}], "+", 
            RowBox[{"LL", "/", "50"}]}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cluster", "=", 
       RowBox[{"Gather", "[", 
        RowBox[{"Midpoints", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "0.004"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FvP4", "[", "\[Gamma]", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"FvP4", "[", "\[Gamma]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1000", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}]}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"LL1", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"EIT1", "-", "ABS1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Midpoints1", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"list3", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"EIT1", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL1", ")"}]}], "-", 
            RowBox[{"LL1", "/", "50"}]}], "<", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "<", 
           RowBox[{"EIT1", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL1", ")"}]}], "+", 
            RowBox[{"LL1", "/", "50"}]}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cluster1", "=", 
       RowBox[{"Gather", "[", 
        RowBox[{"Midpoints1", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "0.002"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FvP3", "[", "\[Gamma]", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"FvP3", "[", "\[Gamma]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1000", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster1", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster1", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}]}]}], 
          "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "3", ",", "200", ",", "25"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.765829089641389*^9, 3.7658292318963723`*^9}, {
   3.7658292853196664`*^9, 3.7658292871639733`*^9}, {3.7658293320655184`*^9, 
   3.7658294847660823`*^9}, {3.765829757651656*^9, 3.7658297653284125`*^9}, {
   3.7658299219744377`*^9, 3.7658299667544694`*^9}, {3.7658300840041547`*^9, 
   3.7658301261594133`*^9}, {3.765830210826744*^9, 3.7658303345335846`*^9}, {
   3.7658304859698343`*^9, 3.7658305295086613`*^9}, {3.765830564361416*^9, 
   3.7658305952136946`*^9}, {3.7658314187015557`*^9, 3.765831433576153*^9}, 
   3.765831528415668*^9, {3.7658330278595476`*^9, 3.765833421555685*^9}, {
   3.765833482366448*^9, 3.765833487516837*^9}, {3.7658335344874315`*^9, 
   3.7658336014185624`*^9}, {3.765833726869643*^9, 3.7658337287345467`*^9}, {
   3.7658337809291964`*^9, 3.7658337844539747`*^9}, {3.7658339867015486`*^9, 
   3.765833987029645*^9}, {3.7658875912324424`*^9, 3.7658875942033095`*^9}, {
   3.7658878566825867`*^9, 3.765887859120116*^9}, {3.7658883209717026`*^9, 
   3.765888321393361*^9}, {3.7658886313160963`*^9, 3.76588863955219*^9}, {
   3.765888683584565*^9, 3.765888717125509*^9}, {3.7658901003241773`*^9, 
   3.7658901056742954`*^9}, {3.7658901775747766`*^9, 
   3.7658902199436054`*^9}, {3.7658902603967047`*^9, 3.765890263600562*^9}, {
   3.7658903271765995`*^9, 3.7658903348457775`*^9}, {3.7658904879414234`*^9, 
   3.765890488140133*^9}, {3.765891169604516*^9, 3.7658912150429063`*^9}, {
   3.7658912562598457`*^9, 3.765891256390416*^9}, {3.765891342734211*^9, 
   3.7658913459669957`*^9}},ExpressionUUID->"fb3389a2-d98d-4d38-89df-\
1724ce61b338"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0006299999999999986`\\\"}], \\\",\\\", \
\\\"9.839520606975718`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0006199999999999957`\\\"}], \\\",\\\", \
\\\"9.747113073990883`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0006099999999999994`\\\"}], \\\",\\\", \
\\\"9.653325318728167`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0005999999999999965`\\\"}], \\\",\\\", \
\\\"9.558159806430833`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0005900000000000002`\\\"}], \\\",\\\", \
\\\"9.46162212665689`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0005799999999999973`\\\"}], \\\",\\\", \
\\\"9.363721312183118`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0005700000000000011`\\\"}], \\\",\\\", \
\\\"9.264470176976903`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.00028999999999999865`\\\", \\\",\\\", \\\"9.66720997851405`*^-6\
\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\"}\\\"}]\\) does not exist.\"", 2, 
   2263, 303, 21505477767879562632, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.76589118271102*^9, 3.7658912619750915`*^9, 
  3.7658913516574197`*^9},ExpressionUUID->"53db6d8a-880e-4e85-8030-\
34f0aa4d01c0"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{RowBox[{\\\"{\\\", RowBox[{\
\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0006299999999999986`\\\"}], \\\",\\\", \
\\\"9.839520606975718`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0006199999999999957`\\\"}], \\\",\\\", \
\\\"9.747113073990883`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0006099999999999994`\\\"}], \\\",\\\", \
\\\"9.653325318728167`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0005999999999999965`\\\"}], \\\",\\\", \
\\\"9.558159806430833`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0005900000000000002`\\\"}], \\\",\\\", \
\\\"9.46162212665689`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0005799999999999973`\\\"}], \\\",\\\", \
\\\"9.363721312183118`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0005700000000000011`\\\"}], \\\",\\\", \
\\\"9.264470176976903`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.00028999999999999865`\\\", \\\",\\\", \\\"9.66720997851405`*^-6\
\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\"}\\\"}], \
\\\"\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\
\"\[RightDoubleBracket]\\\"}]\\) is longer than depth of object.\"", 2, 2263, 
   304, 21505477767879562632, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.76589118271102*^9, 3.7658912619750915`*^9, 
  3.7658913517042913`*^9},ExpressionUUID->"90bc6463-4717-4965-9474-\
ea04cd4726ad"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.00016000000000000042`\\\"}], \\\",\\\", \
\\\"9.136357770368163`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.00014000000000000123`\\\", \\\",\\\", \
\\\"8.996404662032759`*^-6\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\"}\\\"}]\\) \
does not exist.\"", 2, 2263, 305, 21505477767879562632, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.76589118271102*^9, 3.7658912619750915`*^9, 
  3.7658913517400217`*^9},ExpressionUUID->"ad98c833-d710-47dd-901d-\
e0b312c0e8dc"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{RowBox[{\\\"{\\\", RowBox[{\
\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.00016000000000000042`\\\"}], \\\",\\\", \
\\\"9.136357770368163`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.00014000000000000123`\\\", \\\",\\\", \
\\\"8.996404662032759`*^-6\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\"}\\\"}], \\\
\"\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\"\
\[RightDoubleBracket]\\\"}]\\) is longer than depth of object.\"", 2, 2263, 
   306, 21505477767879562632, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.76589118271102*^9, 3.7658912619750915`*^9, 
  3.7658913517611694`*^9},ExpressionUUID->"dfb6ec90-b14c-45e4-8c7e-\
62779a055360"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FvP4", "[", "\[Gamma]", "]"}], ",", 
      RowBox[{"FvP3", "[", "\[Gamma]", "]"}]}], "}"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", "40", "]"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{"legend", ",", 
       RowBox[{"{", 
        RowBox[{"Right", ",", "0.5"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
         RowBox[{"Darker", "[", "Red", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Blue"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Black", ",", 
         "Dashed"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Power (mW)\>\"", ",", "50", ",", "Black"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<FWHM (MHz) \>\"", ",", "50", ",", "Black"}], "]"}]}], 
      "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "200"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "60"}], "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.765829631536768*^9, 3.765829632743741*^9}, {
  3.7658296806517997`*^9, 3.765829681665415*^9}, {3.7658297444089584`*^9, 
  3.7658297536539*^9}, {3.7658301588193398`*^9, 3.76583016469881*^9}, {
  3.7658304774870143`*^9, 3.7658304776901264`*^9}, {3.7658305163681355`*^9, 
  3.7658305187534957`*^9}, {3.7658332233088727`*^9, 3.7658332277551217`*^9}, {
  3.765833658359909*^9, 3.765833667860331*^9}, {3.765833948532319*^9, 
  3.765833948907303*^9}, {3.76583398941004*^9, 3.765833989738138*^9}, {
  3.765888607117876*^9, 3.7658886114194965`*^9}, {3.7658886675472775`*^9, 
  3.7658886677191124`*^9}, {3.765888736628761*^9, 3.765888737677676*^9}, {
  3.765890679588091*^9, 
  3.765890686818239*^9}},ExpressionUUID->"3124c959-6b6a-44c7-8581-\
b7d0983e7f12"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
       0.012833333333333334`], AbsoluteThickness[3], 
       LineBox[{{28., 8.205000000000002}, {53., 15.360000000000003`}, {78., 
        22.370000000000005`}, {103., 29.245000000000005`}, {128., 
        36.000000000000014`}, {153., 42.640000000000015`}, {178., 
        49.17500000000001}}]}, 
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       3], LineBox[{{28., 2.7750000000000004`}, {53., 5.235000000000001}, {
        78., 7.6800000000000015`}, {103., 10.100000000000001`}, {128., 
        12.505000000000003`}, {153., 14.890000000000002`}, {178., 
        17.25}}]}}, {}, {}, {{}, {}}}, InsetBox[
     TemplateBox[{
       StyleBox["\"4 Level\"", 
        RGBColor[
         Rational[2, 3], 0, 0], StripOnInput -> False], 
       StyleBox["\"3 Level\"", 
        RGBColor[0, 0, 1], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontSize -> 45, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[2/3, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.33333333333333337, 0.33333333333333337, \
0.33333333333333337]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}]}], "]"}]& )], 
     Scaled[{0.99, 0.5}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"FWHM (MHz) \"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Power (mW)\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
   FrameTicks->{{True, True}, {True, True}},
   FrameTicksStyle->Directive[40],
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->1020,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 200}, {0, 60}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[
           Rational[2, 3], 0, 0]], 
         Line[{{28., 8.205000000000002}, {53., 15.360000000000003`}, {78., 
          22.370000000000005`}, {103., 29.245000000000005`}, {128., 
          36.000000000000014`}, {153., 42.640000000000015`}, {178., 
          49.17500000000001}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 1]], 
         Line[{{28., 2.7750000000000004`}, {53., 5.235000000000001}, {78., 
          7.6800000000000015`}, {103., 10.100000000000001`}, {128., 
          12.505000000000003`}, {153., 14.890000000000002`}, {178., 
          17.25}}]}}}, {}, {}, {{}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      AxesOrigin -> {0, 0}, PlotRange -> {{0, 200}, {0, 60}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {False, False}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["FWHM (MHz) ", 50, 
          GrayLevel[0]], None}, {
         Style["Power (mW)", 50, 
          GrayLevel[0]], None}}, FrameTicks -> {{True, True}, {True, True}}, 
      FrameTicksStyle -> Directive[40], GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 200}, {0, 60}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[
          Rational[2, 3], 0, 0], 
         AbsoluteThickness[10]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[10]], 
        Directive[{
          RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
          Dashing[{Small, Small}]}, 
         AbsoluteThickness[10]]}, {
        Style["4 Level", 
         RGBColor[
          Rational[2, 3], 0, 0]], 
        Style["3 Level", 
         RGBColor[0, 0, 1]]}, Joined -> {True, True}, 
       LabelStyle -> {FontSize -> 45}, LegendFunction -> "Frame", 
       LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       LegendMarkerSize -> Large]], {Right, 0.5}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7658291811412697`*^9, 3.765829199257653*^9}, {
   3.765829647521124*^9, 3.7658296819967103`*^9}, {3.7658297451569653`*^9, 
   3.7658297539095774`*^9}, 3.7658298107230415`*^9, 3.765829904553975*^9, 
   3.765830181677425*^9, 3.7658303639720573`*^9, 3.7658304779573884`*^9, 
   3.765830613439003*^9, 3.765833668627305*^9, 3.7658337600003853`*^9, {
   3.765833940910299*^9, 3.765833949126031*^9}, 3.7658876124645996`*^9, 
   3.7658876940451612`*^9, 3.765887939890687*^9, 3.7658884040284977`*^9, {
   3.7658886075554547`*^9, 3.7658886116382346`*^9}, {3.7658886655170193`*^9, 
   3.765888667975294*^9}, 3.7658889032126093`*^9, {3.765890657820629*^9, 
   3.7658906870213256`*^9}, 3.765891322273212*^9, 
   3.765891398009264*^9},ExpressionUUID->"85f9b915-b8e9-4648-af8b-\
530522276b5c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Gamma]=0.1", "Subchapter",
 CellChangeTimes->{{3.7658297991029167`*^9, 3.7658298012631054`*^9}, 
   3.765829915027057*^9, {3.7658305440638323`*^9, 3.7658305445959687`*^9}, {
   3.76583059158514*^9, 3.7658305925543447`*^9}, {3.7658314166089573`*^9, 
   3.7658314170147433`*^9}, {3.7658911672993174`*^9, 
   3.76589116761797*^9}},ExpressionUUID->"2d5da7e4-4be3-43a9-952c-\
53d36a827bb4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"0.1", "*", "5.750056"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FvP4", "[", "\[Gamma]", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{
   RowBox[{"FvP3", "[", "\[Gamma]", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"Power", "::", "infy"}], "]"}], ";", 
   RowBox[{"Off", "[", 
    RowBox[{"Infinity", "::", "indet"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "list", ",", "list1", ",", "list3", ",", "list4", ",", "EIT", ",", "ABS", 
     ",", "EIT1", ",", "ABS1", ",", "LL", ",", "LL1", ",", "Midpoints", ",", 
     "Midpoints1", ",", "cluster", ",", "cluster1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"list", "=", 
       RowBox[{"Lev4DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list1", "=", 
       RowBox[{"Lev4DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list3", "=", 
       RowBox[{"Lev3DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list4", "=", 
       RowBox[{"Lev3DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"EIT", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS", "=", 
       RowBox[{
        RowBox[{"list1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list", ",", "EIT"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"EIT1", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS1", "=", 
       RowBox[{
        RowBox[{"list4", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list3", ",", "EIT1"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"LL", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"EIT", "-", "ABS"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Midpoints", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"list", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"EIT", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL", ")"}]}], "-", 
            RowBox[{"LL", "/", "50"}]}], "<", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "<", 
           RowBox[{"EIT", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL", ")"}]}], "+", 
            RowBox[{"LL", "/", "50"}]}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cluster", "=", 
       RowBox[{"Gather", "[", 
        RowBox[{"Midpoints", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "0.004"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FvP4", "[", "\[Gamma]", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"FvP4", "[", "\[Gamma]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1000", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}]}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"LL1", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"EIT1", "-", "ABS1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Midpoints1", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"list3", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"EIT1", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL1", ")"}]}], "-", 
            RowBox[{"LL1", "/", "50"}]}], "<", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "<", 
           RowBox[{"EIT1", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL1", ")"}]}], "+", 
            RowBox[{"LL1", "/", "50"}]}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cluster1", "=", 
       RowBox[{"Gather", "[", 
        RowBox[{"Midpoints1", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "0.003"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FvP3", "[", "\[Gamma]", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"FvP3", "[", "\[Gamma]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1000", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster1", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster1", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}]}]}], 
          "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "3", ",", "200", ",", "15"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.765829089641389*^9, 3.7658292318963723`*^9}, {
   3.7658292853196664`*^9, 3.7658292871639733`*^9}, {3.7658293320655184`*^9, 
   3.7658294847660823`*^9}, {3.765829757651656*^9, 3.7658297653284125`*^9}, {
   3.7658299219744377`*^9, 3.7658299667544694`*^9}, {3.7658300840041547`*^9, 
   3.7658301261594133`*^9}, {3.765830210826744*^9, 3.7658303345335846`*^9}, {
   3.7658304859698343`*^9, 3.7658305295086613`*^9}, {3.765830564361416*^9, 
   3.7658305952136946`*^9}, {3.7658314187015557`*^9, 3.765831433576153*^9}, 
   3.765831528415668*^9, {3.7658330278595476`*^9, 3.765833421555685*^9}, {
   3.765833482366448*^9, 3.765833487516837*^9}, {3.7658335344874315`*^9, 
   3.7658336014185624`*^9}, {3.765833726869643*^9, 3.7658337287345467`*^9}, {
   3.7658337809291964`*^9, 3.7658337844539747`*^9}, {3.7658339867015486`*^9, 
   3.765833987029645*^9}, {3.7658875912324424`*^9, 3.7658875942033095`*^9}, {
   3.7658878566825867`*^9, 3.765887859120116*^9}, {3.7658883209717026`*^9, 
   3.765888321393361*^9}, {3.7658886313160963`*^9, 3.76588863955219*^9}, {
   3.765888683584565*^9, 3.765888717125509*^9}, {3.7658901003241773`*^9, 
   3.7658901056742954`*^9}, {3.7658901775747766`*^9, 
   3.7658902199436054`*^9}, {3.7658902603967047`*^9, 3.765890263600562*^9}, {
   3.7658903271765995`*^9, 3.7658903348457775`*^9}, {3.7658904879414234`*^9, 
   3.765890488140133*^9}, {3.765891169604516*^9, 
   3.765891177550645*^9}},ExpressionUUID->"db75d1ee-74ee-434d-bb5f-\
5dddfd0bd938"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0019699999999999995`\\\"}], \\\",\\\", \
\\\"0.000015067546914850156`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0019599999999999965`\\\"}], \\\",\\\", \
\\\"0.000015053805053053882`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0019500000000000003`\\\"}], \\\",\\\", \
\\\"0.000015039965274739974`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0019399999999999973`\\\"}], \\\",\\\", \
\\\"0.000015026026795114973`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0019300000000000014`\\\"}], \\\",\\\", \
\\\"0.000015011988827007372`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0019199999999999983`\\\"}], \\\",\\\", \
\\\"0.000014997850581076237`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.001910000000000002`\\\"}], \\\",\\\", \\\"0.0000149836112660311`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.001899999999999999`\\\"}], \\\",\\\", \
\\\"0.00001496927008886367`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0018899999999999958`\\\"}], \\\",\\\", \
\\\"0.000014954826255091708`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.00188`\\\"}], \\\",\\\", \
\\\"0.000014940278969015688`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0018699999999999969`\\\"}], \\\",\\\", \
\\\"0.00001492562743398852`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0018600000000000005`\\\"}], \\\",\\\", \
\\\"0.000014910870852699257`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0018499999999999975`\\\"}], \\\",\\\", \
\\\"0.000014896008427470752`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0018400000000000016`\\\"}], \\\",\\\", \
\\\"0.000014881039360572522`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0018299999999999985`\\\"}], \\\",\\\", \
\\\"0.000014865962854548642`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0018200000000000022`\\\"}], \\\",\\\", \
\\\"0.000014850778112561993`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0018099999999999991`\\\"}], \\\",\\\", \
\\\"0.00001483548433875487`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.00039000000000000146`\\\", \\\",\\\", \
\\\"0.00001487533079885901`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.00040000000000000457`\\\", \\\",\\\", \
\\\"0.000014957207546940452`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0.00041000000000000064`\\\", \\\",\\\", \
\\\"0.000015039076954517538`\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \
\\\"}\\\"}]\\) does not exist.\"", 2, 2249, 291, 21505477767879562632, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.76589118271102*^9},ExpressionUUID->"00e30381-1d4b-4d85-bfe3-9da46e0ed8f4"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{RowBox[{\\\"{\\\", RowBox[{\
\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0019699999999999995`\\\"}], \\\",\\\", \
\\\"0.000015067546914850156`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0019599999999999965`\\\"}], \\\",\\\", \
\\\"0.000015053805053053882`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0019500000000000003`\\\"}], \\\",\\\", \
\\\"0.000015039965274739974`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0019399999999999973`\\\"}], \\\",\\\", \
\\\"0.000015026026795114973`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0019300000000000014`\\\"}], \\\",\\\", \
\\\"0.000015011988827007372`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0019199999999999983`\\\"}], \\\",\\\", \
\\\"0.000014997850581076237`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.001910000000000002`\\\"}], \\\",\\\", \\\"0.0000149836112660311`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.001899999999999999`\\\"}], \\\",\\\", \
\\\"0.00001496927008886367`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0018899999999999958`\\\"}], \\\",\\\", \
\\\"0.000014954826255091708`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.00188`\\\"}], \\\",\\\", \
\\\"0.000014940278969015688`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0018699999999999969`\\\"}], \\\",\\\", \
\\\"0.00001492562743398852`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0018600000000000005`\\\"}], \\\",\\\", \
\\\"0.000014910870852699257`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0018499999999999975`\\\"}], \\\",\\\", \
\\\"0.000014896008427470752`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0018400000000000016`\\\"}], \\\",\\\", \
\\\"0.000014881039360572522`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0018299999999999985`\\\"}], \\\",\\\", \
\\\"0.000014865962854548642`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0018200000000000022`\\\"}], \\\",\\\", \
\\\"0.000014850778112561993`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0018099999999999991`\\\"}], \\\",\\\", \
\\\"0.00001483548433875487`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.00039000000000000146`\\\", \\\",\\\", \
\\\"0.00001487533079885901`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.00040000000000000457`\\\", \\\",\\\", \
\\\"0.000014957207546940452`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0.00041000000000000064`\\\", \\\",\\\", \
\\\"0.000015039076954517538`\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\"}\\\"}], \
\\\"\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\
\"\[RightDoubleBracket]\\\"}]\\) is longer than depth of object.\"", 2, 2249, 
   292, 21505477767879562632, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.765891182749058*^9},ExpressionUUID->"6743bbee-48d6-47e4-981f-\
13265d3ea7d9"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0017000000000000003`\\\"}], \\\",\\\", \
\\\"0.000016501586941801416`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.001689999999999997`\\\"}], \\\",\\\", \
\\\"0.000016493615123832316`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.001680000000000001`\\\"}], \\\",\\\", \
\\\"0.000016485580017637952`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.001669999999999998`\\\"}], \\\",\\\", \
\\\"0.000016477480998261276`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.001660000000000002`\\\"}], \\\",\\\", \
\\\"0.00001646931743586758`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0016499999999999987`\\\"}], \\\",\\\", \
\\\"0.000016461088695814633`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0016399999999999956`\\\"}], \\\",\\\", \
\\\"0.000016452794138730183`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0016299999999999997`\\\"}], \\\",\\\", \
\\\"0.000016444433120597063`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0016199999999999967`\\\"}], \\\",\\\", \
\\\"0.000016436004992846414`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0016100000000000003`\\\"}], \\\",\\\", \
\\\"0.000016427509102459497`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0015999999999999973`\\\"}], \\\",\\\", \
\\\"0.000016418944792078453`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0015900000000000014`\\\"}], \\\",\\\", \
\\\"0.000016410311400126622`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0015799999999999983`\\\"}], \\\",\\\", \
\\\"0.000016401608260938848`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.001570000000000002`\\\"}], \\\",\\\", \\\"0.0000163928347049024`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0015599999999999989`\\\"}], \\\",\\\", \
\\\"0.000016383990058608954`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0015499999999999958`\\\"}], \\\",\\\", \
\\\"0.000016375073645018416`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0.00023000000000000106`\\\", \\\",\\\", \
\\\"0.000016378105511552415`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0.00024000000000000413`\\\", \\\",\\\", \
\\\"0.00001643835420730391`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.0002500000000000002`\\\", \\\",\\\", \
\\\"0.00001649880589223749`\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\"}\\\"}]\\) \
does not exist.\"", 2, 2249, 293, 21505477767879562632, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7658911827980576`*^9},ExpressionUUID->"f32558e6-2351-475e-9ffd-\
e3adeb6ed1f7"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{RowBox[{\\\"{\\\", RowBox[{\
\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0017000000000000003`\\\"}], \\\",\\\", \
\\\"0.000016501586941801416`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.001689999999999997`\\\"}], \\\",\\\", \
\\\"0.000016493615123832316`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.001680000000000001`\\\"}], \\\",\\\", \
\\\"0.000016485580017637952`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.001669999999999998`\\\"}], \\\",\\\", \
\\\"0.000016477480998261276`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.001660000000000002`\\\"}], \\\",\\\", \
\\\"0.00001646931743586758`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0016499999999999987`\\\"}], \\\",\\\", \
\\\"0.000016461088695814633`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0016399999999999956`\\\"}], \\\",\\\", \
\\\"0.000016452794138730183`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0016299999999999997`\\\"}], \\\",\\\", \
\\\"0.000016444433120597063`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0016199999999999967`\\\"}], \\\",\\\", \
\\\"0.000016436004992846414`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0016100000000000003`\\\"}], \\\",\\\", \
\\\"0.000016427509102459497`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0015999999999999973`\\\"}], \\\",\\\", \
\\\"0.000016418944792078453`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0015900000000000014`\\\"}], \\\",\\\", \
\\\"0.000016410311400126622`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0015799999999999983`\\\"}], \\\",\\\", \
\\\"0.000016401608260938848`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.001570000000000002`\\\"}], \\\",\\\", \\\"0.0000163928347049024`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0015599999999999989`\\\"}], \\\",\\\", \
\\\"0.000016383990058608954`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0015499999999999958`\\\"}], \\\",\\\", \
\\\"0.000016375073645018416`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0.00023000000000000106`\\\", \\\",\\\", \
\\\"0.000016378105511552415`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0.00024000000000000413`\\\", \\\",\\\", \
\\\"0.00001643835420730391`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.0002500000000000002`\\\", \\\",\\\", \
\\\"0.00001649880589223749`\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\"}\\\"}], \
\\\"\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\
\"\[RightDoubleBracket]\\\"}]\\) is longer than depth of object.\"", 2, 2249, 
   294, 21505477767879562632, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7658911828293037`*^9},ExpressionUUID->"9649adb7-9b37-4048-9e26-\
e5bdd2125fd6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FvP4", "[", "\[Gamma]", "]"}], ",", 
      RowBox[{"FvP3", "[", "\[Gamma]", "]"}]}], "}"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", "40", "]"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{"legend", ",", 
       RowBox[{"{", 
        RowBox[{"Right", ",", "0.5"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
         RowBox[{"Darker", "[", "Red", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Blue"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Black", ",", 
         "Dashed"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Power (mW)\>\"", ",", "50", ",", "Black"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<FWHM (MHz) \>\"", ",", "50", ",", "Black"}], "]"}]}], 
      "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "200"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "60"}], "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.765829631536768*^9, 3.765829632743741*^9}, {
  3.7658296806517997`*^9, 3.765829681665415*^9}, {3.7658297444089584`*^9, 
  3.7658297536539*^9}, {3.7658301588193398`*^9, 3.76583016469881*^9}, {
  3.7658304774870143`*^9, 3.7658304776901264`*^9}, {3.7658305163681355`*^9, 
  3.7658305187534957`*^9}, {3.7658332233088727`*^9, 3.7658332277551217`*^9}, {
  3.765833658359909*^9, 3.765833667860331*^9}, {3.765833948532319*^9, 
  3.765833948907303*^9}, {3.76583398941004*^9, 3.765833989738138*^9}, {
  3.765888607117876*^9, 3.7658886114194965`*^9}, {3.7658886675472775`*^9, 
  3.7658886677191124`*^9}, {3.765888736628761*^9, 3.765888737677676*^9}, {
  3.765890679588091*^9, 
  3.765890686818239*^9}},ExpressionUUID->"cb1cf7ac-c620-4eef-b127-\
394ca9381a5e"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
       0.011000000000000001`], AbsoluteThickness[3], 
       LineBox[{{18., 6.975000000000001}, {33., 11.455}, {48., 
        15.795000000000003`}, {63., 20.060000000000002`}, {78., 
        24.260000000000005`}, {93., 28.395000000000003`}, {108., 
        32.48500000000001}, {123., 36.53000000000001}, {138., 40.52}, {153., 
        44.47500000000001}, {168., 48.39500000000001}, {183., 52.275}, {198., 
        56.120000000000005`}}]}, 
      {RGBColor[0, 0, 1], PointSize[0.011000000000000001`], AbsoluteThickness[
       3], LineBox[{{18., 2.9999999999999996`}, {33., 4.3050000000000015`}, {
        48., 5.695}, {63., 7.115000000000002}, {78., 8.545000000000002}, {93.,
         9.969999999999999}, {108., 11.405000000000003`}, {123., 
        12.835000000000003`}, {138., 14.255000000000003`}, {153., 
        15.665000000000004`}, {168., 17.085000000000004`}, {183., 
        18.485000000000003`}, {198., 19.885}}]}}, {}, {}, {{}, {}}}, InsetBox[
     TemplateBox[{
       StyleBox["\"4 Level\"", 
        RGBColor[
         Rational[2, 3], 0, 0], StripOnInput -> False], 
       StyleBox["\"3 Level\"", 
        RGBColor[0, 0, 1], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontSize -> 45, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[2/3, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.33333333333333337, 0.33333333333333337, \
0.33333333333333337]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}]}], "]"}]& )], 
     Scaled[{0.99, 0.5}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"FWHM (MHz) \"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Power (mW)\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
   FrameTicks->{{True, True}, {True, True}},
   FrameTicksStyle->Directive[40],
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->1020,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 200}, {0, 60}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[3], 
          RGBColor[
           Rational[2, 3], 0, 0]], 
         Line[{{18., 6.975000000000001}, {33., 11.455}, {48., 
          15.795000000000003`}, {63., 20.060000000000002`}, {78., 
          24.260000000000005`}, {93., 28.395000000000003`}, {108., 
          32.48500000000001}, {123., 36.53000000000001}, {138., 40.52}, {153.,
           44.47500000000001}, {168., 48.39500000000001}, {183., 52.275}, {
          198., 56.120000000000005`}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 1]], 
         Line[{{18., 2.9999999999999996`}, {33., 4.3050000000000015`}, {48., 
          5.695}, {63., 7.115000000000002}, {78., 8.545000000000002}, {93., 
          9.969999999999999}, {108., 11.405000000000003`}, {123., 
          12.835000000000003`}, {138., 14.255000000000003`}, {153., 
          15.665000000000004`}, {168., 17.085000000000004`}, {183., 
          18.485000000000003`}, {198., 19.885}}]}}}, {}, {}, {{}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      AxesOrigin -> {0, 0}, PlotRange -> {{0, 200}, {0, 60}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {False, False}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["FWHM (MHz) ", 50, 
          GrayLevel[0]], None}, {
         Style["Power (mW)", 50, 
          GrayLevel[0]], None}}, FrameTicks -> {{True, True}, {True, True}}, 
      FrameTicksStyle -> Directive[40], GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 200}, {0, 60}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[
          Rational[2, 3], 0, 0], 
         AbsoluteThickness[10]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[10]], 
        Directive[{
          RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
          Dashing[{Small, Small}]}, 
         AbsoluteThickness[10]]}, {
        Style["4 Level", 
         RGBColor[
          Rational[2, 3], 0, 0]], 
        Style["3 Level", 
         RGBColor[0, 0, 1]]}, Joined -> {True, True}, 
       LabelStyle -> {FontSize -> 45}, LegendFunction -> "Frame", 
       LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       LegendMarkerSize -> Large]], {Right, 0.5}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7658291811412697`*^9, 3.765829199257653*^9}, {
   3.765829647521124*^9, 3.7658296819967103`*^9}, {3.7658297451569653`*^9, 
   3.7658297539095774`*^9}, 3.7658298107230415`*^9, 3.765829904553975*^9, 
   3.765830181677425*^9, 3.7658303639720573`*^9, 3.7658304779573884`*^9, 
   3.765830613439003*^9, 3.765833668627305*^9, 3.7658337600003853`*^9, {
   3.765833940910299*^9, 3.765833949126031*^9}, 3.7658876124645996`*^9, 
   3.7658876940451612`*^9, 3.765887939890687*^9, 3.7658884040284977`*^9, {
   3.7658886075554547`*^9, 3.7658886116382346`*^9}, {3.7658886655170193`*^9, 
   3.765888667975294*^9}, 3.7658889032126093`*^9, {3.765890657820629*^9, 
   3.7658906870213256`*^9}, 
   3.7658912475813875`*^9},ExpressionUUID->"86a6b10c-12e0-44c9-baaf-\
7829600ec2f9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Gamma]=0.25", "Subchapter",
 CellChangeTimes->{{3.7658297991029167`*^9, 3.7658298012631054`*^9}, 
   3.765829915027057*^9, {3.7658305440638323`*^9, 3.7658305445959687`*^9}, {
   3.76583059158514*^9, 3.7658305925543447`*^9}, {3.7658314166089573`*^9, 
   3.7658314170147433`*^9}},ExpressionUUID->"e276cf7a-3e2b-4aa6-b2df-\
422c55c9e488"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"0.25", "*", "5.750056"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", "80"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"Lev4DoppTestsc1", "[", 
    RowBox[{"50", ",", 
     RowBox[{"p", "/", "1000"}], ",", 
     RowBox[{"1", "/", "1000"}], ",", 
     RowBox[{"\[Gamma]", "*", 
      RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list1", "=", 
   RowBox[{"Lev4DoppTestsc1", "[", 
    RowBox[{"50", ",", 
     RowBox[{"0", "/", "1000"}], ",", 
     RowBox[{"1", "/", "1000"}], ",", 
     RowBox[{"\[Gamma]", "*", 
      RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list3", "=", 
   RowBox[{"Lev3DoppTestsc1", "[", 
    RowBox[{"50", ",", 
     RowBox[{"p", "/", "1000"}], ",", 
     RowBox[{"1", "/", "1000"}], ",", 
     RowBox[{"\[Gamma]", "*", 
      RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list4", "=", 
   RowBox[{"Lev3DoppTestsc1", "[", 
    RowBox[{"50", ",", 
     RowBox[{"0", "/", "1000"}], ",", 
     RowBox[{"1", "/", "1000"}], ",", 
     RowBox[{"\[Gamma]", "*", 
      RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"list", ",", "list1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"list3", ",", "list4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.81163695562224*^9, 3.811637003284503*^9}, {
   3.811637147912425*^9, 3.811637148070569*^9}, {3.8116374701030807`*^9, 
   3.8116374818038764`*^9}, 3.811637524886673*^9, {3.811637739131668*^9, 
   3.811637785120856*^9}, {3.811637824292116*^9, 3.811637848862051*^9}, {
   3.8116380364474583`*^9, 3.8116380368548265`*^9}, {3.8116382988337164`*^9, 
   3.811638299391224*^9}, {3.81163843870654*^9, 3.811638445609885*^9}, {
   3.8121481867341857`*^9, 3.8121481875889616`*^9}, 3.8121482849307413`*^9, {
   3.812148379453819*^9, 3.812148386004764*^9}, {3.8121485841655717`*^9, 
   3.8121485847771263`*^9}, {3.8121487589331093`*^9, 3.812148780109617*^9}, {
   3.812149746075819*^9, 3.8121497464911957`*^9}, {3.8121552443482447`*^9, 
   3.812155244636506*^9}, {3.8121552796651793`*^9, 3.8121552803263893`*^9}, {
   3.8121555323932343`*^9, 3.8121555327352667`*^9}, {3.8121557804150467`*^9, 
   3.8121557945821314`*^9}, {3.8121558883399425`*^9, 3.812155895210295*^9}, {
   3.81215594836308*^9, 3.81215594875944*^9}, {3.8121561194639177`*^9, 
   3.8121561591966133`*^9}, {3.8121566425628204`*^9, 3.812156642822055*^9}},
 CellLabel->
  "In[1427]:=",ExpressionUUID->"4e570119-91aa-4166-b58a-30cf1eca1b95"],

Cell[BoxData["80"], "Output",
 CellChangeTimes->{{3.8116369667699647`*^9, 3.811637003482684*^9}, 
   3.811637148212699*^9, 3.811637225453063*^9, 3.8116372713476877`*^9, 
   3.811637317597628*^9, 3.8116374767631435`*^9, 3.811637525591316*^9, {
   3.81163774016461*^9, 3.81163778575543*^9}, {3.8116378226265993`*^9, 
   3.8116378494936256`*^9}, 3.8116379199432893`*^9, 3.8116379542446566`*^9, {
   3.8116379992456746`*^9, 3.811638037221159*^9}, 3.8116381059740868`*^9, {
   3.811638300095865*^9, 3.811638329438756*^9}, {3.811638439556314*^9, 
   3.8116384458040624`*^9}, 3.8116384799900613`*^9, {3.8121481820058947`*^9, 
   3.812148188240553*^9}, 3.8121482860007124`*^9, {3.812148380153454*^9, 
   3.8121483868094945`*^9}, 3.8121485850904107`*^9, {3.8121487600461206`*^9, 
   3.8121487805510178`*^9}, {3.812149740080378*^9, 3.8121497469436064`*^9}, 
   3.8121498132106404`*^9, 3.812155245023858*^9, 3.812155280710738*^9, 
   3.8121553537702065`*^9, 3.8121555334071474`*^9, 3.812155608793412*^9, {
   3.8121557688471117`*^9, 3.8121557954732375`*^9}, 3.8121558517635517`*^9, {
   3.812155881927861*^9, 3.812155895848873*^9}, 3.8121559491561127`*^9, {
   3.812156120859587*^9, 3.81215615961299*^9}, 3.8121566431873875`*^9, 
   3.812156677833815*^9},
 CellLabel->
  "Out[1428]=",ExpressionUUID->"41db0ac5-b218-45fc-b7c1-96541c545582"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
6djoavT2vpUUesI5znpv6Gh49mvEFwsphHbSJoS8pGPrz8ctGuZS6HUrJle0
0/H3hXKF1WZS2Pks8YTwOR2HPG5rRJtKYXCp3yobNh05Ng2SYhMp7Cm2HE1m
0HGr/YeKjkVS4GqpNdGpdDy3cYr5uIVSOJDBSVQl0/HXNodzy4ykIPxBW+Hb
TMeJAUebt8+XQtS+4l83n9Fx1sL71HOGUpB+THzS/4SOtVXDNxvnSOHoFr84
00d0NKPO2sCbJYXvY+XkQzr+27jx+QwDKRxbrvbt2QM6ZhocmuumL4XfFZyH
CjV0NFE8uT52uhSSZtAPb7xLR4eeTNcyXSmMZBdbXK6ko+K+WL1XOlJIGU0U
d5fTsePw5sZ/WlIYF+13f94tOj5/pmK9VFMKaX2Wh/YV01Fn4t3UQHUpTNyq
trSugI6kyYtLT6lKIZPF4f26QdgvIS33PxUpKDrQq1Zfp+M87f+2f1WSwpnq
4r1ZV+l49XjDb1VFKUydm7To5SU6du++tG/FZCmcv+Q3ND2Hjhdj7Gp2TZSC
xiSritBzdHTccId+aYIULsWpRVSeoaNd+tcHzeOkoMPlzBefomNb06dI7qgE
crfRe20z6Djz3I0JuiMSmP6iuCQljXhO19m7+o8EbqxOCmWmEPoyd7t14JcE
DP7zm6OeTOjVwLL22g8JFBpb9WxNIPzZ2n6J8k0Cc/PUCgrj6JhA1XcTyCRQ
qsINGjxKxy3JWi/1pBJYcJyub3aYjtuP1C1dI5ZAhbi4KyaSjrH6P4IPCCWw
KDzpetMBOi7p+xiWy5dA1Vs/v0n76NhvH2pP4krA1M1K1303HRmZyf2cYQnU
NKi9vbKTsN9Si3DtIQmYL+Ve/hhGjPd8XL3jgATqiuheC0Lo2DXR/UNEnwSW
a5VoHthGxxtD1W/Of5XAo/SkjocBdBzOyi15/FkCdj/8LvzZSseUFQprvnyS
QMNeq83OPnR85SyuV/woAcePaqrZnnTU4AeMmHdLoHkz9/mrzXQ0inGcHvBe
Ak5k+hn9TXS8Z3BlcmqnBChWJet3rKfjj5nBrMo3EnCpSFKsciXir/JycMcr
CTCm+zMlzgQfJFaMHx0ScMu2yrRfTce/C1ZMmPNCAi0jamtTgY5e+0o1Xdsk
sCmKq8B2oOOmgT3yA88l0N5Lp2jY03F9fVbVZbYEPHxLUv1t6OjzbdzyBqYE
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
sfhkkxvMMHeu37kQhTx7jJTObLgNAmcEV974GIXeUdeaHK65wNqxIf7UVm77
AZ/SJ2aOIHP/7Z+Rt1zb+lFw7G8bUF4V+X1LOtfOSqnfHnEdjhHps9dc+1Lc
Wi1XMzh3wJAV48G1H+TEiOAZsKyV6+y14trqgWufbtGC24R8ohHXdnpSucpu
A/PJj+FK44Nc24q9KMRBlxnyjFkcKsO1k3xwafN5ZvLGKHLrKq5/b6RX/843
Z1Lz/i9Ih95LLyUt+mXJrDxiFH+KzbXf3nubqGbHbOuUDw9oiMRS+9hTE+pO
TLYd8UHk2nbPmtp7XJjTCyOPlyZxbT/BqOVut5kCIXhfJ4D7+xp+51er7zLX
yr5xeeIWiTzdldssMt2Z0iUEwJLbLjgU8fiwJ1PJ8LQ5rz7XDtPJ/9nxgHmU
TRRoi0TNRvF9ZsoPmWfvLjXwlIxESXGxfhsvH+Y1opzmskiMX/hrGlf1iHkr
ngigI9D89fEjCyueMB8pRSseGIzA0hJ/Sd+zT5nB1W47bn+IwPj71q80o54x
kwg6PSUCvZW890gNPmdSJv9PmERz+fupilK+zPLHy1bueR6BPLxTcY5WfsxW
sVH+my5cW+96fU+6P3Mku+xP5mVuf8X9o66fApg/NGO+j2tz22Wi0kDuFZOv
nUi4c8fXOGobrRzIFLE5y7q+MQINRbrEFdsDmVJ/93QmCnD7kyl15q5BTMWg
5Q2sb+GokFX/UVbkNVNLhhBACkeec4MDvvmvmacZ5cWXK8PRKeDSxmengpkW
J2PJUbnhKDl3ffXmiWCmy9C9jK6IcCSVVCgb+oYwfW6fi1/3KByF3/QsbNoe
yny9dG/42ZvhOBn95uOzilBmYozQy9fG4agp7uH48koYk7L3/wKEaA43hBX/
hDEr3lXcXykfjqzJgpO3wsKZLUS5mXXhGAjrs07vjWAOT7jb+PJwfy/pn9tU
G8H8/vC8efWnMIxnnGFNWEYyedcpGgu2h6H5ov6azIVI5urMFQZHMQydumlz
iyOjmFvg41GfjDAs9X3wT0DxDXNvS+XB0mBuO6PVKqXmDfOwFVGQLwwVmOpV
oxbRTMO5+zvUb3DHt9+cXzMXzTR/aSzpfjoMNXWS3xq9jmE6c7+mdPUwFJbM
feSxI5b5kLaSG3GGYdOOkugTpbHMIAJesjoMeVx6kvB8HDNh4N0f5z+hKNns
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
+uGEjuB/DyACMg==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
fzqs9C0=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{851.1111111111121, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.2, 0.07995899999999997}, {-1.993672333330132*^-6, 
   0.000024229172288555213`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8116369667699647`*^9, 3.811637003482684*^9}, 
   3.811637148212699*^9, 3.811637225453063*^9, 3.8116372713476877`*^9, 
   3.811637317597628*^9, 3.8116374767631435`*^9, 3.811637525591316*^9, {
   3.81163774016461*^9, 3.81163778575543*^9}, {3.8116378226265993`*^9, 
   3.8116378494936256`*^9}, 3.8116379199432893`*^9, 3.8116379542446566`*^9, {
   3.8116379992456746`*^9, 3.811638037221159*^9}, 3.8116381059740868`*^9, {
   3.811638300095865*^9, 3.811638329438756*^9}, {3.811638439556314*^9, 
   3.8116384458040624`*^9}, 3.8116384799900613`*^9, {3.8121481820058947`*^9, 
   3.812148188240553*^9}, 3.8121482860007124`*^9, {3.812148380153454*^9, 
   3.8121483868094945`*^9}, 3.8121485850904107`*^9, {3.8121487600461206`*^9, 
   3.8121487805510178`*^9}, {3.812149740080378*^9, 3.8121497469436064`*^9}, 
   3.8121498132106404`*^9, 3.812155245023858*^9, 3.812155280710738*^9, 
   3.8121553537702065`*^9, 3.8121555334071474`*^9, 3.812155608793412*^9, {
   3.8121557688471117`*^9, 3.8121557954732375`*^9}, 3.8121558517635517`*^9, {
   3.812155881927861*^9, 3.812155895848873*^9}, 3.8121559491561127`*^9, {
   3.812156120859587*^9, 3.81215615961299*^9}, 3.8121566431873875`*^9, 
   3.8121566795624895`*^9},
 CellLabel->
  "Out[1433]=",ExpressionUUID->"d182b965-2b19-423e-9403-194185325906"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
Pl356fqGzywYKHujMi6fg8NqzZ77P7FAoV3l+j6JHPTJUd14oZ0Fu37NJfDZ
qH+253Pcexb4Kz47IPg7G/0dVhy938IC2ha5Wqef2ZhqJVj75g0LvjkdX/GI
mY09G279ZjSxQDq4PFr2ezZeE34l+6+BBZAnOO7ekY0HXrbNKr1ggfcLu2PP
m7OxKexh0/o6FpDolJfKDdlYuCf4tHkNCz6Ijq+9VJ2Nw4aGvUeqWCD8/wW/
bHx5fkr3/GMWbLZK+6tVnI0qMg021ytY4H6O4x5CysYcfbJ5ShkL0mO3vv+c
lo1XpUjyRfdY8KY86j/9uGw0qm6897iYBTPt3/LuRGRj1GkllcYiFuiO60ow
g7Px1+Zchw8UgrfStfPgl43Nu5zdvpNYEDdX3Lls/FxxxJiTw4IXR+Y2CLNx
c1IGeySTBaPBF4qtjmSj0ITy0ek0gjepfn6BXTZuGfieJZjCgoP1c4aQjc4H
mYXiiSy4xXAbOLQjGw/tXB8gE8eCKrFKq/It2agc/3SRfDTBe5X4Q8kN2Xh5
cdiVBZEsWLLHcclJ7WxsKAojLYxgwV6v4uu1atl4d+Jx7MLrLLg2t32rONc+
pR0LQlnw4MEeex/ZbKy6lFc5L5gF/R+za1+LZOOKOrOf0ldZsHDixwqNP1mo
JvSXJXaFBWaL52bcWXg743megC8LrmyLH+/gZWFTU6jS1HkWUI/2H1s3kIVh
D/X2Dnux4Ms1/aZbX7Jwp89LY5YHC6Tyr6/rb8tC3Z+6P7+eZoFRQ0fqttdZ
WCju6NDqxgIvpta/JMzCSd/NV5+fIHgT6vhRmYUibRUHHzizoG316/fmpVn4
NaGWQzpC8LZW3kIqzMLz80E/zpEFG709SFPZWagTvlwv6CDBO75G4kByFqaO
2jBO27EgtULmwr07WThh9cDKzobg3XHsi+j1LBzZo3vS0JoFUxOlO45fzULV
mCJdTUuCt7IAMaXNwuxAkSJJcxYcNdy/YMFZor+Oq1t/7mRB7DHyVU+XLMzb
8pvSbswCDBkbaHTIwlgBm5WPt7NgJN9sj5oN0d5T8vapW1mg0Zjy8Ip5FpoM
KuteNmCBPYu15IMREU+GxX37jSyIkNhyQ2dzFs73DOjU28CCJzqRg9d1s/Cg
e0SR7FoWcK2/2n/XzMJrNy1VOatZoOKz5pnBkixkQZbBi5UssE4I0opfkIW0
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
QBqeSx71cCBLBm45+61+hKXhq1Ozbi/OlIHJCdW27NNpOLlfJeFIugwGne/5
rU5IQ0tH1VWcVMLb3F9ekJKGAY/cWj+lyCBzuCA4DZOWWqzTS5bBof6n5kuZ
aXgXenPdL8lgaXP4s/cl5PyLM5ppFwnvkvmeZ8rT0HZudld3ogxen28fNKxN
Q363yRPdBBkUeMVdedGQhov+S77sES+Do7bLjI+9SEMPb2UzVqwMYM7neu32
NFR27ykVxMhAeVQqmWHSMDtwm8KCszLo+LDmm4+QXM/foqVBp2XAHc7XTkMH
FQPyjCqDY9mUoXAaCo5rao+IkoFdmGPl3jHp6HWz5pVdpAw0nOW2jlVOx/p+
z72XwmXwn9lVAU8jHe9qOdW2hxHeaq7RW2em4/oHb7/rHZdB9BdFrd9z08n9
ZPk/v1DC+3llab5pOuqcrn1XGSyDmcXe9rbL07FydWW8QhDhTdnlrUrHpA/B
E3YEyKDyEGWgmI513pZ7GP6Et03opJVb0zGSvvfk1yMycNajAKfjgT+GR1f7
ymDuyBaM9UjHsZclC1N8ZPC96/QbE9903Gj2u/Y/LxnU313k1xKcjiP25c5Y
dkgGl7O6x4ZHpuMsMLI97ymDfcepBLh0PFTw3aLLQwYLnND88cV0rJ24YWjx
fhkMDctVp2POjbPxcftk0KSac0CDlo6xnl8/dO2VQZaMuoGkYxRXILfUVQZe
5Oa2/3o6Hrxay7/gIoNlvCKj8ZXpeNLuSebnXTIYG+9cf+1+Oj757qa2aqcM
Wg7Kuzg1keN1tm3JcpIBfW3Z18HX6Zj2It75x3YZBMw+cJ7xPh171zyfvWWb
DKxGUAq06fhp278bJVtkMLGrruKLJB3/3g9SUHQkvKuoBWo6dg7E6XhvkgEv
U0cAchk4aVTmn4YNMggbzt/PwA1Jchnz1svAfkfk1ASVDJR+n/or1oHwXmJc
ukgrA/fOX60psJPBJxXK4TEDzza+/bXOVgY3pfEfTs7PQOOJFhkla2VwmpJP
WJKBEa0Nv1TWyGAzJadkkYHbc7s0QqxloBNHPQBn4KMzH/rbrWQg8bRBrY0Z
GG1rlGCFMri75ntr7Y4MNF2t18O0lEG8LuPIwb0Z2B9g+E3JQga7qOF3KAOb
/Gj3glfIYF7niNyb/hk41l9k37lMBj8rr5ntPp6B+TZ+CbZLCe+MvU9HRGdg
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
vJ9lxsZbs7rb1PoEsPybxkTpcjZat1mbZX8SwMzhF+5s3PjT77XefwIY+/IB
84o1G9P7bcuKPwpAYpXT32fDxsatnHbzHgG0Xg0Ci3VsDKsIWVX7QQB3tdfH
X9zERsWOBIF9lwAYibNbe7ayseB0U8ur9wI4//f3LHNn8v1l9VGuHQII9Hnp
G+fCxpuDtgF97QLY1V50p8ONjZkvV88OfCsAK3tqQ4+N2ov46kNvBDBvWB+d
jdO2ajrEtQpg0lzKoJONt0+V1kxuEcDPK/J8gwA27pp5JST/lQA6R1MCM+T8
BfQjRi8J78CyqOYwNtqk3WXdbhZAcU9i0+yTbFTOvT9r7XMBpDge0Aw9zca6
w6kdL54KIKzWwqPxHBsnPNNoc20ivBdMvjYjgY3BtDmTRY0CcMgV/vFPYqPz
O3rS8ccCWKh037Y+hY3lZwI2yDcIgFJLmZJBzlcZ4HDloQCGBEe7vHPYuKb0
7LnZDwTweaf9/GoaG88UJ4y+fl8Azxp0QlWYbLSd4HXPqo7wXvqrzoPDRr0V
f+8+ryW8mc+Vb5ewcXL13N+uNQI4o87aNeEGG7cseBosuSsAnzORTNdyNi5f
8cw0sorw/rq9v7SSjTvyFOcrVwpgmbsxjKkl51/s7ZF7RwCzXoyOd64n47Gz
ocPktgAUrDpauA1sfJgzPqWmjPAuuTHrXxP5/SmV+M23CG/KzuMFG9cW11R3
3xBANWXv0kLG086fCwOvC6CQsvt5y8ZFLzM/ji4lvCn7p042jgxJeJV6VQAB
b/uy83rY2FdeMsKghPC2q+3r/8TGJdq9vpU8AViXpy2xEbIx13qi5kauAAz0
/aIypGyEl6py3UWE97BePhlviS/mBLEJ71Hamla/2Pjb1iROniWAroDv+5P/
svFC3wTDrEIBPKTsu+WK0NRrg8IChgB4w4ZERfiptWX2/QLCu4YyhCzC246x
4U40AYSbbE3+oFSEmYp2qqI8AezPoQTHitB/w6/eqFzCW3Hk/HMaRdh5OPyb
eg7hTb0e1yrCna3lVtwsAUylbpczi1BR4cJjq0wByO2MVT41uwgrL/dcaE0X
AOXu93puETZPzUg6nEZ4k8XuXCPSvq1Xno1MFUAZJfdmWoSW8pV2GSkCyKHk
n5YUYcMkydCCZMKbkoNZXoT9LqpfHl4i8U3JQ1iS/xdOmOmaJICt+w7PalhV
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
a+454ov5bhEL7EiBKjQuXuDDkf8BmohmDA==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
k1HV3SwUTq9Rlfvoj38Zhq39+JqFDjLVCw/98XBU2kNhwounL8f+LfHHIVob
rNW6WOhVNNOQxB+bdSst8O1koYLFcs+fHffH25UGKy++YiHzXF9H6d3+OKx8
gUl3BwttWMMojj9m7b49n4cws5vs11c/PL2AdWtPOwvdlFHVMn/ph5HKBXuH
NhbyuxM/3ljhhxXmDIsWvmQhpnpsS6Ifsfe1V80vyHhqEZBLt/PDOmf+JP/5
j4wnfaNX31X9sBluO7yNcHp/obfJOj/M/Xnb/JOtLGRk837pw3+++I46/7OU
FhYSHVt/W/KtL+6cCkxqaGahwdkB7IsfL3XRHX/OQpeZr5fniz89HV4pTtiV
aUfi44sTpEc/6jxjIaZ6t17PF/M4eVRFPGWh3wWBb9fJ+OLaksjIqiYWergO
h8Yv9sWvaRHDoScsFHeVS3yM9sEV7vu3CBM+Kn/4of4zHxyoO8Kp1shCQvXJ
Vncu+ODg6yv7fR6z0Bu1dq41UT545HJn3cVHLHTmxdIL0RY+eNxyRX73Qxay
OXbiIL3fB9/5/TGAh/DWgZIRbREf7JWtYLb3AQt9tR+Kr/3pjRV1Vqo5YjKe
vm7cIvLaG8trR0ifbiDjiVl+qvbG7lWeq1rrWUiF66bzcLo3nnP6M8/f+yzE
k/x9saarN+bYMvFLivALYYUbN494Y6fw8M9m91gou5hpQOONNXD+UNpdFjoh
+fhrMLc3Lpu/r//BHRZiFn8Gh7ywfaBd99c6FhrerUme2Atn7VndtY5wxYP0
rmslXnjFKfMu/dss5KnOBJBeuHfV1p7oWyy0h9mud9wLPw2PeFtby0IzJ8zu
vNvlhR/VWn0ariHjaajshKqwF77Q+2J8OeEk55E/V756Yg3+punD1Syk+31r
8ZKXnjjS7/CiwCoWmi3/rfDEa2SNVl+9yUJvuWvf9yZ44tGT43L9lSx0Lu1X
uJKdJy5bLayxmLDDCmbCyRMvym48hW6w0PazkY8XrvPEw+84wt2uk/G0+am1
xz8PPLDmeUnpNTKeqhZyd/d74Bt+Yg/aK8h42qdzSfGuB57mnhmaQ/hgY/bh
sjwP7DLmyCt/lYUWHX1DzffxwBVa1jtsylmos0ssyUXPA2sfps1yr7BQoZnV
tlfbPfCXP9PJTy+zkMXIxf/2LPbAmxKL6n9eYiFGPUpodxwu9PzLZsLsn9v5
5z5zx5F1kZImF1moKoIpaHLHdQXPzZIvsJA/7x29l5HuuKi7uKD+PAuhrL/f
5C3c8bXMf6/HzrHQPFGVnML97tiWNbZMnHDz+dhdHCLuWHqO83HdMmJPk9wb
LV/ccMAP35LIs8R+zmsmcq+64XLWkuHqUmKv0MvyVrZueNO/XTKfzhD7MO1e
17phAz128DLCumfv3vnZ54pD5sm0Hiohv3/VgenHua6YY++c1QHF5PdubEVp
uq5YavEpz/IiFvreZRhxYpErPlSm97zvNAtFjLx7vOGpC85d0b5uMeFFv+y4
v0a4YKv0d6GokOg579fD9xVd8ODmoLduBUS/mXT4hzPWnHcJnc0nei3F9UKv
yhl3qFiVdeQRfYZk/tUuzvj8nGs8cwk/01mqT210xrR1nMfOXKK/ViU5NYNO
uCnha79tDtFbr409YcVO+EQGSyM/m+hrTOWqI8ZOuOG0z73nWURPc/eeXCbk
hLmfp0n/yST6efnRmQ//OWLVvQrntxHmv3tksCLeEccv8hE1y2ChIma594Aj
fmmllJeWzkKb3p60OzDjgNeZFgk/TGOhmrHhK3x3HHDgioTsiVQWUuJgCmod
cPtt7uUShFsFfklfkHbAYieWFhmmsNBxZvsqZY/V19Suj0tmoU/yTMNNe4w2
Dl+rS2Ihj4PZJCO0x8MZlxXoRBb6e0xsb8dKeywSNv1chHCCw8Wg4k47fI9v
0ORoAgsJB21vsE+zw2csjn8JjWeh0uQ6DnkNO5yZbRVXGcdCzO6jf3PtsG3z
X/HBWBaqv9Ec04xt8Ye1W+uFCKsT75YTaIub7tImajEs1NXRz2u50xZ31yj+
9Y1mIcuPNke3fbHBTdvXnr0cxUKfv4+l/Si3wdpH8g/1RpL3db5/xyMbGyy+
sezLQsJzV3IuTRW3wYODqGh/BPHvWxKPHe+zxoolrhpu4cSfKwoVSuRa4zZ/
2T+lYcR/H2UajFrjPZlx1ztCib82ZxTIGgvxeljPJfyAaV/XdAqz/30W3RVC
/HHk7vO6EaewftZMt10w8b9ZD4ZFFU/hN0NlOQVBxN9eUN88OmWFf/L3GbYE
Ev96q8Op+qYVlle4tOJvAPGnz5gFDyvMFzb/nTRhnt6PX9Q3WuHJmT8XLPyJ
v2S57Fg6aIlPvIl2z/Qj4+nvlM9AkSW+LlW2v9GXjCe+8LqrxyyxkYjB4ikf
Mp7EF/zxFbTEdx8Wvt9IuFGWKaC2wDuVfGuOe5PxdEAkfHG8BRa9NZyU5EXi
A4Pzj3pULPALFbZNvScLtbWe4D38xxynz4tTGfdgIWrcOe2duzmuEru9di1h
Tqb93rAZjiwP5tJ3Z6GVuzIKFpqa4b0t3SPRbsS+x8+tLms/iZeeefbilisL
HQ6uPbfn0EmspaZdN+pC/NGZp5te3jfFIm+dzq8iHPDozTUbOVNcHrM6S9OZ
hTI+seSmL5lgcTO76FAnYg9mO46YCb4cc9C/0pH8/lv592/OOoHNRO67DjqQ
+FFr3SPMcwJboGd2woS/esgfMgo9jpsWO506aE/iuxxmRtQYl10+b+lvR+K1
OmPdKAdjzCHtY1VuS34vEi2tfH8M0/f7bfptSDw1E2xSaXAMm3n3OfERdl+b
NnCw2QhbeXl4K1mzULzqWZu3YIQnekrCPE+R99uumvaqNcQzj0+lnLdiobrZ
CQJD7Kv/oPi1JQu1X+smEa4B1rlYU8lDmGqjAnYvM8COfUpNChYsxMG0v0nS
x+UCNu+czVloxXK+aGtOfTxmt/ZXiRn5PRUYg+rhJX99lrWfJOPjpFxqBlsX
D45b7eIibBmuKrTJShfLm48a7zQl7/85o/yGbh3c6cAdamdC3vcmezHDozo4
Wbr+QsEJ8nwk2umO0cb8rYvaWo4T/8hsl/bQwlssv0//NSb+jlleMD2KUxf5
bZMh/OGC1SmzQ5p4gp1hZnWMhQTYsS5JckfwjPjBrGwj4l/krvrViWngU0+z
mpsMib/wfxnxiUcdP5oJnPvLgIXONnxLEpw8hB99+qO0lXDb3BW58P4g/la4
LPykPnmfjjALUmp4SrHlYZoeed4Mi/KCWlVsSq/kfqRL3pfu6Jqm0gO4+uGc
o5M65H5iV8gdVXD0h5hcScIPTv33TNxPGevZnxs01ia/Z/nXjqNWSrjY20Q2
SYt8P6Z9SiHCbyWuR9YfJdcz6bKHIk7LO/16XJN8/q/7g1cOKeC1rPVS6whH
xMz7wbV6D56DDsUaHCHXC2gtNJvcifOuzxuM1SD3K8ldU9e8A6uamCvdUSfX
b3m/Q/CsLHa0MjjLOkw+31U7vWdMGlsOfpy7mnB47EBd8uktOPoXv5POIcJn
PD4oHZbEq5t6XkUeJNfXMRPAa3GQrSLUqpHvU7bRRu+ACKZ+7rs2okr4lfqt
u0WC+NzpbrFVhDlm+zNxYdp5SYbmAfJ3CyZe62yYThziDlNhmLHfX8QjbBB2
U5lc/4IZz0sAJC1/DymRv/+/oTK8fM/rv4wwx2wBszj0m+n+PAyEHZj7SUDc
Q/mgIESebzYf2AxTG2o5ru8n3382P5SCPeUd8QOKhGfnC2TA1jlFSIgwRxQz
f7QDMhI/lartI/Hs7HziTmhY1yfjr8BCyrPzy7vhl57r4/K95Pp3zHrDXoC9
Z4zf7iH3m11/2gfp31y+LCGsPLseuR8+nelNVNlN3ofZ9WklkDH9tNFnF7HH
bL2CMpgfTH16aSe5XzpTv6ICFsFdDr3yLDQwW890AIRF7/EtJnx2tr5NFcwO
wC3YQT5vtt5RDUT4rSw85cjnzda/HgTx0vWLL8iS9322HvoQHBSIvt8tw0Lv
Z+vjD4NxRJQrL+HK2f0S6rCab936/dtZKHR2/4wGWHWZ97pJs5D27H6qIzAw
qZhdJsVCa2b31x0Fo8Q7Ol3bWGhsdr+lFoRUdy3hIdwwu/9WG+amZrQrbGWh
ptn92DpQsvtzjssWFroxuz9fB8b+GzUt3cxCubP9GnShxDVa8tUm8vmz/Tt0
QW/3g4l5hG1n+7noQbFa0cM9G8n3me3vowcrbq/IcpJkoV2z/Z70wfTKTruS
DSwkNvt+6cPY3m/72yVIfDfbD84ATsbqLp9LmD3bH9AQpCt0vu1aT/R5tl+k
IfQ++9LusI7o+Wz/UCOgfslWF61lofOz/WSNoMlUOO+lOAslz/YXPgajfPkh
cwh7z/abPgYNUvW2O9ewkOls/3FjuP46Ss9+NQupzfajN4Y1G9lKp8VYaNvs
+QTHwVNxSvaFKMl/4vmPvXh3HP7uKNvASfiP9Uz7bocTILr1i4i8CAsNKbM1
z347AathQNhuFQu1rO59yhtqAjopnvyFK1mo+s9TFW8eU+DccYnvvxUkfmam
LzNNwflo6BIOwpGMfImdhJ5fPwR3LGchx8yM6spLJyHcUHil7TIW0nMLk14l
Zwb5Ia/WFixlIQWm3d59M9BJ2ynVKkz0ZrOJxOeD5tB3SWHfPyGiR9zqZ4za
zcH04+AROcIBHkyBiQXMWEqb2wiS39c8s1nYywLe7RfzyRcg77vWgnj1OgsQ
yrmR0sJP4n3FcLXQvxZwP/rT5ZklRA+2/phTrWIJQ5txkyzh+pWuD0biLKHo
rOKINR/xpzzMgoAlsHnMePMXE3tMmezTFbSCnuD1Mi2LiN586vgZc8wKzFel
GM8sJPaZ9TdWEDlTGCVLmOPRA6/xD1Ygc/DoTWteYq/K3bISG0+BBd/5D3kL
WGik5PqYsfMpmPE6I9zCQ+yXsqEi5eYpmMoCjZn5xN8HFTk8mjoFm5KiI2UJ
qzoKbfyxzxoCfV3rrbmJXjLlRxHW8MDz7++8eSQfPcRZZtFkDd1Fsvta5rJQ
yU5/85yFNpApsDB0houFBCXGRZt1bOD254THsoRjBW17Z3JsYKXW9YU2c0g+
zfE2b0efDfhr+xvlc5L8e1zf0F7cFrL4Rs+1cJD34W2zYLGNLUhd/vtt5h+N
jrUqt7WX28LknjsH5Qi33K1L4f5iC8VvVxXZzNAImOWPnXbQX7VuMv8vjary
LvK4B9qBUVebVus0jSRjxZrOYzu4abmh4t8fGhV6Z0e9mWsPqd7ii3YQ5ju1
UJlPwx7itzxytf1NowjdyBmVNHtQKOXtLPhFo+/AFBzZg9zEr33//aSRo7R7
QMVKB+Dan36Rg/A7pv20mQPsLP5PSP4HjfSIGi097wDa26ui7KZo1PSr86YG
5QAdS9BU4XcaKYweIW+kI+w28XB6MUmja68fbavxcoTfUppDnITXMtuH6hwh
/fyLkzu/0SiHvM1iM45g1fez136CRjyz+uMEA2PNJ4q+0ig4vWRdXLwTeP5R
ffvyC42+hi4duPcfYTE7Ky7CNi7JxV8EneGAhyy9a5xGb0y4TDYYO4Oi0Hlv
xzEaHWWmC4udoXIN5iz5TKOHe752pQ46w7eqyIx2No12brTPerzRBQ5SY+vn
Eb689L3OT2cXmHnHdWcPi0aic434pKpcQK/yoY4zTaP0idYWyx8uEBuwiXWG
ohHXhwMJuYqu8MJoT/yrURr5M+2NIlzB2vrrxvmE2fWyczmeuoJfg36zwgiN
LCouP5Rf5AYyEeZursM06ixcE+ag6wZ3ngkvL/tEo8PkbiW5brD7ptfDro80
uu+3+HdHnxs0GgW7LiC8Ysejvih+dwjokl69f4jYozxEYfUOd3BXT2pzH6RR
8lqmoNUd7r/IiDn/gdiHaf/h7w6WESr7ewZoxMFfafS50B2cQ4p/LCS8N86p
Nq7eHYbfldXAexp5zUgKrxtwh8aHet5e74j9fAY978/xAF6Va7suvaXRCLu4
3WiDB1wKqvrT20/saX1c5ushD0hNtHrMR9i0TzgtydEDqhPrU1T6aJSr1/Z5
Q4oH/Ml7fMK3l0Ztz5M0H9zwgIMvvLeUv6ERL1Mu2uEBwert0297aKQ6G494
gMeGN+0ChIOZdG65J3CGJl9R66bRrYsBTzcreMIcN1ZUwGsafRHbKdlo6gl7
hKcsrnXRaAtTjhXmCQEJFUofOmlkvYg5cMQTomm+9UsJl0TZqWQ1esIqfTEe
9Vc06vm97qzUiCdMveseD+6gkaDnu39PF3hBxxXUW9lOI02qwMxqmxdYv9R9
+rGNRrEWhvXTWl5g6iRwewXhB938onkeXmBeEHJF8yWNfjPtO7O9YJVPbkn4
CxrJN8W9abnlBdtWmebW/Ecj1/1MAxov2HH+RfpoK3nfamZyOaa94Jn0WIoo
4SEmXFztDaFdd1N0Wmgkds7HYKeyN1DV8unRzcRfrJKtfnnKG3I/meTUPadR
RgZbwDHWG3hiZYrZz4j/4LnsPveKNzyprLokTnhe+KmXJS3eoBkxWGPwlPiT
H6ul9455w1KhB43xTTQKcO1NfsXvA/kRR7rvPyH+5VMOyfh84PBoNPtLI3l/
TXU1eIx8IN3Kee4GwpKdi66U+ftA78I5a44/ppH5kWfz95/2gcR/aoopj2hU
8CjKtrveB2aM95g+fEijV3vhiceAD+TteBP6/QGNFt/8vX4Rly9cLN90fjPh
Q5tuRV7c4AuRbyRbT2Lin2bjU18I7Hs1ldFAo3uzE8q+0NmyXaKpnvirlNES
nxRf6H2iYPD7Po22M8dvVPpCy8fJWGnCjsHmpuUdvjB4wOy+1T0anf/GHEDj
C2YzvpO5d4k/Y9Kt5X7guh22t9wh42kwwz9AwQ+UJ245/6sj4+n40W6hk36w
yOpdxQ7CyW08u66H+cFwQe243W0yng4xE2J+8K9GcWfRLTKeZjdk+4HXC6+Q
tlri/3bt0wsZ8QMjTpNncwl7Mdtref2h0X5i6d4aMp4kmIZE/tC6RsHWpZqM
p9Murpra/uCvLHfnbBWNxIU2/zfs4Q89o718r2/S6AQjT9n+QMvI2/ESzuYs
TRS57Q/X5dEjVEmjF/4mVO0bf5BY8muN1w3iP2cL3P0B9VmHX7pOIxW7jov0
6gD4Vh0x1HeNjKd3KfNilANApkZbnZ/wLUN16zXWAfB26sVN1QriX1vnPr4T
GwDDuf9EA67SaKvqg7UGVwJA4saHxGvlxN/eCwofawkA/xM+fz5codEZud3v
48cCoKH6rusywm+YcFggEJ503fyocZlGQmuvF9XvCASLvhMnwy4Rf5zv8OeY
USCYva/tqb5Io7glG05M+AdC6PQjo9ELxD/P5iuBkHg0sluU8B+mfLAhEJQ+
fzuhe56MJ59jvg8HAsFoavmHmHNkPLEFu0y4giA5aszhbhkZT6de7JjaEARx
N/y+j52l0WAvcyBREMxkV0etJyyip/Z1i1MQZGuVCRuX0sjwOYfOk5QgmJw6
cDn5DI3SlO5fN68MgrrL+ehhCY2eM+0wO4IgMrS0+3sx8ffbdzhnfw+C0UwT
ry2E918ca5ZeEQzBHM0C5kXE/4uVb36uEAxtH1hVWafJeMq2iT91MhgcdR8a
PSsk42kh06AqGN44aPydLiDjKapfLb8sGArU4i7KErb4nXde7kkwbPznp2eb
T/TcQ5/rv5FgmHtTlPN0HtGLUT4rO94QOOPjU/Uyl+i7RfMDTqkQcLaLtJ1L
+HB3zJoi7RDoLj0gtjeHRpFayqG7PEPgsOKd1y7ZRE+eTPe3ZYfABoOhzLIs
Mp4U6/Y53Q6B1jmPdLszyXiq8Sqc1xsCp60MhRYRdti6/deZ6RCgU4q7lTJo
dK6MPqawJhR4zhSW+KTTqH/lxVudyqFwuFLTvjyNRssyLJe6WYfCZF+1/PtU
GunwiHkviAsFbcU2LmHCiWE9HeeuhEIZ62zX4RQaNU5lyaLWUFg/d3N5SDKN
/jHHWYyFAl+pTURVEtGnT7zjngJhUPLmmMlIIhlPpk1HF8uHwXTzv92ihK8x
p8EYhYFx6snluglkPGnsX6gSEAb9+z1+xcQTfXrEHFAVBhXfFN7djaORyd6a
Z74NYTDw/O6T8VgSf1S6bRT4EAZlvV9uSBAeyVr6uIszHGbgbdHxGBpFM+mk
UDjwCocnp0aT+y1sX+suEQ497m9CH0fRqKFJWrd+Zzi4ulNePyPJ/SOTw3kP
kb9vq3SSIvxzP33jmHE4CD6QsrWKIJ/3i9nAFA6rVa1O5YXTSK72At9EYDhM
dhw91RpGo5fuXAiSwyE59osNJ2HnbZYkwgmHDn8Np12hZHyPNhS9uR4Odx+b
eDmF0OjiOdFWyQfhIBEhEVoaTKMD5oF/vNrD4U/z+aSuIBoNrOrZ8nCQfN69
/tO8hINf7zzBNxkOtk6t1yGQjIfZgu0IuPndq9E7gPiDo1/rLi+LgBder/qv
+NPIYIH26PeNEcS/0z/e+RG9ZY5X2xsBt6ruLhUmnEqeNl0jAoQvqexS9yX6
yyx3mkSA/VTk8VAfGj378eTCFpcI8LwbFFbtTfxH9fouv9AIoBdJXR71otEc
pv1VWgTEzs97JUb4zOx8RgRMP77Dqe9JI8VhxVPmVREwYZIjF+9B/MvZwsyK
xxGwjNpsW+9OI9+TPx/+6owAvhi/ogk34m9WGpEMLgIC1UO7NhKu7KwWz/4R
AVPaSOCkK/E/6QI6H3giYUXVbe1MFxrRTLi6KhL8E+j0p87EH83/73rQ1ki4
NP66c9qJRhJM+3bFSJCeCRaRI/wwNH7xMq1IyHjRb23nSCMzBeYLRoJp4FRl
kQPR/+8HnCvdI4FXpPlfuz2N8m6ePf03IhIEm4/pzics7/KvWSMrEiZLz1xQ
tKNR+6aTZMRHguids9MetsSffby7+VNtJPzeamZ0yYZGC0tXHJd7GglTgl1V
/dbEv5n4xof1REJQHLegIGG15Z23W6lIYJdNeB06Rfxdh+zIyj+RUBpa0BNs
RaOw1LRldouiYGLHH6iyJPGsxme1GrEo2Ne/vHzEgkZ35h3x4dweBc3p48vE
CBsx7eGUomDcMTJWz5xG34KZAzGiYCyq7WecGYl/91hzUVZRwPf9jUv9SRpJ
TT6U2+UdBZndJZ8mTGnUfGONVVRMFFSprrHYRNhudjtxFFw2NHl70oRGczf2
PRC7THi9/smsEzQ6O7jni+OdKPj4lHvg2XEaodn5rSiIMfG1mTGmUd/xSa15
/VFQ8+Ps5x2E/ZcyDUajIKM2wd/hGI2Wtt+4dmYmCpSuS3GfMSL+NnnxW/aS
aOj/nZLbaUgj7cNOixTWRoNvTflmXsJsppxHLho2TUZhMKBRApZ06jwQDf86
Vhr76BN/HBRduNaQsIPzt3I9Gj3eNfjc1TYa9nQEZQzoEv88wSRM0XBe4rDc
MsJ/rxVvWpAQDaqB7V1HdIi/ZuStMBqWs5cHR2jTaPeG43HnrkbDwiyRDbe1
iP8euHXry/1oWBbf38Y+SiOPIuHh/S+iQeLjibB1hPmMPZcmvY+G1Q9yZYw1
aXRVqE2150s0sOXTP6YcIf79pZT3hjkx4Ghy6PRjDRp9Skw65ykUAwGa9w1+
qRN/f5DqwBIxMCk+zr+d8Jo5h+Ys3hUD5V/fv7Q+TOKp+vOyJw7FgGt3akbh
IRoZM8fdGcfAYtYfw7aDRA/kLdInHWJAT22jGDfhzC/1WDkoBqZn+Ef2qRF9
qBAZT02OgZcyd6o9VGnUahewur84BqK+rYm6dIDoBdOu7UYMdJqrGb5VoRH3
e/kQ3wcx4J26eYsQ4XPM8G2PAaH8Vk51ZRopGX3p4x+KAbMc6f5QJRq9nZ3v
jIHfJdp3aoBGgf9dVbg6LxYS/9tO1JFGyxMWOP5cFguVe18GiROuUbUrUNsU
C9zTUpZG+2mky/HkWebeWJCQ0lRPVqTR2L11P99rxEL+p83yj/bRKIlpp28a
Cz/2P137U4FGm3a8Mwp0iYVWLQlBacJPxvbFPg2NhUIZ5XnWe2lkVV5QK5we
Cx//iP0p2EP0yebHR8uzsbD5+d1vL3fTqGgtU/ESC58ql4/PI7x3doGQfN8W
+c/7dtHodT6/l3pXLOTICo557CT6ZeBaljscC7Z/bny9JE8jfv7W9qEfseCh
zPfz7Q6iZy2bOWUXxMFyUSlOYcIacXEyoavioP7cosUackSfVD6Zt2yNg4df
KkTCZYk+kWx+xf448Bfhk7olQ/TpbmmDjVYcIEUZZfZ2ok8+M5+rzOPAwknI
eB1hE1lTMQ6POJB+eNvDWJroE/uO5tHIOPhqKJaaKkX06fLy4MKsOJhQVr3W
uI3okzVzQE4c2Bdve/l7K9EnZvv7rTgoCX/9TYawc58Mb+TTOHjCpSJit4VG
C/KYhldxIAhuasWbiT7pse1F6Ti4p2Hm+WoT0Sc+DRIBxsEoWlK2gPDA80tP
by2Kh8YdkZ2wkejT7Px3PPgo317gK0mjlcqnJHW3x4No+HXlig1En6aZhsPx
8Hq+ffCgBI30mXI43Xio+zJ0ZwXhL17BNXtOxUOv3rrfWutplLKdafARDwYH
1++PWUf0ibVb6FVMPKwfGo68t5ZGTy/mqIjnxYOpskvLV3GSL1p983C5HA8c
AbeWbSLMuZpZAY4HvrJH1mZrSP745nrb/JZ4iOvMqM1eTaN9OYs4DPvjwWKT
xIIWMZJP6jhuL/scD6m1AeachH0WPTMbn4mHudmZdbtFSX45u6E5AS73uQq7
itDoRlRUfcLaBHA8z+d1fhXJN+ED+7VcAkhxe3b2rqQR9RuJSqgmwMsVBXsE
CMfeKjriYZgA0pNRZw6toNF6z9+BDbYJsK5SbkHocpKPMscP+idAsPUFn5pl
NDpJsgPjhAQQ3tz/kV5K9Ikp/ylMgKql3UZrCedZMBu4EkBUJbflmDDRJ9GX
dkr1hJtWHkgVolEH017wRQI437GsbxSkkVtWYlPv+wRo2+Gq8EeA6BMTHnxN
gJ+acFeW8GXegxt85iTCadEuRXt+ok9NzAabRHC7u/1RyRKiTxGc0Us2JIIo
0tbo4iP6tN+82nRXIhzCO7oWEhadXQ9JhHzDt1Yqi4k+1awS/GGcCDUrNL/5
LyL65O6vrOqYCFLi4bE3FhJ9Yo43CEqEi1EBosO8RJ9GdpS+S06Eqyf21IoS
ljqX8XJrSSJ03L+vo7+A6JMZs0EgEc4/5B5P4CH6tOqodNODRKgIX5b+YD7R
p9flJ4U6EsFRgL3jBzfRpwyeFIuhRLBLiuuVIrz/qO39a5OJsIybirKeR6Ne
nkbW73lJ8DOfX+b0XBr5Na4VObw8CYJMZt61c9FIODxMI2dTEgjYVKXzEL65
723A4N4k2PrfNjWYQyOtH0yBcxJsu+oy7cNJI1ZVfk+waRIELvO5VcFBo3jX
qfnNLkkQLHnAa+gfhTZsMdi9PCwJoie65VYRfvTppq11ehJMZuz4rjNDIfOz
S3Jvnk2C1aJGd+P+Umja1OXJTFUSaF+GyIZpChWsaJk80pgEb45+0fz+h0K7
mHYNXUnALWG/ahvhV2lMgWYSCKtcoq1+U8j9CHNgVhJo4mv1Bb8otHi+SlX4
gmQYrArKavtJoXKmXGBVMqyUF3CeT/hQ6F9+kW3JsP6E6yH0g0If95oo2e9P
BmnFrA0+UxSK+F7nVquVDM5fw7grvlNo9c1lZ+ZYJMPcDHl6cJJC92bXx5Jh
ldzNtpWEj2/q+FsUmQwdrO93dL5RaGqIaUCeDBpdcy7GTVAo60yK6e4LyVA4
rye74SuFZExYSdG3kqEnyyf2+xcK/bdM/V7702RYltcXuI2wA5MOv0kGC0le
z1PjFOJOnbvKmU6GZ8aczoVjFDqnbqV+508yqKs9tG//TCGleQ/8uRenAHuO
hj0P4bcketFfnQI3Lp92BDaFAoODuku3p0DC0VtuviwKLd/zhntMKQU8eQr9
rtEUqvm2a9c+vRQ4+eVg5EeKQro3mIQwBRRE69NECI85TmR3eafAl7LpM3qj
FEqS1GlcF5sC9qfnVSeMUGgTcxxkXgpEivY8ezBMoSfFC9fXX06BDfu9P/z4
RCGr4w56vHdTQEK4d1qa8Izw04hjLSlgVLdAxPYjhU63Sdw8358CmUpcisVD
FNrDtMP8nAKXHjeZdw5SqOvQwBL4lwJmxgaxCwl7MukHfypELK24ofKBQkvw
adc3a1OhQ+BFX8AAhSoCfxVL7kgFYeu7vDffU0h917H/vFRTYXqdh+LoOwoN
f60hHjoVDtpMuK8hHHVNcBufXSpcVUaXjd5SSNzB3cTEPxXaXhgMpvRTqH62
YDUVnNfvWvOkj0InZtdLU2G90aDZdC+FfpxOoFQqUiE35PjZHYSzj42sSK8n
11eeHnZ8QyFZIbXDb1+kAsy7Il3WQ6EXL8r8tgykwsXMiIA33RRySuS45Pc1
FRTcNjzlJ8xz0Ox145w0SLiZvfzwawpd4Lw/T1A4DcTcXzqGdVFIpX7lTvMN
aZD4sOvBrU4KDfj7WVfsSgPN+5dWjr2iUIh8V9avQ2kw6qvms4Hwqi9yjw8e
T4MP82+8Mu2g0O2r6RNZjmlwPuajfHY7hQzsxtZ+CEqDKu7h/JY2Cn1dp6kr
nZIGwWer/80hnPruSnhQSRo4Ox91UHhJoa2F8yuf3UiD8ZDqLo8XFHpqyBQA
poEr+5Pqlf8oZC3wmO9URxocfPHx1kArhTj/E0eVQ2nQu7dy6wrCJUx7kck0
iFU7fE67hUJizHEjXOlQPP+aWFwzhdj/RIdbFqZDQO67wobnFLr7tiXEUzgd
rHnerpp6RiFm99NKsXS47nW5WIrwsYLN1/CGdCgcU1pv85RCkn49qrbS6eCS
dvFqUROFJg3i+hftTgdX5ze7Op8Qf0SygWpIh5en3zQuJJzBz5wIQnjHJcMD
jRSyYLZn66bDeQ0VKvAxhaSZdm3H0yFwqjys6hHxV1eY9fN0iDz6YQX9kEIt
caWOk47pMGjzqWYt4UIb7TmnvdKh0fC2/vEHFLI/MFOgHJwOh3Yc+56OiT9b
e012NDodYoWfFDxroNC8fybPU1PS4cwSTmUOwp1MOU9uOlxWWMjaXU+hMqa8
qyQdKq8O5bndJ/4u3z498lI6tPgnHrp0j0Lgu3zT5sp0mL7979e7u8T/GTTh
l3XpoBd24MYywv2yzIRUOrR+NLTTukP84RJmgSgdnGd2rYuto1DA547Yxx3p
IDk4/L7+NoUOt0Ssduwj97tgU/r9FoWWXZG5xf8xHXrNq09JEf4U+/7obXY6
VG1o22xTS/wHsz3mezr4LL4/UVRDoUhmu+xMOnBL+TV0VhN/Is4WvsqdARqF
nCmLCK9mjnNdkgGbnUzMVKuIf+lTV/25PAN8aqPlgm8S/8o8rngG8KWFLKip
pFBi3iUvtc0Z0Lz44BDrBoWMfYwWsmUzIPDQO7ye8Eb9eecyFTKA1j14xuQ6
hb7L1CjsPZABH1VCI7KuUaiRvI3vj2TADplY25YKCmUy09EGGZC73UyLi7Al
Mz11MgNajLj37rtKoe2X3Qpe2WRA+r1QSa9y4q9iVssGumZAkdfTZVevUKh1
tp4iA0qzBxYMXSb+SznY4mlYBmjKN/9bRdhhzdafLvEZoGUf/VPvEvFnf9+k
CWdkgPbBJZOJFyk0vy9+472CDPgy5Djx6ALxb3W7sWVZBnQb5X37fZ5C53OH
jXiuZkBhTfYPOcKe3jlj16szoEfw1IzjOQop66nGGt7PAIm4OTznyoj/k/km
Nt2YAUs2egn3naXQu8VltWX/kd+Xp3a9EOEKls5R9dcZMA3Pdh4ppVDQ838f
x99lwKKPFRpRZ4h/nC1wz4CBBaes7pVQaEXMSeH9XzLgaxMd/K2Y+EsrZoEi
Ax7IqBZuJVyrdO9AImcmYFO3u6eKiL3J2yLDmwl2Fs5vT5+mkB6zfC6YCRK6
+7g6Cym0hllOFskEa9X+rYsIj9/2LZOQyIRMbe1jqgUUup+zQaFlWybwx2fH
BOdTKNmrs91jZybs56q4VZNH9FU3ymEFyoTA1zk0O5dCm7fLceKDmSC6XG/t
BsJTiz7k22hnQlDvwImTORRqotNkFhlnwpedKnk52UR/mfYGFpnwAPm+/i+L
QqeYdocOmbCLN2QFN2GZ6KIf/zwyoeya0UmUSSEOqyNpFwMzQRFxXfDNIPoM
vyWPRmWCRnvk+PV0ChXP1tdkwoLgLsWRNAo5Mul0diZU6P9JXkN4LyOvxZng
6DL5/lgqsfft2piRC5ng++7BzvQUCr3OthZLvZ4JP+9ZpD5LJvb2FKqVv02e
R6ST4iDspfNIsw9nAo+AyOG9ScTe0h4fI55lQl/VziseiRTiXyTOtGiBu0sl
FpcnEHtTL4RevsmEW1rDXoPxFLr2NOSqz2AmsD2D364iHHRh2wFRVia45g2r
68dRSCOqr/fRN+Z5JO4kxVJopWWip8N0JqTu3L21MYZCI2gvL/+8LEBvxEqn
oyl0S5Q5YD4LrNp7lu8kHP2bKcjMgt9y9pkuURTSZ44fXpMFHEKtSy5GUmjt
rUn78o1Z4B47N/1dBIW+MO5UJguUywSElhNu8NDL/7EnCyyCvuVrh1MoRZtp
uJ4FDZLla+PDKGQiVflUVSMLDt3Zee1BKIW2LDQ3Z+llwcCh3H2/Qij0c3T2
QF1wHmlplSX8tOl+6h7rLHhe8drCMZjo73knyffOWdBdcetHWRDRo8hVDTE+
WeA47ZTRF0ghOYvnhttCs8C4ckpKmDAn8iceMAs83xr9pxlA9FmEaRidBbH5
yW4x/kSvfnWJiudngclUnnCDH9Hr2XqrLKhbGHB/ypdC+2qZAwSzwPLzdrvt
hHmyBoeEqrJAqPK+sL0PhXpI9H/3bhYk2q95UupN9FxLScjycRb4bzX2f+NF
IZ9t4+XzW7Mgd7GdtCBhFd4SleudWZC9XnNEw5NCgqNMw9ssEI2cfy7Kg0Lv
n/zx+PMpC17vL7C8706hG+fKF5SNZYGtE+f6724UCo5gDkzKAq81SiNShI+Y
8+wd/0fu52p43daV2Hv/7bYcnmywd1H2P+NCodFVtvaKAtkQLTNXrceZ2Pun
MMfQymwIaC0WFiAcwxzntC4b3hjyjag7EXvXMA07s2HLB8P7kY4UWpe59unr
HdnwO9I7+54Dsbdbm1mIYjY803Z0m7SnED7KHBCRDatMdx+VIpy6VTq1+Wg2
ON/vk7K1o5DpgrcbPIyyQS7mmMAZWxJfjCTVLzfPho/N5T+6bSj0q1HBsMEu
G/6c7RrgJ/yMaQ/ing29q3ta1a0plMu0Cw3Ihu+GVfciT1HIxuyQaFVENlw3
sb52z4pCOxSnqo0Tyeepjp2dtKTQnFUXjvzLzIZUCZ0CKcJtP/SHLpzOBlf+
xCxbCwqd6ZoTpHk+G2xFi9LPmFPIpfqm4LeKbGgzjU3vMaOQ4mz9XTZMfTqc
JUCY122JilJDNmxqHcrXOEmhN5pMw7RsqFt/7GyUKYUubnHxSHmZDYMc5yru
m1DIl0d0gXxPNoz5Pb37/QSFVIebS3sHskGsuLFFmrBQY8CeCCobLkcXvrc7
TuK7s5vaNk6Q31NFfarUmEKVYd12L35nQw2rbUnvMQqFnoz9582VA4VZstuE
CB/dtzNPZFEOVGg5HdE0IvHfbMOnHFgiG+oSY0ghmmkfIZYDtJZjZoMBiQc7
lc2WSOaA3f3td3/oUyiOOS5bOgeKUl58lCFskM4kMDlQ/vqgoKMehSSYcE0p
By5ezVc5p0vixSN/7185nAOXxBt9+nUo9HBzhYGObg48VH9+dSnh1Pkm7Knj
OfBL4fJHLW0Kmc02rMkBMx5L8XgtYu/HdSKqTjkw9eSb2cOjFPo9WzCaA01x
FqW/NYm9Q5cdyQjOgWbLSx93EM4zfTK4OyYHpu2ebXU5Quyt4B34LiUHjK4/
9rmoQSH5FesFY3Jz4MXhgkfv1Ym9p9qvbD2TAwZH1AVXEm5/Fa7ccSkHXj1/
Za13mEKlN7e/8a/MgX09e+4mHaKQa9o79zV3csA+0V/wyUEK7XdJ4Wl6mAOq
k5kuM2oUWjhbj5kDlZvjW3YT7t3ETNjkQBgy3uahSqHL3IUv7/TlQNpBrvTy
AxTy+3jYzuJjDtQZJkwNqVBI7dGPGe7POfA4jDYXIyxcejH32vcciOyRbDVS
ptBgiKG0wUwONHihfelKFLppMrfpN3cu7LORvfYciL33Vp8kKTQ8ePBvLRdh
reVW3w+tyAXewisFiohCot/5U8bEc6Fz7nZh3/0UYnVgiZzNudAjnJ5xQ5FC
dczxY3K58OxtqwC1j8TTqWIGgwq5YOz1KXsdYSPnVlb8gVzYRb1ZZapA8nmN
oKjtmrkwX7/8XM5eCk0w210McsG/0Wj7yz0knma2v53MhQ267+t5CKcPMQ0X
cqFmkaq2ym6S7z9kJqjJ9+WNGQraRaFtZz4FuPvlQr9ZWWDtThJPM+11wnPh
vGiR8Lg8hZqZdrvxhI953txEuGDPhJJ1Ri64rt+ga7WDQrbLzvbwFuZCYlbN
t9NyJJ6e1Ha/WZYL4ffEC7pkKTS3Y2a+8dVc6LjuoLyE8Ctm+r06F+ZGpLEP
yxB7M+n4/VxIUsssjNxO4mmnhS+PPMmFT0s8j9yXJvZWv2s78V8uxH+T/vdd
isTTGx1m8l/nwhDX89rthHtn63Nzwd5Ayc1hG4WuDDZJDY/kQtjP7K3nthJ7
P/B5kvwlF9K5ntL9Wyh0sETi5I5fuTAd/7piGWHh2Q3sebCt6LGHzmYKDR1n
FuTywFcndW/iJgpVMeVjQnmw686uuY0bKRTOlBOJ5EEDdb/9rySFtL+l6ntL
5IH1d/Gy3YTF2vezVknlQdC4lY/HBpI/XWdHPtyZB6qsyCNXJUj+xBzvjvJA
YDpc4tN6CiU4alTxHcqDtTtPcqwhfOzwL/Va7Ty4dWX5e+N1JH+SvPzBxDgP
BF0qH2SuJfkT17GAOZZ54Jy58UKrOIUef5gncMUhD6a2hSRzE07HNZe1PfOA
rX3TV2kNyZ+KTylNBeaBP1/jqcDVJH8KEuwpisqDpqBa/RoxCv01fuh2IDkP
uK7GHBwTJfbe5T6fzs4DvRvyipsIF85uCM6DjtOP5K1ESP408d+u3Rfz4HLU
dpmiVRTa3Rb84u31PKADgqRfryT2vr7VNvp2HtRkXNzOT7gzqffvlgd5IPyu
cofGCpI/OSTktD/LA3HPQoXo5RTyOLRHyr89D4YsTqk2LKMQ2jDSuLo3D2zq
F+r+XEohPq5c4mHy4FphloUc4f4B1UknVh40Lvzj6SxMoauz9dp5ULZeJf6i
EIX8i5gDhfNA/bt96YAgyZ8Cde+Zz8uH8iy3e6sILzPm0Ofmy4cGAaM3BgIk
f9p5g65Ylg+BkaK/U/mJvYXMIvXX5MOzn4/Eni8h8fTXRat+b8yHvDh1VS7C
2i/v3SyVIX9XrnTZz0fi6WuO6of25oOqwo8Cv8XE3sxxecr5QEetfn5zEcmf
7JkDFPMhX1byD2shsfdBP/59+vkgacQnI0nYWIIxcD64zu22s+Al+dOcLoi3
zgcl7fCywgUkf3of1S3tkg+O6rwDnTwkf6qXc+vyyYf783zElxDOPP2BOzg0
H37nPjilPp/kTwFMARz5/CWfr0Rxk/zpGOx6npYPBlG/J+rnkfxptl11Pkxw
kdhtLsmfBIttlp3Nh5DzdSlyhE9/YQQkH677Obx3Jtc4EHE7VZUPKP3Pjktz
SP5UcWUb7718eM3hlvSBk0LcicaNlY/zYWP/408ihLvs5psea82HXvnfKkYc
FDqnduvb3858KBQTPJf+bxR5rrdJOv82H+ZeWcjdMjOKlDiZDrTkeahhp3mE
l7x/dPfrWD6YTZzrhL+jqP8+E6DmQ2iXilLg9CiqKBSnEUcB1F14fL3mzygK
nK3fL4AzPpLi479HkbpR6MpkgQK4e8wpezPhZfJSN+VWFUCJWeZC61+jaFiA
OeGxAFqLTseU/BxFNeOJA2FbC6CZJHBvfoyiKKZ9gnwBiC0wjBQirMO0U1Is
AGQ6b57W1CgST2AS4AKokMlPjP8+isZsD8IqrQLoz18s9HhyFNWrfn/9wKgA
lC7ZlPz9NooS1513tTMvAC3X0m17CJ9gXj/7AnDjaKj3nBhFm95xltS4F8Ai
9wbda19H0Y97lTtNAgog7eXZ0ZEvo6ixwPw/zsgCOCFrH7mOcLYfn83lxAJ4
dklgzcnxUWTFlJdlFcB+tZKGvLFRJMuUm5wuAF5RPsuOz6Nohl9kW9H5AkhC
ltyLCb8Ye/5Y5VoB8OO864fYo+h0K1MQVACjN24ej2SNIsfyjd/SGgrAdP2N
+fX0KNob/zpx19MCuL81ve4HNYrm28ase/uyAJT7DJzlCL8+IH83qqcAdqn+
XecyOorOrx3S3fKhADr9E/ovjYwir38ZVBtFvn/Sr/zB4VGk/FYpwm+iAP6m
HDUWI8x/b3zF6j8F8CUzZpXxp1H0Lr+kspGrEKwrzr7P/DiKrvkePey0qBCS
2Wcv/TdE7G0w/V5gaSEk2cR68hDWmN3PUQiJm7WVDgyOohX8J5aYSxZCpcY0
f+iHUTTymefSvO2FsKIv5WPdALF3y21UsbsQPrK57n17P4qir9i+1lMqhI2Z
ZtnShPXilrr+OlwI0/3F7g7vRtFa5nhH3ULwZk71fkvsreJVfPBEIZRdbZZ9
3z+KGsTX7fxsRb6fft2yVYSTZ9pas5wKQYlKnDHoG0Um/WHWCt6F8ChUhUrr
Jfa+Kz09EFwIgpLvXze/GUU/897+j6VzD4fq6wKwUCHpLkm6SSglpST2kkpI
KKVSKUKUOylJSLqqRCR3M2OMuZmQawkpKkmFipJizsxPd5UU1beO5+u/96Fx
zn732rP3OXuvlXg6NhWWfd1bPxL53qE4nJGngmZffYX5CylJclx1pyU5FRpN
Jl8Pf46+l/Q6h2elguHrddySNikxpNO9c1LB4v0u9tdWKZH5uP5cgygV3ofu
yF2I/PhB/2z/8lRQTViVt79FStI5ueVTalOBZyfHZzyTEp9TWzbdfJAKV6pE
Ra+fSokJ/br+WSrwv62pUkNWpB/fv0qF5n83Hzo+Qd8zXdVEPanw7vv0Vxeb
pYT9Zxy9QRQKe/Z+vv9YSkI6qtb/+ZEK096eHzkSeU257xvm31SgBtM1zZvQ
91WNwzaj0+Ct5RWT8EdS0hXyUOXruDToeha4o6RRSoSbj7KvqqVBZrFR+NeH
UnLMQJeQ2Wkg+f0mayHyBpUXrT26aXC0LKB+/wMpmTZ8vicNVP5JvjLuS4n0
vtFIw1VpsK9r3czOBikpyetJf7EmDRb5nbOfhhwbm7gs0jYN5lTcOLGlXkoc
91k0ztuaBl9a68su3ZOSuau/7mvcnQZrnlV/fXBXSr5oZg8GeabBvTvZ+qOQ
b2O0TfNPA83y/T6r69A3/fV2OA0+1E0RHrsjJbvK+LWeUWnwdIDbV1orJXrJ
O53Hnk2DIM/5Jt9qpORXsFJf0eU0cJ55/uQi5Hubys86p6aBtlHbE+9qKUle
7DV7BDMNfMoV5uTelhL3sVPL83hpUHRrzqGuKilZ+v6ug11xGlx01Ho4HVnm
foj0+800OBE3VmvbLSlpZs+NSrubBqpHOyMTbkpJ5km6omQaPNa/2vmoUkp8
3aILpG1poFO+wlwR2cTcYP2lN2mQrl/NWlshJUqadAG2NOCmGyhHlUvJi8EL
oa++pEH11LOhlWVSkvfSVCXmVxo4ie5395ei79L3ubqy6dB+uM/REHltUqpZ
s1I6FEfK1fuWSMnEYPrAczo4vBwyzb8hJW8dBnxmaKTDxOTOGz3F6HtRnnyd
VjrsqucsmYV8XNkp/YB+OsQd3ynaWSQltr10Aal0+NvYv+RqoZRMbyjCCE4H
5bqjJU+vo+/h817pMOaQxEwFuSxmwqC8QzpYfTVtsBZJySnX6gTe9nRQtQnf
GlsgJVvpcqSu6VAXzxBXC6VkzgzN2gHvdLjcVnhkSCAlfb8bd2QFpcODhXwV
Y+TqF+Ff14Wng5B1MS+YLyWXSugCOOlwxN55TQFPSnZfeTkrMS4dDpBx73q5
UrIg6EzZyqR0KDshiNFG/m1PF1ROh2R9Ix23fClpwNnpKXY6mDqwH2dwpOTq
mKRI/YJ0eDIoc/RlnpR40OUSStMhZvW6+VOQjer7hEer0+G4YfBzB7aUyObm
WM6+nw5db86di8uVkicn6AIe6dDsHGfewELfe/8d8mtPB5/iw7/kkP2IcOyU
bryfP7Y3gCklphp0AUlsPyvlkHCGlIz5PcbM7Xs6ENYNo9Ic9P28okXhD97f
XOvffdlSwrnh7VMwMgPutN2rWYQcmqgm76SSAYseL4o7kCUl6wLr04ZUM6B6
RvQOdib6tqcLEGRA9LNbuu8ypOTdwnkPrXUyIGCEeGgGskipxe2LQQbElfU/
3ZEuJZHSE7+TV2ZAs+I3XlIa+r5HHwDNAMNR7aefpEqJBqtLt8cmA0RVPM+x
yL10OiFH/PlaLyvra1JSPnz+LwP4eeP0Y1PQt9nHL8/dM0D5d87kmqtS4jSd
TqCeActsZ/4bSpYSrV82s+aFZsDYgtMfjJG/tf0qfXg8A8KXdrwKSULf9PT5
dAZs653WLLoiJfEJ9AukDDjZs+beh0QpcQkYFXk7JQNaDXfc1kHWt7uh6pmT
AXOoHZXuCeh7gbtQmZsBZJxlRfZlKXmgOMmyqDADflfNuPkqXkpSJHQC6AzQ
GPW2Wg15/92AQzJ1GRD041LDlkvomzlzbF4jtmeG3rP4i1IiH93E2tiaAQ/G
Xe9qvCAlT10iTL+/zgC7XXO/KiDnmC5sSaUyQOFKtPy6OCnxV+84uPpzBhTX
P1SPPi8lZgNn5aQ/M0BeQXbZrXNSMrbNOO2iTCYIPbQcfp2VkvYiOoFtJrh9
NfQ3Qs6/nPygY0Im3K/Uvxx4RkoO+69zO6GeCRdbJ5cITkvJ+o3ff+nMzYRd
9tLX/52SkskLhl+Yw7OVHAVt5G6FzbqhyzIhPnfLcrdYKblOydRomGXCcuZH
z8yTUhJVV7D9zrpM2L4mOLU9RkrsGC5fvO0yITlZ3KyKPCNq7Jnx2zLhiGCt
kuMJ9L375szSPZmQkhJveSlaSipWHSzd7ZUJUV73Yx9GScmZ4fOgmVCm/7l+
NPK2nw0UNywTHg2MGLs2En23Hj6+6UQmQPuIrVHHpeR7obbqwLlMuPzuU9bN
CCmppdMzJGYCmXP/48AxKblMp2tJz4Ta/HhihOxiu/T1e1YmXDm7LiEwXEoW
6b0LSRBkwsKnEqngqJQMjb6svLIkE/oTD1v0hknJQzGd0DIT3N98z9RGTqHL
jdRnwru6PX/djkiJV07Gs4XNmdCypWxv1mEpWR5pe/DZi0xgZf292xEqJSN3
D8oefZsJohuGi9SQn5pwccabCdvytlzbckhKGPT2vr5M+H3SffTlECkJoF/3
D2bCRxe3I4+CpQRaSlwny2fByXV2HxSRlQs9flUoZ8EUa519lkE4n740+bLr
lCz4FPbl1YlAKeH63tFR0MyCXVL2jtsBUhK2IahaqJ0FXNaGl4P+6Ft39vat
i7NA/XbnTmNk1dHNnwdXZMGX9XvfhvhJSU/P8dMM8ywIsG/2vu4rJUW1+jOt
rbOgWbzox0cfKYnOflXyeVMWbJ5+LEYP2eE4nSAwC3RkyibvPyglM3fRGyKz
4BTrHYd5QEo+rPwvovtgFqSpDUGXt5RUTk2Zci4kC1J95Ns1kM/+sBQYRGRB
nmgwdIeXlOwYPh+M1/P9rWryfinRvs56FXExC65Yl5Y/9ZSSH8PL8yworwrf
Mw75jo+s8sOsLAhzX6xg6yEliTbXmYGcLPhq87TojLuU7NXZu0rtehasOuHu
dneflCweNe5ZVXkWHFCnJskiD3XfOuBRmwUX5m5rIG5S0lgz/IFQLiiNDHeV
ktSs6amFz7Kgv2G0SdleKfGOeLBkx6sscIhd//P7HvS9M+z+v54saOwLLV2C
PGqljiv7Yxb4zE4+6uciJS3DCdeyYOHsXHPebilhfo+N//Y3C1RkWYrSXVJi
7K0++ZFcNqi0JLRqIc968XXPLIVsmJEXyHLdifPz9fd5wcrZYHjePDTTGeer
N+gEQ9lgHP/PpmOHlLRq0Qkts0HnnnCOGvLNRPtLvtOyocvU7s+W7Th/l6U3
XGbDRvnO9svbpOR8IH3AJxt2LHSpbHLC9VtXa9B+7WzoqGvKHIPsbC+oqtDL
horXi2OttuL8vuqkksribHhwKtovdgvOd/V3ObkuzYbex3ecax1xfZe+lFG8
Ihs+NvRb/9ssJf1KdEatbGBHq5uaIneGvVu50zwb3iguXhK2SUruSstjhWuz
wS9wmW6JA64Htl1+MsI6G1Qb9LS+2eN6aPi8eDZkzpg4xwA53Mjcm7MJ/350
7xxfO5wvs6beGNyaDc7yxdrcjbhemPRZxt45G5Rv+OlLbKXE4MQ9W4ZLNqQz
1VdoIU/7mpHywy0bbr4pXeO6QUr+7TnUY7U/G3TDLB0zbXD92GRrkH4wG85G
3vPosMb1lJnWsc/+2RAvaxyuhlzCpw9oZsOXCWmJW61wvj392aTkI9mw7tZn
YcJ6XF+e4+7571g2mE1e/uixJa63fkXzTKOzIVTb75My8mavHT8vxWbDFbmU
iTbrcP313GBN99lsWFRZtPL0WvRtqXBp+cVseLerZl/dGilRoNO7JGSD+UB1
/Ajk4XQ/ydnQnV5YTSxwvk6nf0rLhu3Oyd/CV+P6lE4HlpUNC8x9dMvN0XeA
mdJzZjZ82L3MrR9wPvtmspMeJxum3fmUsRQ52O5DTgQ/G1ZHpr0KIOj7Fp1A
MRve5phoCs3Q98K0lVo3siHIpNHtvSn6TguKPVyeDeHbHbg6yOOVbJ48uJUN
PmPqv3uswvUtnX6/Nhuq3AwsmCbomy7Hcy8benzjErpW4nyYLs/3IBtsTTvE
M5AFdLnex9mw77WG6U5j9L2MHjCzIWnvpqSUFeh7OH9ANli1Hvnauhx9T1zU
M+FVNnTaJDpMQraJHmng0YX9szm70MEI18dfXoWX9WSDaWjO1IvLcL24p7h+
zH/4c5ukyIdLcT7ddH7Sno/ZcHn3sV4FZAm9nfxrNkysctpuaYi+6e2l/egn
XOt+zBL0TW83+50Nrrli0xoD9E1vP/mL/c8mtejvYlxfDlRf/CebA6rhFvqm
yAf3p7RvHp0D59d15octwvVHm782e0wOBJT76pbq43x83fqgX+NyQI76wvu+
EH0Xa1bZTs6BqPb9SwyRFeb2K2ar5YA2+2m5/wJcn1ymCzbngM72JesEeuhb
hp4g5kDVv5hnvbq4XvE/9vHavByYzn/groOc2+m48qMu/j2fkb88dND3xgWx
5otyoNN+WTxzPs7nb8o+STTMgVSPbXpvtdH3gnYNyfIcuHfTr14TeU3qdS+T
VTkQ6350/655UqKreLb4AuTAr4NHlVK10PeRvTJv1+QAeecnej4X17fDCZHw
77Vt2zEFuWsrfQA/B1jbjEY6zkHfdVR3u0MO9IWMLo6fjeuBpVWLF23NgQNm
TR5Ns9A3Iyk8egdef/VZdWXkiAm+9S27c2CysslT65lSsm84n0QO7DR4E3da
E31/nr4n3DMH+leF2dydgetjF7oAbg5IzRTGyCGrP6IXxDmwfF1ck7kG+jZl
WBwKzoH2vSOTjk/H9QQ37GLD4Rx4nBXsclMdfU/b1D79WA6oTHiu93ualJSe
0dH2j8qBM3cW/16BnPHzX2DtyRwwvhfReEgNfXs+vzXlbA7I6NTkFE3F9XWr
UNH7Qg60/fwV9lVVSrYMbxfA+1+rs3Uxssnw64McsJphu9R3Cq5Hhh8n5AA/
3mMybzL6Hp5e5IBIEDIgnSQlX/91n1Rk5oBhTNgbbeTnfpXNu/JyQHlWyH33
iRjfrxM0RDzsb4nuJYwJGN+2B7zkRDmg9d6G3TVeSi5Uri52Ks6BMSvmX9NE
DtGjC4qi79hfF3eNQ9/X6AeAOZAurjmdqoLxrdBw1aEmBzo8omJejEXfh7O6
mXdzYNYUoxOqyBOo0MU/7+fAAtmumC3KGN9b7MJtmnKgelX0mYQxGN935tVn
PM2BzGa1+GYl9G34Z+LXthw4/pidqoIszGlxWduRA+rrF3BsFdH3eD736psc
mGfJLjungPEdGdPf250DOzqmNjaMRt+fnC2INAdcpkS9G4W8YTi/SA5IZN8M
rh2F8d2o2N7zJQeSC5epxYzE+F5FZxDEz18avaJGHn1zywLP/8oBtcS6Hf/k
0Lda/K3OPzmw+O3f42bITaf3KxrKMuD3AoO8cFkpudFPF2hkwKwT25+Wj0Df
HvQLDwYs6jssMyAjJbEtHz8sGMeA6nMXlyxHPrjmrnHkJAb4Oad7hPyTkM2F
6bgCZ8At/5z0wr8SYjI7pHmeBgOsXma0ffkjIXPiN2iEzWLgfPnypMXIiv/m
eDVqMWBO9zFH3yEJ+ez7u2imLgNisvck8wYl5PmrJ/+C9Bmw/MPKV//9lpDb
G/I33FvCgLKWMfN0kNkVUVenLWfAOa/WAM9fEhKnu73bxwQ/ryT5NmtAQkJS
Fi+uJgwYeGg/ofunhOwaPTp80hoGnCyT8ZyNvCa0857negYsO5d/a0+/hOiK
b0ys2MDA9a6NWuYPCZmw5YLLWAcGVKp2H3r1XUJ+1dIF7xjg9Sm4TR25awn9
gpcB4p6hlTu+Sci97EkWo3czIFHhePbVPgkRjnt/wdmVAW37fyq2fZWQ5ON0
Qh0GKE3wDp2MHIGj1YgDDIib+Ey8+YuE7NsVGLjFjwGFR422X/4sITYPrW7l
BTGgZVv8o8efJMRwON8MA8zLutepIKvn0z2QAXbcxTW2HyWE/vLIiWSApWkI
nP8gIbj4/vA9Bv0cu159/72EPP4RYWx1hgGqYZK1Csil7ltPpsUxIMpctdGy
V0Lo2fqneAZ86DJziv1PQk5ayGtYJDEgw8ul+45UQnyud+xPusaAevHhYFnk
LbOKiqQZDBB6nhu1WoK+L9EFxBgQ+yspPZKSkNl/XTdcYjPgGD/VqEqMvn1X
Xn3HZUDDhZQnQz0S8rVjfLdRAQNSeJcCViE/t5EuOlvEALXJUROPdktIVfnt
o69K8fpbvUvL3qFvnav3Ft9kQN0f2z0/30rIxat+E2OqGWCSpqu0HDlkFL2B
kQF9lf9KQ7okZOch+sAhAxT8HnsVvUHfPd9/HHvEgNTbKRp9nRKygC5H84QB
tVU7nxkgT6TL07Vh/wxTu+D/WkKGy9W2M0Djb5O18BX6psvXdzIgwDlS8WOH
hDSo6AXO6GZAdrpu4wLkgogRtwIkDCh6+ujygXYJSfrwQqHuPfpU8nHOf4m+
d9IFmRiQuVleW/pCQjwe0Bv4GBBdlvxdG9l25Z4PtwYYsNlm7j2P5+ibs9x4
wh8GTFblprLa0Pdw/iEm3NZdENTdKiGyp8SPS0cywTqRbTsH+b/vN6ePUWJC
/l4NPdcW9L3vyn4XFSY0Z8UpZT+TkOH0VhOZwHX5+bHzqYRk0em+pjJBl7er
ZQbyKTr92XQmGCbevLXrCfqm08HNZAJfayo3rRl9X7z/7u9cJhz39bnW/lhC
Vv3JXrRZhwmnwm+en4Y81+fI0dyFTGDtGh29vQl9d9jfGzBgQpnmxrCrjyTk
i/X8ibZGTEh6fCGkrVFCXpT93Z21kgmqEfeDpiBXz6cTxjBBwUgmZMtD9J0s
+LHOggkWIw2PJD6QEPp07jVLJlwZdIl8el9CDoXsuvDBhgl1806fnYC8u3vp
S7BnQuZlbrJDA/rePGZeoiMTJLb32ZfqJUSv5l0AtY0J7h7d5U330LdBxc2V
u5jwTDrweCzy70x6QzsT+nsU/7O9i77Hem/pcmfCif2qI+PqJKT+mHn2Um8m
GB/X1Hp4B32/n/rhlC8TGpbPsVRCvkqnGw5kQk/m7IPWteibTj8eitdfp5F4
pkZChssRHGXCueJJVfXV6JsuT3KcCQciRn0YhbxMdeP++TH484U/NCxvS8j0
WK2io6eZEP/4jUNslYSMGM5HxYTZIfdO191C327PbGbHM+HF/PwaOeQnT7jJ
IVeY4DRw+q/FTQkpMz/xrj6FCcu/uZETlRKSWbBj0fQMJozXNomuqUDf9PbC
HCaEZo6tl0H2o7cb5DJB/sDrceblErKVfv3AZYJ5cv7OyDL0TT+OEDLhpkEQ
t6oUx/P2i/mVhUyQWb9i6E+JhIyx9vyhUsqEa9SAgxlyX6nZardKJijOKOUc
u4G+tadcuHGbCS0/A+VuFqPv4QBhwpGTuq6DRRLCka/T2tWA19P8usYE+VJw
WkBBIxMs/7s472gh+qbTLTxhwt5XpnHl13E8p4/ftzLBpFTyY0AkIevo49gv
mbD+9CU3Y+SF9PHc1+hzx7KnhwvQd2bze/t3TCgxbVtbKkTfypwVTIoJ30wP
VfQLJOTt8BcwE1S8Jixdjnx/OEEwXs9DrvAQH33TzfeNCWdCVuvf4OF43jBy
/5efTGAHtAq/cyXk+Ar6gBMT9B55Ll2G7MmmExiwIPDqj4rgfPQ9Jc6mV54F
L15FryviSMjSk/uSzRRZwOeOedaXh76/mbyLH8uCdSqJ+wyR5YYn+Cz4Plnt
ZyBb8v/8ZCyQaUy9cD1XQpqh5u45dRZUmU+f/5WFvoUpEzo1WeATde2OAXL2
jIDdS+ayYGvKlH0BTPQdtz7/5HwWVCddGiliSIjvoOaP5wtY0BM7mvc5B30f
6DdfYMAC2dAIx8XIZi8fxR1fxoJdwV//+mVLiJZV7osnxiyYdX6fQJglIUql
x7TmmbEg7sEzl0+Z6HveloAjq1nQTCwmLUJuv7Lg5sN1LFD7IXzgmyEhNXJy
CjNtWJD+e1qsIF1C8oLaHYPsWHBsV4zFxzT0/fZ61t3NLOid/15WH/mww9n3
attYoHBg0z2fVAlxub13hc9OFgwuLonjX5OQtYuMY27vYUHXqWlOH1LQd8a4
xxPdWdAeHj5nIfJkZYm6pxfej8arrwevSsjg0SrPch/0EbKqjpeMvv9LKlQO
ZAFJuHbtfRKO59t9/+45hNdzoj9wAfL1+rU2RWH4882bNx68IiEpyzWSRx1n
QbyKYAEvEX3nfnu74wQLoutGjX2fgL4nP9QXnML7jd7zVQ/ZLoYRJnMe229T
6YsDlyXEqI8uOMGCzRYqd7jx6Nt104S8RBYM7XUX9V7C8bx5+MArOFWUZ+sh
9xKZ/I3pLHDdqXLlwEUJeTqcr44FEze5neNeQN8aBebfWSxw49yI6Y1D3+dp
wyyw8lOI0kM+/Xv3i1QBCwoLnCMPnJcQf28jrU/X8frD+NHcc+j7hXLA6hIW
tLz4c6r3rISYru+pvFKBf6/d7pIeslZJ5WhpFQu0zmelHjgjIco4mq66g/1v
4DOHexp9Jx7IuliP/1/fvKL3lIS8lLV4//YhC86tjG/SQ64JnLbCqBn77/wu
8YFYCcnv+nLiTAsL+kYayPBOom/7hqaOF9g+XZEz3sdISGhVlvri1ywYXffY
bAHycHm2tyxouDXT9eAJCbGky7WKsX+3+5/mRUuIPl2+vZcFtdrVovdREjLp
6B/rY59YcK1g/OsFyIPSlqTHfSwoiXZV9omUkO5t/LdzfmJ/yS8k/OMS8oAe
ngdZ8GqZfMiHCAmh30bf/8eC/Yud+AuRU1iGdzXkc8GSzZH4HJOQqElKEwIU
cmExe3CeIFxC9p94u+uOci50rbLf//GohAwfD5+QC4ohTJ4+8vBx0Sm54LVz
oM83TEJm0MfHpuUC5+9GM+ERCZGnj5No5sLRA6xznw6jb77qi31zciGON9i+
CPnpdPoJRy6canJc5B8qIRXD+QtzYXwX/2TBIQnJ+ZVeuXtxLjz9MKrzcwj6
9goZfX1pLhwY4WZigOz3fIOjvDF+vl7VtYBgCdlmOTdrm2kuZIdMHxIFSQi5
8buXa54LoR/CXL8Gom+tp8v/rs2Fq5kv7y9BVk7MP7HJOheSr5oYBQVIyLcR
9AP6XJDrSWcW+ktIR8B29YFNuRAWLzPlmx/6frPYc4NTLkTke5xdisyxG12Y
6ZwLjFWNMiG+EkKvPr665IKn47LwYh8JObKwxHrdvlxw/pMx8P0g+k67kJSy
PxdkLBXDjJAtlegKqLnwfGXo0KED6DvMVB8CcmGPuOdEibeETJFOCksIyYVp
W7cq//RC307v68RH8HqS6lNWIL+7Wzt+ZUQu/C5cpXNkP/pelrorLhrbr+J6
RZmnhBQyAzlvYnNBr1TX4ZeHhFybaP3d8Fwu1JYwpSuRI6NnmZ+6mAvGd2ee
POqOvr/8PP8yIRfkP2fMqdwnIfZ7Hj9feDUXzphr1g26ScjyJvqFJH7evWwv
U2S62uezrFywi5s3PsIVffO3VmqzcsEpi19xa6+EfFDXH32Ug+0zZrnX3z0S
8uysvOMjfi6cfV2jBsjDxxGuo8/ZDo2RLpL/57PMhdTurhPVuyXkLL1doTwX
fAxCTEcgB9CvL6pywXCy0q/VuyTEqXhlk29tLpinMcpO7ETfcyeo19zLhc4n
ZuF3nCVEO0HqMfkhtn9dh7k88tgR1df3P8b2On5Mcd0O9O1/9U/Fs1wYpTKr
NXY7juedftYqL3KhKuIe8942Cbmz0TLJ9VUuuLf7HxqNzL05421xVy6YGmjY
WDmh7wU/FiqIsX+dfzj77Fb0nUpvwMiFrQMRQ/e3SMheRVad8GMuKMcsbVdC
Xn8kfLxsXy40rfhQscERfUs279ranwtP5nAy4zbjeO6kx+H8zoXVDvtjH22S
kD919IwoFzY26vqrIPfQ0z85NmgyP++0d0DfDNF5xmg2dHSVbYi3R98Tzjz/
MYYN/Mux5Ikd+o7aM9d6PBtKa7Yum4gc/Xm5f/pkNkyM0NV33Ii+XVQqP6ux
QfpYRveKLY7nj8Sj1sxgg+29jvmtG9C36a3NybPZsN2nQlcVWZN3JfO/eWzQ
a0pftM0Gfav79JrqsaHx54nlKdbo+8ya5fGL2LDth8/ql1bo+6f6iW5DvL6n
zvbqyJWewxvOwCXddu/O9RLCaL0/7dwqNvTttghJt5T8P78pGzLmmp5/vQ59
Fx25brCWDXt/rczVRN4+x+FPjBUb1r1fVbtnrYTA5fnWz23ZYD3S4l32GvQt
8++K3iY2+Djajnxngb7927oitmJ7vHVeMBf5x2vBwic72PC70neL+2oJeWUb
e0TLhQ1On05G5ZpLSG3lrrrDbmwoPpldQAH61ls2/qEnG2TOV7+dj5xwbcwu
zYNsWDxWrOpNJCRMoTsv0J8Ni6aq2HPNJGTP4YpvdcFskBSvOvfeFOObugxq
R9iwus+3YSHy4q3e5w8eY8PcDpai3yoJUa0zf14VxYag8K6NBSYSMmRIb7BF
P29mJX1Zib5zPvt5nGVD+wTPN0uQG8fXV5RdwPuZKVoYbCwhRZGZo5QT2OA6
+d+x4hXo+9OhzXuS2fB4cHPzj+U4nu/emFmYivyWp70C2btRq3dkFhsMnipG
HTGSEIdVQ0Y7mGyoe+HzqnwZ+ubSCVXY4DyiddXgUvQ9jffoH48NFdssMk2R
R505Mc1RxAahpFjuuKGEfOzf4cEuZoPsrYU+t5egb48l13+VsSG0O/+5DDL9
9tn2FhuaPBdaWhig7zVddEVjuLe5uDRmsYScKyy98u0u9uei1QvvLpL8P98t
G+ITW5ijkLfH0wXa2dDyz0fTSh99/zM78vEpGxhyY9LPLpSQ+X5TsAWxPbhC
jYcL0PfrD+OudLCBJbM9Wxn5+4a6nZI3bDCeMHq+nR76rkjLM+lhg6q0UnRJ
V0LqdIO/XZCy4V18qNkTHQnhpdjA2w9ssJu64tFE5AS6XOlX7C+n/uzZMh99
0+XLf7Dh1Pv7P5K0JcRV3Dyn4xcbkh3SLz6fJyFWWzh+i/6y4UFNiN405EV3
IiuiZfOgzMbxvrMW+jbcNqp1VB7I/lxxMH2uhPyll5dj8sD46ZzxnXMkRDxu
VGb4uDz4IplUNhP54fHX/zVNyoOqNWP2uc7G+P5YbDRHLQ8MvipMYM6SkLTh
gtd50DaoXNszU0JOPKQPUOXBKv+podrIXiarpmnMy4MeJx19L030nT/Rw183
D1yqQJI/Q0KM1XpFtfp5oH19N+u9hoTMPF0zNMUwD+pMTrjrI4/sT7HyXp4H
JZ6C+f7TMb7dA67cNMmDUPM3H0XqEtL6jD5Amgcnnk0t7ZsmITctZi7ctyYP
tizYFrMMmXG9/3DJ+jzY5ZixOVQNfc9qoitcwMRtvVplUyUk6FLuuN0OeSBZ
TX7/UpWQHcP5j/PAaua1p6uQwXdLntyOPGD//i2ImILx/WrBN6fdeeD1Zl/c
7ckSMm6DHHBd8+D7i2e+I5D7y9vP/fHA9u6z2bxmEvrWoQsI54Gy8f2VsRPR
99Wzc1h+eeBcbKdVPwF9j3L1+xmUB3+DOiYoIiceMq6wOZwHmyP9ZTeMR989
tJA8uNGj1B83DsdzR8mmr5F5cEQo+NCkgr5rqzLWnsyDn5Jt1HhkgyXJ/109
kwfH0xW7N49F39m+Ru/j8sDjee27K8romy6PczkPfjBjxG1j0DddLispDyLH
2r5XQ35El8+7lgeWMzW+OytJSDFdTjMzD1J6vv1LV5SQ1OEBPw/KvZ6pvFFA
3yuPDnWy84AqqZg1G/kAZ5OVIS8PvNvzjfaNlpBNU3WvxBagr87sjbmj0Pcp
ma4XRXh/TVlekpHoe7ggax4sucE+pYs82r3gcOTNPLDJvJF3UF5CPtHHF6vz
oOVK40OBnIQMH2e4mwfyrPd9n2XR9/CEMg9GP584wxCZRW93eJQHSistbEJG
SMj5i3TB1Dwwaw07WiIjIYF/KklwWx7cLSkXDPyjyHYfOqFAHjRJR/SYIK8e
zoeN1xu6eUbEX4ro2FjM8e3G+zvA23H7D0VUyukEo3lg8kT52gjk/vlfyyd9
yIPE4tCONUMU6RxesObBmFn/zTo1SJG7I7M3VXzH+NF09274TRFeyOGMsb/y
4HalpFgJOaHb7r+9f7D/y4bIbfxFkfDN2kbFIzgg+0dh66UBirjV/IkaPYoD
B0rZ+U9+UsTKoLXRWYkDXqYbR0xGNsjiqwlVOCB/dWinUz9F1OjHV5M4sPFp
cXnKD4r8o7vzVA5Y/Tqk3vGdIsPpxadzYEDV/PgM5OF05zM54L58knjPN4oU
33+baKfFgXNun+0YfRRJNy5/k6PDgf3slsqerxQ5kUfPODjwS/nOgvnIB1S9
Dlst4YBJTkWm9xeKbIqFO2lGHND0q5zM/0yRld9Vx31eyYHM43cvfPpEkZnD
D9w5wHn9QnEJ8qind9lJFhwwSP5xJvgjRT6ZZ/RJLTkwt2j6mJIPFGkrCCGm
GzjgBxviB95T5Jam7blL9hwYWndSbRUy68LctneOHLj+5B4zopci54d+z16+
nQMhHycaVv9HkeCDT33P7uKADsvrjiyyc3t++au9HBDKNGxbJ6WIuTX9Qo8D
PWOXfD4tQd/D+dE5kNfGPPuAosj4+XSBTg40ecyaPxb5Z9Lo/3SDOLD8Hrve
Xoy+5ekEMxwolF1xMKEHfQeXRDUf5cAU7ScTWrspInh3oXFuJAcWrTpUORX5
yiYPtcMxHGi2nevl/I4iR6tN3R+c5kCtR8fUjLfoe/Fk0Yw4DrTFZzx400UR
m8z3gwHxHHjywjtqDvKSsXfW113hQJCV+UqPNxShs6VMvcaB072zfuR1UuRv
b+CbAxkcaLw/prj3NUUkO6wXVOVw4O8XmVB95KaGWYcnsDnw9oDMqoBX6HvF
QK07lwN6FkpyRR3om/1YpUzIgSvRmk0/2ilyckqe85giDrQsNUs3Rj548jjb
pZQD2fs8fcNfou9vW/uuV2J7TU9dXfWCIsZu+mRkNQfSPF+ojUCe/UT+3PY6
Dsy3n/1tzXOKKJi/auU1cOD3m5DmU23oW1g0+18jB8rnPhPdb0XfdDmPJxwY
P8/0ijJyFV3epZUDGZ8Kjtq3UCSXLvfzkgOjzy9yT3iGvunyT50c+CRf5tD6
lCJBL6XpWe+QPW3N1ZCdraqlfRQHGJXvDXc+oYhF6dVllu/xescm62Q2U0RX
2z/q2mcOJOzfMPvtY/Q9nC8f4+PZmBlayD/lNNXMB7D/7X4+fX8TRd4E/diX
OMSBkyrCGdxHFLlHl++WyYeGr5fmfGykCH+4IBHyhAg9A+Qrt+mCkPmgGHbI
KPghRY4tckzsGpsPaoZha0oeUGRfBp1wLB+Orz+z5dd99K0su+C0aj7cuMPw
MkVeQj8eV88Hy+sNkZENFJlGf13OzIcC9d/XauspIrPjjEr03Hw4oLSidCQy
Xd2vZX4+9J+LfG51D33jZHf+Qrwe9rPf5+9SpIRO92aQD85eS2c/rqNIBp3+
aVk+zGnPtJmIfJJOB7MyH86NUj289Q7GN50ewiwflAdS2Cm1FHF09ZndsDof
VMrnv+yooYhJ8xrf6Zb58MexVmUm8iyYXu5nkw9Wz7zWu1Wjb2GffK1dPmxe
PT0m9zZFvmg8cJjimA9RnJc10iqKPD+fk+61LR+MJ7HkFiLf+n1EWrkzH9rO
H7Xyv4Xx7e2wbNzefLipsTu+8CZFLryYH+Xmng+2zRs6flRSJGT9v4c3vPKh
RWSpuxLZuaRtqqJvPpQ0bDx6rAJ9zxPu2xWYD2vnuDbdLqeIHn4bFRzKhyf1
UfPkkCfI0Ruk8qH4Dj/Ssgx9D9dPyIeVs8SvzpZifHeNwRV6PvAlumaPSihS
b9/dOXQqH/ZqhWePRxZWVeg5nM+HK10vRm25gb71E0KZl5C11wRcLUbfdPrn
xHxgy1S8ai9C33Q65JR8UAozs9VE3kCnB07PhxGpj6pcCyli+N/n3C/Z+dDo
e2BZ7nUcz4cLEOZD7t9JAqkIfddnml3Nz4cHTg90FiJLjULP9grywS/qQp5/
AUUesza2mhXiz2N36xYJ0fekebMvl+TDhEATYb8A4/vEkE9PRT4cstVaboIc
+/VZ2Yrb+TBvzvSaCD5FfPby5M/fyQeHIU37Gh5FNj+mN4Tmg6Z4cZc8sglx
Tl/SiD6ojSFWXIrModMdNOPvjwkbE5dPEUX6+GNLPvzbdT33MQd908chXuZD
r7jfYhLy8PbI1/mwXGTd7ZRHkdtel6Y+fZsPQ3fzT6WyKcJ+7rlvHpUPu5ZM
1e/MpUicJSk40psPAUOX22Yjh9yYMvjwUz7YL1GP8WBRZJfWR8uZ3/JhYnuB
YT6TImsS6YpheP8yjuIPDPQtm955dxD7c4FcmgHy+MBg+g01uH+pcQzJociv
NzahPvLIjy6MK8umSNdwPQ0uJDrsbxrMwvi+9WvspLFckDlpFw/IQly9eU7g
Aj9wzdaYTIokp9Eb4LnAmms5oz6DIhFKUV+V1blAMZ2kSsjuYdvM9mpyIXgo
pMQuHeObfv02hws2K3JOJ6RRZCk9HZ/PBT+Xjp1tqRRRv/d6lvMCLrSEz12q
jixjdMNHsJgLodfCxrpcQ99MuqAMF6xqXvfmpFCkeaK7/BZjLqz9Y/9QfJUi
pdF0ASUu7NzWLNRFzvwyMf23OReOvnRJ8k3G+N7TK9m4jgtXLgwev56Evptq
luZYI0ewD/64QpGtZtciv2/kglvRnp0rkVfxAx6u34z3YzzfLiIRfU+3mprm
xAUltT9rahIoMuYc/Y3OBaHzW9ORyH0D/cLVe7hQptRibH2ZIi/o06z7uDDS
sHXFhXj03ZZrKd3PhcD2npVPLlGEsy4iYZUPF16NlYMpyJeKt3ReDODCjLbF
63dcpMihuQv13oVwQdns4OaMC+g7QS7UKIwLUbY39r6No8jaER01ZyKwPVRU
guYhLwwoHPsqmgsk7tAp7/MUmfTm7I7Fp7ig0/w+Q3AOfW90zT1xjgsvuwPK
vp6lyNubdEJuLkx7It9mhHx/uL4KF4pz8vrDzlBElCo5c+wqFwL27FCvOo2+
FW+3PE7jwsTJ6qtlkY8foQsOYHvf/++A5SmKeEp8fUJZ+POzDVfPxVJko9O6
svscLnzcVVLfdBJ939WQnyHA9rIr+j0Refoy+oAj/r7XbYNtMRSRYz5Mu3OD
C02F7d5pJyjSO4EpUa3gQprxSPabaPQddXTpgSou6MuBeC5y2edNkbdqubBM
48x8ryiKZLvoPhxfzwXPC10+/EiKnH4kM9X9IfavvVY3vhyniK/pC7fSx1z4
nXlbxgh5K69AqNTChcLNlvZhERQxU6efaHPBPPZV9q1jFNE662J5/RX2V/MT
P0YgKw0YJci/5cLhCys2Woajb8+xndvEXPAKHco7d5Qi7a09urz/uFAp/2Tk
4zCK1Ky9eejvR7w/ixuek5DzihJrNvVhfzDOf7DtCPqec3Bsbj8XDL/wl6Qf
psjhyxY7Bn4jh1SndYVSxEWGPtDNhdRH3QrzkNf6f/2SKceDoZFTw7wPoe/O
BtO+0Tz4oO38QRBCkckbs8+sU+bBr5UCt75gigxWHm5JGc+DEqvxr5Yjv9Wz
pzOWAHdXzPbwIIo0XNP2gWk8cIsc9eJ2IEWuD9fb4cG+imvO8sgph1vlqNk8
MJpq1mUVgL4pvv1KbR64ZH3xuuBPEQ/69b4eD/buKv7+xI8idvRyfxH+vW1n
YlSRjZbS/3hApfpM2elLEQ2GUuSpFTzwWuzKzfKhiOyEdw9eruJBoaanRc9B
9B1ZrqpvzoN1QeGvdZCffop3i1rLg0tLc8J9D1CkfLeX8JkVD5R9nmsUelMk
q5FOYMGD+fM0a/q90PeqqZZHN/Fgi9chr1XI/txPlx9t5YEMvJ4YtZ8iTtPo
AYYH6YVbq+s8KWJ6JkM3xIUHZxo7AxSRtX6GHKp344Fx8hEtOw+KKHva1qjv
54HCtLkdCe4U+dYyd6zfQWwvl84rz/dR5OWawe01/tie/txNGsg1hU9Zk0N4
sNLp9ARXN4rkz+Z+2X+EByHTD7XkulIkPj7atPIYtk9DcGrvXoqE/tuOExge
bN8fs28xsoufQYtrLLaHDGtxyB6KWL4ePevGWR5oZrb+LXOhiL7tm4MKF3nw
0UrtyZ/dGN+VJaU7E3gQqOTDtkAe1L0oV5DMg7/vm4+f3kWR7hQ6YQ8P3vRb
OjfupMiD0cMV0MFzWZPxBGRR6GQJh8mD5wJPdSdn9D28QOJBhM/4f6k7KBK1
5c5xez4PGGEPqTfbKbKfLucq4sGpzqtPtJA30uWdi3ngxzp023sbRZbR5d7L
eZDR4i4SOlFkxng6ATUP7I54sL5tpYh85MCvzzU8qE45nGaM3Pvx8bo193iw
CNKSIrag7115l5Mf8OBJSHNCrSNFKoYfwPDgrcXUxNHIOSZOumbPeHC50D/Z
djP6ztc/FP+cB6qPXqZf3kQRP7WRNd0dPMhK28puc6DINjo9Uhf21/ndhdOR
CZ0uoYcHUWEnavfaU2QefXxSyoPFaUtbc+1wPKePU3zkQXJSf2/vRvRtYWJ6
8isPOgIfyhkgd1ynH/DyYN7KwpmHbClSO+u/Z3q/8fe/c0nFBhzPL1XPPP6X
B5sFN/b+s0Hff68efCLLhyM+T2PXIh/x9S/VGs0H7VUjhGetKbLnlaXckTF8
ODzH4mWTFUXWbdC0fziOD6cWJI2ejKxPp6OfzAfvPb+Nd6ynyBQ6PbkaH0zq
A30zLSkyRKer1uDDGJ9BVvc6irwbdey42mw+fHG6+kYH+cEhxwcH5/GhP37d
DL+1FCns0VO9rcuHxXNHuRStocg1R1m3iYv4wFF9mTNgQZHI4XpcfPAMqZKa
Ie+nHycu58PRdSWGMaspYk8PL6v40J1QHdlgTpHl4/Ze3gN84Hq8fjwWWWP4
BTUfnt5TnusI6Pujiu4oKz7svG0XlkIo8mEnFbLDlg9rtjOfvjajyLMHt6r5
Dny4kKq0eC5y+Uo6oSMfDC6dvOhliuM5x2e74w5sL5jwVbCKImenrmWxd+P1
FYmcvplQJODU9C+/XPlAfXe7bYzs9KNv1UZPPqQp6yw4vhJ9u9MbYLB95WRS
7xhTRPtZzrNvfvj/3/WOUUQeaxE2c30wH1wKpVF2K9C3yOFg6mE+WBz7NZC4
HMfzmTqlH8P5MMJ6RshLI4rcufhPdnUU+pm9pU8Tmfunze7KST4UqmQGuy+j
yGUfIX5j8iFg2uDP/KXouyOWMrnAhwybg5GfDSmy14beYMcHDd4nRSPk9eXL
jr9N4sOjNbFXjy6hyCId5QfLUvlwccZinWoDHM+vdk85k8kHo9UfKkciD42s
dO1g8IFRenPzhsUU6QlJECzK4wP7bPaH+EUUedjt/Suaxwf16qtn2/RxPN+8
el1rAR/a9jF0NZCv1ahd1inG34+obnRdSJFoA3oDL/pR7QvKW0ARr+H6bHyo
Xb5C46MejucqWSFzavjAk1xqMEReHhFafeguH7qWDB0+oksRzQ8ble/f58N8
zWN6VToUGblz3naNJj5Y3hjXJYf8/v4Q0/8pH0bJlKZYz0ffxi2fa9vQ5+ig
LZe0KVKZx1ul2sEHj2fmk1rnUYShGnPa+w0f4nzntqojnxkuKMwHu85pqXu1
0Pf3JTPHS/ngs0jLjT2XItv3KR7c94EP6Z4W+h/mUASe0gl+kS+FDC5Bnrea
LmiB7V1Y0Xh4NvoWXbLb/YsPT9om59yaRZEfmvtTRX/44D8q5ogc8qsLhJKT
FQDHeqSj9UyM76EphttGCUA7P83gkib6PvgxgqskgBR9ywmtMyiS0F53/48K
/v4b+R/qyGHW6VM2TRKAbMPzjr0aGN9lwa6sqQKw+Vx1lz0dx/P5GwQ/p+Pn
uVQUflCnyOLkOb9sZgnAZMYDhiGy6sjfazO1BKBr9CnpyDT0Hfwk/quOAC4J
teOq1ND3O86rtfoCUE4IjpVHbtwUpZOyRAAgbYm2mUqRouptIe+NBFBVbhMd
r0qRVHp7ookAtMa1xrRNwfGcfl1BBKD0NfisBrI3PX2xEMDf/fMT3CZTxGG4
Xp8Arh77nMGZRJEV7+M+n98gAO8VjfxPE9G3s/uqN/YC+Jd9q2oZ8ig6nfMW
AUhr7jw7OoEiH+n0rtsFcJ3R+b56PEVa6HSPuwTwboPK6NHIFVNqDyx0FYD8
vc3zNo5D3yevlUR6CCB9Gt8yUYUi574FyD7zFoCBvfrBl2MpEuhmZaftJ4C1
/hkJM5G3PZmZGhYkAKcTRrc8lNG3+U9xY6gAqPh3vbwxFJlf0LRkVrgAgpis
6X1KFFHRZEcERwogpDbc3hj5exy9Y0oAXv37Tx1XRN+DW6aonxHAnfXe1XUK
FKk7QCd8F8BQVeQfJWTeSzlBdbwAzrnzzDaNxvi26hiYlCSAV+Yfoq6OQt+l
hWv3XxPg/Mei/vVIirhqn4uvyBDAxduC8VrIVkmur8YyBPAgaNHuA/IY3/L0
ARUBnDxexxfJoe/g8SHFXAHMee//r1+WIn/fSm6PLhDA+BqDrWbIYofbY3YW
CaBYYbQwZgTG9+3kbcJSAfg86FN8IIPj+SI/5oib2H4q373GI6dlrPu8pVoA
/NdKD53+ickJ5RmrOHUC+AorDDL+iolX+PdTgw0CaDYLS+n+IyYOvQ+f2j3C
//+mWU4P2Xi4fqMAbuiToIAhMZnZcPTAj1YB+BnUdJcMisnIFZtLrNoFMPfL
ju1/fovJB/q0aqcAZh1SaF6D3Dp5hN3nd9j/6httzv0Sk5sxL65ZSARg9YXd
0DwgJsy+AnHSewFM/JlsPRX5nOvpJf99FoBHT/qj3T/FJIhOr/RdABeqy7aw
+sVkB51uYUAAbYm9nb0/xMScPn45JIBYT0OfJcjaM8R7l48QQpd5/NDh72Iy
Lu4m/+xIIegtkI+v+iYm/b8TB14pCoGrf1F7JPJr74NrDVSEkOmwqHpDn5jU
vbCIj5koBIv0nl0JX8WEt179VZuqEFrUrg+9+CImicMFkIWQ1JSYNRP56Lz7
wREzhVB6N26d52cx2Xsl+3bzXCEcHpX+if9JTKzw21xLRwijrtWkfvsoJgZB
9tsOL8S/F/vH2gR56ltt5gMDIQS02A9FfRCTP/Z/P80wEgLvQtn1+vdiIq5q
NQlcKYSI8hUHVJAf6QtO1ZkJQXXvo3lbe8WkmN7+bCEExtmwnrT/xCSVfh1q
KQQrYsp+J0Xf9PLIRggGp6Yc1EU+8J9SyQR7IZzyHrk0QCImm7a/G+HhKASv
L2P+llBisqK+fGPZNiEMzdFt/CMWE83hep5CcFPcnbEWeXSul9hlrxDKeXmB
53vE5NMk8yWF7kKYPVHR+mm3mLScmBox0lsIxWuj505Dvvn1U8N2XyHEbRg/
Yu87MWHtvTeZHyiEO4tK3rLfisn5xxl7/x0Sgl9/0N2PXWISSA7xNx8VAotr
yV+GvF1gO5B7HNvTcUly+BsxWa2htfbXCSH0DxjG1HaKic75wUu2p4Wwgrkh
WBFZ5ffTjqzzQljrHO7p8Bp9e9EJF4Sgo1276+orMel8Hh1seUUIX1RmOXV2
iMldyx23r6UIga2RtHkeMv+GwZiP6UKw2zZ7s0+7mCRoKWwzzxHC93t1W4pe
ikl44htGYq4QEoIjnX+/EBM32dJPVD62r8emfauRrQMvmpgIhfCUaeJ/5jn6
7vI4daEQ/a5Ydfxxm5io2ZvhN5IQRus4xqsi/7s1WXNZpRBSIk7k7m4VE2rh
B+/Tt4Uw1fz+LVaLmDTi6rf9jhCiDs9/+f4Z+lZKG7GoQQh1CzJ+GiKnhwVt
jG4UQqe73rSjT8UkRmp9raVZCLf0HpvVPEHf22aL57cKYXPseQ8F5E336B3G
6OPYnnj7ZjFZaTScYAZ2qm2oSn4sJrNYeQ2z3wmBs9fu8+smMRk1XN8V/e/2
njsP+VO0096GXiH4qqY7+zwSk7Yv+vzpn4VQkEhdKWoUk1t7Rg74fRPChNdW
T38/RN9Nr9bU/hRC6O/aiRbI582KL00ZEkLVty1OZx+ISTD/fIeXTAE0Nv9N
b74vJs7T982/KV8Ax65VU1ORzc+ZBI9TLADO1tSlexrQ968Jt93GFsCysXEx
7HoxGe9Fd+gC6KtPavt4T0x+tlU7KaoWQMWF0oVGyK/XpTB2qReAh+fX2GN3
Mb6L/T8VaBbAvR1r3t2pExPB3PUmcnMLQOgvWD0G+UqC5imn+QXwvWAxa/Md
jO8RdEKtAtg754Fiai36Dng048/iAmhoOhb0tkZMbN7QT2QL4NPN9Z06yEvs
6C/MAmB919sYUI2+bzmO+GlaAKII7dult8Xk74IFG21WF0D7HpNl/6rERJIq
ey1jXQFQDE++JXITfbzCugCu2fHmX7wlJjfo7RZ2BVB8QIHdehN9049fNhfA
wN+I+TOQT9I6nApAa5Iy371STA7eXTGZ7CyAn8LCpfwKMdm8jJ6QF4Bee2DV
t3Icz5kUr2dfAYSkW9uuQp49sernCq8CSPyz8vWJMjFRiE5ac96nAExGrgl8
UComn4fr/RbArEp3hYnIbS5rO5YcKoB+7SzGjhIxqXpEJxAsgACHPsi5ISa5
pt+CXkQUgDG4dEmLxSSO96BqwYkCkB98F2OAHKROL/jR7/kovSNF6PtsmNPT
cwWwYWB5y+1CMbEYcGDMu1QAmtajokcj6+7X+XQksQBSYz8Z2F9H323/VjZe
LQDPG5+7k0Xoey1dYKcAtLsUUzsLxORNkfBJUHYBhI81c9RGvjeHLshXAIrr
zo7zE2J8X97tPS2/AHwufmq6IUDfww8UC8Dyq8/lP3wxOeavPKL6egEsPSS/
bR3yvs5u20klBfBg9o2ZF3gY3xsrUzwrCoD99/j7Fi7G982EnvIq7B+T3Co0
kKctOGAw9k4BxO13iXPPFxOZVDphagFUyYa48jkY3wrTGooeFsC5D4yV3/PQ
9+Evk0Y3F8Dxhe8nmyKXDL+wKIDFD2y/xbDFJAMX54IX6PdRfcvDXIzvutCf
Mq8L4L3prvJJyAeW2q3Z8rYAJs1WytnJEhNHbL08MbZf9JPzTKaYmEz40/77
vwJIcS8Me89A31Et2nafCmDUM/6BpcgKn3lBOX0F8OFZtUt4jph82R1T9b0f
+7ffp613ssXk+fALUfTPM3IYg1y1ytAp7V8BBMUnb3TMwv7VKr/p5wgREO0J
dmmZ2N5xX/pnyYtgIDh3U3cG/v21r9JtRolgTrTj9gXIwuH6miIw3DrdLTgd
r4c+zqEkguyfQ36VaeiD3t6pLIJO/4HjcsgK9HYPFRF43R2bsCFVTCLo1z8T
RMD5Z8pJvIb9k34cNEkEk7VP1XSkoC96ejhFBGrm/72eizzcXaaKYN5Wzz8H
r2K8ls4LqpkmApbPn5nFyXg/fhPU3k8XwYiLwnVDSRi/2n9wRBYBozrMby1y
7mvpPjJLBN/H7EmNuyIm6kktil5zROB82OV+SyL2b9vqgstaIlihdGRQA1lm
eMOdCD485Bl4JIhJSOXVwR4dEby688tLcBnjPSgmR2UB3s8vV9aPeDHZqee/
3lhfBJ+Ce96ZITe9df7oulgEdSbRWqcuYTxcs0w8v0QEdluNvZsuYv9wMFx5
Yyl+3gPF66rIugp0QhERNDF+DLpcwP5yWzFWwVgEQT2D1nlxGC+Hf+gZmohg
9lWNtM/ncbxY9LZ5p6kIFtZu+7wCeQBny7FEBFIfgWXUORw/Mugdvugjc0ZO
w1mMp+F64NgeLpy/45E3K8d7ya4TgXnxxj07zqDvO+EqC9eLoIo99k7OafQd
vr94q7UIDphJdXtP4fhq6OgcuUEE5yJfJxoizx7eYIz3H/JRJjxWTJJy9NhP
7UWwZq5a4J2T6HuHqu3QJhG4Je7uGYN8bLxs37wtIpBtvOW8JQb7Z/3Hq/ZO
IvBtMW5JPyEm7pEvzcK2i+B5UZODOBr76/K73QxnEUQFRjbrI9t8Ep1t3IX9
ZfIGx9Ao9J2bvrjfRQQnWUteVkWKieHuM60zXbF9dZa6jUbOnRwSbr0P+3Oe
/Sf74xjPjXtmB3vg7+ucjkiJQN8xG+rT94vApejluLfHxGTEqhW+97xF0Ge3
PlcXOaRvzqQvB0VwVLbZLCgcfefTOyREMKs1+GXFUfTt+ttlTQD21ybDI3LI
zWqUvG8QXu93ZXXbMPTdTB+oEEG8veztK0fQ9+lbDtWhIvCjJu5/fVhM9CC/
/78jIrCoJhO1kTP6r6RPChfBop7Yar9QMZkgjLIwixDB9h3SwNJD6NvDR+oZ
KQKxtqe2DPKAxvaL8dEi+Or477VViJj4ttAJpjAeJEUpl4PR93m6QIcIpvwX
49QehOPJcH14Ebjv8Z86F/ne71HaK86JQLgptONgIPou7Hu4N04EivUpjOIA
jG/vzsBzF0Vw8V6bzx9/9D37wdTieBE4bTMwsUROGq6nK4KQqFylS37oOz5n
3+gkEQxZLe987ou+119QXHIV47HsXfEs5C9/jxQ4XxPBlRbuRW8fjO8S+gCZ
CGpzLx4sPIi+fR0GBRkiSDW8uGHwgJhsmGea8zxLBDon8hetRa56NX/9CIYI
QtO6Jl/wRt9XJn3UY+H1xS792+olJuwN/xK2sEVwZD2jVxNZXe698XGOCEyl
C9v37xeTCxVtnXlcEbT7PWsUeWJ8B9WefMIXwdZ3SbW/PNC3rlBvUCgCkXVI
pQWytOtas9Z1EXzh+ZWed0ffKbGhdkUiUBkfW9KyT0we2wdqHLkhAoWI0rIZ
yBajd9fmlGI8/xpZ5ekmJqVVVl4Py0UQeSHgXoEr+g5dpvKjEj+P/HwysBd9
69MnlnE8nZLatRp5wv86OvO4Gr4ogKuIaKekUqhoU7Sv90iLihbaS8lWfiQi
S5YoUlJKlBSlRSTLm5lHhSgqFFotIVTzihJJSMjvjD+/n0/vNe9+7znvvpl7
z+HKuVfyQGKq32DiCgE5xJV3vos+FxuNbw1C31y512oePCvXUZ2OHMaVf6zl
wel1YBESKCDvuHJwD3jQFbTJ9+pyAfHkykPV8yCt4GbUcICA3OfKxTzGfGCt
nmODbMGVj2jAfGhYXJPoj77PcgUHcXyTnQda/AREzddL/04LD2SXTlCZjpwu
ZfP0/VMelMR1uob4CojYfd3dsi94oGPQFnvVB31HK8y0esmDrYEfy4e90bfx
2PtrX2P8SyoP2SCv6ecWIDx4t3jd/CNe6LvwlWz5Ox7UKTdFtHqi7+X3yzo7
eTAS731tOnLlZCZIXMADzxPDv0I80Hd9zliTHh5cciy15y1D37FcgQD8filJ
S/u5FH1bbHc/3MeDB9WJnQuRk7+s/E73Yz7PyjVOcsf4LnY5/fozD0QNm448
dUPfweYLRQeRM1QFKsjvp2q81x/igXhdos06VwFZ3iB91O87D3qfyuZRLuj7
0G/DA8OYDytLRX4tERBb8r7t0ggPglOj/rNDvv6tZd+z3zi/l/g2Jy9G35fv
aIz5y4PWXx7kubOA5KwpqdcSouB9YdjlGcgyyicjPEQoyHLNV13vJCBxLdwP
Lgqu/B06wTii78TwiqLxFPTfXiPxZxHG90L/1Y1iFEw9/iXBAfndT3uxkUkU
fIrNHp/qgPFNzb+qJkmBefqqw2326Jsr9yBNAa/RQVIN2ZI7/ilLgaKVY0aY
HfrmjoNMoUD7TcjM67YCMovbHipPwdmK/Kt/FwpIBrddRIEC045fC5yQJ3KP
j5QoKHTb8jTNBr+///XPpiBPSnTj6wXom1teqlLQNad0/GzkNepcwy8KlHLj
zm0CAWl7FaJdrUbB390RDuUEfR/nGthSADW7eoWR7ziT7VM1KTgck3dsiTX6
FtZWttGmIK1UYJlhhb7LuRtMFPzZuOjDW0sBUYoQWndCj4K9JbWntJCTNfsl
bs+joHz7apetFuj73Qumx4AC/2fTx1aYo++T1X4yxhSMb/pWIYr83pX318KU
gvUb+3a5mwlIoOjpc2vMKVChRy2yTDGfV8QvPmpJQcM5/dEuE/S9beuXUmsK
lN2iq+cil+muONkBFBTxe5N3GKNvlmuQSIFYe6R/lRH6zjbpMrKjoPOJsvYk
ZFmPWdwTR2hM7fztaYi+J0rqJzhSEK5V25xjICAjVVzDZwqW5t4veT8f4ztK
sOvVEgqm/OyON0B+N69pxjg3Clys1UP3zBMQr/e3avWWUnB0yz6nWn30ncvd
UKdgY+6wnjSypc8J2VgvCvbVpUz110PfkvvLSnwocB+xEymci75rNwQ99aNg
s7HCYL+ugJzc6zP2bwAFEbFirCnyRGPbi5pBFLzoUWiL0UHfH/XclwXj/Apz
aKrXFpDBAsXvu1dRoCCf9kgOeU0AN4AUjPb9qluhhb5lB20aQiiIHDrwqFhT
QJbUtfcMr0N/xtpNX+eg75iHybM24HiXfnphjWxkzhUkpyAwuqkrfjb6Hjjb
tm0TBSZpzV+aNDC+LyTty42gQP/nF2Fl5JQVOzUebqXgbrn+1BB19D11Tf3g
NgrCXh7R46kJyPYnXIKm4NJKUaeRWQLyIY57gEjBb6/cEDvkQOs5FZv2UPC0
wjv+6EwBaRqSXX0qGv8+V7fkxQwBsbs0OuHefgpGhGY2z0IuXd175WMsBUZ9
hr/DVAVEV+mZp3wcBU9WrtUqVRGQ3OaqEYinwCzsmp8Q8uTEy5hRKWCl1ZMX
T8d8bsMtACmw96bupSuj7+GDH28lU1C9MPDPWyUBCedtTutOwfn2eo6FNnJH
6HIz6TS8Pm2ZXZGKmM9VHd+Yn6DA2nBaxe1pAvLwGXcCEP39BhExZKujqtrJ
mRQ8S4pb4qEgIDz7SY3Xsyho6f2QeWYq5vM/37e9O43Xq7zxfY88+uZ3Kk3M
pUBHS8rSAHnSvw0TFDjJN6bukROQaLUboYEFFCT2Xv1QO0VAvrw8JxF/DufP
pSv2Mshr044xvPMUDK18VBgwGX077fV7WYz/X0ZsfJGsgLgI/fdX5BIFS+6u
CRuQwXxe5nlu7hUKyqLetlogG21esNiHh/OfRC2IkxaQC3N0v+yncTzkDa42
SGF8v5168iKfgsliE2cqIqdkiFi3XqegREkoY42kgAi7fu78U4bx5TlV8qoE
+h7HNaigQPzmksM/xQWklwuPCpx/nnnj7ZADI+nWXXdwvObIHT46CX3r5Owq
rKJgkcUFibaJAmLfdXjGk3v4+Y/7p6shl2Vtq/1RQ0GVme6McDH0vYzbIEbB
t3nTr5RNQN9iLrKL63A+xM4FEeTJVWZlkY/w7w0CW1zGC0j8TvWgnCd4fY6X
1meKom996bEPGilc7yuO6xqHvnt+FX9ppmDg9oX8ucidOT1uSk8pWKXjbbtz
LMa3N1ewiYJt8mo9d0XQtwTXMIiC1YekjkogW9VctMl8heMXo2TmK4y+92T0
VLXj/JFYJMgXEhB1o9jkvrcYH/PT0vvHoO++jYZynRTEfv3taIY8scCvjbAU
OPvF/439y5J9/vb71nVTsPi/+eWPR1kyKDNfI+09vl7r1zYF5JCHyvU3eyl4
c5Y1Xv2HJW37J0QIPlLQ1No/fPk3S1zMuA2xFDTXy98Z/sWSqs9vb5l9oUA2
aUWCLbLR+fpVq75ScEvpgefREZacDyqdkPSNAuEYd/W2nyxRli+4cu0H+rs7
/F0NOeXxUc+3PymYKKh8FD7MEpG4XSMTflMwe+DCufIfLNluFXLWYJSCQx94
MWORe78udVg+hgaP5y+C3b6zJKjE+mOcMA30nRm2Wd9Y0rRKK+3qWBrqLiRo
CoZYYqcoZ9YmSsOdTGmZechlTWPeCIvRcDW97PeuryzRPfzxgO4kGqrO7e+r
GWTJ2QUvtLwlaJBsWNcujTx5+F7DPikabk2NaA74wpJ4bvedDA2dcafqigZY
8iskW6llMg15qp01Xz6zJFyFOwBAg1Sfc7UVcidXHkqBhkWfWmriP7HEiysX
oUhDsP7euuZ+ljzkjo8q0xDJd2iejmzNHSdRoSHjwLz2dR9ZwuO2l86goS3f
oo/pY4k6t91kFn5+hbW/R3tZksk9ftKgQa73qrQz8iTudtQcGnRUlDTTP6Dv
Y40ZW7VouHijaOG79+jb8ZbVGR0asmuWBesgh4y50Fk7F6/XXjVmew9LXpYe
TxjQp0EcxM9VdaNvrr2rAX6+8mmPxJEruXafRjQ03Vj03UfAEmOu/aMJjeu1
DLUCliUXuHaAZjTM+2+c56cu9M21h7OgYe2s9Hhz5JR/B55ocN9lf/tgJ/rm
2kcBDZ+3yw83dLBkB/f1a0ODg8oEYyXkXu32wFBbGny2K24LeceSwM4HIsfs
aVCOcymj3rKk+RS/+MYiHC/3vNHfb1hiv/SsG+tEQ8UbOUdH5HKcfRJLaEg1
LjlxvB19V+7INnWlYXzASvbNa/S9Y7XNSncaFLzMTLWRp+i79SQuo+G21rzk
ba/Qd7dFMt+Tho9vHLsrX7Jk5MxswzfeNGTuil0ojhzuJds23g/nn3B7nk8b
+hYfjZ4fQIPBXt+xBS9Y4l39QT0gkAahgaH/Pj1H37uf1h1cQcPUlXSzObK1
YdXmKytpXL+kkrhnLKH+HfDE+eaVernxKfrOz7wlFEKDpoCnqoyc6Xdwlc46
GhISB0+EtqJvmc0TvNbTULvYS4JpQd8PAq5Eh+H812tLGG1mydd9izwvhNOw
3Tx6vDNyiKnhSNNmGkoj7PB3APr+xBV0pSG8XUeyo5ElrkVcA0Ia9scaZegi
VwV+73Pdge8XEjRzZwP6luMavtNgmFp89d4T9P3osWn+bhrSxsrbSCErHyxv
r99Lw5OHBU/9H7Mk1fLcgW/7aKgULNtY9Ah9f03VUo2lwSZIbcJgPcb3xT0N
jgdxvpjLFVkj961ct23LIZwvezQXHa7D+J7mqXQ6gYZrcwP7Wh+i738H2mkY
XcakzUC2T9AJ/ZxEg8SgtnXYA/QNUyWmpeD4SVf3lt5nydwfwszCYzS85Edn
iyCfvfLJN+w4DYT1d3OrRd8hL0fT03E8Cn1Fs2tYkjC9tvDOSYyH3zsqu6sx
vnG19uEUzreBsr0GyJuSzgzInqah6JASib6Hvm0PZ1jl0LC7Jleo7i76/hWJ
GQuvn7Z/IIdcRwd3puTToO8hkbayCn2vX5JQXkhD7uXvQZcrMb5nmul1FeHr
7wvp/7zDEo02tVbxYhqSivSE7ZEzU6V2mZRw83vvi9TbLBF3/KUafJmGgPp+
6nUF+v7bXXP4Kg2nlfcf1UT++q+ABw0qzkbhkbdYEhp+W6adwf/nN3Fp5U30
rXGxVPQ6Da/chU3FkV3a0wPnldFw3Fh5hu8N9H0iRsT/Bg0xEr7iheXoe8nG
4gO3aAh6c+3X5zKWFIv4uV2+TcOHy8afLJGVb3IFvjE/xTzvii9F31vmZY+5
R0PHiuzXLddZMpZb3tdg/nWJeaGKvKNjfI/HfRpUlx5+vuEa+s78mrT3Ifra
xLSV8tG3+1uD8/U02F/9+0YEuXl8/YvGxzSEyYX3uDEscbhzPXqkAfPv+dHB
bBp9c+2amjE/hFFC7ymMb659SysNUesOTTZCzuPaOTyjYSBvr+Z+Hvr+V7AI
30/l5IJHV9E3V+75JQ0nu5oDFJB/ceVfX6PvH/N2rbmCvrlykG9xfIOobN5l
lnTtmnJlUQcN91Q9K39fQt8GYzwjumiwWDDtvSNy3Ye+n1kCHO+aMZPTS1hC
8p7nVvegv2sTbTouYnz73rP/9IGGajnTLXORNaS5CiE01PfFFUUVo+/7Wcds
PtHgZP2jveYC+t53yHTDAI6v1BEFWeT9JlvaTwzSoPSfjXfQefTdz90ApoHn
qnjyYhHG9zknrfffcb7Vyr36fo4lr5YbN8j8xPh6ajjLFtl1ysxtlr9ocIuJ
DEspZMndenGltX9oUGt8Xv6qAH0f4Aq00bDgfuBETeRiCzakTIgBCBMNisxn
yfTBBvFOEQbo6iZ+ZR76Lr5JTxJlYN6zO5ISyCIrz/saT2DAtqhxg99ZluxU
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
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{851.1111111111121, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.05, 0.07998700000000002}, {0, 0.000020298342804125318`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8116369667699647`*^9, 3.811637003482684*^9}, 
   3.811637148212699*^9, 3.811637225453063*^9, 3.8116372713476877`*^9, 
   3.811637317597628*^9, 3.8116374767631435`*^9, 3.811637525591316*^9, {
   3.81163774016461*^9, 3.81163778575543*^9}, {3.8116378226265993`*^9, 
   3.8116378494936256`*^9}, 3.8116379199432893`*^9, 3.8116379542446566`*^9, {
   3.8116379992456746`*^9, 3.811638037221159*^9}, 3.8116381059740868`*^9, {
   3.811638300095865*^9, 3.811638329438756*^9}, {3.811638439556314*^9, 
   3.8116384458040624`*^9}, 3.8116384799900613`*^9, {3.8121481820058947`*^9, 
   3.812148188240553*^9}, 3.8121482860007124`*^9, {3.812148380153454*^9, 
   3.8121483868094945`*^9}, 3.8121485850904107`*^9, {3.8121487600461206`*^9, 
   3.8121487805510178`*^9}, {3.812149740080378*^9, 3.8121497469436064`*^9}, 
   3.8121498132106404`*^9, 3.812155245023858*^9, 3.812155280710738*^9, 
   3.8121553537702065`*^9, 3.8121555334071474`*^9, 3.812155608793412*^9, {
   3.8121557688471117`*^9, 3.8121557954732375`*^9}, 3.8121558517635517`*^9, {
   3.812155881927861*^9, 3.812155895848873*^9}, 3.8121559491561127`*^9, {
   3.812156120859587*^9, 3.81215615961299*^9}, 3.8121566431873875`*^9, 
   3.8121566798617616`*^9},
 CellLabel->
  "Out[1434]=",ExpressionUUID->"48989b6c-9031-4dbf-8565-20078ae80bff"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev4DoppTestsc1", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", 
      "\[CapitalDelta]2", ",", "d31", ",", "d41"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"P", "\[GreaterEqual]", " ", 
         RowBox[{"80", "/", "1000"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{
             RowBox[{"-", "0.20"}], ",", "0.05", ",", "0.000083"}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "\[GreaterEqual]", " ", "0.0015"}], "\[Or]", 
             RowBox[{"#", "\[LessEqual]", " ", 
              RowBox[{"-", "0.0015"}]}]}], "&"}]}], "]"}], "*", 
         RowBox[{"10", "^", "9"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "0.20"}], ",", "0.08", ",", "0.000083"}], "]"}], "*", 
         RowBox[{"10", "^", "9"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"omegac2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "/", 
         SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Im", "[", 
           RowBox[{"sd42", "[", 
            RowBox[{
            "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
             ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", 
             "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43",
              ",", "d42"}], "]"}], "]"}], "+", 
          RowBox[{"Im", "[", 
           RowBox[{"sd32", "[", 
            RowBox[{
            "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
             ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", 
             "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43",
              ",", "d32"}], "]"}], "]"}]}], ")"}]}], "\[IndentingNewLine]", 
       "}"}], "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6820777509929857`*^9, 3.682078072258361*^9}, {
   3.6820781686988773`*^9, 3.6820781844017754`*^9}, {3.6820782371557927`*^9, 
   3.6820782387708855`*^9}, {3.6820783386755996`*^9, 
   3.6820783600278206`*^9}, {3.682078390802581*^9, 3.682078409651659*^9}, {
   3.6820785556990128`*^9, 3.6820785577631307`*^9}, {3.682078604887826*^9, 
   3.682078606954944*^9}, 3.682078646275193*^9, 3.6820786817442217`*^9, {
   3.6820787244836664`*^9, 3.6820787256587334`*^9}, {3.682078761002755*^9, 
   3.6820787873862643`*^9}, {3.682078849739831*^9, 3.682078868395898*^9}, {
   3.6820789209479036`*^9, 3.682079036674523*^9}, {3.6820797161803885`*^9, 
   3.6820797163083954`*^9}, {3.6820940847423997`*^9, 3.682094176264634*^9}, {
   3.682100534108282*^9, 3.682100724544174*^9}, {3.682100812826224*^9, 
   3.6821008239058576`*^9}, {3.682100946929894*^9, 3.6821009474969263`*^9}, {
   3.6821010023450637`*^9, 3.6821010049532127`*^9}, {3.682101044296463*^9, 
   3.6821010535839944`*^9}, {3.6821012584737134`*^9, 3.682101261144866*^9}, {
   3.682101316585037*^9, 3.6821013732572784`*^9}, {3.682101414754652*^9, 
   3.6821014312095933`*^9}, {3.6821027458817883`*^9, 
   3.6821029190776944`*^9}, {3.682102981621272*^9, 3.682103063142935*^9}, {
   3.682103152077021*^9, 3.6821031759093847`*^9}, {3.682103228078368*^9, 
   3.682103275783097*^9}, {3.6821033867274427`*^9, 3.6821035279885225`*^9}, {
   3.682103596235426*^9, 3.6821036073870635`*^9}, {3.6821036960071325`*^9, 
   3.6821037775187945`*^9}, {3.6821038740493155`*^9, 
   3.6821038957665577`*^9}, {3.6821039323166485`*^9, 3.68210399843143*^9}, {
   3.6821041484310093`*^9, 3.6821041622938023`*^9}, {3.68210423166377*^9, 
   3.68210423550299*^9}, {3.6821042817676363`*^9, 3.682104281975648*^9}, {
   3.6821044114720545`*^9, 3.6821044835001745`*^9}, {3.6821045457187333`*^9, 
   3.6821045762404785`*^9}, {3.6821046797604*^9, 3.6821047083920374`*^9}, {
   3.682104777109968*^9, 3.682104849645117*^9}, {3.6821057340817037`*^9, 
   3.6821059374293346`*^9}, {3.6821060904780884`*^9, 
   3.6821060922611904`*^9}, {3.6821063118057475`*^9, 3.682106405406101*^9}, 
   3.682106470391818*^9, {3.682106886234603*^9, 3.6821069287290335`*^9}, {
   3.6821069697263784`*^9, 3.6821069703174124`*^9}, {3.6821070483648767`*^9, 
   3.6821070518040733`*^9}, {3.682107090122265*^9, 3.682107090965313*^9}, {
   3.6821071649115424`*^9, 3.6821073019513807`*^9}, {3.68210735596247*^9, 
   3.6821073587036266`*^9}, 3.6821621740358844`*^9, 3.6821627337889004`*^9, {
   3.6821628756690154`*^9, 3.682162909995979*^9}, {3.682163006508499*^9, 
   3.6821630839339275`*^9}, {3.682164960571265*^9, 3.6821650124032297`*^9}, {
   3.6821651296039333`*^9, 3.6821651308580046`*^9}, {3.682165214019761*^9, 
   3.682165249474789*^9}, {3.6821653768800764`*^9, 3.6821654049336815`*^9}, {
   3.6821654393766513`*^9, 3.68216545387048*^9}, 3.6821655581664457`*^9, {
   3.682165620292999*^9, 3.6821656220580997`*^9}, {3.6821656556360207`*^9, 
   3.6821656577791433`*^9}, {3.682165701413639*^9, 3.682165727750145*^9}, {
   3.6821665708493676`*^9, 3.682166634060983*^9}, {3.6821666960175266`*^9, 
   3.6821667514896994`*^9}, 3.682166802514618*^9, {3.6821669432116656`*^9, 
   3.682167060590379*^9}, {3.6821671413930006`*^9, 3.682167202085472*^9}, {
   3.6821673969946203`*^9, 3.6821673999857917`*^9}, {3.6821674579621077`*^9, 
   3.682167471208865*^9}, {3.682167501232582*^9, 3.682167549741357*^9}, {
   3.682167594844937*^9, 3.6821675971000657`*^9}, {3.6821676294889183`*^9, 
   3.6821676371443563`*^9}, {3.6821676871182146`*^9, 
   3.6821676926285295`*^9}, {3.6821678111603093`*^9, 3.682167849935527*^9}, {
   3.682167892151942*^9, 3.6821679025275354`*^9}, {3.6821680476398354`*^9, 
   3.682168050832018*^9}, {3.6821681112514734`*^9, 3.6821681135776067`*^9}, {
   3.6821681662336187`*^9, 3.6821681808154526`*^9}, {3.6821682156534452`*^9, 
   3.682168310363862*^9}, {3.682178802064953*^9, 3.6821788574731226`*^9}, {
   3.6821797845176063`*^9, 3.6821798678863745`*^9}, {3.682179924646621*^9, 
   3.682179933998156*^9}, 3.6821800382591195`*^9, {3.682180103785867*^9, 
   3.6821801191557465`*^9}, {3.6821803064124565`*^9, 3.682180320525264*^9}, {
   3.682180376454463*^9, 3.6821803814617496`*^9}, {3.6821832402242613`*^9, 
   3.682183284751808*^9}, {3.682183418403453*^9, 3.6821834209866004`*^9}, {
   3.682340380078147*^9, 3.682340410220871*^9}, {3.682340522181275*^9, 
   3.682340537612157*^9}, {3.6823406550578747`*^9, 3.682340655896923*^9}, {
   3.682340692157997*^9, 3.68234069326906*^9}, {3.682345730917197*^9, 
   3.682345731045205*^9}, {3.6823458690981007`*^9, 3.682345919492983*^9}, {
   3.682345967318719*^9, 3.6823459676457376`*^9}, {3.6823463858226557`*^9, 
   3.682346387093728*^9}, 3.6823468661441727`*^9, {3.6823507930227776`*^9, 
   3.6823507938398237`*^9}, {3.6823508346331573`*^9, 3.68235083747932*^9}, 
   3.682354138591133*^9, 3.6823566711479864`*^9, {3.682360931208648*^9, 
   3.682360932023695*^9}, {3.6823611770847116`*^9, 3.682361178779808*^9}, {
   3.682361844153866*^9, 3.682361845208926*^9}, {3.682362187881526*^9, 
   3.682362192368782*^9}, {3.6823622281698303`*^9, 3.6823622290728817`*^9}, {
   3.6824245168725133`*^9, 3.682424594002925*^9}, {3.6824260544974604`*^9, 
   3.682426058127668*^9}, {3.6824261036362705`*^9, 3.682426116397001*^9}, {
   3.682426190238224*^9, 3.682426191247282*^9}, {3.6824263261569986`*^9, 
   3.6824263271250534`*^9}, {3.682426566115723*^9, 3.682426577725387*^9}, {
   3.6824266458332825`*^9, 3.6824266595680685`*^9}, {3.682426696979208*^9, 
   3.6824267107099934`*^9}, {3.682427781573243*^9, 3.6824278113079443`*^9}, {
   3.6824355677005672`*^9, 3.682435631502217*^9}, {3.6824362666165433`*^9, 
   3.682436273352928*^9}, {3.6824396749253745`*^9, 3.6824396816717634`*^9}, {
   3.6824466180411763`*^9, 3.682446638837542*^9}, {3.6824477837793245`*^9, 
   3.682447784026745*^9}, {3.6824486976287394`*^9, 3.6824486988314676`*^9}, {
   3.682448741291876*^9, 3.682448758877056*^9}, {3.682528592516034*^9, 
   3.682528601669776*^9}, {3.6825290670606318`*^9, 3.6825290697308183`*^9}, {
   3.682529366905645*^9, 3.6825294632815933`*^9}, {3.6825295212782946`*^9, 
   3.6825295218262405`*^9}, {3.6825326611473746`*^9, 
   3.6825327653305593`*^9}, {3.68253282920498*^9, 3.6825328354504523`*^9}, {
   3.6825337172886257`*^9, 3.6825337966552057`*^9}, {3.682767727311578*^9, 
   3.6827677341416397`*^9}, {3.6827677784039173`*^9, 
   3.6827677817925434`*^9}, {3.6932553797640305`*^9, 
   3.6932554299337807`*^9}, {3.6932554605179*^9, 3.6932559069187527`*^9}, {
   3.6932561402287693`*^9, 3.6932561722799435`*^9}, {3.6933163942079906`*^9, 
   3.693316415693305*^9}, {3.693316580499305*^9, 3.6933166304990816`*^9}, {
   3.693316760505435*^9, 3.6933167713506746`*^9}, {3.693316885693319*^9, 
   3.693316923395423*^9}, {3.6933172128656282`*^9, 3.693317263746234*^9}, {
   3.693325258387647*^9, 3.693325258903158*^9}, {3.693325769156588*^9, 
   3.6933257999974604`*^9}, {3.693335215842825*^9, 3.6933352602877464`*^9}, {
   3.693335513566686*^9, 3.693335518882057*^9}, 3.6933383532074747`*^9, {
   3.69333844096763*^9, 3.6933384435674295`*^9}, {3.6933998013026257`*^9, 
   3.693399826867744*^9}, {3.693399878173236*^9, 3.6933998820731897`*^9}, {
   3.6933999851766276`*^9, 3.693400021978489*^9}, {3.6934001039998937`*^9, 
   3.693400106015895*^9}, {3.6934016718519135`*^9, 3.6934016749356365`*^9}, {
   3.693401768182933*^9, 3.6934017860664177`*^9}, {3.6934045049723034`*^9, 
   3.693404507408079*^9}, {3.6934045480219707`*^9, 3.693404569296521*^9}, {
   3.693404654068478*^9, 3.6934046767251215`*^9}, 3.6934047114649863`*^9, {
   3.693411486854925*^9, 3.6934115557606277`*^9}, {3.693411611637782*^9, 
   3.69341163689961*^9}, {3.6934117443930483`*^9, 3.6934117581565638`*^9}, {
   3.693412031427684*^9, 3.693412061254629*^9}, {3.6934121007632923`*^9, 
   3.6934121063459177`*^9}, {3.6934121673784485`*^9, 
   3.6934121732938156`*^9}, {3.6934126870207553`*^9, 3.693412687851843*^9}, {
   3.6934127270569134`*^9, 3.693412748633364*^9}, {3.693412788765423*^9, 
   3.6934127889652367`*^9}, {3.693413093699652*^9, 3.6934131049158497`*^9}, {
   3.693413158927167*^9, 3.693413165655781*^9}, {3.6934132892354*^9, 
   3.6934132907125025`*^9}, {3.693413694311676*^9, 3.6934138525544806`*^9}, {
   3.6934139623245473`*^9, 3.6934139741439466`*^9}, {3.6934151889872465`*^9, 
   3.6934151913460665`*^9}, {3.693421812342548*^9, 3.693421814260598*^9}, 
   3.693571210634773*^9, {3.6935730363523593`*^9, 3.693573037920248*^9}, {
   3.6935730980366774`*^9, 3.693573098636371*^9}, {3.6935733964485483`*^9, 
   3.693573406451894*^9}, {3.693573469980172*^9, 3.693573501220932*^9}, {
   3.6935735525801334`*^9, 3.6935736322071934`*^9}, {3.693574441972418*^9, 
   3.693574507219281*^9}, {3.693574541832406*^9, 3.6935745742488327`*^9}, {
   3.693575621329663*^9, 3.693575673978572*^9}, {3.69357673871231*^9, 
   3.6935767415254836`*^9}, {3.6935771676067867`*^9, 
   3.6935771693901434`*^9}, {3.6935774277045565`*^9, 3.693577443913048*^9}, {
   3.6935774788521423`*^9, 3.69357748131384*^9}, {3.6935801882381463`*^9, 
   3.693580202383541*^9}, {3.6935809873145914`*^9, 3.69358098944536*^9}, {
   3.6935872517340436`*^9, 3.6935872545426507`*^9}, {3.693587372831433*^9, 
   3.6935873796980495`*^9}, {3.693587562863904*^9, 3.693587616021948*^9}, {
   3.6935876893495855`*^9, 3.6935876903867693`*^9}, {3.6935878379546204`*^9, 
   3.6935878413010764`*^9}, {3.693588112787511*^9, 3.69358811449063*^9}, {
   3.6935881694755335`*^9, 3.693588171288027*^9}, {3.6935935389237742`*^9, 
   3.693593540345663*^9}, 3.6935935945632477`*^9, {3.6935936258290606`*^9, 
   3.693593626766575*^9}, {3.6935941806328535`*^9, 3.693594207086978*^9}, 
   3.6935946950674806`*^9, {3.6935947327149076`*^9, 3.693594734652423*^9}, {
   3.693594941365797*^9, 3.693594955856461*^9}, {3.6935949870952897`*^9, 
   3.693595006821137*^9}, {3.693595054598051*^9, 3.693595087587389*^9}, {
   3.693595156350831*^9, 3.693595162100931*^9}, {3.693595205375044*^9, 
   3.693595214270155*^9}, {3.6935955401391487`*^9, 3.69359554954937*^9}, {
   3.6935957894002223`*^9, 3.693595793535714*^9}, {3.6935975519334*^9, 
   3.6935975545739965`*^9}, 3.6935978494473696`*^9, 3.6935978853782554`*^9, {
   3.693600107714938*^9, 3.6936001086524925`*^9}, {3.6936001461743183`*^9, 
   3.6936001463930244`*^9}, {3.6936004005973363`*^9, 
   3.6936004140829015`*^9}, {3.693600548133373*^9, 3.69360056949905*^9}, 
   3.6936006120421934`*^9, {3.693600743312659*^9, 3.6936007668870306`*^9}, 
   3.6936593079963093`*^9, {3.6936600641823077`*^9, 3.6936600934684105`*^9}, {
   3.6936606802085075`*^9, 3.6936607260416718`*^9}, 3.693661925629023*^9, {
   3.6936700240275917`*^9, 3.6936700241431427`*^9}, {3.693670312478878*^9, 
   3.693670390281993*^9}, 3.693671577434743*^9, {3.693671658053399*^9, 
   3.69367166553496*^9}, {3.6936857949048443`*^9, 3.693685796574098*^9}, {
   3.6938634331019464`*^9, 3.6938634424293127`*^9}, {3.7021506788025312`*^9, 
   3.7021506844738555`*^9}, {3.7037037148134384`*^9, 
   3.7037037294210167`*^9}, {3.703703915278076*^9, 3.7037039469256473`*^9}, {
   3.703704848274563*^9, 3.7037048678076663`*^9}, {3.7037053637935624`*^9, 
   3.703705368753002*^9}, {3.703847775816551*^9, 3.703847820609113*^9}, {
   3.703849676834283*^9, 3.7038496905620685`*^9}, {3.7040282611457214`*^9, 
   3.7040282642328987`*^9}, {3.704028356338166*^9, 3.7040283566171827`*^9}, {
   3.704028398569582*^9, 3.704028399184617*^9}, {3.704471208248934*^9, 
   3.7044712099760327`*^9}, {3.704471241696847*^9, 3.7044712418798575`*^9}, {
   3.7044719290331607`*^9, 3.7044719302572308`*^9}, {3.7046591737739472`*^9, 
   3.7046591911339397`*^9}, {3.705148359139801*^9, 3.7051483678022966`*^9}, 
   3.7051484133559017`*^9, {3.73756766773046*^9, 3.7375676678554573`*^9}, {
   3.7391166690149665`*^9, 3.7391166877889643`*^9}, 3.7658282742121916`*^9, {
   3.765828806839615*^9, 3.765828816995103*^9}, {3.7658298628464932`*^9, 
   3.765829872598856*^9}, {3.765831890081997*^9, 3.765831893986545*^9}, {
   3.765832009952757*^9, 3.765832011450959*^9}, {3.7658320614405985`*^9, 
   3.7658320749958544`*^9}, {3.765833522198763*^9, 3.7658335223549724`*^9}, 
   3.811634629248603*^9, {3.8116368097658663`*^9, 3.811636833496706*^9}, {
   3.8116373074714084`*^9, 3.811637309740475*^9}, {3.8116377138711634`*^9, 
   3.811637719319523*^9}, 3.811637809932087*^9, {3.811637905898449*^9, 
   3.8116379094807105`*^9}, {3.811637941543541*^9, 3.8116379455087037`*^9}, {
   3.8116379845565004`*^9, 3.81163801162895*^9}, {3.811638459188175*^9, 
   3.8116384683825455`*^9}, {3.812149793956167*^9, 3.8121497942013903`*^9}, {
   3.812155344707033*^9, 3.812155345473729*^9}, {3.8121555626020675`*^9, 
   3.8121555947602863`*^9}, {3.8121558130565276`*^9, 3.81215581444606*^9}, {
   3.812155867067438*^9, 3.812155876138297*^9}, {3.8121559990276227`*^9, 
   3.8121559997288227`*^9}, {3.812156652368132*^9, 3.812156652851571*^9}, {
   3.81215669952105*^9, 3.8121566997262363`*^9}, {3.8121588516784854`*^9, 
   3.8121588563096886`*^9}},
 CellLabel->
  "In[1564]:=",ExpressionUUID->"ada986a8-1117-4311-8a01-7d0d5f83b9f4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"0.25", "*", "5.750056"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FvP4", "[", "\[Gamma]", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{
   RowBox[{"FvP3", "[", "\[Gamma]", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"Power", "::", "infy"}], "]"}], ";", 
   RowBox[{"Off", "[", 
    RowBox[{"Infinity", "::", "indet"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "list", ",", "list1", ",", "list3", ",", "list4", ",", "EIT", ",", "ABS", 
     ",", "EIT1", ",", "ABS1", ",", "LL", ",", "LL1", ",", "Midpoints", ",", 
     "Midpoints1", ",", "cluster", ",", "cluster1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p", "<", "10"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"list", "=", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Lev4DoppTestsc1", "[", 
             RowBox[{"50", ",", 
              RowBox[{"p", "/", "1000"}], ",", 
              RowBox[{"1", "/", "1000"}], ",", 
              RowBox[{"\[Gamma]", "*", 
               RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "<", "0.015"}], "&"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"list1", "=", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Lev4DoppTestsc1", "[", 
             RowBox[{"50", ",", 
              RowBox[{"0", "/", "1000"}], ",", 
              RowBox[{"1", "/", "1000"}], ",", 
              RowBox[{"\[Gamma]", "*", 
               RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "<", "0.015"}], "&"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"list3", "=", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Lev3DoppTestsc1", "[", 
             RowBox[{"50", ",", 
              RowBox[{"p", "/", "1000"}], ",", 
              RowBox[{"1", "/", "1000"}], ",", 
              RowBox[{"\[Gamma]", "*", 
               RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "<", "0.005"}], "&"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"list4", "=", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Lev3DoppTestsc1", "[", 
             RowBox[{"50", ",", 
              RowBox[{"0", "/", "1000"}], ",", 
              RowBox[{"1", "/", "1000"}], ",", 
              RowBox[{"\[Gamma]", "*", 
               RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "<", "0.005"}], "&"}]}], 
           "]"}]}], ";"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"list", "=", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Lev4DoppTestsc1", "[", 
             RowBox[{"50", ",", 
              RowBox[{"p", "/", "1000"}], ",", 
              RowBox[{"1", "/", "1000"}], ",", 
              RowBox[{"\[Gamma]", "*", 
               RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "<", "0.05"}], "&"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"list1", "=", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Lev4DoppTestsc1", "[", 
             RowBox[{"50", ",", 
              RowBox[{"0", "/", "1000"}], ",", 
              RowBox[{"1", "/", "1000"}], ",", 
              RowBox[{"\[Gamma]", "*", 
               RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "<", "0.05"}], "&"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"list3", "=", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Lev3DoppTestsc1", "[", 
             RowBox[{"50", ",", 
              RowBox[{"p", "/", "1000"}], ",", 
              RowBox[{"1", "/", "1000"}], ",", 
              RowBox[{"\[Gamma]", "*", 
               RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "<", "0.02"}], "&"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"list4", "=", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Lev3DoppTestsc1", "[", 
             RowBox[{"50", ",", 
              RowBox[{"0", "/", "1000"}], ",", 
              RowBox[{"1", "/", "1000"}], ",", 
              RowBox[{"\[Gamma]", "*", 
               RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "<", "0.02"}], "&"}]}], 
           "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"EIT", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS", "=", 
       RowBox[{
        RowBox[{"list1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list", ",", "EIT"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"EIT1", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS1", "=", 
       RowBox[{
        RowBox[{"list4", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list3", ",", "EIT1"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"LL", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"EIT", "-", "ABS"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Midpoints", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"list", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"EIT", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL", ")"}]}], "-", 
            RowBox[{"LL", "/", "50"}]}], "<", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "<", 
           RowBox[{"EIT", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL", ")"}]}], "+", 
            RowBox[{"LL", "/", "50"}]}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cluster", "=", 
       RowBox[{"Gather", "[", 
        RowBox[{"Midpoints", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "0.0025"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FvP4", "[", "\[Gamma]", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"FvP4", "[", "\[Gamma]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1000", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster", "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}]}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"LL1", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"EIT1", "-", "ABS1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Midpoints1", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"list3", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"EIT1", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL1", ")"}]}], "-", 
            RowBox[{"LL1", "/", "50"}]}], "<", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "<", 
           RowBox[{"EIT1", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL1", ")"}]}], "+", 
            RowBox[{"LL1", "/", "50"}]}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cluster1", "=", 
       RowBox[{"Gather", "[", 
        RowBox[{"Midpoints1", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "0.0025"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FvP3", "[", "\[Gamma]", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"FvP3", "[", "\[Gamma]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1000", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster1", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster1", "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}]}]}], 
          "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "3", ",", "200", ",", "2"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.765829089641389*^9, 3.7658292318963723`*^9}, {
   3.7658292853196664`*^9, 3.7658292871639733`*^9}, {3.7658293320655184`*^9, 
   3.7658294847660823`*^9}, {3.765829757651656*^9, 3.7658297653284125`*^9}, {
   3.7658299219744377`*^9, 3.7658299667544694`*^9}, {3.7658300840041547`*^9, 
   3.7658301261594133`*^9}, {3.765830210826744*^9, 3.7658303345335846`*^9}, {
   3.7658304859698343`*^9, 3.7658305295086613`*^9}, {3.765830564361416*^9, 
   3.7658305952136946`*^9}, {3.7658314187015557`*^9, 3.765831433576153*^9}, 
   3.765831528415668*^9, {3.7658330278595476`*^9, 3.765833421555685*^9}, {
   3.765833482366448*^9, 3.765833487516837*^9}, {3.7658335344874315`*^9, 
   3.7658336014185624`*^9}, {3.765833726869643*^9, 3.7658337287345467`*^9}, {
   3.7658337809291964`*^9, 3.7658337844539747`*^9}, {3.7658339867015486`*^9, 
   3.765833987029645*^9}, {3.7658875912324424`*^9, 3.7658875942033095`*^9}, {
   3.7658878566825867`*^9, 3.765887859120116*^9}, {3.7658883209717026`*^9, 
   3.765888321393361*^9}, {3.7658886313160963`*^9, 3.76588863955219*^9}, {
   3.765888683584565*^9, 3.765888717125509*^9}, {3.7658901003241773`*^9, 
   3.7658901056742954`*^9}, {3.7658901775747766`*^9, 
   3.7658902199436054`*^9}, {3.7658902603967047`*^9, 3.765890263600562*^9}, {
   3.7658903271765995`*^9, 3.7658903348457775`*^9}, {3.7658904879414234`*^9, 
   3.765890488140133*^9}, {3.8116367625621414`*^9, 3.8116367635590496`*^9}, {
   3.811637034744678*^9, 3.81163703702075*^9}, {3.811637106268754*^9, 
   3.8116371326703563`*^9}, {3.811637407565056*^9, 3.811637408034483*^9}, {
   3.811637540438384*^9, 3.8116376350467753`*^9}, {3.811637679147976*^9, 
   3.811637691957635*^9}, {3.8116381851010237`*^9, 3.8116382713109026`*^9}, {
   3.8121481209015384`*^9, 3.8121481213899813`*^9}, {3.8121483563871098`*^9, 
   3.8121485582920914`*^9}, {3.8121485946661015`*^9, 3.812148688659107*^9}, {
   3.812148800753909*^9, 3.812148803401311*^9}, {3.812149513090535*^9, 
   3.8121495237755256`*^9}, {3.8121552541189947`*^9, 
   3.8121552767366285`*^9}, {3.8121556303418884`*^9, 
   3.8121556306351547`*^9}, {3.8121560407061586`*^9, 
   3.8121560494721785`*^9}, {3.8121561346595936`*^9, 3.8121561361299276`*^9}, 
   3.8121561769031677`*^9, {3.8121565365396504`*^9, 3.812156552780733*^9}, {
   3.8121567284772882`*^9, 3.812156735546646*^9}, {3.8121570555944448`*^9, 
   3.812157064411019*^9}, {3.8121572894230633`*^9, 3.812157304168301*^9}},
 CellLabel->
  "In[1565]:=",ExpressionUUID->"a2084274-a916-4ff8-8276-e89d0aabaa7f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Fp1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FvP4", "[", "\[Gamma]", "]"}], ",", 
       RowBox[{"FvP3", "[", "\[Gamma]", "]"}]}], "}"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "40", "]"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{"legend", ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "0.5"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
          RowBox[{"Darker", "[", "Red", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Blue"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Black", ",", 
          "Dashed"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Power (mW)\>\"", ",", "50", ",", "Black"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<FWHM (MHz) \>\"", ",", "50", ",", "Black"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "200"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "70"}], "}"}]}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQbaL78f9+vjeOu86IMxwA0t23RdhAtIi3KZg2EOPl
A9EH3pjwg2gOi1uOIHp5zDQnED1/6vpMEN0iug1MHznenQeiF8vcANOej14e
OAikv2pWHATRCS3e30H01fbqHyD6EMdE6UNAegHHXDDNI79WAURfmbcdTC85
+vj0HZD5OblnQLRPc+FlEP2DqRxMn5cTuQOi29abguklFz+duwukWfRvnQfR
c/hifjwC0lamMj9BtNACZ6EPEm8cU0OEhEF0Y9Wmm3JpbxxbC0+C6R69TRPk
gTSTv9REEG22d9V5ifQ3jr3lwhdA9DtVNy9JIN2UegdMhz3xNJcB0lo+6WD6
1YHCUBBtyHA7HES/277kIoh+2bwRTNswb3kPop+v2g2mDy57e0wWSMcqNx0H
0QBUgcRs
  "],
 CellLabel->
  "In[1571]:=",ExpressionUUID->"aa96ddaf-d60c-45eb-a338-df83e20ee2ae"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
       0.009166666666666668], AbsoluteThickness[3], LineBox[CompressedData["
1:eJw11AtIVGkYBmAJKYloS9xFhnE5zrpTW1tqZpPZ6Ktmk446jY63yezMTYfa
siTCFindTSi6YbEsdKGRdouBblhZicUQ3Xdrl4hcccMJsfsaYtJlKfp/5z0D
Mjy88+H3n+87f6K7odQ3ISoqyiP+5HfkE4OrYzNr9ubGIuI43DP0v9/yIo7W
w3Hx67aX0+NpA/aOF+hoI7LTa7sLdiXQszAjNeaEXqfQc3HS8vjHuHWJdCoO
vz5+w9proNPQvXF/fPRXSXQ6Tuud3syt39Im/NmR3zV62UhnoHS8n5l0JsR/
EwXf0WZ8KBv8/eBvs+hsxPfde1s2ODviFmCBaHeKYQ6dg3Lx82vqXDoXjf72
/5qPJNN5aJYH3JxCL0Flxrlbm6am0vk4dE0503hR81JsunJEl1w8j7ZgUusv
eTtfaV4G8TROWVrT6AJsME/uParMpwtRZNqRo57XbIWYxuoeRzpdhDU94oG9
0VwMS9foxwfbF9Al+OaMOEGCibbhrDxQD43l2PPD0/+D9oURh5YjIflR0sQR
Gna8E9O92pbB3I77ch90i5iXwjX0t6H/Eh0qhXnAtvvXkkzmZXBPq8o49w8d
KkOWON76tYuZO/DMKBbkezNzB2Z3io14SKMclePzyGJejhTRXusYjQo4ps7p
PLw1m3kFNsp5fQHmlXDL/qrpUCWCN6ymHUEtr8Ji2e+wlldhW+hOR35WDvNq
/CH3bTcdqkbsz+IHj7TciWMHxcANucydGJYL0khjBf6V8+rR8hW4IxdiUh7z
GlwQ42qy06EafHrQ9NzYoeUrIU6Tnf5Ey1eiZbUYeMoS5rVIlPNto0O1EMs/
YLuu5avwKThyv1iXz3xVZN+dtKJii9znIK2quCnW1/+eDqhwyv3OWhpxWEWH
TizIHlpxoV++Tndp1cV9s7Deha5b4sBuOuyK9NNJK27sk/fHW1p1o+/oevNk
yzLWuyFfJ387HXajSvbzkFY8kX6MBaz3YH6a+KyhAx40i9frcTcd9uC87OcD
rXhRIffHVsh6L9rH7zM64MVtOa+/6LAX8vHHJ1lZ78Nx0W6vh1Z9GLaLC+ks
HfDhJ1nwjg770CBet5HcItbXIVp+b6fVOljlhdBLB+owIPdHX8z6OjTKBXTR
Sj1q5QV8glbrMSquU9MIHajHInF9DKGE9fW4K/e5jVb8mCgfwHVa9cMm75sv
baz3Y1C8HuucdNgPfbQoOGDDZ7v9whU=
        "]]}, 
      {RGBColor[0, 0, 1], PointSize[0.009166666666666668], AbsoluteThickness[
       3], LineBox[CompressedData["
1:eJw11A1M1GUcB3AgZk6JqQECkp7HdfIi4EGAxJhfRSRCxAM5XgT83/uN0sgx
55ojtZz5rqnlS45Dhsqm1ho5E6anIjpXrBmKNytvqSu3aDJszsTV83Df57/d
bp9997v7/Z/n+T2zbR9UOMNCQkLs4iO/g89EdN9Yd7EtfgqCjkJq/Z4r/yRN
pRNwJqHOkd+mrMe/lQ86j4ZPo42IDEvdGlOrnILEb9Z69p1RTkfI7fWPjSPK
JiyNEAWW1+ksHCrc8f4fPcrZMO/6cs20wig6FxFDHc0FN5Xz0K8Tf2COpvNx
fvTl4PrHygX4vVz8wOcx9AIM6u89b02ZHvRGYKy1qbflZ+WFMIi4aUMsvQhb
fDfbi3Li6EI87Dzap3uivBhFot0XXfF0EWR5b8sMegkK7osG0hPoYhzrEw3/
qfwOxrpGbpUdf4MuwYHYcEvk6pn0u0jbGuMfyJ1Fl+LBR1Fni0N19FLsH96w
ILtRuQy/GSZsOnhVeRmuyfUxzabLMbUmr/vGFzSWo0Fu7xjtW45T/aW526x6
5mY8lcvZT/vM6GwumDSUmMi8AiMnZQHtq8BdsT2Tnqm8Mrie9QbmlZg8vn80
VqA6Mu3bYxlvMl+BjqJzoy8P0KjC9oXao5/CjMyrcEccH5OHhgV6eb5+VLkF
a8RujGTOYV6NKnE8+7y0rxrt8Rm/GiYkMa/BsPn8zC3v0b4aDJbZptT4VV6L
nhJxQIuTmdfiuOyvm0Yd/pbLH5/CvA5vywH6mMbKYH/DKl8Z7K8ilXk9Zolx
uv817atH0z6xodFzmTfgL9nfDtrXgPnbxII8UXkjPpXn05LGvBGre1v2x/bR
WIXv5TwkpzNfhXAxnv7dtE5DuXjdvKe0pmF+44WSCFtG0F4Nmw+KgbxOBzR8
N34/zGO9FV1y+820ZsVX8nx/RnutWCS2T99DB6yQr39rWNXb8IucF4OJ9TZs
kv9XTXttSDJNPJ2wnQ7YMENu32VaZ8dl8frnRlW9HS75GDNZb8dr4/cRHbAj
VH7vpXUOnm9ac+DIYfE8V/UO7BHXzyfzsljvCPbnpnVOzJH9HaE1JwZ+kA/t
deKK7O+Vt1jvRJwY77RMWufCpTZxIB205oIzX14YtNeFWjGu6wZUvQv/iXaN
odmsd+OEnMcsWnOjVN6nLtrrxk55PbXTATeyRLt1g6reA7+c11dzWO9BqzjO
F/Jorwcfip/vaKYDHsT6B55VduTgf5X9tQM=
        "]]}}, {{}, {}}}, InsetBox[
     TemplateBox[{
       StyleBox["\"4 Level\"", 
        RGBColor[
         Rational[2, 3], 0, 0], StripOnInput -> False], 
       StyleBox["\"3 Level\"", 
        RGBColor[0, 0, 1], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontSize -> 45, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0", ",", "0"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.33333333333333337`", ",", 
                    "0.33333333333333337`", ",", "0.33333333333333337`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}]}], "]"}]& )], 
     Scaled[{0.99, 0.5}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"FWHM (MHz) \"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Power (mW)\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
   FrameTicks->{{True, True}, {True, True}},
   FrameTicksStyle->Directive[40],
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->1020,
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 200}, {0, 70}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[3], 
          RGBColor[
           Rational[2, 3], 0, 0]], 
         Line[CompressedData["
1:eJw11AtIVGkYBmAJKYloS9xFhnE5zrpTW1tqZpPZ6Ktmk446jY63yezMTYfa
siTCFindTSi6YbEsdKGRdouBblhZicUQ3Xdrl4hcccMJsfsaYtJlKfp/5z0D
Mjy88+H3n+87f6K7odQ3ISoqyiP+5HfkE4OrYzNr9ubGIuI43DP0v9/yIo7W
w3Hx67aX0+NpA/aOF+hoI7LTa7sLdiXQszAjNeaEXqfQc3HS8vjHuHWJdCoO
vz5+w9proNPQvXF/fPRXSXQ6Tuud3syt39Im/NmR3zV62UhnoHS8n5l0JsR/
EwXf0WZ8KBv8/eBvs+hsxPfde1s2ODviFmCBaHeKYQ6dg3Lx82vqXDoXjf72
/5qPJNN5aJYH3JxCL0Flxrlbm6am0vk4dE0503hR81JsunJEl1w8j7ZgUusv
eTtfaV4G8TROWVrT6AJsME/uParMpwtRZNqRo57XbIWYxuoeRzpdhDU94oG9
0VwMS9foxwfbF9Al+OaMOEGCibbhrDxQD43l2PPD0/+D9oURh5YjIflR0sQR
Gna8E9O92pbB3I77ch90i5iXwjX0t6H/Eh0qhXnAtvvXkkzmZXBPq8o49w8d
KkOWON76tYuZO/DMKBbkezNzB2Z3io14SKMclePzyGJejhTRXusYjQo4ps7p
PLw1m3kFNsp5fQHmlXDL/qrpUCWCN6ymHUEtr8Ji2e+wlldhW+hOR35WDvNq
/CH3bTcdqkbsz+IHj7TciWMHxcANucydGJYL0khjBf6V8+rR8hW4IxdiUh7z
GlwQ42qy06EafHrQ9NzYoeUrIU6Tnf5Ey1eiZbUYeMoS5rVIlPNto0O1EMs/
YLuu5avwKThyv1iXz3xVZN+dtKJii9znIK2quCnW1/+eDqhwyv3OWhpxWEWH
TizIHlpxoV++Tndp1cV9s7Deha5b4sBuOuyK9NNJK27sk/fHW1p1o+/oevNk
yzLWuyFfJ387HXajSvbzkFY8kX6MBaz3YH6a+KyhAx40i9frcTcd9uC87OcD
rXhRIffHVsh6L9rH7zM64MVtOa+/6LAX8vHHJ1lZ78Nx0W6vh1Z9GLaLC+ks
HfDhJ1nwjg770CBet5HcItbXIVp+b6fVOljlhdBLB+owIPdHX8z6OjTKBXTR
Sj1q5QV8glbrMSquU9MIHajHInF9DKGE9fW4K/e5jVb8mCgfwHVa9cMm75sv
baz3Y1C8HuucdNgPfbQoOGDDZ7v9whU=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1:eJw11A1M1GUcB3AgZk6JqQECkp7HdfIi4EGAxJhfRSRCxAM5XgT83/uN0sgx
55ojtZz5rqnlS45Dhsqm1ho5E6anIjpXrBmKNytvqSu3aDJszsTV83Df57/d
bp9997v7/Z/n+T2zbR9UOMNCQkLs4iO/g89EdN9Yd7EtfgqCjkJq/Z4r/yRN
pRNwJqHOkd+mrMe/lQ86j4ZPo42IDEvdGlOrnILEb9Z69p1RTkfI7fWPjSPK
JiyNEAWW1+ksHCrc8f4fPcrZMO/6cs20wig6FxFDHc0FN5Xz0K8Tf2COpvNx
fvTl4PrHygX4vVz8wOcx9AIM6u89b02ZHvRGYKy1qbflZ+WFMIi4aUMsvQhb
fDfbi3Li6EI87Dzap3uivBhFot0XXfF0EWR5b8sMegkK7osG0hPoYhzrEw3/
qfwOxrpGbpUdf4MuwYHYcEvk6pn0u0jbGuMfyJ1Fl+LBR1Fni0N19FLsH96w
ILtRuQy/GSZsOnhVeRmuyfUxzabLMbUmr/vGFzSWo0Fu7xjtW45T/aW526x6
5mY8lcvZT/vM6GwumDSUmMi8AiMnZQHtq8BdsT2Tnqm8Mrie9QbmlZg8vn80
VqA6Mu3bYxlvMl+BjqJzoy8P0KjC9oXao5/CjMyrcEccH5OHhgV6eb5+VLkF
a8RujGTOYV6NKnE8+7y0rxrt8Rm/GiYkMa/BsPn8zC3v0b4aDJbZptT4VV6L
nhJxQIuTmdfiuOyvm0Yd/pbLH5/CvA5vywH6mMbKYH/DKl8Z7K8ilXk9Zolx
uv817atH0z6xodFzmTfgL9nfDtrXgPnbxII8UXkjPpXn05LGvBGre1v2x/bR
WIXv5TwkpzNfhXAxnv7dtE5DuXjdvKe0pmF+44WSCFtG0F4Nmw+KgbxOBzR8
N34/zGO9FV1y+820ZsVX8nx/RnutWCS2T99DB6yQr39rWNXb8IucF4OJ9TZs
kv9XTXttSDJNPJ2wnQ7YMENu32VaZ8dl8frnRlW9HS75GDNZb8dr4/cRHbAj
VH7vpXUOnm9ac+DIYfE8V/UO7BHXzyfzsljvCPbnpnVOzJH9HaE1JwZ+kA/t
deKK7O+Vt1jvRJwY77RMWufCpTZxIB205oIzX14YtNeFWjGu6wZUvQv/iXaN
odmsd+OEnMcsWnOjVN6nLtrrxk55PbXTATeyRLt1g6reA7+c11dzWO9BqzjO
F/Jorwcfip/vaKYDHsT6B55VduTgf5X9tQM=
          "]]}}}, {{}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {False, False}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["FWHM (MHz) ", 50, 
          GrayLevel[0]], None}, {
         Style["Power (mW)", 50, 
          GrayLevel[0]], None}}, FrameTicks -> {{True, True}, {True, True}}, 
      FrameTicksStyle -> Directive[40], GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 200}, {0, 70}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[
          Rational[2, 3], 0, 0], 
         AbsoluteThickness[10]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[10]], 
        Directive[{
          RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
          Dashing[{Small, Small}]}, 
         AbsoluteThickness[10]]}, {
        Style["4 Level", 
         RGBColor[
          Rational[2, 3], 0, 0]], 
        Style["3 Level", 
         RGBColor[0, 0, 1]]}, Joined -> {True, True}, 
       LabelStyle -> {FontSize -> 45}, LegendFunction -> "Frame", 
       LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       LegendMarkerSize -> Large]], {Right, 0.5}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7658291811412697`*^9, 3.765829199257653*^9}, {
   3.765829647521124*^9, 3.7658296819967103`*^9}, {3.7658297451569653`*^9, 
   3.7658297539095774`*^9}, 3.7658298107230415`*^9, 3.765829904553975*^9, 
   3.765830181677425*^9, 3.7658303639720573`*^9, 3.7658304779573884`*^9, 
   3.765830613439003*^9, 3.765833668627305*^9, 3.7658337600003853`*^9, {
   3.765833940910299*^9, 3.765833949126031*^9}, 3.7658876124645996`*^9, 
   3.7658876940451612`*^9, 3.765887939890687*^9, 3.7658884040284977`*^9, {
   3.7658886075554547`*^9, 3.7658886116382346`*^9}, {3.7658886655170193`*^9, 
   3.765888667975294*^9}, 3.7658889032126093`*^9, {3.765890657820629*^9, 
   3.7658906870213256`*^9}, {3.7659012400085154`*^9, 3.7659012590885515`*^9}, 
   3.7726292026637187`*^9, 3.8116368925246925`*^9, {3.811637121602281*^9, 
   3.811637142818386*^9}, 3.811637390541044*^9, 3.8116374305322056`*^9, 
   3.811637672751292*^9, 3.811638056829582*^9, 3.8116381233096128`*^9, {
   3.811638221396939*^9, 3.8116382829965296`*^9}, 3.811638343738842*^9, {
   3.8116384011382074`*^9, 3.8116384090403433`*^9}, 3.8116385431429863`*^9, 
   3.812148172768512*^9, {3.812148445249528*^9, 3.8121484585541973`*^9}, {
   3.8121485031952534`*^9, 3.812148574560855*^9}, {3.812148614557152*^9, 
   3.8121486800442896`*^9}, 3.8121487398220987`*^9, {3.812148855212199*^9, 
   3.812148865147833*^9}, 3.8121496083337564`*^9, {3.8121498429167876`*^9, 
   3.8121498472527227`*^9}, 3.8121554322432685`*^9, 3.8121556482299223`*^9, 
   3.8121558469792104`*^9, 3.8121559280887957`*^9, 3.8121560341371975`*^9, {
   3.8121560733528013`*^9, 3.812156095580442*^9}, 3.81215638305334*^9, 
   3.812156588555371*^9, 3.8121566717851095`*^9, 3.812156723212617*^9, 
   3.81215694801748*^9, {3.812157276905901*^9, 3.8121572774809294`*^9}, 
   3.8121575113608665`*^9, {3.8121590244422674`*^9, 3.812159036474186*^9}},
 CellLabel->
  "Out[1571]=",ExpressionUUID->"969dd323-3797-429e-be29-d5a81f8a09cc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Hey", "[", "list_", "]"}], ":=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"Ome", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "1000"], ",", 
         FractionBox["1", "1000"]}], "]"}], 
       RowBox[{"(", 
        RowBox[{"2", " ", "\[Pi]", " ", "5.750056`", " ", 
         SuperscriptBox["10", "6"]}], ")"}]], "^", "2"}], ",", 
     RowBox[{"list", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.7726292438695774`*^9, {3.772629424135271*^9, 3.772629447694663*^9}, {
   3.7726295284040613`*^9, 
   3.7726295643697634`*^9}},ExpressionUUID->"d1f26d99-e3ea-488a-aa7b-\
d381855f21b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Fp1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Hey", "[", 
        RowBox[{"FvP4", "[", "\[Gamma]", "]"}], "]"}], ",", 
       RowBox[{"Hey", "[", 
        RowBox[{"FvP3", "[", "\[Gamma]", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "40", "]"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{"legend", ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "0.5"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
          RowBox[{"Darker", "[", "Red", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Blue"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Black", ",", 
          "Dashed"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<Rabi-frequency^2 \[CapitalOmega](\[Gamma]^2)\>\"", ",", "50", 
          ",", "Black"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<FWHM (MHz) \>\"", ",", "50", ",", "Black"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "100"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "30"}], "}"}]}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.772629214448333*^9, 3.772629222088425*^9}, 
   3.7726294778585253`*^9, {3.7726295379503126`*^9, 3.7726295735850515`*^9}, {
   3.772629614142246*^9, 3.7726297139631686`*^9}, {3.772629750283797*^9, 
   3.7726297529825087`*^9}},ExpressionUUID->"8ae8b510-f0fc-4311-b30e-\
149b3bd96c6a"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
       0.009166666666666668], AbsoluteThickness[3], LineBox[CompressedData["
1:eJxFUntIU1EYv46pbXPbVaqR9Bo92Ghka2uZZedXQZohNKtRMszHKlqF6yXk
o0LQZcUMsijrj+F6EJXUKFioiTYSzCZhoUlEriByuPKNCNXOuRf64HL5OL/z
fb/H0RaX5h2UcBxnjH30n3LSmzZpCJJ7rkx5v08KnvUfyLfyuc1ZQwlY+MjV
VbrtCyGxU1fmHAj470Rvr++c1MnQ4LlYsTb9JxlieBlSGT5KTtBxLjl6Sx7X
2R6MkmkdvSAX50+QI4doKbD7QsPHa/4p8q6HlgI32LwZss5EKwn9dyq179tm
ydXYNnt9ksjnDwmzfUlotvstbgcHM8MrEWL74lBFj8uV+O28/3nFsAQDPipQ
KfKXYklNxBpYrILxbGN1sDQeAh+VyCcBT7OoIhXOuD26kslEUHRNRCXqlUHw
Q43A9epQXIUcbgZQY5DxVYCirQE1Zn1lp72cEhwrXvRHBeb3Mh4ZfmcqqVUj
mxnIi3p4jNBxR3mQwrSv0fhkKOi6S7zoZzLusrx4FB/Wm15lp2AHvd/FY5Tp
TRHuR/73UbG/yfjrYWD5aTAwXiB9WGXGKZbXIji9M93pBzbh9q1YfdKiYmV3
tmPpVsHf8eXorNQYDMnb8ZrGIdFB3udQT8TlCPwTV8Gq94+1jOUih/Wr0dP+
d7hjdJfg97k1Ip88IY9pI+bNzw3VhfcI+pwmWDrG20cGbWDxDpqx/1jjM2vf
PkHPTgvOa7b4XrzNRwvzdz2aOn80LAjawd6rdgO6jntqq1oLhLwuZ6DsSmqr
K78Q7P382ojE8MjzJlsRpuh73JuJJ01tb172Fon5bMY/bSFRaQ==
        "]]}, 
      {RGBColor[0, 0, 1], PointSize[0.009166666666666668], AbsoluteThickness[
       3], LineBox[CompressedData["
1:eJxFkwtMjWEYx093nct36uii3DqUzqmjO065fH+MclcsSQ7qVBzlnEqMcmtL
GsolSUSTobk3pla0krHYMcMiZnVqM5eaymHY0Pt+7+bZvp092/P83//ze56j
TDbGpdqKRKL5wx/5VWRXB1s1bby0o8Y0s90OLjR/yX+JrR9X+NkOY66YHhnn
vuePtlpVSaUOEOp7+dfD5eIOR5SVHMgL037knz0l4QRvWt/Pl9L6EXiWcrU4
/tIAP0tMHnBm+t9YvzNW7C17dbzuO7+WNohRTvV+8m2kvVWMjjP5yuf3fvPj
Cz8PO5IwP3/4IpIWSnA9qW5qkV6EN1RPAjN9zwaBSURQiq+Gi+/8PtkieyYx
IGX+7XEjunun23UpQndUFrQZHfCDPGeVMj+OCKchQ25RiSrF6sT6ZWxeZ1wg
z9XIUH+iwGyTJ4ZlWC26W4ZO6lcCGxEJDr9rtm2tFsnA0/k5xodjehyi6gze
/H45Kk+R4Ng8LhB4cuDXB3f1O7hC2AfHeLrCh/KQIzldHX4/RgFQfTkG6LwK
ZFH9/3kuyyuofzU2ppFQ4PWQzr52VwTUlJcbDNU/27XrZiCA5JfdkTepPUbv
Mwf0PsSeaM331Ghc5+M74ZU7CuIXevk3m4XMnxdi1XWDjYNL0E/yzaPxtPnv
p5aB5bClPMYyP3Fs3nFw91hiLrasRA/hp/TB1Jah5r7OeLYPH6zOqLwV+yIB
K4j8cyX2eM6uufMkETfp/ibgfOuHMq+2JByh9zYRjzJL9u9q0gn73eKLbYe8
m0yJ67GS9Mf6wcnSd/t8/AY0klQ7CRXTWq69jEuGcF/+0Bwuu+i4LAX0vhxU
uGdJP6ddpEcO4fdVhcXa6RWG6FScJvbfqNF1mDt6Zm4aHtB7DUBWT3exmU8X
5r8SCLvIOwWiGRuF+zypYfw34SGpL5gM/941W/URBsYrCA2RwZnlIZsFPquD
sajUNu2xJoPxCcHb3le6X6pMphcCY1TtKo3fFqFfEgrRkfzlOqVRuMd9oWgf
vOT7mDMJ+7KG4liVq7L7kAn0vDLCkBiTN/aXOAsUnyUMfkO9XiOLs9BA+CSE
o69qqYfGKVvgbQ7H3Zh6xbzCbEF/dgR2DynlOrsc0P/z3QgsOHtQsn1fjsA/
aAr+Adxe4+c=
        "]]}}, {}, {}, {{}, {}}}, InsetBox[
     TemplateBox[{
       StyleBox["\"4 Level\"", 
        RGBColor[
         Rational[2, 3], 0, 0], StripOnInput -> False], 
       StyleBox["\"3 Level\"", 
        RGBColor[0, 0, 1], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontSize -> 45, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[2/3, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.33333333333333337, 0.33333333333333337, \
0.33333333333333337]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}]}], "]"}]& )], 
     Scaled[{0.99, 0.5}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"FWHM (MHz) \"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Rabi-frequency^2 (\[Gamma]^2)\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
   FrameTicks->{{True, True}, {True, True}},
   FrameTicksStyle->Directive[40],
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->1020,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 100}, {0, 30}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[3], 
          RGBColor[
           Rational[2, 3], 0, 0]], 
         Line[CompressedData["
1:eJxFUntIU1EYv46pbXPbVaqR9Bo92Ghka2uZZedXQZohNKtRMszHKlqF6yXk
o0LQZcUMsijrj+F6EJXUKFioiTYSzCZhoUlEriByuPKNCNXOuRf64HL5OL/z
fb/H0RaX5h2UcBxnjH30n3LSmzZpCJJ7rkx5v08KnvUfyLfyuc1ZQwlY+MjV
VbrtCyGxU1fmHAj470Rvr++c1MnQ4LlYsTb9JxlieBlSGT5KTtBxLjl6Sx7X
2R6MkmkdvSAX50+QI4doKbD7QsPHa/4p8q6HlgI32LwZss5EKwn9dyq179tm
ydXYNnt9ksjnDwmzfUlotvstbgcHM8MrEWL74lBFj8uV+O28/3nFsAQDPipQ
KfKXYklNxBpYrILxbGN1sDQeAh+VyCcBT7OoIhXOuD26kslEUHRNRCXqlUHw
Q43A9epQXIUcbgZQY5DxVYCirQE1Zn1lp72cEhwrXvRHBeb3Mh4ZfmcqqVUj
mxnIi3p4jNBxR3mQwrSv0fhkKOi6S7zoZzLusrx4FB/Wm15lp2AHvd/FY5Tp
TRHuR/73UbG/yfjrYWD5aTAwXiB9WGXGKZbXIji9M93pBzbh9q1YfdKiYmV3
tmPpVsHf8eXorNQYDMnb8ZrGIdFB3udQT8TlCPwTV8Gq94+1jOUih/Wr0dP+
d7hjdJfg97k1Ip88IY9pI+bNzw3VhfcI+pwmWDrG20cGbWDxDpqx/1jjM2vf
PkHPTgvOa7b4XrzNRwvzdz2aOn80LAjawd6rdgO6jntqq1oLhLwuZ6DsSmqr
K78Q7P382ojE8MjzJlsRpuh73JuJJ01tb172Fon5bMY/bSFRaQ==
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1:eJxFkwtMjWEYx093nct36uii3DqUzqmjO065fH+MclcsSQ7qVBzlnEqMcmtL
GsolSUSTobk3pla0krHYMcMiZnVqM5eaymHY0Pt+7+bZvp092/P83//ze56j
TDbGpdqKRKL5wx/5VWRXB1s1bby0o8Y0s90OLjR/yX+JrR9X+NkOY66YHhnn
vuePtlpVSaUOEOp7+dfD5eIOR5SVHMgL037knz0l4QRvWt/Pl9L6EXiWcrU4
/tIAP0tMHnBm+t9YvzNW7C17dbzuO7+WNohRTvV+8m2kvVWMjjP5yuf3fvPj
Cz8PO5IwP3/4IpIWSnA9qW5qkV6EN1RPAjN9zwaBSURQiq+Gi+/8PtkieyYx
IGX+7XEjunun23UpQndUFrQZHfCDPGeVMj+OCKchQ25RiSrF6sT6ZWxeZ1wg
z9XIUH+iwGyTJ4ZlWC26W4ZO6lcCGxEJDr9rtm2tFsnA0/k5xodjehyi6gze
/H45Kk+R4Ng8LhB4cuDXB3f1O7hC2AfHeLrCh/KQIzldHX4/RgFQfTkG6LwK
ZFH9/3kuyyuofzU2ppFQ4PWQzr52VwTUlJcbDNU/27XrZiCA5JfdkTepPUbv
Mwf0PsSeaM331Ghc5+M74ZU7CuIXevk3m4XMnxdi1XWDjYNL0E/yzaPxtPnv
p5aB5bClPMYyP3Fs3nFw91hiLrasRA/hp/TB1Jah5r7OeLYPH6zOqLwV+yIB
K4j8cyX2eM6uufMkETfp/ibgfOuHMq+2JByh9zYRjzJL9u9q0gn73eKLbYe8
m0yJ67GS9Mf6wcnSd/t8/AY0klQ7CRXTWq69jEuGcF/+0Bwuu+i4LAX0vhxU
uGdJP6ddpEcO4fdVhcXa6RWG6FScJvbfqNF1mDt6Zm4aHtB7DUBWT3exmU8X
5r8SCLvIOwWiGRuF+zypYfw34SGpL5gM/941W/URBsYrCA2RwZnlIZsFPquD
sajUNu2xJoPxCcHb3le6X6pMphcCY1TtKo3fFqFfEgrRkfzlOqVRuMd9oWgf
vOT7mDMJ+7KG4liVq7L7kAn0vDLCkBiTN/aXOAsUnyUMfkO9XiOLs9BA+CSE
o69qqYfGKVvgbQ7H3Zh6xbzCbEF/dgR2DynlOrsc0P/z3QgsOHtQsn1fjsA/
aAr+Adxe4+c=
          "]]}}}, {}, {}, {{}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      AxesOrigin -> {0, 0}, PlotRange -> {{0, 100}, {0, 30}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {False, False}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["FWHM (MHz) ", 50, 
          GrayLevel[0]], None}, {
         Style["Rabi-frequency^2 (\[Gamma]^2)", 50, 
          GrayLevel[0]], None}}, FrameTicks -> {{True, True}, {True, True}}, 
      FrameTicksStyle -> Directive[40], GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 100}, {0, 30}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[
          Rational[2, 3], 0, 0], 
         AbsoluteThickness[10]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[10]], 
        Directive[{
          RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
          Dashing[{Small, Small}]}, 
         AbsoluteThickness[10]]}, {
        Style["4 Level", 
         RGBColor[
          Rational[2, 3], 0, 0]], 
        Style["3 Level", 
         RGBColor[0, 0, 1]]}, Joined -> {True, True}, 
       LabelStyle -> {FontSize -> 45}, LegendFunction -> "Frame", 
       LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       LegendMarkerSize -> Large]], {Right, 0.5}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7726292227133665`*^9, 3.7726292578005047`*^9}, {
   3.772629440569826*^9, 3.772629478287324*^9}, 3.7726295348198137`*^9, {
   3.772629565760419*^9, 3.7726295738193893`*^9}, {3.772629615931993*^9, 
   3.772629678172714*^9}, 
   3.7726297164552927`*^9},ExpressionUUID->"9c49081b-66f7-4352-99c9-\
d74830128cbf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SetDirectory", "[", 
  "\"\<C:\\\\Users\\\\Saesun Kim\\\\Desktop\\\\Saesun Kim\\\\Files\\\\EIT \
file\\\\Fig\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Figure43U.eps\>\"", ",", "Fp1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8116385664882965`*^9, 3.811638567983658*^9}, 
   3.812159106778988*^9},
 CellLabel->
  "In[1572]:=",ExpressionUUID->"b42b8f6d-2bcb-48e7-8b36-d4a1822a7a6c"],

Cell[BoxData["\<\"C:\\\\Users\\\\Saesun Kim\\\\Desktop\\\\Saesun Kim\\\\Files\
\\\\EIT file\\\\Fig\"\>"], "Output",
 CellChangeTimes->{3.8116385692087736`*^9, 3.812148880313596*^9, 
  3.812149858011486*^9, 3.8121575176415663`*^9, 3.812159107716839*^9},
 CellLabel->
  "Out[1572]=",ExpressionUUID->"d865dc13-7779-45f4-ab4f-bb584a1f8af0"],

Cell[BoxData["\<\"Figure43U.eps\"\>"], "Output",
 CellChangeTimes->{3.8116385692087736`*^9, 3.812148880313596*^9, 
  3.812149858011486*^9, 3.8121575176415663`*^9, 3.8121591084565105`*^9},
 CellLabel->
  "Out[1573]=",ExpressionUUID->"7eed7592-b352-42ee-8174-34fd3b17c237"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Gamma]=1", "Subchapter",
 CellChangeTimes->{{3.7658297991029167`*^9, 3.7658298012631054`*^9}, 
   3.765829915027057*^9, {3.7658305440638323`*^9, 3.7658305445959687`*^9}, {
   3.76583059158514*^9, 3.7658305925543447`*^9}, {3.7658314166089573`*^9, 
   3.7658314170147433`*^9}, {3.7658911672993174`*^9, 3.765891197757675*^9}, {
   3.7658912842961025`*^9, 
   3.765891284780057*^9}},ExpressionUUID->"201a2708-41f8-45ba-bdfd-\
f33421f60cc0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"1", "*", "5.750056"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FvP4", "[", "\[Gamma]", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{
   RowBox[{"FvP3", "[", "\[Gamma]", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"Power", "::", "infy"}], "]"}], ";", 
   RowBox[{"Off", "[", 
    RowBox[{"Infinity", "::", "indet"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "list", ",", "list1", ",", "list3", ",", "list4", ",", "EIT", ",", "ABS",
       ",", "EIT1", ",", "ABS1", ",", "LL", ",", "LL1", ",", "Midpoints", ",",
       "Midpoints1", ",", "cluster", ",", "cluster1"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"list", "=", 
        RowBox[{"Lev4DoppTestsc3", "[", 
         RowBox[{"50", ",", 
          RowBox[{"p", "/", "1000"}], ",", 
          RowBox[{"1", "/", "1000"}], ",", 
          RowBox[{"\[Gamma]", "*", 
           RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"list1", "=", 
        RowBox[{"Lev4DoppTestsc3", "[", 
         RowBox[{"50", ",", 
          RowBox[{"0", "/", "1000"}], ",", 
          RowBox[{"1", "/", "1000"}], ",", 
          RowBox[{"\[Gamma]", "*", 
           RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"list3", "=", 
        RowBox[{"Lev3DoppTestsc3", "[", 
         RowBox[{"50", ",", 
          RowBox[{"p", "/", "1000"}], ",", 
          RowBox[{"1", "/", "1000"}], ",", 
          RowBox[{"\[Gamma]", "*", 
           RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"list4", "=", 
        RowBox[{"Lev3DoppTestsc3", "[", 
         RowBox[{"50", ",", 
          RowBox[{"0", "/", "1000"}], ",", 
          RowBox[{"1", "/", "1000"}], ",", 
          RowBox[{"\[Gamma]", "*", 
           RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"EIT", "=", 
        RowBox[{"Min", "[", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{"list", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ABS", "=", 
        RowBox[{
         RowBox[{"list1", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"list", ",", "EIT"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"EIT1", "=", 
        RowBox[{"Min", "[", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{"list3", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ABS1", "=", 
        RowBox[{
         RowBox[{"list4", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"list3", ",", "EIT1"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"LL", "=", 
        RowBox[{"Abs", "[", 
         RowBox[{"EIT", "-", "ABS"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Midpoints", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"list", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"EIT", "+", 
             RowBox[{"0.5", 
              RowBox[{"(", "LL", ")"}]}], "-", 
             RowBox[{"LL", "/", "50"}]}], "<", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "<", 
            RowBox[{"EIT", "+", 
             RowBox[{"0.5", 
              RowBox[{"(", "LL", ")"}]}], "+", 
             RowBox[{"LL", "/", "50"}]}]}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"cluster", "=", 
        RowBox[{"Gather", "[", 
         RowBox[{"Midpoints", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"#1", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "0.0015"}], 
           "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"FvP4", "[", "\[Gamma]", "]"}], "=", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"FvP4", "[", "\[Gamma]", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", 
            RowBox[{"1000", 
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{
                 RowBox[{"cluster", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
               RowBox[{"Mean", "[", 
                RowBox[{
                 RowBox[{"cluster", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}]}]}],
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"LL1", "=", 
        RowBox[{"Abs", "[", 
         RowBox[{"EIT1", "-", "ABS1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Midpoints1", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"list3", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"EIT1", "+", 
             RowBox[{"0.5", 
              RowBox[{"(", "LL1", ")"}]}], "-", 
             RowBox[{"LL1", "/", "50"}]}], "<", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "<", 
            RowBox[{"EIT1", "+", 
             RowBox[{"0.5", 
              RowBox[{"(", "LL1", ")"}]}], "+", 
             RowBox[{"LL1", "/", "50"}]}]}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"cluster1", "=", 
        RowBox[{"Gather", "[", 
         RowBox[{"Midpoints1", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"#1", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "0.0015"}], 
           "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"FvP3", "[", "\[Gamma]", "]"}], "=", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"FvP3", "[", "\[Gamma]", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", 
            RowBox[{"1000", 
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{
                 RowBox[{"cluster1", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
               RowBox[{"Mean", "[", 
                RowBox[{
                 RowBox[{"cluster1", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}]}]}],
            "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "1.5", ",", "25", ",", "2"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "list", ",", "list1", ",", "list3", ",", "list4", ",", "EIT", ",", "ABS", 
     ",", "EIT1", ",", "ABS1", ",", "LL", ",", "LL1", ",", "Midpoints", ",", 
     "Midpoints1", ",", "cluster", ",", "cluster1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"list", "=", 
       RowBox[{"Lev4DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list1", "=", 
       RowBox[{"Lev4DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list3", "=", 
       RowBox[{"Lev3DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list4", "=", 
       RowBox[{"Lev3DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"EIT", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS", "=", 
       RowBox[{
        RowBox[{"list1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list", ",", "EIT"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"EIT1", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS1", "=", 
       RowBox[{
        RowBox[{"list4", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list3", ",", "EIT1"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"LL", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"EIT", "-", "ABS"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Midpoints", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"list", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"EIT", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL", ")"}]}], "-", 
            RowBox[{"LL", "/", "50"}]}], "<", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "<", 
           RowBox[{"EIT", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL", ")"}]}], "+", 
            RowBox[{"LL", "/", "50"}]}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cluster", "=", 
       RowBox[{"Gather", "[", 
        RowBox[{"Midpoints", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "0.004"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FvP4", "[", "\[Gamma]", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"FvP4", "[", "\[Gamma]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1000", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}]}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"LL1", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"EIT1", "-", "ABS1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Midpoints1", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"list3", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"EIT1", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL1", ")"}]}], "-", 
            RowBox[{"LL1", "/", "50"}]}], "<", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "<", 
           RowBox[{"EIT1", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL1", ")"}]}], "+", 
            RowBox[{"LL1", "/", "50"}]}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cluster1", "=", 
       RowBox[{"Gather", "[", 
        RowBox[{"Midpoints1", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "0.003"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FvP3", "[", "\[Gamma]", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"FvP3", "[", "\[Gamma]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1000", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster1", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster1", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}]}]}], 
          "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "25", ",", "200", ",", "25"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.765829089641389*^9, 3.7658292318963723`*^9}, {
   3.7658292853196664`*^9, 3.7658292871639733`*^9}, {3.7658293320655184`*^9, 
   3.7658294847660823`*^9}, {3.765829757651656*^9, 3.7658297653284125`*^9}, {
   3.7658299219744377`*^9, 3.7658299667544694`*^9}, {3.7658300840041547`*^9, 
   3.7658301261594133`*^9}, {3.765830210826744*^9, 3.7658303345335846`*^9}, {
   3.7658304859698343`*^9, 3.7658305295086613`*^9}, {3.765830564361416*^9, 
   3.7658305952136946`*^9}, {3.7658314187015557`*^9, 3.765831433576153*^9}, 
   3.765831528415668*^9, {3.7658330278595476`*^9, 3.765833421555685*^9}, {
   3.765833482366448*^9, 3.765833487516837*^9}, {3.7658335344874315`*^9, 
   3.7658336014185624`*^9}, {3.765833726869643*^9, 3.7658337287345467`*^9}, {
   3.7658337809291964`*^9, 3.7658337844539747`*^9}, {3.7658339867015486`*^9, 
   3.765833987029645*^9}, {3.7658875912324424`*^9, 3.7658875942033095`*^9}, {
   3.7658878566825867`*^9, 3.765887859120116*^9}, {3.7658883209717026`*^9, 
   3.765888321393361*^9}, {3.7658886313160963`*^9, 3.76588863955219*^9}, {
   3.765888683584565*^9, 3.765888717125509*^9}, {3.7658901003241773`*^9, 
   3.7658901056742954`*^9}, {3.7658901775747766`*^9, 
   3.7658902199436054`*^9}, {3.7658902603967047`*^9, 3.765890263600562*^9}, {
   3.7658903271765995`*^9, 3.7658903348457775`*^9}, {3.7658904879414234`*^9, 
   3.765890488140133*^9}, {3.765891169604516*^9, 3.7658912150429063`*^9}, {
   3.7658912562598457`*^9, 3.765891256390416*^9}, {3.765891286498804*^9, 
   3.765891301743389*^9}, {3.7658914098999715`*^9, 3.765891410009363*^9}, {
   3.7658914578214293`*^9, 3.765891489752589*^9}, {3.765891761734769*^9, 
   3.7658917627922497`*^9}, {3.765891918006867*^9, 3.765891918277218*^9}, {
   3.7658920127669735`*^9, 3.765892016642531*^9}, {3.7658920630018845`*^9, 
   3.7658920742799325`*^9}},
 CellLabel->
  "In[679]:=",ExpressionUUID->"17276ecc-5a2d-423f-b136-51092b31672e"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0031799999999999997`\\\"}], \\\",\\\", \
\\\"0.00001293675130929418`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.00317`\\\"}], \\\",\\\", \
\\\"0.000012936410088192421`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0031599999999999996`\\\"}], \\\",\\\", \
\\\"0.000012936070136389363`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.00315`\\\"}], \\\",\\\", \
\\\"0.000012935731457805562`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0031399999999999996`\\\"}], \\\",\\\", \
\\\"0.000012935394056349602`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0031300000000000004`\\\"}], \\\",\\\", \
\\\"0.000012935057935917884`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0031200000000000004`\\\"}], \\\",\\\", \
\\\"0.000012934723100394305`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0031100000000000004`\\\"}], \\\",\\\", \
\\\"0.000012934389553650038`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0031000000000000003`\\\"}], \\\",\\\", \
\\\"0.000012934057299543237`\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \
\\\"}\\\"}]\\) does not exist.\"", 2, 682, 82, 20755144443664380946, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.812149865271074*^9},
 CellLabel->
  "During evaluation of \
In[679]:=",ExpressionUUID->"2d1c5735-5bcd-47b5-88ea-7a862cab7fb6"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{RowBox[{\\\"{\\\", RowBox[{\
\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0031799999999999997`\\\"}], \\\",\\\", \
\\\"0.00001293675130929418`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.00317`\\\"}], \\\",\\\", \
\\\"0.000012936410088192421`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0031599999999999996`\\\"}], \\\",\\\", \
\\\"0.000012936070136389363`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.00315`\\\"}], \\\",\\\", \
\\\"0.000012935731457805562`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0031399999999999996`\\\"}], \\\",\\\", \
\\\"0.000012935394056349602`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0031300000000000004`\\\"}], \\\",\\\", \
\\\"0.000012935057935917884`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0031200000000000004`\\\"}], \\\",\\\", \
\\\"0.000012934723100394305`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0031100000000000004`\\\"}], \\\",\\\", \
\\\"0.000012934389553650038`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0031000000000000003`\\\"}], \\\",\\\", \
\\\"0.000012934057299543237`\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\"}\\\"}], \
\\\"\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\
\"\[RightDoubleBracket]\\\"}]\\) is longer than depth of object.\"", 2, 682, 
   83, 20755144443664380946, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8121498652860875`*^9},
 CellLabel->
  "During evaluation of \
In[679]:=",ExpressionUUID->"4e771856-698a-4d7e-82b7-f2a5b5ffb6e4"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.81214988706285*^9},
 CellLabel->
  "Out[683]=",ExpressionUUID->"cbf44521-998f-45ee-a8b8-db84b0fc4cd3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FvP4", "[", "\[Gamma]", "]"}], ",", 
     RowBox[{"FvP3", "[", "\[Gamma]", "]"}]}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "40", "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"legend", ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "0.5"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Blue"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Black", ",", 
        "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Power (mW)\>\"", ",", "50", ",", "Black"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<FWHM (MHz) \>\"", ",", "50", ",", "Black"}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "60"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.765829631536768*^9, 3.765829632743741*^9}, {
   3.7658296806517997`*^9, 3.765829681665415*^9}, {3.7658297444089584`*^9, 
   3.7658297536539*^9}, {3.7658301588193398`*^9, 3.76583016469881*^9}, {
   3.7658304774870143`*^9, 3.7658304776901264`*^9}, {3.7658305163681355`*^9, 
   3.7658305187534957`*^9}, {3.7658332233088727`*^9, 
   3.7658332277551217`*^9}, {3.765833658359909*^9, 3.765833667860331*^9}, {
   3.765833948532319*^9, 3.765833948907303*^9}, {3.76583398941004*^9, 
   3.765833989738138*^9}, {3.765888607117876*^9, 3.7658886114194965`*^9}, {
   3.7658886675472775`*^9, 3.7658886677191124`*^9}, {3.765888736628761*^9, 
   3.765888737677676*^9}, {3.765890679588091*^9, 3.765890686818239*^9}, 
   3.7658920854873495`*^9},ExpressionUUID->"42d09854-6b54-4c48-9344-\
38798511d9ef"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
       0.012833333333333334`], AbsoluteThickness[3], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQE/7IN2yLW+vqjiAOHzOEw89FUjhl8DyhdzMDEG
AS0oX87hXSBIgzaUr+xQbMt1fXGBLpSv7iC6zv1h1RU9KF8bol/YAMrXd6gW
ASrYBeU3GDrYgbTHGkL5xg61IPlfML6pw06gbYEzjKB8c4fvGjH9h0yNoeZZ
OvACtduugvE9HexB5slaQ/gHghweVQENNHSEykc61IDtd4HwHeIdgKZ91dDx
gKpPctAECXR4O9xdKJTALpYK1efnAAB1Hkxc
        "]]}, 
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       3], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQE/7GfPBAFlBwifx8GO6/rigr0qUL6Yg1zr68Ad
99SgfDmIfK0GlK/scO4MCGhC+eoOSwpsua4/1oLytR1uLgYJaEP5+g5FQN7i
DToQfoOhww+NmP5DpbpQvrGDFpD7VUMPyjeFmg/jmztoguQz9KHmWTpcB5sP
43s67AI5eIYRhH8gyOFt4A651m4TqHykQ/AOkAIzCN8hHmK/qAVUfZJDG9C7
ck8tIfwHqQ4Pq0TWuR+0hurPdHgHMm+1rQMAWSNbLg==
        "]]}}, {}, {}, {{}, {}}}, InsetBox[
     TemplateBox[{
       StyleBox["\"4 Level\"", 
        RGBColor[
         Rational[2, 3], 0, 0], StripOnInput -> False], 
       StyleBox["\"3 Level\"", 
        RGBColor[0, 0, 1], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontSize -> 45, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[2/3, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.33333333333333337, 0.33333333333333337, \
0.33333333333333337]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}]}], "]"}]& )], 
     Scaled[{0.99, 0.5}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"FWHM (MHz) \"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Power (mW)\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
   FrameTicks->{{True, True}, {True, True}},
   FrameTicksStyle->Directive[40],
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->1020,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 200}, {0, 60}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[
           Rational[2, 3], 0, 0]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQE/7IN2yLW+vqjiAOHzOEw89FUjhl8DyhdzMDEG
AS0oX87hXSBIgzaUr+xQbMt1fXGBLpSv7iC6zv1h1RU9KF8bol/YAMrXd6gW
ASrYBeU3GDrYgbTHGkL5xg61IPlfML6pw06gbYEzjKB8c4fvGjH9h0yNoeZZ
OvACtduugvE9HexB5slaQ/gHghweVQENNHSEykc61IDtd4HwHeIdgKZ91dDx
gKpPctAECXR4O9xdKJTALpYK1efnAAB1Hkxc
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQE/7GfPBAFlBwifx8GO6/rigr0qUL6Yg1zr68Ad
99SgfDmIfK0GlK/scO4MCGhC+eoOSwpsua4/1oLytR1uLgYJaEP5+g5FQN7i
DToQfoOhww+NmP5DpbpQvrGDFpD7VUMPyjeFmg/jmztoguQz9KHmWTpcB5sP
43s67AI5eIYRhH8gyOFt4A651m4TqHykQ/AOkAIzCN8hHmK/qAVUfZJDG9C7
ck8tIfwHqQ4Pq0TWuR+0hurPdHgHMm+1rQMAWSNbLg==
          "]]}}}, {}, {}, {{}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      AxesOrigin -> {0, 0}, PlotRange -> {{0, 200}, {0, 60}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {False, False}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["FWHM (MHz) ", 50, 
          GrayLevel[0]], None}, {
         Style["Power (mW)", 50, 
          GrayLevel[0]], None}}, FrameTicks -> {{True, True}, {True, True}}, 
      FrameTicksStyle -> Directive[40], GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 200}, {0, 60}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[
          Rational[2, 3], 0, 0], 
         AbsoluteThickness[10]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[10]], 
        Directive[{
          RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
          Dashing[{Small, Small}]}, 
         AbsoluteThickness[10]]}, {
        Style["4 Level", 
         RGBColor[
          Rational[2, 3], 0, 0]], 
        Style["3 Level", 
         RGBColor[0, 0, 1]]}, Joined -> {True, True}, 
       LabelStyle -> {FontSize -> 45}, LegendFunction -> "Frame", 
       LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       LegendMarkerSize -> Large]], {Right, 0.5}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7658291811412697`*^9, 3.765829199257653*^9}, {
   3.765829647521124*^9, 3.7658296819967103`*^9}, {3.7658297451569653`*^9, 
   3.7658297539095774`*^9}, 3.7658298107230415`*^9, 3.765829904553975*^9, 
   3.765830181677425*^9, 3.7658303639720573`*^9, 3.7658304779573884`*^9, 
   3.765830613439003*^9, 3.765833668627305*^9, 3.7658337600003853`*^9, {
   3.765833940910299*^9, 3.765833949126031*^9}, 3.7658876124645996`*^9, 
   3.7658876940451612`*^9, 3.765887939890687*^9, 3.7658884040284977`*^9, {
   3.7658886075554547`*^9, 3.7658886116382346`*^9}, {3.7658886655170193`*^9, 
   3.765888667975294*^9}, 3.7658889032126093`*^9, {3.765890657820629*^9, 
   3.7658906870213256`*^9}, 3.765891436272681*^9, {3.7658918401042566`*^9, 
   3.76589184507544*^9}, 3.7658920230455074`*^9, 
   3.765892120921008*^9},ExpressionUUID->"9e4a30bc-7540-46c1-a370-\
ca5a07c86ef4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FWHM vs dec", "Chapter",
 CellChangeTimes->{{3.7658313584556675`*^9, 3.7658313620823646`*^9}, {
  3.765890561465041*^9, 3.765890562041808*^9}, {3.76589210910664*^9, 
  3.7658921148564157`*^9}},ExpressionUUID->"b8f27c2a-2665-4699-a9c1-\
cffa30f0c716"],

Cell[CellGroupData[{

Cell["p=0", "Subchapter",
 CellChangeTimes->{{3.7658297991029167`*^9, 3.7658298012631054`*^9}, 
   3.765829915027057*^9, {3.7658305440638323`*^9, 3.7658305445959687`*^9}, {
   3.76583059158514*^9, 3.7658305925543447`*^9}, {3.7658314166089573`*^9, 
   3.7658314170147433`*^9}, 3.7658921192788177`*^9, 
   3.765892189663393*^9},ExpressionUUID->"2cae0b24-1eeb-425d-bd64-\
d3df40fd2822"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Fv\[Gamma]4", "[", "p", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{
   RowBox[{"Fv\[Gamma]3", "[", "p", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"Power", "::", "infy"}], "]"}], ";", 
   RowBox[{"Off", "[", 
    RowBox[{"Infinity", "::", "indet"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "list", ",", "list1", ",", "list3", ",", "list4", ",", "EIT", ",", "ABS", 
     ",", "EIT1", ",", "ABS1", ",", "LL", ",", "LL1", ",", "Midpoints", ",", 
     "Midpoints1", ",", "cluster", ",", "cluster1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"list", "=", 
       RowBox[{"Lev4DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list1", "=", 
       RowBox[{"Lev4DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list3", "=", 
       RowBox[{"Lev3DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list4", "=", 
       RowBox[{"Lev3DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"EIT", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS", "=", 
       RowBox[{
        RowBox[{"list1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list", ",", "EIT"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"EIT1", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS1", "=", 
       RowBox[{
        RowBox[{"list4", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list3", ",", "EIT1"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"LL", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"EIT", "-", "ABS"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Midpoints", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"list", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"EIT", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL", ")"}]}], "-", 
            RowBox[{"LL", "/", "50"}]}], "<", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "<", 
           RowBox[{"EIT", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL", ")"}]}], "+", 
            RowBox[{"LL", "/", "50"}]}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cluster", "=", 
       RowBox[{"Gather", "[", 
        RowBox[{"Midpoints", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "0.002"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fv\[Gamma]4", "[", "p", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Fv\[Gamma]4", "[", "p", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]", ",", 
           RowBox[{"1000", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}]}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"LL1", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"EIT1", "-", "ABS1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Midpoints1", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"list3", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"EIT1", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL1", ")"}]}], "-", 
            RowBox[{"LL1", "/", "50"}]}], "<", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "<", 
           RowBox[{"EIT1", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL1", ")"}]}], "+", 
            RowBox[{"LL1", "/", "50"}]}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cluster1", "=", 
       RowBox[{"Gather", "[", 
        RowBox[{"Midpoints1", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "0.001"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fv\[Gamma]3", "[", "p", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Fv\[Gamma]3", "[", "p", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]", ",", 
           RowBox[{"1000", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster1", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster1", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}]}]}], 
          "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0", ",", "10", ",", "1"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.765829089641389*^9, 3.7658292318963723`*^9}, {
   3.7658292853196664`*^9, 3.7658292871639733`*^9}, {3.7658293320655184`*^9, 
   3.7658294847660823`*^9}, {3.765829757651656*^9, 3.7658297653284125`*^9}, {
   3.7658299219744377`*^9, 3.7658299667544694`*^9}, {3.7658300840041547`*^9, 
   3.7658301261594133`*^9}, {3.765830210826744*^9, 3.7658303345335846`*^9}, {
   3.7658304859698343`*^9, 3.7658305295086613`*^9}, {3.765830564361416*^9, 
   3.7658305952136946`*^9}, {3.7658314187015557`*^9, 3.765831433576153*^9}, 
   3.765831528415668*^9, {3.7658330278595476`*^9, 3.765833421555685*^9}, {
   3.765833482366448*^9, 3.765833487516837*^9}, {3.7658335344874315`*^9, 
   3.7658336014185624`*^9}, {3.765833726869643*^9, 3.7658337287345467`*^9}, {
   3.7658337809291964`*^9, 3.7658337844539747`*^9}, {3.7658339867015486`*^9, 
   3.765833987029645*^9}, {3.7658875912324424`*^9, 3.7658875942033095`*^9}, {
   3.7658878566825867`*^9, 3.765887859120116*^9}, {3.7658883209717026`*^9, 
   3.765888321393361*^9}, {3.7658886313160963`*^9, 3.76588863955219*^9}, {
   3.765888683584565*^9, 3.765888717125509*^9}, {3.7658901003241773`*^9, 
   3.7658901056742954`*^9}, {3.7658901775747766`*^9, 
   3.7658902199436054`*^9}, {3.7658902603967047`*^9, 3.765890263600562*^9}, {
   3.7658903271765995`*^9, 3.7658903348457775`*^9}, {3.7658904879414234`*^9, 
   3.765890488140133*^9}, {3.7658905862585063`*^9, 3.765890608764577*^9}, {
   3.765890648187286*^9, 3.765890660073821*^9}, {3.7658906934800196`*^9, 
   3.7658907141689615`*^9}, {3.765890862627528*^9, 3.7658908654726653`*^9}, {
   3.765890902187481*^9, 3.7658909739793215`*^9}, {3.7658910201655784`*^9, 
   3.765891043056666*^9}, {3.7658910835439157`*^9, 3.7658910836376724`*^9}, {
   3.7658911446628666`*^9, 3.765891153082429*^9}, {3.765892190434164*^9, 
   3.7658921916345873`*^9}, 
   3.7658922627900124`*^9},ExpressionUUID->"e251eeec-dc07-47b9-aa56-\
ed4bd660382e"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.765891150441553*^9, 3.7658922592576203`*^9, 
  3.765892293849976*^9, 
  3.765892696770438*^9},ExpressionUUID->"feab2f9b-b0c1-4fa2-af6e-\
dc64e65415ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Fv\[Gamma]4", "[", "p", "]"}], ",", 
     RowBox[{"Fv\[Gamma]3", "[", "p", "]"}]}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "40", "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"legend", ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "0.4"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Blue"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Black", ",", 
        "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Decoherence \[Gamma][MHz]\>\"", ",", "50", ",", "Black"}],
        "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<FWHM (MHz) \>\"", ",", "50", ",", "Black"}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "25"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.765829631536768*^9, 3.765829632743741*^9}, {
   3.7658296806517997`*^9, 3.765829681665415*^9}, {3.7658297444089584`*^9, 
   3.7658297536539*^9}, {3.7658301588193398`*^9, 3.76583016469881*^9}, {
   3.7658304774870143`*^9, 3.7658304776901264`*^9}, {3.7658305163681355`*^9, 
   3.7658305187534957`*^9}, {3.7658332233088727`*^9, 
   3.7658332277551217`*^9}, {3.765833658359909*^9, 3.765833667860331*^9}, {
   3.765833948532319*^9, 3.765833948907303*^9}, {3.76583398941004*^9, 
   3.765833989738138*^9}, {3.765888607117876*^9, 3.7658886114194965`*^9}, {
   3.7658886675472775`*^9, 3.7658886677191124`*^9}, {3.765888736628761*^9, 
   3.765888737677676*^9}, 3.7658905802894325`*^9, {3.7658906107905655`*^9, 
   3.7658906124021163`*^9}, {3.765890715669695*^9, 3.7658907176291633`*^9}, {
   3.7658910026837683`*^9, 3.7658910027737293`*^9}, {3.765891110895172*^9, 
   3.7658911175836506`*^9}},ExpressionUUID->"eab073cd-2cef-456b-ac61-\
1ce2af4372ab"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, {}, {}, {{}, {}}}, InsetBox[
     TemplateBox[{
       StyleBox["\"4 Level\"", 
        RGBColor[
         Rational[2, 3], 0, 0], StripOnInput -> False], 
       StyleBox["\"3 Level\"", 
        RGBColor[0, 0, 1], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontSize -> 45, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[2/3, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.33333333333333337, 0.33333333333333337, \
0.33333333333333337]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}]}], "]"}]& )], 
     Scaled[{0.99, 0.4}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"FWHM (MHz) \"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Decoherence \[Gamma][MHz]\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
   FrameTicks->{{True, True}, {True, True}},
   FrameTicksStyle->Directive[40],
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->1020,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 1}, {0, 1}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {}, {}, {}, {{}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {0, 1}}, PlotRangeClipping -> 
      True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {False, False}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["FWHM (MHz) ", 50, 
          GrayLevel[0]], None}, {
         Style["Decoherence \[Gamma][MHz]", 50, 
          GrayLevel[0]], None}}, FrameTicks -> {{True, True}, {True, True}}, 
      FrameTicksStyle -> Directive[40], GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0, 1}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[
          Rational[2, 3], 0, 0], 
         AbsoluteThickness[10]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[10]], 
        Directive[{
          RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
          Dashing[{Small, Small}]}, 
         AbsoluteThickness[10]]}, {
        Style["4 Level", 
         RGBColor[
          Rational[2, 3], 0, 0]], 
        Style["3 Level", 
         RGBColor[0, 0, 1]]}, Joined -> {True, True}, 
       LabelStyle -> {FontSize -> 45}, LegendFunction -> "Frame", 
       LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       LegendMarkerSize -> Large]], {Right, 0.4}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7658291811412697`*^9, 3.765829199257653*^9}, {
   3.765829647521124*^9, 3.7658296819967103`*^9}, {3.7658297451569653`*^9, 
   3.7658297539095774`*^9}, 3.7658298107230415`*^9, 3.765829904553975*^9, 
   3.765830181677425*^9, 3.7658303639720573`*^9, 3.7658304779573884`*^9, 
   3.765830613439003*^9, 3.765833668627305*^9, 3.7658337600003853`*^9, {
   3.765833940910299*^9, 3.765833949126031*^9}, 3.7658876124645996`*^9, 
   3.7658876940451612`*^9, 3.765887939890687*^9, 3.7658884040284977`*^9, {
   3.7658886075554547`*^9, 3.7658886116382346`*^9}, {3.7658886655170193`*^9, 
   3.765888667975294*^9}, 3.7658889032126093`*^9, 3.7658910096913195`*^9, 
   3.765891074802879*^9, {3.7658911147705913`*^9, 3.7658911181790495`*^9}, 
   3.7658922637280293`*^9},ExpressionUUID->"e8ad7089-b322-42d1-84b0-\
5fdd705c5d6c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["p=2.5", "Subchapter",
 CellChangeTimes->{{3.7658297991029167`*^9, 3.7658298012631054`*^9}, 
   3.765829915027057*^9, {3.7658305440638323`*^9, 3.7658305445959687`*^9}, {
   3.76583059158514*^9, 3.7658305925543447`*^9}, {3.7658314166089573`*^9, 
   3.7658314170147433`*^9}, 3.7658921192788177`*^9, {3.765892189663393*^9, 
   3.765892202759098*^9}},ExpressionUUID->"727e75ef-27b0-41d5-bf9f-\
72b8284048d2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", "3.99"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Fv\[Gamma]4", "[", "p", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{
   RowBox[{"Fv\[Gamma]3", "[", "p", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"Power", "::", "infy"}], "]"}], ";", 
   RowBox[{"Off", "[", 
    RowBox[{"Infinity", "::", "indet"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "list", ",", "list1", ",", "list3", ",", "list4", ",", "EIT", ",", "ABS", 
     ",", "EIT1", ",", "ABS1", ",", "LL", ",", "LL1", ",", "Midpoints", ",", 
     "Midpoints1", ",", "cluster", ",", "cluster1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"list", "=", 
       RowBox[{"Lev4DoppTestsc4", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list1", "=", 
       RowBox[{"Lev4DoppTestsc4", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list3", "=", 
       RowBox[{"Lev3DoppTestsc4", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list4", "=", 
       RowBox[{"Lev3DoppTestsc4", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"EIT", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS", "=", 
       RowBox[{
        RowBox[{"list1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list", ",", "EIT"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"EIT1", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS1", "=", 
       RowBox[{
        RowBox[{"list4", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list3", ",", "EIT1"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"LL", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"EIT", "-", "ABS"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Midpoints", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"list", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"EIT", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL", ")"}]}], "-", 
            RowBox[{"LL", "/", "50"}]}], "<", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "<", 
           RowBox[{"EIT", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL", ")"}]}], "+", 
            RowBox[{"LL", "/", "50"}]}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cluster", "=", 
       RowBox[{"Gather", "[", 
        RowBox[{"Midpoints", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "0.0015"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fv\[Gamma]4", "[", "p", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Fv\[Gamma]4", "[", "p", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]", ",", 
           RowBox[{"1000", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}]}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"LL1", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"EIT1", "-", "ABS1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Midpoints1", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"list3", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"EIT1", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL1", ")"}]}], "-", 
            RowBox[{"LL1", "/", "50"}]}], "<", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "<", 
           RowBox[{"EIT1", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL1", ")"}]}], "+", 
            RowBox[{"LL1", "/", "50"}]}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cluster1", "=", 
       RowBox[{"Gather", "[", 
        RowBox[{"Midpoints1", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "0.0008"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fv\[Gamma]3", "[", "p", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Fv\[Gamma]3", "[", "p", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]", ",", 
           RowBox[{"1000", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster1", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster1", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}]}]}], 
          "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0", ",", "10", ",", "1"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.765829089641389*^9, 3.7658292318963723`*^9}, {
   3.7658292853196664`*^9, 3.7658292871639733`*^9}, {3.7658293320655184`*^9, 
   3.7658294847660823`*^9}, {3.765829757651656*^9, 3.7658297653284125`*^9}, {
   3.7658299219744377`*^9, 3.7658299667544694`*^9}, {3.7658300840041547`*^9, 
   3.7658301261594133`*^9}, {3.765830210826744*^9, 3.7658303345335846`*^9}, {
   3.7658304859698343`*^9, 3.7658305295086613`*^9}, {3.765830564361416*^9, 
   3.7658305952136946`*^9}, {3.7658314187015557`*^9, 3.765831433576153*^9}, 
   3.765831528415668*^9, {3.7658330278595476`*^9, 3.765833421555685*^9}, {
   3.765833482366448*^9, 3.765833487516837*^9}, {3.7658335344874315`*^9, 
   3.7658336014185624`*^9}, {3.765833726869643*^9, 3.7658337287345467`*^9}, {
   3.7658337809291964`*^9, 3.7658337844539747`*^9}, {3.7658339867015486`*^9, 
   3.765833987029645*^9}, {3.7658875912324424`*^9, 3.7658875942033095`*^9}, {
   3.7658878566825867`*^9, 3.765887859120116*^9}, {3.7658883209717026`*^9, 
   3.765888321393361*^9}, {3.7658886313160963`*^9, 3.76588863955219*^9}, {
   3.765888683584565*^9, 3.765888717125509*^9}, {3.7658901003241773`*^9, 
   3.7658901056742954`*^9}, {3.7658901775747766`*^9, 
   3.7658902199436054`*^9}, {3.7658902603967047`*^9, 3.765890263600562*^9}, {
   3.7658903271765995`*^9, 3.7658903348457775`*^9}, {3.7658904879414234`*^9, 
   3.765890488140133*^9}, {3.7658905862585063`*^9, 3.765890608764577*^9}, {
   3.765890648187286*^9, 3.765890660073821*^9}, {3.7658906934800196`*^9, 
   3.7658907141689615`*^9}, {3.765890862627528*^9, 3.7658908654726653`*^9}, {
   3.765890902187481*^9, 3.7658909739793215`*^9}, {3.7658910201655784`*^9, 
   3.765891043056666*^9}, {3.7658910835439157`*^9, 3.7658910836376724`*^9}, {
   3.7658911446628666`*^9, 3.765891153082429*^9}, {3.765892190434164*^9, 
   3.7658922062522078`*^9}, {3.7658923046009345`*^9, 
   3.7658923058197937`*^9}, {3.765892542370723*^9, 3.765892567216445*^9}, {
   3.7658928422956643`*^9, 3.7658928534216967`*^9}, {3.7658928964037123`*^9, 
   3.7658929153880367`*^9}},ExpressionUUID->"0aae4ecd-c99a-468d-94c2-\
17eb7ecca55c"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0008439999999999994`\\\"}], \\\",\\\", \\\"9.88471003930784`*^-6\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0008420000000000007`\\\"}], \\\",\\\", \
\\\"9.870982119312807`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0008400000000000005`\\\"}], \\\",\\\", \
\\\"9.85722301215861`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0008380000000000003`\\\"}], \\\",\\\", \
\\\"9.84343271024667`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0008359999999999999`\\\"}], \\\",\\\", \
\\\"9.829611207258483`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0008339999999999997`\\\"}], \\\",\\\", \
\\\"9.815758498176311`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0008319999999999995`\\\"}], \\\",\\\", \
\\\"9.80187457930408`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.000830000000000001`\\\"}], \\\",\\\", \
\\\"9.787959448288475`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0008280000000000006`\\\"}], \\\",\\\", \
\\\"9.774013104140242`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0008260000000000005`\\\"}], \\\",\\\", \
\\\"9.760035547255799`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0008240000000000002`\\\"}], \\\",\\\", \
\\\"9.746026779438994`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"29\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0007640000000000009`\\\"}], \\\",\\\", \
\\\"9.311323630282208`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0007620000000000006`\\\"}], \\\",\\\", \
\\\"9.296356981014165`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0007600000000000003`\\\"}], \\\",\\\", \
\\\"9.281360063846289`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.000758`\\\"}], \\\",\\\", \
\\\"9.26633294071871`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0007559999999999998`\\\"}], \\\",\\\", \
\\\"9.251275675851435`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0007539999999999995`\\\"}], \\\",\\\", \
\\\"9.236188335773513`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0007520000000000009`\\\"}], \\\",\\\", \
\\\"9.221070989352431`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.00038000000000000013`\\\", \\\",\\\", \
\\\"9.288928645594159`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.00038200000000000045`\\\", \\\",\\\", \
\\\"9.423744856683812`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.00038400000000000066`\\\", \\\",\\\", \\\"9.55803867470721`*^-6\
\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\"}\\\"}]\\) does not exist.\"", 
   2, 3168, 473, 21505477767879562632, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.765892196058903*^9, 3.765892310116403*^9, 3.7658928598895063`*^9, {
   3.765892906386552*^9, 
   3.7658929204527855`*^9}},ExpressionUUID->"3fa46f9b-2004-4bc8-ba51-\
b3ba0e387607"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{RowBox[{\\\"{\\\", RowBox[{\
\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0008439999999999994`\\\"}], \\\",\\\", \\\"9.88471003930784`*^-6\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0008420000000000007`\\\"}], \\\",\\\", \
\\\"9.870982119312807`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0008400000000000005`\\\"}], \\\",\\\", \
\\\"9.85722301215861`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0008380000000000003`\\\"}], \\\",\\\", \
\\\"9.84343271024667`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0008359999999999999`\\\"}], \\\",\\\", \
\\\"9.829611207258483`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0008339999999999997`\\\"}], \\\",\\\", \
\\\"9.815758498176311`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0008319999999999995`\\\"}], \\\",\\\", \
\\\"9.80187457930408`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.000830000000000001`\\\"}], \\\",\\\", \
\\\"9.787959448288475`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0008280000000000006`\\\"}], \\\",\\\", \
\\\"9.774013104140242`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0008260000000000005`\\\"}], \\\",\\\", \
\\\"9.760035547255799`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0008240000000000002`\\\"}], \\\",\\\", \
\\\"9.746026779438994`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"29\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0007640000000000009`\\\"}], \\\",\\\", \
\\\"9.311323630282208`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0007620000000000006`\\\"}], \\\",\\\", \
\\\"9.296356981014165`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0007600000000000003`\\\"}], \\\",\\\", \
\\\"9.281360063846289`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.000758`\\\"}], \\\",\\\", \
\\\"9.26633294071871`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0007559999999999998`\\\"}], \\\",\\\", \
\\\"9.251275675851435`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0007539999999999995`\\\"}], \\\",\\\", \
\\\"9.236188335773513`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0007520000000000009`\\\"}], \\\",\\\", \
\\\"9.221070989352431`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.00038000000000000013`\\\", \\\",\\\", \
\\\"9.288928645594159`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.00038200000000000045`\\\", \\\",\\\", \
\\\"9.423744856683812`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.00038400000000000066`\\\", \\\",\\\", \\\"9.55803867470721`*^-6\
\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\"}\\\"}], \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\"\
\[RightDoubleBracket]\\\"}]\\) is longer than depth of object.\"", 2, 3168, 
   474, 21505477767879562632, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.765892196058903*^9, 3.765892310116403*^9, 3.7658928598895063`*^9, {
   3.765892906386552*^9, 
   3.765892920499658*^9}},ExpressionUUID->"fef451b8-1ac3-40e4-9be3-\
ba4581029d87"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0002199999999999997`\\\"}], \\\",\\\", \
\\\"9.372901779993192`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.00021799999999999947`\\\"}], \\\",\\\", \
\\\"9.309351095777136`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0002160000000000009`\\\"}], \\\",\\\", \
\\\"9.244491037002441`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.00021400000000000065`\\\"}], \\\",\\\", \
\\\"9.178289421443872`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.00021200000000000038`\\\"}], \\\",\\\", \
\\\"9.110713431897822`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.00021000000000000012`\\\"}], \\\",\\\", \
\\\"9.041729622796095`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.00020799999999999988`\\\"}], \\\",\\\", \
\\\"8.97130392947331`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0002059999999999996`\\\"}], \\\",\\\", \
\\\"8.899401680420588`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.00020399999999999935`\\\"}], \\\",\\\", \
\\\"8.825987612894368`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0002020000000000008`\\\"}], \\\",\\\", \
\\\"8.751025892288145`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.00018400000000000016`\\\", \\\",\\\", \
\\\"8.817614788109744`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.00018600000000000043`\\\", \\\",\\\", \
\\\"8.981622224974969`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.0001880000000000007`\\\", \\\",\\\", \
\\\"9.14726200711387`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.0001899999999999992`\\\", \\\",\\\", \
\\\"9.31450921107429`*^-6\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\"}\\\"}]\\) \
does not exist.\"", 2, 3168, 475, 21505477767879562632, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.765892196058903*^9, 3.765892310116403*^9, 3.7658928598895063`*^9, {
   3.765892906386552*^9, 
   3.7658929205309057`*^9}},ExpressionUUID->"b0d1e29b-8f3d-44e7-9bcc-\
d2eb5ca8e52e"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{RowBox[{\\\"{\\\", RowBox[{\
\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0002199999999999997`\\\"}], \\\",\\\", \
\\\"9.372901779993192`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.00021799999999999947`\\\"}], \\\",\\\", \
\\\"9.309351095777136`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0002160000000000009`\\\"}], \\\",\\\", \
\\\"9.244491037002441`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.00021400000000000065`\\\"}], \\\",\\\", \
\\\"9.178289421443872`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.00021200000000000038`\\\"}], \\\",\\\", \
\\\"9.110713431897822`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.00021000000000000012`\\\"}], \\\",\\\", \
\\\"9.041729622796095`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.00020799999999999988`\\\"}], \\\",\\\", \
\\\"8.97130392947331`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0002059999999999996`\\\"}], \\\",\\\", \
\\\"8.899401680420588`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.00020399999999999935`\\\"}], \\\",\\\", \
\\\"8.825987612894368`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0002020000000000008`\\\"}], \\\",\\\", \
\\\"8.751025892288145`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.00018400000000000016`\\\", \\\",\\\", \
\\\"8.817614788109744`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.00018600000000000043`\\\", \\\",\\\", \
\\\"8.981622224974969`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.0001880000000000007`\\\", \\\",\\\", \
\\\"9.14726200711387`*^-6\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.0001899999999999992`\\\", \\\",\\\", \
\\\"9.31450921107429`*^-6\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\"}\\\"}], \
\\\"\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}], \
\\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\
\"\[RightDoubleBracket]\\\"}]\\) is longer than depth of object.\"", 2, 3168, 
   476, 21505477767879562632, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.765892196058903*^9, 3.765892310116403*^9, 3.7658928598895063`*^9, {
   3.765892906386552*^9, 
   3.76589292054653*^9}},ExpressionUUID->"621676c1-2704-41ed-ac7d-\
3b44841e4cce"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010246`\\\"}], \\\",\\\", \\\"0.000018019966247564644`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010244000000000001`\\\"}], \\\",\\\", \
\\\"0.000018019905788728993`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010242000000000001`\\\"}], \\\",\\\", \
\\\"0.00001801984533271334`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.01024`\\\"}], \\\",\\\", \
\\\"0.000018019784879521847`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.010238`\\\"}], \\\",\\\", \
\\\"0.000018019724429158708`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010235999999999999`\\\"}], \\\",\\\", \\\"0.0000180196639816281`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010234`\\\"}], \\\",\\\", \\\"0.000018019603536934203`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010232`\\\"}], \\\",\\\", \\\"0.000018019543095081214`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010230000000000001`\\\"}], \\\",\\\", \
\\\"0.000018019482656073313`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010228000000000001`\\\"}], \\\",\\\", \
\\\"0.000018019422219914702`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010225999999999999`\\\"}], \\\",\\\", \
\\\"0.000018019361786609573`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.010224`\\\"}], \\\",\\\", \
\\\"0.00001801930135616212`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"27\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.010168`\\\"}], \\\",\\\", \
\\\"0.00001801761048097238`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.010166000000000001`\\\"}], \\\",\\\", \
\\\"0.000018017550135234887`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010164000000000001`\\\"}], \\\",\\\", \
\\\"0.000018017489792482177`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010162000000000001`\\\"}], \\\",\\\", \
\\\"0.000018017429452718518`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010159999999999999`\\\"}], \\\",\\\", \
\\\"0.000018017369115948195`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.010158`\\\"}], \\\",\\\", \
\\\"0.000018017308782175492`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.010156`\\\"}], \\\",\\\", \
\\\"0.000018017248451404687`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.010154`\\\"}], \\\",\\\", \
\\\"0.000018017188123640062`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010152000000000001`\\\"}], \\\",\\\", \
\\\"0.000018017127798885915`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010150000000000001`\\\"}], \\\",\\\", \
\\\"0.000018017067477146534`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.010148`\\\"}], \\\",\\\", \
\\\"0.000018017007158426213`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"141\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\"}\\\"}]\\) does not exist.\"", 2, 3168, 477, 21505477767879562632, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.765892196058903*^9, 3.765892310116403*^9, 
  3.7658928598895063`*^9, 3.765892906386552*^9, 
  3.7658929476060658`*^9},ExpressionUUID->"191c7d36-f6ee-4de3-8a58-\
923ee09d96c8"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 3168, 478, 21505477767879562632, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.765892196058903*^9, 3.765892310116403*^9, 
  3.7658928598895063`*^9, 3.765892906386552*^9, 
  3.765892947637315*^9},ExpressionUUID->"e58168d3-05b2-4630-81d7-\
6fb337db7eca"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{RowBox[{\\\"{\\\", RowBox[{\
\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010246`\\\"}], \\\",\\\", \\\"0.000018019966247564644`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010244000000000001`\\\"}], \\\",\\\", \
\\\"0.000018019905788728993`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010242000000000001`\\\"}], \\\",\\\", \
\\\"0.00001801984533271334`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.01024`\\\"}], \\\",\\\", \
\\\"0.000018019784879521847`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.010238`\\\"}], \\\",\\\", \
\\\"0.000018019724429158708`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010235999999999999`\\\"}], \\\",\\\", \\\"0.0000180196639816281`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010234`\\\"}], \\\",\\\", \\\"0.000018019603536934203`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010232`\\\"}], \\\",\\\", \\\"0.000018019543095081214`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010230000000000001`\\\"}], \\\",\\\", \
\\\"0.000018019482656073313`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010228000000000001`\\\"}], \\\",\\\", \
\\\"0.000018019422219914702`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010225999999999999`\\\"}], \\\",\\\", \
\\\"0.000018019361786609573`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.010224`\\\"}], \\\",\\\", \
\\\"0.00001801930135616212`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"27\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.010168`\\\"}], \\\",\\\", \
\\\"0.00001801761048097238`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.010166000000000001`\\\"}], \\\",\\\", \
\\\"0.000018017550135234887`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010164000000000001`\\\"}], \\\",\\\", \
\\\"0.000018017489792482177`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010162000000000001`\\\"}], \\\",\\\", \
\\\"0.000018017429452718518`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010159999999999999`\\\"}], \\\",\\\", \
\\\"0.000018017369115948195`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.010158`\\\"}], \\\",\\\", \
\\\"0.000018017308782175492`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.010156`\\\"}], \\\",\\\", \
\\\"0.000018017248451404687`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.010154`\\\"}], \\\",\\\", \
\\\"0.000018017188123640062`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010152000000000001`\\\"}], \\\",\\\", \
\\\"0.000018017127798885915`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.010150000000000001`\\\"}], \\\",\\\", \
\\\"0.000018017067477146534`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.010148`\\\"}], \\\",\\\", \
\\\"0.000018017007158426213`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"141\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"All\\\", \\\",\\\", \\\"1\\\"}], \
\\\"\[RightDoubleBracket]\\\"}]\\) is longer than depth of object.\"", 2, 
   3168, 479, 21505477767879562632, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.765892196058903*^9, 3.765892310116403*^9, 
  3.7658928598895063`*^9, 3.765892906386552*^9, 
  3.7658929476622877`*^9},ExpressionUUID->"7a41b0a8-80db-4d0a-b9b4-\
d3955385eb04"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 3168, 480, 21505477767879562632, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.765892196058903*^9, 3.765892310116403*^9, 
  3.7658928598895063`*^9, 3.765892906386552*^9, 
  3.7658929476774054`*^9},ExpressionUUID->"fc6936b3-5ffe-4048-9abf-\
e21c8bc77696"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Fv\[Gamma]4", "[", "p", "]"}], ",", 
     RowBox[{"Fv\[Gamma]3", "[", "p", "]"}]}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "40", "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"legend", ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "0.4"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Blue"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Black", ",", 
        "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Decoherence \[Gamma][MHz]\>\"", ",", "50", ",", "Black"}],
        "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<FWHM (MHz) \>\"", ",", "50", ",", "Black"}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "25"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.765829631536768*^9, 3.765829632743741*^9}, {
   3.7658296806517997`*^9, 3.765829681665415*^9}, {3.7658297444089584`*^9, 
   3.7658297536539*^9}, {3.7658301588193398`*^9, 3.76583016469881*^9}, {
   3.7658304774870143`*^9, 3.7658304776901264`*^9}, {3.7658305163681355`*^9, 
   3.7658305187534957`*^9}, {3.7658332233088727`*^9, 
   3.7658332277551217`*^9}, {3.765833658359909*^9, 3.765833667860331*^9}, {
   3.765833948532319*^9, 3.765833948907303*^9}, {3.76583398941004*^9, 
   3.765833989738138*^9}, {3.765888607117876*^9, 3.7658886114194965`*^9}, {
   3.7658886675472775`*^9, 3.7658886677191124`*^9}, {3.765888736628761*^9, 
   3.765888737677676*^9}, 3.7658905802894325`*^9, {3.7658906107905655`*^9, 
   3.7658906124021163`*^9}, {3.765890715669695*^9, 3.7658907176291633`*^9}, {
   3.7658910026837683`*^9, 3.7658910027737293`*^9}, {3.765891110895172*^9, 
   3.7658911175836506`*^9}},ExpressionUUID->"3c348dfe-93b1-4ad5-97c6-\
97db5d01698a"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
       0.007333333333333334], AbsoluteThickness[3], 
       LineBox[{{1., 3.564}, {2., 5.7490000000000006`}, {3., 
        7.750000000000002}, {4., 9.558}, {5., 11.191000000000003`}, {6., 
        12.687000000000005`}, {7., 14.079999999999998`}, {8., 
        15.411000000000003`}, {9., 16.728}, {10., 18.087000000000003`}}]}, 
      {RGBColor[0, 0, 1], PointSize[0.007333333333333334], AbsoluteThickness[
       3], LineBox[{{1., 3.068}, {2., 5.292000000000001}, {3., 
        7.082999999999998}, {4., 8.552000000000001}, {5., 
        9.805000000000001}, {6., 10.94}, {7., 12.048}, {8., 
        13.264000000000003`}, {9., 
        15.008000000000001`}}]}}, {}, {}, {{}, {}}}, InsetBox[
     TemplateBox[{
       StyleBox["\"4 Level\"", 
        RGBColor[
         Rational[2, 3], 0, 0], StripOnInput -> False], 
       StyleBox["\"3 Level\"", 
        RGBColor[0, 0, 1], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontSize -> 45, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[2/3, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.33333333333333337, 0.33333333333333337, \
0.33333333333333337]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}]}], "]"}]& )], 
     Scaled[{0.99, 0.4}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"FWHM (MHz) \"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Decoherence \[Gamma][MHz]\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
   FrameTicks->{{True, True}, {True, True}},
   FrameTicksStyle->Directive[40],
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->1020,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 10}, {0, 25}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[3], 
          RGBColor[
           Rational[2, 3], 0, 0]], 
         Line[{{1., 3.564}, {2., 5.7490000000000006`}, {3., 
          7.750000000000002}, {4., 9.558}, {5., 11.191000000000003`}, {6., 
          12.687000000000005`}, {7., 14.079999999999998`}, {8., 
          15.411000000000003`}, {9., 16.728}, {10., 18.087000000000003`}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 1]], 
         Line[{{1., 3.068}, {2., 5.292000000000001}, {3., 
          7.082999999999998}, {4., 8.552000000000001}, {5., 
          9.805000000000001}, {6., 10.94}, {7., 12.048}, {8., 
          13.264000000000003`}, {9., 
          15.008000000000001`}}]}}}, {}, {}, {{}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      AxesOrigin -> {0, 0}, PlotRange -> {{0, 10}, {0, 25}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {False, False}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["FWHM (MHz) ", 50, 
          GrayLevel[0]], None}, {
         Style["Decoherence \[Gamma][MHz]", 50, 
          GrayLevel[0]], None}}, FrameTicks -> {{True, True}, {True, True}}, 
      FrameTicksStyle -> Directive[40], GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 10}, {0, 25}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[
          Rational[2, 3], 0, 0], 
         AbsoluteThickness[10]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[10]], 
        Directive[{
          RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
          Dashing[{Small, Small}]}, 
         AbsoluteThickness[10]]}, {
        Style["4 Level", 
         RGBColor[
          Rational[2, 3], 0, 0]], 
        Style["3 Level", 
         RGBColor[0, 0, 1]]}, Joined -> {True, True}, 
       LabelStyle -> {FontSize -> 45}, LegendFunction -> "Frame", 
       LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       LegendMarkerSize -> Large]], {Right, 0.4}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7658291811412697`*^9, 3.765829199257653*^9}, {
   3.765829647521124*^9, 3.7658296819967103`*^9}, {3.7658297451569653`*^9, 
   3.7658297539095774`*^9}, 3.7658298107230415`*^9, 3.765829904553975*^9, 
   3.765830181677425*^9, 3.7658303639720573`*^9, 3.7658304779573884`*^9, 
   3.765830613439003*^9, 3.765833668627305*^9, 3.7658337600003853`*^9, {
   3.765833940910299*^9, 3.765833949126031*^9}, 3.7658876124645996`*^9, 
   3.7658876940451612`*^9, 3.765887939890687*^9, 3.7658884040284977`*^9, {
   3.7658886075554547`*^9, 3.7658886116382346`*^9}, {3.7658886655170193`*^9, 
   3.765888667975294*^9}, 3.7658889032126093`*^9, 3.7658910096913195`*^9, 
   3.765891074802879*^9, {3.7658911147705913`*^9, 3.7658911181790495`*^9}, 
   3.7658923411996746`*^9, 3.7658928869227047`*^9, 
   3.765892947807453*^9},ExpressionUUID->"94c84974-2dd7-49f8-af59-\
464ff0f40739"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["p=5", "Subchapter",
 CellChangeTimes->{{3.7658297991029167`*^9, 3.7658298012631054`*^9}, 
   3.765829915027057*^9, {3.7658305440638323`*^9, 3.7658305445959687`*^9}, {
   3.76583059158514*^9, 3.7658305925543447`*^9}, {3.7658314166089573`*^9, 
   3.7658314170147433`*^9}, 3.7658921192788177`*^9, 
   3.765892217822795*^9},ExpressionUUID->"22039cbd-f1f7-46f8-9dac-\
7ed28edb9f3e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev4DoppTestsc1", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", 
      "\[CapitalDelta]2", ",", "d31", ",", "d41"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "0.025"}], ",", "0.01", ",", "0.000002"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"omegac2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "/", 
         SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Im", "[", 
           RowBox[{"sd42", "[", 
            RowBox[{
            "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
             ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", 
             "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43",
              ",", "d42"}], "]"}], "]"}], "+", 
          RowBox[{"Im", "[", 
           RowBox[{"sd32", "[", 
            RowBox[{
            "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
             ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", 
             "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43",
              ",", "d32"}], "]"}], "]"}]}], ")"}]}], "\[IndentingNewLine]", 
       "}"}], "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6820777509929857`*^9, 3.682078072258361*^9}, {
   3.6820781686988773`*^9, 3.6820781844017754`*^9}, {3.6820782371557927`*^9, 
   3.6820782387708855`*^9}, {3.6820783386755996`*^9, 
   3.6820783600278206`*^9}, {3.682078390802581*^9, 3.682078409651659*^9}, {
   3.6820785556990128`*^9, 3.6820785577631307`*^9}, {3.682078604887826*^9, 
   3.682078606954944*^9}, 3.682078646275193*^9, 3.6820786817442217`*^9, {
   3.6820787244836664`*^9, 3.6820787256587334`*^9}, {3.682078761002755*^9, 
   3.6820787873862643`*^9}, {3.682078849739831*^9, 3.682078868395898*^9}, {
   3.6820789209479036`*^9, 3.682079036674523*^9}, {3.6820797161803885`*^9, 
   3.6820797163083954`*^9}, {3.6820940847423997`*^9, 3.682094176264634*^9}, {
   3.682100534108282*^9, 3.682100724544174*^9}, {3.682100812826224*^9, 
   3.6821008239058576`*^9}, {3.682100946929894*^9, 3.6821009474969263`*^9}, {
   3.6821010023450637`*^9, 3.6821010049532127`*^9}, {3.682101044296463*^9, 
   3.6821010535839944`*^9}, {3.6821012584737134`*^9, 3.682101261144866*^9}, {
   3.682101316585037*^9, 3.6821013732572784`*^9}, {3.682101414754652*^9, 
   3.6821014312095933`*^9}, {3.6821027458817883`*^9, 
   3.6821029190776944`*^9}, {3.682102981621272*^9, 3.682103063142935*^9}, {
   3.682103152077021*^9, 3.6821031759093847`*^9}, {3.682103228078368*^9, 
   3.682103275783097*^9}, {3.6821033867274427`*^9, 3.6821035279885225`*^9}, {
   3.682103596235426*^9, 3.6821036073870635`*^9}, {3.6821036960071325`*^9, 
   3.6821037775187945`*^9}, {3.6821038740493155`*^9, 
   3.6821038957665577`*^9}, {3.6821039323166485`*^9, 3.68210399843143*^9}, {
   3.6821041484310093`*^9, 3.6821041622938023`*^9}, {3.68210423166377*^9, 
   3.68210423550299*^9}, {3.6821042817676363`*^9, 3.682104281975648*^9}, {
   3.6821044114720545`*^9, 3.6821044835001745`*^9}, {3.6821045457187333`*^9, 
   3.6821045762404785`*^9}, {3.6821046797604*^9, 3.6821047083920374`*^9}, {
   3.682104777109968*^9, 3.682104849645117*^9}, {3.6821057340817037`*^9, 
   3.6821059374293346`*^9}, {3.6821060904780884`*^9, 
   3.6821060922611904`*^9}, {3.6821063118057475`*^9, 3.682106405406101*^9}, 
   3.682106470391818*^9, {3.682106886234603*^9, 3.6821069287290335`*^9}, {
   3.6821069697263784`*^9, 3.6821069703174124`*^9}, {3.6821070483648767`*^9, 
   3.6821070518040733`*^9}, {3.682107090122265*^9, 3.682107090965313*^9}, {
   3.6821071649115424`*^9, 3.6821073019513807`*^9}, {3.68210735596247*^9, 
   3.6821073587036266`*^9}, 3.6821621740358844`*^9, 3.6821627337889004`*^9, {
   3.6821628756690154`*^9, 3.682162909995979*^9}, {3.682163006508499*^9, 
   3.6821630839339275`*^9}, {3.682164960571265*^9, 3.6821650124032297`*^9}, {
   3.6821651296039333`*^9, 3.6821651308580046`*^9}, {3.682165214019761*^9, 
   3.682165249474789*^9}, {3.6821653768800764`*^9, 3.6821654049336815`*^9}, {
   3.6821654393766513`*^9, 3.68216545387048*^9}, 3.6821655581664457`*^9, {
   3.682165620292999*^9, 3.6821656220580997`*^9}, {3.6821656556360207`*^9, 
   3.6821656577791433`*^9}, {3.682165701413639*^9, 3.682165727750145*^9}, {
   3.6821665708493676`*^9, 3.682166634060983*^9}, {3.6821666960175266`*^9, 
   3.6821667514896994`*^9}, 3.682166802514618*^9, {3.6821669432116656`*^9, 
   3.682167060590379*^9}, {3.6821671413930006`*^9, 3.682167202085472*^9}, {
   3.6821673969946203`*^9, 3.6821673999857917`*^9}, {3.6821674579621077`*^9, 
   3.682167471208865*^9}, {3.682167501232582*^9, 3.682167549741357*^9}, {
   3.682167594844937*^9, 3.6821675971000657`*^9}, {3.6821676294889183`*^9, 
   3.6821676371443563`*^9}, {3.6821676871182146`*^9, 
   3.6821676926285295`*^9}, {3.6821678111603093`*^9, 3.682167849935527*^9}, {
   3.682167892151942*^9, 3.6821679025275354`*^9}, {3.6821680476398354`*^9, 
   3.682168050832018*^9}, {3.6821681112514734`*^9, 3.6821681135776067`*^9}, {
   3.6821681662336187`*^9, 3.6821681808154526`*^9}, {3.6821682156534452`*^9, 
   3.682168310363862*^9}, {3.682178802064953*^9, 3.6821788574731226`*^9}, {
   3.6821797845176063`*^9, 3.6821798678863745`*^9}, {3.682179924646621*^9, 
   3.682179933998156*^9}, 3.6821800382591195`*^9, {3.682180103785867*^9, 
   3.6821801191557465`*^9}, {3.6821803064124565`*^9, 3.682180320525264*^9}, {
   3.682180376454463*^9, 3.6821803814617496`*^9}, {3.6821832402242613`*^9, 
   3.682183284751808*^9}, {3.682183418403453*^9, 3.6821834209866004`*^9}, {
   3.682340380078147*^9, 3.682340410220871*^9}, {3.682340522181275*^9, 
   3.682340537612157*^9}, {3.6823406550578747`*^9, 3.682340655896923*^9}, {
   3.682340692157997*^9, 3.68234069326906*^9}, {3.682345730917197*^9, 
   3.682345731045205*^9}, {3.6823458690981007`*^9, 3.682345919492983*^9}, {
   3.682345967318719*^9, 3.6823459676457376`*^9}, {3.6823463858226557`*^9, 
   3.682346387093728*^9}, 3.6823468661441727`*^9, {3.6823507930227776`*^9, 
   3.6823507938398237`*^9}, {3.6823508346331573`*^9, 3.68235083747932*^9}, 
   3.682354138591133*^9, 3.6823566711479864`*^9, {3.682360931208648*^9, 
   3.682360932023695*^9}, {3.6823611770847116`*^9, 3.682361178779808*^9}, {
   3.682361844153866*^9, 3.682361845208926*^9}, {3.682362187881526*^9, 
   3.682362192368782*^9}, {3.6823622281698303`*^9, 3.6823622290728817`*^9}, {
   3.6824245168725133`*^9, 3.682424594002925*^9}, {3.6824260544974604`*^9, 
   3.682426058127668*^9}, {3.6824261036362705`*^9, 3.682426116397001*^9}, {
   3.682426190238224*^9, 3.682426191247282*^9}, {3.6824263261569986`*^9, 
   3.6824263271250534`*^9}, {3.682426566115723*^9, 3.682426577725387*^9}, {
   3.6824266458332825`*^9, 3.6824266595680685`*^9}, {3.682426696979208*^9, 
   3.6824267107099934`*^9}, {3.682427781573243*^9, 3.6824278113079443`*^9}, {
   3.6824355677005672`*^9, 3.682435631502217*^9}, {3.6824362666165433`*^9, 
   3.682436273352928*^9}, {3.6824396749253745`*^9, 3.6824396816717634`*^9}, {
   3.6824466180411763`*^9, 3.682446638837542*^9}, {3.6824477837793245`*^9, 
   3.682447784026745*^9}, {3.6824486976287394`*^9, 3.6824486988314676`*^9}, {
   3.682448741291876*^9, 3.682448758877056*^9}, {3.682528592516034*^9, 
   3.682528601669776*^9}, {3.6825290670606318`*^9, 3.6825290697308183`*^9}, {
   3.682529366905645*^9, 3.6825294632815933`*^9}, {3.6825295212782946`*^9, 
   3.6825295218262405`*^9}, {3.6825326611473746`*^9, 
   3.6825327653305593`*^9}, {3.68253282920498*^9, 3.6825328354504523`*^9}, {
   3.6825337172886257`*^9, 3.6825337966552057`*^9}, {3.682767727311578*^9, 
   3.6827677341416397`*^9}, {3.6827677784039173`*^9, 
   3.6827677817925434`*^9}, {3.6932553797640305`*^9, 
   3.6932554299337807`*^9}, {3.6932554605179*^9, 3.6932559069187527`*^9}, {
   3.6932561402287693`*^9, 3.6932561722799435`*^9}, {3.6933163942079906`*^9, 
   3.693316415693305*^9}, {3.693316580499305*^9, 3.6933166304990816`*^9}, {
   3.693316760505435*^9, 3.6933167713506746`*^9}, {3.693316885693319*^9, 
   3.693316923395423*^9}, {3.6933172128656282`*^9, 3.693317263746234*^9}, {
   3.693325258387647*^9, 3.693325258903158*^9}, {3.693325769156588*^9, 
   3.6933257999974604`*^9}, {3.693335215842825*^9, 3.6933352602877464`*^9}, {
   3.693335513566686*^9, 3.693335518882057*^9}, 3.6933383532074747`*^9, {
   3.69333844096763*^9, 3.6933384435674295`*^9}, {3.6933998013026257`*^9, 
   3.693399826867744*^9}, {3.693399878173236*^9, 3.6933998820731897`*^9}, {
   3.6933999851766276`*^9, 3.693400021978489*^9}, {3.6934001039998937`*^9, 
   3.693400106015895*^9}, {3.6934016718519135`*^9, 3.6934016749356365`*^9}, {
   3.693401768182933*^9, 3.6934017860664177`*^9}, {3.6934045049723034`*^9, 
   3.693404507408079*^9}, {3.6934045480219707`*^9, 3.693404569296521*^9}, {
   3.693404654068478*^9, 3.6934046767251215`*^9}, 3.6934047114649863`*^9, {
   3.693411486854925*^9, 3.6934115557606277`*^9}, {3.693411611637782*^9, 
   3.69341163689961*^9}, {3.6934117443930483`*^9, 3.6934117581565638`*^9}, {
   3.693412031427684*^9, 3.693412061254629*^9}, {3.6934121007632923`*^9, 
   3.6934121063459177`*^9}, {3.6934121673784485`*^9, 
   3.6934121732938156`*^9}, {3.6934126870207553`*^9, 3.693412687851843*^9}, {
   3.6934127270569134`*^9, 3.693412748633364*^9}, {3.693412788765423*^9, 
   3.6934127889652367`*^9}, {3.693413093699652*^9, 3.6934131049158497`*^9}, {
   3.693413158927167*^9, 3.693413165655781*^9}, {3.6934132892354*^9, 
   3.6934132907125025`*^9}, {3.693413694311676*^9, 3.6934138525544806`*^9}, {
   3.6934139623245473`*^9, 3.6934139741439466`*^9}, {3.6934151889872465`*^9, 
   3.6934151913460665`*^9}, {3.693421812342548*^9, 3.693421814260598*^9}, 
   3.693571210634773*^9, {3.6935730363523593`*^9, 3.693573037920248*^9}, {
   3.6935730980366774`*^9, 3.693573098636371*^9}, {3.6935733964485483`*^9, 
   3.693573406451894*^9}, {3.693573469980172*^9, 3.693573501220932*^9}, {
   3.6935735525801334`*^9, 3.6935736322071934`*^9}, {3.693574441972418*^9, 
   3.693574507219281*^9}, {3.693574541832406*^9, 3.6935745742488327`*^9}, {
   3.693575621329663*^9, 3.693575673978572*^9}, {3.69357673871231*^9, 
   3.6935767415254836`*^9}, {3.6935771676067867`*^9, 
   3.6935771693901434`*^9}, {3.6935774277045565`*^9, 3.693577443913048*^9}, {
   3.6935774788521423`*^9, 3.69357748131384*^9}, {3.6935801882381463`*^9, 
   3.693580202383541*^9}, {3.6935809873145914`*^9, 3.69358098944536*^9}, {
   3.6935872517340436`*^9, 3.6935872545426507`*^9}, {3.693587372831433*^9, 
   3.6935873796980495`*^9}, {3.693587562863904*^9, 3.693587616021948*^9}, {
   3.6935876893495855`*^9, 3.6935876903867693`*^9}, {3.6935878379546204`*^9, 
   3.6935878413010764`*^9}, {3.693588112787511*^9, 3.69358811449063*^9}, {
   3.6935881694755335`*^9, 3.693588171288027*^9}, {3.6935935389237742`*^9, 
   3.693593540345663*^9}, 3.6935935945632477`*^9, {3.6935936258290606`*^9, 
   3.693593626766575*^9}, {3.6935941806328535`*^9, 3.693594207086978*^9}, 
   3.6935946950674806`*^9, {3.6935947327149076`*^9, 3.693594734652423*^9}, {
   3.693594941365797*^9, 3.693594955856461*^9}, {3.6935949870952897`*^9, 
   3.693595006821137*^9}, {3.693595054598051*^9, 3.693595087587389*^9}, {
   3.693595156350831*^9, 3.693595162100931*^9}, {3.693595205375044*^9, 
   3.693595214270155*^9}, {3.6935955401391487`*^9, 3.69359554954937*^9}, {
   3.6935957894002223`*^9, 3.693595793535714*^9}, {3.6935975519334*^9, 
   3.6935975545739965`*^9}, 3.6935978494473696`*^9, 3.6935978853782554`*^9, {
   3.693600107714938*^9, 3.6936001086524925`*^9}, {3.6936001461743183`*^9, 
   3.6936001463930244`*^9}, {3.6936004005973363`*^9, 
   3.6936004140829015`*^9}, {3.693600548133373*^9, 3.69360056949905*^9}, 
   3.6936006120421934`*^9, {3.693600743312659*^9, 3.6936007668870306`*^9}, 
   3.6936593079963093`*^9, {3.6936600641823077`*^9, 3.6936600934684105`*^9}, {
   3.6936606802085075`*^9, 3.6936607260416718`*^9}, 3.693661925629023*^9, {
   3.6936700240275917`*^9, 3.6936700241431427`*^9}, {3.693670312478878*^9, 
   3.693670390281993*^9}, 3.693671577434743*^9, {3.693671658053399*^9, 
   3.69367166553496*^9}, {3.6936857949048443`*^9, 3.693685796574098*^9}, {
   3.6938634331019464`*^9, 3.6938634424293127`*^9}, {3.7021506788025312`*^9, 
   3.7021506844738555`*^9}, {3.7037037148134384`*^9, 
   3.7037037294210167`*^9}, {3.703703915278076*^9, 3.7037039469256473`*^9}, {
   3.703704848274563*^9, 3.7037048678076663`*^9}, {3.7037053637935624`*^9, 
   3.703705368753002*^9}, {3.703847775816551*^9, 3.703847820609113*^9}, {
   3.703849676834283*^9, 3.7038496905620685`*^9}, {3.7040282611457214`*^9, 
   3.7040282642328987`*^9}, {3.704028356338166*^9, 3.7040283566171827`*^9}, {
   3.704028398569582*^9, 3.704028399184617*^9}, {3.704471208248934*^9, 
   3.7044712099760327`*^9}, {3.704471241696847*^9, 3.7044712418798575`*^9}, {
   3.7044719290331607`*^9, 3.7044719302572308`*^9}, {3.7046591737739472`*^9, 
   3.7046591911339397`*^9}, {3.705148359139801*^9, 3.7051483678022966`*^9}, 
   3.7051484133559017`*^9, {3.73756766773046*^9, 3.7375676678554573`*^9}, {
   3.7391166690149665`*^9, 3.7391166877889643`*^9}, 3.7658282742121916`*^9, {
   3.765828806839615*^9, 3.765828816995103*^9}, {3.7658298628464932`*^9, 
   3.765829872598856*^9}, {3.765831890081997*^9, 3.765831893986545*^9}, {
   3.765832009952757*^9, 3.765832011450959*^9}, {3.7658320614405985`*^9, 
   3.7658320749958544`*^9}, {3.765833522198763*^9, 3.7658335223549724`*^9}, 
   3.811634629248603*^9, {3.8116368097658663`*^9, 3.811636833496706*^9}, {
   3.8116373074714084`*^9, 3.811637309740475*^9}, {3.8116377138711634`*^9, 
   3.811637719319523*^9}, 3.811637809932087*^9, {3.811637905898449*^9, 
   3.8116379094807105`*^9}, {3.811637941543541*^9, 3.8116379455087037`*^9}, {
   3.8116379845565004`*^9, 3.81163801162895*^9}, {3.811638459188175*^9, 
   3.8116384683825455`*^9}, {3.811638800224701*^9, 3.8116388028162923`*^9}, {
   3.8116388463514056`*^9, 3.811638910118308*^9}, {3.811639000513261*^9, 
   3.811639029274597*^9}, {3.8121491871462297`*^9, 3.8121491899202986`*^9}, {
   3.8121492243831525`*^9, 3.812149226317074*^9}, {3.8121492968185563`*^9, 
   3.812149297121586*^9}, {3.8121499216518*^9, 3.8121499220251393`*^9}, {
   3.812149956263382*^9, 3.8121499604944367`*^9}, {3.8121502059671583`*^9, 
   3.81215023545543*^9}, {3.8121502728620453`*^9, 3.812150273564683*^9}, {
   3.812150646884626*^9, 3.8121507168106303`*^9}, {3.8121592068908386`*^9, 
   3.812159210384009*^9}, 3.812159473642915*^9, {3.812159527609889*^9, 
   3.812159597593399*^9}, {3.812159694589422*^9, 3.8121596949627614`*^9}, {
   3.812159767015148*^9, 3.8121597933140144`*^9}},
 CellLabel->
  "In[1735]:=",ExpressionUUID->"1caa6406-17a4-4d00-9731-2a42f10ff1ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev3DoppTestsc1", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", 
      "\[CapitalOmega]c1", ",", "\[CapitalOmega]c2", ",", "\[CapitalDelta]2", 
      ",", "d31", ",", "d41"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "0.025"}], ",", "0.01", ",", "0.000002"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"210.923", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}], " ", "+", 
       RowBox[{"2", "Pi", 
        RowBox[{"(", 
         RowBox[{"150.659", "*", 
          RowBox[{"10", "^", "6"}]}], ")"}]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d32", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]c1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]c2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ab", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3e", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", 
                RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",",
                 "u", ",", "Nat", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3a", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", 
                RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",",
                 "u", ",", "Nat", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3e", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}],
                "]"}], "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "/", 
              SuperscriptBox["10", "9"]}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{"sd3a", "[", 
               RowBox[{
               "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}],
                "]"}], "]"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d", "/", 
           SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Im", "[", 
             RowBox[{"sd3a", "[", 
              RowBox[{
              "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
               ",", 
               RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
               "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", ",", 
               "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], "+", 
            RowBox[{"Im", "[", 
             RowBox[{"sd3a", "[", 
              RowBox[{
              "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
               ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
               ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "d32"}], 
              "]"}], "]"}]}], ")"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"d", "/", 
                SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "2"}], "Pi", "*", 
                 RowBox[{"0.0254", "/", 
                  RowBox[{"(", 
                   RowBox[{"2", "wcn"}], ")"}]}], 
                 RowBox[{"(", 
                  RowBox[{"Im", "[", 
                   RowBox[{
                    RowBox[{"sd3a", "[", 
                    RowBox[{
                    "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", 
                    RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                    "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d42"}], "]"}], "+", 
                    RowBox[{"Im", "[", 
                    RowBox[{"sd3a", "[", 
                    RowBox[{
                    "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", "\[CapitalDelta]", ",", 
                    "\[CapitalOmega]c1", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d32"}], "]"}], 
                    "]"}]}]}]}]}]}]}]}]}], ")"}], "]"}], "}"}], "]"}], "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ab", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", 
                 RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                 "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                 ",", "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], "+", 
              RowBox[{"Im", "[", 
               RowBox[{"sd3a", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", "\[Delta]", 
                 ",", "\[CapitalDelta]", ",", "\[CapitalOmega]c1", ",", "c", 
                 ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
                 "d32"}], "]"}], "]"}]}], ")"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", 
                  RowBox[{"sd3a", "[", 
                   RowBox[{
                   "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", 
                    RowBox[{"\[CapitalDelta]", "+", "w43"}], ",", 
                    "\[CapitalOmega]c2", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d42"}], "]"}], "]"}], ")"}]}],
                "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], "Pi", "*", 
                RowBox[{"0.0254", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", "wcn"}], ")"}]}], 
                RowBox[{"(", 
                 RowBox[{"Im", "[", 
                  RowBox[{"sd3a", "[", 
                   RowBox[{
                   "wc", ",", "\[Gamma]21", ",", "\[Gamma]32", ",", 
                    "\[Delta]", ",", "\[CapitalDelta]", ",", 
                    "\[CapitalOmega]c1", ",", "c", ",", "\[HBar]", ",", "e0", 
                    ",", "u", ",", "Nat", ",", "d32"}], "]"}], "]"}], ")"}]}],
                "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.693574788190744*^9, {3.6935755435451756`*^9, 3.693575582040471*^9}, {
   3.693575719373087*^9, 3.693575828170508*^9}, {3.6935759031158037`*^9, 
   3.693575905413637*^9}, {3.6935759486677485`*^9, 3.693576041202098*^9}, {
   3.6935761437267427`*^9, 3.6935761599640436`*^9}, {3.693576280979597*^9, 
   3.6935762915722256`*^9}, 3.6935763650823193`*^9, {3.6935766166108017`*^9, 
   3.693576617710661*^9}, {3.6935766587788343`*^9, 3.6935766997397213`*^9}, {
   3.6935767327434072`*^9, 3.6935767353280163`*^9}, {3.6935770614397907`*^9, 
   3.693577111380499*^9}, {3.693577264038381*^9, 3.693577276563698*^9}, {
   3.693577330659221*^9, 3.693577332711196*^9}, {3.6935775223232965`*^9, 
   3.6935775586215987`*^9}, {3.6935775904422235`*^9, 3.693577620163538*^9}, {
   3.693578143691578*^9, 3.693578187743436*^9}, {3.693580172595014*^9, 
   3.6935801744940414`*^9}, 3.693580206397213*^9, {3.6935809666682715`*^9, 
   3.6935809844621696`*^9}, {3.693587239997185*^9, 3.693587244819771*^9}, {
   3.6935873185607934`*^9, 3.693587346656555*^9}, {3.6935873844809027`*^9, 
   3.693587498669446*^9}, {3.6935876861200137`*^9, 3.693587686887785*^9}, {
   3.6935877665889225`*^9, 3.6935877679419646`*^9}, {3.693587799978722*^9, 
   3.6935878259060593`*^9}, {3.69358810517807*^9, 3.6935881067093134`*^9}, {
   3.693588151162873*^9, 3.6935881531316166`*^9}, {3.693593416940279*^9, 
   3.69359344391139*^9}, 3.6935935341581116`*^9, 3.693593589781909*^9, 
   3.6935936343447647`*^9, {3.693594268366268*^9, 3.6935943106601176`*^9}, {
   3.6935944158405285`*^9, 3.693594434891628*^9}, {3.693594730152413*^9, 
   3.693594830862494*^9}, {3.693594964090908*^9, 3.6935949803452253`*^9}, {
   3.69359509789993*^9, 3.693595114966015*^9}, {3.69359518461521*^9, 
   3.693595187677732*^9}, {3.6935953181170454`*^9, 3.6935954112130437`*^9}, {
   3.69359698702544*^9, 3.6935969883692255`*^9}, {3.693597545480194*^9, 
   3.69359755757405*^9}, {3.69359935066584*^9, 3.6935993518533506`*^9}, 
   3.693660729226142*^9, 3.693661922923174*^9, {3.6936700260265675`*^9, 
   3.693670026110908*^9}, {3.693670398284234*^9, 3.69367040421292*^9}, 
   3.693670528038734*^9, 3.693671581165148*^9, {3.693671654254927*^9, 
   3.693671668387971*^9}, {3.6936857915901566`*^9, 3.693685792605191*^9}, {
   3.6938634485148563`*^9, 3.6938634598476286`*^9}, {3.7037037318693995`*^9, 
   3.703703733997254*^9}, {3.7037039196618567`*^9, 3.703703949933426*^9}, {
   3.7037045228957405`*^9, 3.7037045951683903`*^9}, {3.7037047677119117`*^9, 
   3.703704790639476*^9}, {3.7037053735870123`*^9, 3.703705396434226*^9}, 
   3.703847577970235*^9, {3.7038477340331616`*^9, 3.703847735488245*^9}, {
   3.7038478500247955`*^9, 3.7038479075210843`*^9}, {3.7038496744021444`*^9, 
   3.7038496877069054`*^9}, {3.703968082809718*^9, 3.7039680995366745`*^9}, {
   3.7039681974812765`*^9, 3.703968198736348*^9}, {3.7040283671537848`*^9, 
   3.704028396040437*^9}, {3.704471203890685*^9, 3.7044712055037775`*^9}, {
   3.704471236761565*^9, 3.7044712396487303`*^9}, {3.704471925432955*^9, 
   3.7044719265850205`*^9}, {3.704659141550104*^9, 3.704659170061735*^9}, {
   3.7051463045892878`*^9, 3.705146346168666*^9}, 3.76582826804615*^9, {
   3.765828779166439*^9, 3.765828785294817*^9}, {3.7658289913406277`*^9, 
   3.765828992868369*^9}, {3.765829306375307*^9, 3.765829323044571*^9}, {
   3.7658312282207747`*^9, 3.7658312338378634`*^9}, {3.7658318958012753`*^9, 
   3.7658318988180285`*^9}, {3.7658320027372627`*^9, 3.765832007552581*^9}, {
   3.765832051698292*^9, 3.7658320724088154`*^9}, {3.765833519131132*^9, 
   3.7658335194123445`*^9}, 3.8116346328423347`*^9, 3.811637453745401*^9, {
   3.811637709909558*^9, 3.811637730793969*^9}, 3.8116378123723106`*^9, {
   3.811637898997166*^9, 3.811637913146047*^9}, {3.811637989563058*^9, 
   3.811638014799835*^9}, {3.8116380937478895`*^9, 3.8116380960730057`*^9}, {
   3.8116383176568527`*^9, 3.811638318156307*^9}, {3.811638809380268*^9, 
   3.8116388355996656`*^9}, {3.81163888206332*^9, 3.811638892377698*^9}, {
   3.8121499766521*^9, 3.8121499817056227`*^9}, {3.812150730858946*^9, 
   3.8121508082225866`*^9}, {3.8121592002768364`*^9, 
   3.8121592038080406`*^9}, {3.8121593217310553`*^9, 3.812159367476569*^9}, 
   3.8121594691558423`*^9, {3.81215952447004*^9, 3.812159594554641*^9}, {
   3.8121596898381104`*^9, 3.8121596902434783`*^9}, {3.8121597649762983`*^9, 
   3.8121597961125536`*^9}},
 CellLabel->
  "In[1736]:=",ExpressionUUID->"4174c0b4-eb18-4918-b93c-6eeb5d7cbe64"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"Lev4DoppTestsc1", "[", 
    RowBox[{"50", ",", 
     RowBox[{"p", "/", "1000"}], ",", 
     RowBox[{"1", "/", "1000"}], ",", 
     RowBox[{"\[Gamma]", "*", 
      RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list1", "=", 
   RowBox[{"Lev4DoppTestsc1", "[", 
    RowBox[{"50", ",", 
     RowBox[{"0", "/", "1000"}], ",", 
     RowBox[{"1", "/", "1000"}], ",", 
     RowBox[{"\[Gamma]", "*", 
      RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list3", "=", 
   RowBox[{"Lev3DoppTestsc1", "[", 
    RowBox[{"50", ",", 
     RowBox[{"p", "/", "1000"}], ",", 
     RowBox[{"1", "/", "1000"}], ",", 
     RowBox[{"\[Gamma]", "*", 
      RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list4", "=", 
   RowBox[{"Lev3DoppTestsc1", "[", 
    RowBox[{"50", ",", 
     RowBox[{"0", "/", "1000"}], ",", 
     RowBox[{"1", "/", "1000"}], ",", 
     RowBox[{"\[Gamma]", "*", 
      RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"list", ",", "list1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"list3", ",", "list4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.811638673093065*^9, 3.811638686958429*^9}, {
  3.811638749695236*^9, 3.8116387936195135`*^9}, {3.8116388246581717`*^9, 
  3.8116388249604473`*^9}, {3.8116388651915655`*^9, 3.81163886531668*^9}, {
  3.8116389852797546`*^9, 3.81163898581324*^9}, {3.812149107020366*^9, 
  3.812149110974883*^9}, {3.812149276826297*^9, 3.8121492812660413`*^9}, {
  3.8121493212636023`*^9, 3.8121493213676972`*^9}, {3.812149903654752*^9, 
  3.8121499095988626`*^9}, {3.8121501595252943`*^9, 3.8121501599576883`*^9}, {
  3.8121508213905363`*^9, 3.8121508338078437`*^9}, {3.8121510591399107`*^9, 
  3.8121510594031496`*^9}, {3.812151123628584*^9, 3.8121511238988295`*^9}, {
  3.8121511808504553`*^9, 3.812151181281848*^9}, {3.812157535546816*^9, 
  3.812157539415326*^9}, {3.812159285970603*^9, 3.812159286448036*^9}, {
  3.812159575790613*^9, 3.812159576203988*^9}, {3.812159778405485*^9, 
  3.812159779093109*^9}},
 CellLabel->
  "In[1737]:=",ExpressionUUID->"a38de60b-004c-425d-9468-918cb60ac4cb"],

Cell[BoxData[
 TemplateBox[{
  "General", "ovfl", "\"Overflow occurred in computation.\"", 2, 1738, 301, 
   20755144443664380946, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8121597796376033`*^9, 3.812159800386433*^9}},
 CellLabel->
  "During evaluation of \
In[1737]:=",ExpressionUUID->"9c5d10a2-5df0-4640-9b7a-f1b8420b0b2d"],

Cell[BoxData[
 TemplateBox[{
  "General", "ovfl", "\"Overflow occurred in computation.\"", 2, 1738, 302, 
   20755144443664380946, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8121597796376033`*^9, 3.812159802398258*^9}},
 CellLabel->
  "During evaluation of \
In[1737]:=",ExpressionUUID->"1af83d33-5d69-4a43-9068-6389bf1e1ab2"],

Cell[BoxData[
 TemplateBox[{
  "General", "ovfl", "\"Overflow occurred in computation.\"", 2, 1740, 303, 
   20755144443664380946, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8121597796376033`*^9, 3.812159805726279*^9}},
 CellLabel->
  "During evaluation of \
In[1737]:=",ExpressionUUID->"f100e752-1a0c-443d-8fe7-0519350fdbf1"],

Cell[BoxData[
 TemplateBox[{
  "General", "ovfl", "\"Overflow occurred in computation.\"", 2, 1740, 304, 
   20755144443664380946, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8121597796376033`*^9, 3.8121598064729567`*^9}},
 CellLabel->
  "During evaluation of \
In[1737]:=",ExpressionUUID->"f31a4fe8-6fe9-4eaa-9d24-86d9d70a1415"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
6hz8uJLp31AnnSSsVn9gB/MsvODC+O1ZanIYti4Mvdbbge/3xa6JfXARqmlT
uO57V8QOmDmDQ7itnU7WynRvWA8bJxkMasOlfntqBeDU+JicJy/pZG8PnwUb
/JPWdV4FDlQymJouQr1+XVClvI1OpKImIodg2pVjrLLw79Z/km/gz8HUC3Rc
/wnXqgZYATeLBDw0onX4ERx2QcLqbiudXCi+MpwFvz57Yr0gzKEqF3gblnLN
Gr3RQidGl/bxR8AXTnwvWwYvOVd13xd+brMt4HIznfSy31VxhVdZnNOab6KT
IMXPbZbwKdMybm84a5pupw9XGFILdDB+dudOqcLLdHcnucCq/2TCtsLH9gc4
fW6gEzYZXkFxOFetdps1vLzmeCYPPKvE+ufNc/z7Yj7FRbC+/AHqCSq58mtb
/UQh6vUt16601NOJ4aUSkw/wmFTrIS2YWTvxYzustm75qpo6Otm3d+LME/i6
CLUAkE6IQ9ZsMfx+5c2skmd0IpzReCUNluV9e3YLzPT3ED8dDuIQ2ZX5lE64
zNSTLsPtSxZ2xJJvRfSNnvC6RalNt5/g72ExKnGEz/37FMsP31XxUDGDn0xJ
WVyvpZNys/lnWjD/uLPEUniD1rieIuwwTC0wppPwRQe6pOCywYmSmcd04u+7
xEIIXtIv7+cJp+fKfFgKm73xok44IIyr5Sf+FqBe73jEeQoeZ8/6NgxPt8x2
fazG/SvK4t4Daz9Xv2sJqz+u/dkEx9UGO76uQnwcHPKqhIcr67Ycgq0DPf7m
wMrl1AYGOnl0xck3Ab5aeJDsg//7VTMbCfdmXw+rrkC8eHTJ3x/elNFuoAi/
b7k35wb7JfELFj2ikxsS8v7H4ZZ48wEZOKRk/awBLEq/nZn+kE70zgX4qMNu
1PE9sK+p6p9tcDXVzvcBrp+xnecamGdhgxS+P+vRH8tha2q7XznmB/d+N2a4
kFr+B2v6Kwz/yEe9fm7z0cAyfP6Lk/YfYSMqPSjFeLcQ6O+AU04UD5+D1VYl
mj+Ff9j8KvpeQieWmZEvS+B9Fko+J+CGmffa6TDN1Hfv+2LcT5x3aujwJ8OF
DZgkqrVCMRTeocvc2VmEz6Ogke8Jh+7ff0cfLtu1SfIE/Eot3P55IZ2YtfvG
m8HrlZs27YGPjG/nPgBfkOeaqihAfnVNP1gRfo5vYwfse+vFLylYSJp2OT8f
14Oz7KQQfHLdaz1pWGhgUe9S+KEItcGbTtxYi/X+5qFeF7RExYX/fq6hehg+
Sr2tzcXnFd2/tQfO4fjoxgMbz0omNsEzS9bvvJpDJ52LXbgqYb1FJ+dZ4Bsb
V/rlwAn/suv9sulkzm7DyB34+9To9eksOrmeccc8ElYblzV3h6u/eD7zg68P
Uw0kEI+Ey2Td4IHB8iF7uHzX0QQreFv/34K+TMwHSnbsBvClNyre5rD/spdn
1eCXHYEa7ffo5OS91N6t8JrWJ0sPwgzmnv3i8LnnS6gl0MST1yuPB35Sqx2v
Bp9r9hJYBPNVRdg+TKeTv5Lv/CZyUa+XUw1q6OQi373B93BpIe9kThquf2SX
TjvMmmNSsR5mDnUqqIVNMm4FJ6ViPpk8zl8M30vq0V0FGzRXeKfC0/GifLQU
xPvFvu9i4QN0m15OmBaTpB4C37qelhaWTCeyztKp5+GvV764LIL/BAuwOsBK
IVQDLFz/9hOOJvBVf9fZn4mYf3RF6vfDPRcKnrnB2z4pbFCAZc5NRg7dRbym
lYSuh31dFUxt4SZ9xicBuPmEt2hvAuLh0t69bLAwshcTePmjy8nTORhfFvN5
L+7QSaVJ7NwXuNp0j5c2PPBy8bFumHuhwR6d9K17W/YcPq77nE0F5tBYwfsQ
Lti/rK0sHn+vaIHLfZhJXf/WNti4qKAuDjZUvmGdFUcnghN84lfhlIXjwZB/
t/VeuAj/WGgXTieR+9lfnoL3LrQPQ367/6bUMTh2YTsxnTysuxKgCw8uLC+m
E5uq/q5dsPzC60bkU2JxMpvgkIXyA9/f+9JAYfgVx/2UC/DBPzu6OOD1bN9O
/aBh/rcQkp7NnlT1WrRVzgWOnT/u+x2u/+eOCE0nl7qXvngHC/4qeXIcNusV
WNMKO41PX3sTQyfHmcLOVsMPhqkGwbheSkef5MH/ffITbrlBJ2v8o1ckwkf7
Hw9qwqdqpe2uw9lvWHIfR9PJzD/JogD4X4emhzIsLn6Z6Qys23pFpeQ6vh8J
LX1rOOF5M+sWeOWs821D+Hstd+u9KDo5kzT5RR1WrTJirIGtWPrkZOGo8oUG
5ERktUzAGri/sHs9Pzza+7ZhObw1Z/VYVASdLFP9voIZDsiwKmeH8+VsLX9k
YXwlJQcEXUN8KFbK+ACvuT2oNXMV16Pw3Gg7fBbVvicsJsGj8ASuvX6qe+wK
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
WiZZW2EF62zFfrhNleFR9oBG3nvZxTXB6xXeqCvAEYfYRsvg05sEmXIrsJ79
vbH7Fvxkw8ILH8K/bX3mZZhPhJoRaGQJzzWmM/Bxwf5DArCA9fxhe7iMV0KM
VkYjDWwHinbDSzidvnHA12YSlqrCB6n2oaX4/zc8txOBs6l2IiU0csl5uGQp
vFBeFE4qnWOfWD+uY0SVGynG5xubs+qBk6njR7DMkpH8Bvg7tR2pCPN57/P5
Ingr9XgS3vNf4r4U+DI1Xd2nkepgs5QIuPv943Ez2Gz17HcveHMHa3XTPazP
a+LVreGgl7vOG8AB7mvOGcAtjZf31BYiPpqLaVaA1z1pWaUJt94f418Lez6k
NqzQSNep7XasMKkwvyML68uGZf4QH9dZWZx4MiufRhzr84ffwfb571XF4DiZ
BsUn8P0s4fnkPBpZs+PV6QKY5bb9s1Xwvt9PK5JgsxvpMTF3aSRYMWc6HM5I
+GzJDv947691Eh6P2ygSnksjo93qZw/COy9TG+IQD4kOPNCDqW7Wp+G02LO/
ZeBPIb98f2TTSDsPswo/rB6gqusMX2ec8mCCL/r4sQ9k4X6Zac35Ljau89a9
6pU1/FxJZKAdlnKeT3qTSSOp6w+tJbDfMT0HE/hTWZBZDtxoc37j8ztYDzti
LzFgwYUNtxgPzjE1QbCrGUdlTQaNKFn5j52AK/fsDVeHl8SbbDCDlxnG7b6f
jvl3jtdyK2yl18YjAz8MqbsoCedp8Xdl3MbPW2xXthKeUz2cvg4mpz8PTouO
6+xVuOGadAvradVhnk9w2qZeZR54/mGFzkt4dAO1oR/3i/MilwfwNpHjT1hh
vYwt8elwrGB2dEgajaw9ZFVzBe7jHTL/m0oj8u5On3xhRU454VNw7Ev75Ufh
MHavT8MpWH+O71TaA7exlOQ7plD3F+9BNVh8bup03w0aefK6KUAUPvV7i84R
ODXAK4UDpqo3tV+nkcEZJjIhMq6zapi07IXjdM729sDHP7Mk1ifTSLJM33wD
XNqnb6cHs+XJCxfDS7ouSVVdo5Fn2c6aKTDV3UUFbuaIsYyAs15yVhQk0ciK
qhteXvDvRtNQaTjw9tXLVvCuJ/G7biciXszxy9CHkx9SBxJxv1XqV8vD3yrW
vLuaQCND1bOtgrBmsc0tLlgyOeXrIvj/7YlphFNLem5k3bhO10K7IoznSzdW
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
mvfDV/lWE5oWYv2nJDl2O9z2ParaDLbPSFZcA69p/xRZtSCUrLg1bbM8fLFl
vv1m+Hq7sfME+H0DdwAulKjaHrjEF0X/qkvma8EX+nekNMAnq77n5cwLJUto
sRcl8EtE46pw+tSEL2nwrGfuW1LnhpL4faICEbAzyeK+0SHnjxjM8oULcgcb
ouVDSeN0qxWH4EmZGonSsIq29hZjeC+3W29OKPlT+8dOA05L4g7YIp59fNFr
ATwSP3bYXy6UtH34fmkybBSl/+yfLH5fakHMwET0r4hg6iR8wHxZejPcG1rB
ndAjsX5Tnr6AtUOmyh2BJXyKqtPh0ACTtjYZ9O8VBp+uwy2+V+/Zwpv847vP
w2qn33t+mBVKandX/T4Mnz/OHeDHfBdVPdYMfnPURvj1TIwny25PWQ8vcIqv
1IeHfm+boQQf2/+Vy7hOprS+kBOHn1kr2WrACIYW/pnQx5O0dFbKmoH/d2vN
4s+wo8m9XhVYapuyyis4Z9uPR0lSGE/u/lieBYsYrDw3Dw5LClaLhi10uAQh
oaRBaUAtEE7iykXDKtNWqrnCv7nyUdMRn27TW24JG3LppKdz32coLNWBr3Pp
pabh+m1tUFKGv3PHTSXw/pvs5k+HNbjtp/Bqi7zZwyJ9vBDucZQ44um4L9Pb
4EYuPIVV4j6JVsJLxbgERKFki+a9MY/gsxMkuSUDsbbcNhALvxay+PJODPHm
x4LOi7D8yPW7O2GJjH8N7vDRwaZj5VPwfnIlKnbDhXx5rY3wwcaBx3rw1O59
48hkzC//UlOXwnbttyvU4R0T1CKl4IyWzisZk7Cebg7y/yeM9XrjaIIzEnDo
gWsHbFJ3VOG2KO5HSJJVNZxQldEzB45Z6qabB/982Z8dORHrs5UTlRNgvWfq
PtPgIX8P8RD4CjmtT00IJXUiaQPH4LbcJ2LCcEV89oe98JrMMfW+Ipjv1rIF
m+DAe3qxf4SxHs1cG7MMfpfEJVAMJft+ZfhIw0oJLxEBhpK8zr/WY+ATUZN/
H4BF3KZrfRuP9XrEjqKWcWgfHkMz38AyYeEXd8N76h7258POIXU7a8eiPfqu
q0qE8wNmzjKCn5qxyRQsem5P6wsh9Lf1Wec84T2nY1J0YIe5yRY28N3jXIJW
rIdbnFUM4OGjCzVWw5sdhgVVYSOng0IPxoQSk/C9dTPh6P2p5Ytg9Z0hSYLw
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
jpxfDNd61PwtfUeTKbfCVorBXgctQvLqaLJGUPFLXy7u196Ps+/V4vebFofV
w3k796fFvaVJuHg0rwDevYkr8ECTtyd8O+PgIS6dfg1NarqrwwLg0eP11TT5
tzlsnTPM4x63V+H3nYo+GcHN0oK++yppUqpo478SPjc5aKr5a5qs2+OsNBOe
JzglbnMF2mvr17LhR3xe8UC4Ku8VTYyvvD7UCnPZgFTLaZK9faHIc3jsaEEo
mizo7ExMhW+/XfhZuowmvbzZ2ixsUJbqMekFTY4ufvz+GNxZoDpW4DlN2vzL
3Czh4Iycy33PaBKnrCfCg5XvaC1sL6FJa79y1Dy4/EZx1odi/P4T3+XC8GHW
cNPrpzTpsNV52pWD++VfWVdUhP6T7WpcBT84yRWQpMm9a6ItmfBOl4ZfSQTt
o1XCJRLm29sF3XxCk3iXgN9n4NFviwvQXqQcz9vDK7YeST7/GK//MF1UH67V
7lvrlY/2OPdQmDLsterkS6c8mpivDZkxFZZe/M/KOpcm22pn3fiZzeflyvl3
7XxEE+/K6bLvYatpXMFpvN6YU1EF8B/h0Elrs2kSsWnz7Hj4xpBU1JIsmvh5
+UcGwFo/bi6Vz8T1d1GWdIabufKND9G/x2kyRrAvl84xgyZaM3KEV8JzueMd
D2hyzfvmWWm4qDjzaM993G+x731DWVivP1on0HqPJvUptw60wGPTCtnaNJqc
UCx7/wy+HbdpbtldfD4bs80psP7oF/404S/ZlkvDHcHGOg9SaOJwKE3BA77o
U1+TkEyT3B7PMHN40THrfRFJuN5Xk4c04JcHv/QF36HJeI2NDvLw4b1OF87e
polXluGrsfAU497p7rdoktecrdqZyefd3+R5yyGRJmfCQ65UwDs0hlZZJmC8
Snn5Kx3+sYzbIID+P+JqcRUOXSBirh2H93/QJ+cUrDaTbl8Ri/v7tH+6DVzL
hQcxNKloe+OqC3sKXheRiUb/vDezXBGe8WtO5JQomizll86fBD/qurVI8CZN
boU0nOp9iPX6J+W8/us0GTIzr3oL/36bvrkzkiaPFq9bkAvfKOM2FNLEquW8
ZxSs9aTAuSqCJjt2rXx+Dv6YoTtUfBX9f+8WKUfY505ZSM4V9PfaF/s2w/I3
jWRTL9Mk9crd+yowdzeiw2licmLgtwRsP1o+hCb2Zrd1fmXgfo2mE6HJ8gmP
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
reXjGMz35ZX7yuAvFjNyqgVosqlD4MVdOGAbl6CAIqfn+S1mYQUd7gtPivy3
w+SSB/x8dfLBu8MUWbv52Dcz+KDyst8xQxT58eWL/jp4gnzWxfC/FIn9lZgg
C6dO15gV+Ici9RaZwwLw1glFKad+U0S6WcLsSzzGw+FNGi6DFPlkW3j3OUzz
X5Xb/aLInczHY1LhZaMJjSjS/kDYlIarRh+oUGTSkrjbbrB7lfUZzZ8UOTcU
NLALnvbsy+TlfRRJHXyipw5nceUJ+BTpGtAJlYFNuXQFPyhytWJ640gcnzfA
bV/opcgEk5ULW+GIiCGjkR6KhOyNO/wMVg/x+/SjmyIexbszkuAPvlwCRIr8
tto3cAk+fZx7YEuR/X9y1I/Csk7Tw159o0iPl+VJY7jA+vq8wk6KVCbrP1oF
W5vIP3zYQZHljn790vA//du6d9opsvH8BNWhWNwvzSVvr7dRZNG7RqdmWEc1
Yz/9lSIi6kPxT+EvC9X7z32hyK/TB97fgv1ncRkCKSJ6Um7KRXihmJ7UoVaK
7Bo3d8NhuFTo5e09LRT5PODibgQfGDRas+MTRXLmi8SrwRO4r0+bKfLG7nul
JJzCDacfKbI6UGZoMAb3q66lY3ETRaoOXVFohL8jupJrpEhEs6URgSnSPUGi
gSLuTw56xsMqowUWKGLQWHTDH65K+r34dz1FhqY4kIOwW5RP/vd3FHFcYtyy
BZ4WNm7rpzqK7J14ccwyODPgUuObWopknp0gLwHvOi1+5PlbvB+bN5r90Xxe
/9EIjIAUSTjXZl4PX+XKYdZQpDRfxy0fVufSY1ZTxOhze1A0/J47LlNFkT8V
tdHn4NM699dfrKTIyZ2THu6HZdasqvJ+jfure+mZPvxYOd/WtYIiYSeN6xbD
e+U3/Nj3iiLHy+y+ToZHpj8/Z15OkYciufzeKD4vdsI2iS0vKdIxyWLkDawz
UhPPK6NIXCpPJAf+zLdYofaCIofzDk+9Dp9v5wo4UqRsSqvUGXhB4/5dM0sp
onU2WsYWflb17cukZxThfYyT04UPPHM9LlBCEf2x3+cowCJ5A+N+PqXIi2fe
cybAKfe8r7YXUWThoIns95t83uYEQcWGQry+q9vMSrgrIijnNaGI+LjaaRlw
SMgUg6dPKLIn+OykK/DSc1zBZ1yf2iNCJ+DK47MOJT+myLqC+EEr2M0p9vfN
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
r+DN2aajKm9iPHyxyrkOD0rlTniz1Hmgsi4CPn9mrdqt6yzV5QwasQc2Fb0q
uJzLkpN9i7YV3BLqtDLhGkvPNfzs58D8/R/qIq5i/nTnBQ2FZ3PXHeSgvXZd
SviwFP216ftfvyssLd5gVnQX3rlu/wnPbJbS/E69i4dHW/ye5pLF0pZjop4A
OHNxWM66TJYy7XWk7OFV2sOMzDNYiotjVHTh7yrHqhZdxvudKNKXhSMmjd2s
kc5Sk8jA8jtPzJsndRYtyNL6wjMOZXDNoGnh4y8ifmxP2pYO+/w8P3bEBfx9
a1vvo/D49rnn+88jHurfDHCDbzbm6HSkspRcfz/UELZ7uaD4QwraZ3Dg4Snw
r9IC21fJLF3Z8f5I3xIxL5aMW0qTWEqpajv8CjbgysMlIt70pYVdh2u54+IJ
LBleGBEUAR/kHh+PZ2lD1ESf3fBU7uvkcywxgortljBx28s4lnwMtZ1mw66B
W5eHxrKUc3DxqiHwQK+2N/vOYv5KdC5uWizmpbp779gWg/WAXTWHYBNEe4cz
+Plbm7Hn4OaVwcJV0SylXhv02w8+ajx4snEUS8uqHRps4dl6bKZuJEvj+jY8
mAc/UZVeMuc0xtdXifNS8A7F6GeTT7F01W31oTYD7Nf/v16TJfmZppuewJn/
l9tkqb2zUe8CvPLvrJDe4yy581WkwuFv4iyp1mNorwtSH53hk5/mJ70XsdQl
lXRzMaxde1urWoj5FP7yqDxcXbn0XjGL+HX3mk3PIjFvX3Hx2tsM+kOgo1gD
j7tj2ZQpQHvHOn65At/IrvJO4mO83pyVI4LtUu0GRR7Fehcf47Md/nmm7jT/
CEs3JLMXmMFnRW7KgYdZmlayrWc6rB/25frucJZWiYpz/+mLee/27zHdfIgl
hUmPd9fCQTu6X9iGsWSs7TnrNjzFmesQlg5FXK+LgmndgN7FISyd6kuM8IZd
LPh8rWCWJqlpLFsND1giKad8kKU7zZvEqnCK9ulLE4NYkvyknTgcXjZTXn9U
IObD9wvLmxeKeR8ncQV3WRpKhZ334KNSKg5iP7TfuANnEuBZgzO+NvuyNDan
YlEgXPKTC/gsJa0pfWcHe7TfHPVsP0v5N7YE6MAjmxafu+vDUkFC8gQZOOPl
fbXr+1jqLj2Y064n5lk9tSi86I3x9euXeSn8DbujuL2Iv1/H112AT3DXu3ix
dNaxak84rJX+dvehPSypSapJuMCV8S7/9u9maXiRyvHFsPcpLqFkyVS9SF4e
Hsv3VHTyZOmXfHdK9wL0V6A4Z81OxLNlpXOq4fVefkYmO7AebluSnQ33uv+t
0tvO0kjzVVpCOGbD4c2qHiydSey/sg3WX8Vd6MPSHi0LdRP4rfHJcNmtWF/z
tC4pwoF6E8YN3YL433ND8Y8u+kuN27CyNDP9VfQbuEhxum77ZpY8T0SNvAk7
j79U3OCKfGPb98BTsMRIjfXPXViy6/z4dTeczJWfdMZ693W/nSVszJWj2IT8
QSbl3iz4I3c8xQnzRWX7nMHwEe5xlY1oz4+lxxt0xLyZ3MdXjuh/ycedBfBj
bjg7sDTG2cn6LOxx59XygxtYGn/mWM5+eMQVp7de9liPfexGW8OXUz/scLfD
+L5+Z4sGbBWz/bfdepbMJ94qGAm3i74j48D6u8FK5tN8Me94GHdhMEvZiwLc
HsAaB35nzlvHkpKfYW4iXLkjbMlMa8y3ygSJIHgvd53wWpb2DYiytIfHcuWF
12A8P5keqQNftxj7XWI1S+Ut5m+lYdslZ0O6VqL/Jw6e2j5PzOvRnib92Yql
a3J2zk/gMzPTkt5ZsmSdbpiQBi9UUNWuWMHS36N334bBb6Su3ru/nKXEPS/H
bYIDB+tZ37RgSUrpkNUiePIv7gs9vN4ND8ImwIXtxvvizTDfX5y9LtYW8zZx
t8uasrTaZkhzOfzvJVcRFOPn1JCxGXDS0+fKfsswflbH8viw0V2HGzuN0d9m
D7a5wR+uN5g6G7F0fkHo8aXw4fStL60NkU/UVV5TgFUS2raaLWXpde/1571a
Yt6jU9wDAyzVLlPrqoG38X/y1ZewVBa8QCYHHh4ULKe0GPnx1hpVEXzZa3D6
OAPE01sDTTxgyy2s/vBFLKlrPtxgArdtkC79vRDzWThxlyIsWhXt8F0P6z3T
f7BfE/21bHJr0wKWhn3yFr2GK/RSAl/qoj1dAmKuw15q3ANJWI+uyaachGWV
ss8VzsffP2eQ7gnnjtdRvzoP6+frriwL2GbkncLz2sgvVHg5ynA3d52VFtrL
cGKOBBz9o/i9UJOlAy0hWbUaYp7eZ8s9IRqIRzW+l/LgN7VV/7zVsb4U/02K
hAOq7E5uVcPf9xt3xgtWeMQ98MjSi/Q81gouuON2deVcxN8JrYGzYacrX4yM
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
R5Tu+j21m0+r910y2gRnFP0QynbxSTyk1V0Htsr1nzz0B59WSE04MhJuv/gP
aTqfdHTmpDS86+QdO3dkSXsHnwLklQtuwpoRo8obvvPpvdvQGhFceSRi0/Nv
fBqdV9GyGfYOmPj9cTufMu6E9C6Ex+7hCkrj90tPGCIF33CbIX2llU+HnE5J
Nb/t5NnapyelfEX7mXVNyId7rDS1o7/waaeXgUIEfMboxj3mM15v8LbJ2+CF
CwysD37iI/75TVoCv517r8mrhU+57zzHj4WDppljh8SnPd6mkl/edPImo3ft
P/KpI3jAQIILh3MF6/m0IS3pRyS86c9r5aVNfLrBTG/aAf/r3HRjXiOfBlQe
fWYIJ7d8NJ3ZwKcFk5/dmAAbc9fJ1fNJW7Y7tu01+osrL/+eTxW2f4Puw4e5
cnN1fHrNfnaMgVW44+fv+DTQNldvN/yIexz9Lf5/+03SJvA27uvpN3zy0fvS
LA+P4Larr/nUEr0u7/sr9JdwXOn9V3z6KB/PL4YtQ2Mdbr7kU5Nb8bo4uM1H
sTX9BZ8s5Mom74WPbb8QGP+cT15vc5rMYI1NaqMjaviUvnJf2mS40vraucPV
eP3jx24Rv+zk7TVfqO5XxadFz08olcBjF3MX7vDpi/qXt/FwrpbJKucKPtkW
T43YB9uolL63LudT2BItk+Vwt/yaPWbP0F/6U7qmwtFjXv7TL8P73dic1PUC
/TVo40n1p3yaZiFYUQq/7W1UVCrlU0TSkM5EOKBt29VxT/ikONwpcj+s0Nhu
NLwE40PpuI4lXPD/hV7orxMxVYqwU+mvzd+L+WTYFbiz53kn729RyI+mh3x6
INYbWAYn5Q45/PIBn5zUy6KSYeNLXANiPpgtnOkLN52TSSu8xyemITDXCg6P
OKN79S6fyuKjl0yHlY9OeXSe8PoUBQ97azp5xciGYor4NGbUGotn8LY93IWB
fPL8116SAo9wv+IbUsCnh4muZn7wZXvd4fvy+TT3+OW7K+EVK/Njtt7hU5Rn
id4MuNWIC9B86q29k/GzupMnWvD49so8Pi0MC5tcDqurrlxhdAv//rcCmwpX
TKt5q3MT/76N6fKD947bsHP2DfRfb6njKlhmBHchKZ8uFbynGfC1P+4iqVw+
nXn/UPFXVSdvnfjr5EHX+HTsb1BwOdzV4oWIyqeRRUPfpMLR77gEEO1d5Krl
D+tVBpXXZSMeJR87vAp+83Cgc1UWnxqGsS9mwP63Bd8fZvLJ7fT6Gb8qO3mT
sseE5mXwSaFZvKsczv//wmM+6SVsupEKbzwzKTkxHe3rfPaXH/xXmKR9+hKf
vpemLFoFJ4XOvH/0Ip+SQgP8ZsCG+7kNJp9qlBRzf1Z08hq3z/uwK41PHqtP
f30GH9qUt8/1PJ/0L9dMTYVnrOMNtk1F/KlpWO0HF5s/jLRIQXzYcefgSnjr
Yu5CdbSfjMul6fBw7cobmkmwR1VFb3kn7xJ3XWUin2ZKj+kqg5dz11ck8Kn0
0vjxKfBXrpxlPJ96qj/N84WFXHmLOPw+zcMrrWB17rhLLNrD6au7ElzBPf5y
lk9Gf+X9e5518vZwH4fF8Knxqiz7FJbmpscZzBe552eS4KulR0opmk+/q5xS
9sPWNMoxNwrtEXwlfQXclRvReiGST/ZFJVnT4KhL3AfkfJLTTs/uKkN/xceP
Pn6KT4UH1mQ+gV9FzIgPi8B80yy6kAD7HU1X338S87GvM34fLB+oWeRxAvPN
tzXCAr6z58aqjcf5NNXs8qEp8EZ3g/rVx/gUO1TDS/wU/WV/b88yEZ8m2R9w
eAwnrDSX0BPySeXtIaNz8FJj7gs4Ps1QW6eyF25YsE5pKoP1q/0/ju48Lqbv
jQN4SaGvUpaEkCxZIikkuiUqyZpKRFIK0S6SCnPvnUmrLalsaaHQokK2p1Wy
RdJCEoWypFGy5/e5vz/fL5mZe59znvOcmXPPeSdvAe+fUp+jGiYh31vGzcPh
sZobzOQlErKfu/rWl3tSpnTw26ofvITWKugfLYXd+21z/cRJKO3W483xsEJP
R+crVkJLZaYbesHnvu7knooktM5zhfwCeNH7P4PL90voYbJe5VC47YXwA7+E
Is2exn6qQLwe952VuVdCO1sN1hTBU8ui7ySF4v0M7Icdgx8WDF4dGyKhn6Wz
ajxgr8yE92HBEuozpybGBB6QrBkYvEdCWroGFoPh7Li0vj5B6A/mK3623kW8
InXiXXdLqGLE5PRbcOe+y5NWB0rIdnmR3WE4NkBYQCSh1tAh/9zhmR63FzM7
JdSwaELqXLjGaeELvQD0P+tOSxV416p728bvkJDq+OD3LeVSRn3Rij/q/hK6
6l/IFsDX59VE9vdD+31GGtHwOr11I2V8Ef/W3Zdd4D/j31zq9Eb+sG5fOBs+
OXwL895LQlUJGtX/wcwAYYGihE4F9HZuuiNlXsnt2PBoO+7n7tTWPHjfj59f
irZJ6NmCf54HYK3Pe/fle0io2E+1Yz1c+lpeNX0rrjf5hdcMeFNNRNKJLRLi
d6z/oADL31edcXCzhFjRMZcXZVImjeKKWXcJGW8T12bBlnkjV+1yw/18oGPF
wW3nhQXQyLdmB646wBEnhRPvJFS7LVFrKqxzOKu3jQv6+1uXcFn4gXhmrPlG
jI/Wr9qflUoZzz03xs9xllDPPJUVGbCycBzuBgmdsPt2KRTOEo7HcUJ+nhHd
dxW8Utgud72ENvk+36ANdwrb56zDeJlZn/u7RMocER6nWyuhAnFE78ewgbC8
bg3aQ9yXlSnwM+Hrdgfku2D5E4HwTmH4XY18U/XgzRJYfYivUYU98sls8wlj
4IJ+3+/dtJOQlYWX+7diKePYE+yYbSuhfScskyvg3197fUpehfGs5nHDSfgE
Wl+cjYTexvQb5AcbNwgPcEmoyE1qbgE3Pj56MnQF+n+XJGA4vK9s+DS/5agP
ax8ktRchXtfP3HZbhnong+4Vw8WZE5avWSqhzP+cO47BrskXXy1Zgvwee2ng
Nrj38Rk+ptaoJ5rP6ZnAqZHXZAwWI15Hli0dBFvuZw5pW6E+MElye1+IeAUI
D4hKKIk9HXQDDvdYfFnZUkL6fxZFxsCTNzw262WB/LHwZIIrfH+V/dNvC1Gv
/khMnQ1vX9Tg2rYAr5+78NJ/sJKxS1eDmYQkKnE5rwjx0mvlHs9HPXjh8OVc
eOUEryGlpqhHNWdj1JIy0uFdqVdNJGTRj8twhA8PEB5Al9D0XruTdGH93jLl
p4yRj9KGxMrB1T/41Yfn4e8PruFrbyNen/9r5edK6KzjQr8L8NA3hwJ3G+Hf
k5857oULaob285yD/NlLyWwVvOb+yXhnQwkNHvRhnDb8i8ZOtp0tob8+23v/
viVlEvPSr1vOklDilSNNj+B56cIGF7jfoRsKzsKNJ/NfTDNAPehaGb0T3nd4
7nYtfdSrMs3Oi2FNSdGfITNQv3yJ1x0FF+2xjOqnh3r+fucv6U0p4+LzcORf
XQl5TesoLoPl3FZldkyT0P3L0ZJ4OHVNPdMyVUKfvj5a5AlboFqr1cH4dCBb
YT7caiZsoIP6aYB+0WA4bPa2jtuTcSdH2we23pAyk3SkyFgYn2yH6dyE72nu
Uk2biPyxKLghBt425G9SvLaE8o6EHnCFlRTZGVET0H+ejNafDWf19C3ZN15C
/yVuqFeEl3dGr9oxTkJu4cbBjdelTMf7wS2bx0pIe07BiMvwoQZhgy4JfTSt
usrDM55oyi8fI6Flc8NWrIGry9JizTSRX4qev9WBA4TjtkdLqNqzYpcMPFQ4
fmuUhB7XrVKoLpAyV4XtuEdKaMCJ3YfOwQ7C9lwayB8rjIbtgX8Kj+uOQH47
GHtyGZwgLN8dJqGyzvBRWvA84ec8deSjwcNPfLuGeAnl/VDUi+FmahVw6IZ1
GVVquN9f5KJOwKNt3xjdGYL717BexgcuXLTlfsFgCZV/WO6zAN5o3O54aRDy
9+X6BjW414wdn84MRPu+/8v8w1UpkzLhV/BRVQk9qbx84RZsMWKfUpgK4r1a
VvkQ/G6AsMEo5hu/327fBEt6R07zVpbQklXOd2fDE3+qkosS+uMPb83/4IrP
ccvt+0tolWhwQOMVxOvNyCar/5A/Diy9kwMr1Sb7GCsiH50bPpiHL92fJKvX
T0ImfnucHOBlhVmHxvWVkDXrnToF/pI3U0u9D+p9v+7WnnwpczBd2MAYr187
YFIVrHdq/oJ/vSU0c/ENt1T46eHyp1/lMP9x+XEqEA6QLN30rhfyz7U71dbw
kOCnXfWyElrZMr7PaPiKzxr+oQzyc/CQWV/zpMxqt1dDiv6JyWNY7MYy+Mca
t7S8HjFZ26QcOA4nLPs46/xfMV27bZa5DZ67QNggXUzDur0rGfjl7O+rY36L
6WHMlM+qcIhOSKvol5hGjA3o8zZXyowaI7d7508xmVsuGXUNpiEH+nn8EJPX
kWy9CNhZcUDC+u9iunIqab4T3Ovf0ckru8U0WWb0Mj04pXP4jYXfxFS4bOLq
3vDC1jPWhl1i2jLm1rray1LmbYNwAIOYfim/dMqAxU8ubh/9VUxmmZL1IbD2
nRl/B0rF9Df2psMKuOL6tSiFDjE9WbdnxVh4WxYz6le7mJziSxZ250iZ/iml
mZ8/i0nvzdGZFfDF44tNXn8S082H7Von4KVRjyurP4rJ/+vj/t5w+35757sf
xHT+nVHnfDhmp3DAi5gyTXVqBsN621z2Z7WKqeBYSv77bMRrQ6tq8nsx/QxN
PnQd9rf1OnvsnZj2xUz0iIIHW3XNCH+Lz+Okb+IM5xsHlYS0iClif4mKPmw/
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
VRjAUu238VH3vyBep+/c+qnE0sU7m4yj4elHhQPk8f7Bw1tXwI/Dqhqb/sN4
utoiahDsG+LgXa2I+VX8e52a9g5moF/jv/J+GA9Ef+8ch3PdhS/sMD+0lTg6
wvaOHzSz+iC/Luc+jIS/L/fJOauA9pzb6d/0uYM5vrB7/jF51MeF1d/PwoZz
gqsO9EZ+uDZhpxtcP7WXa4gcSy31re3acJBWWKdPL7Q3t+EuHz4hXkOVuU2y
LG1MuF55Eb7939HBDjIsfbt2d7Y3vEFG+EFAREdlFibowf+6Ts806RFRfvaU
750fO5gzbePvzPgrovN99y67As9vvGA/4Y+IzlkanwmE31TpvR/2W0RFF90+
GcF8+dVdSr9E1L7z+4y/H9C/bhr3lf0poj8tUn+Cy7NLjnd9x/+faZu1H96c
ajWptVtE/udGvl0A900QfnAU0evApUMU4PRou8WVXSKa0/rG5G4b4sW+eF7c
KaLL+i83hcOfd23cduWriFbHz+WWwNHb3/9Ol4pIffXfk8rwtI2ekSc7RHQv
Y8zlx60dTKVdp8ahLyIaWnWu8DDss3j3Ja5dRNGKMRW2sKrJP+PAzyI6eajm
gRqcpy8saBDRwZSQe3XvOxi7if9t2PBRRPH72OIEuBuvZvNBRFdc3uetg4+p
Dt1n0SaiRsn5pFHwbIWTKkatIqrRuRPW9K6DqfullTT1vYgso008zsJBX87r
jXknohutgyw2wRot04oHv8XrB5ppTIBv1eXZ9G0R0fige5/ev+1g1j8UFkyJ
SDzpwtV0uKeo0P/LaxEVFzcHb4NPX7Ho3dyE19vvP28qbHrhwdGaVyKaeXZN
d3sL4nXaZvy9RhE93RCbkQ1zR+vyb70UkWr3+DV+8PgDThY5DSKyO6PYywAu
C2mpSXkhotp4s9RvzR2Mu3A87HMR3Rz50Owq3Ec4LqZeRH/d058HwunC9rF1
iGd2zXYj2FrYTqZWRA0Gtj9/v+lgPgmPl9WI6PG0MftuwZHCcrNnIrpTN092
LzxV+Pq5WkSDPdOCTeFHwnD0VESd49d/lYW9hyZ8NKjC6xs7u5S8Rrz6a2LG
KqKwz5kPODhXRljwLSJ5n0V6FrDttyknB1TifvZMOdgH7mrLmSr3CNdf5dB2
t6mDiW2cfbv7gYhGTng0Lxye9fTWsg/3RVShFxFuDdeVL3j18p6IeqbFVPWH
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
7LXYLmGeh2cVC0j9ei1OvF992OY/LFSnXj13vLIFoxr+ZiGE+vRajGn+xnfr
TxaWU49ei8OfjrjT6AcLt6g/r0XV0g0h276xUId689z6aFq4yesrC+OoL8/d
b6tfntz2mYUN1JPXYoOSkkyvShYeUz9eizb2mHhbBQsNqRevxfg7op+NPrIQ
Tn147nrM/MLb+p6FHdSD1yL7MXZnw3cslFL/nfv8ATv2b37DQgvqvWtxl+DA
Is9yFhKo7869rlzYdSPLwn7quWvxpbj1sfo2FizUb9fi5YQNf9daWWhHvXYt
3lEW+tW1sCCjPrsWLXvPeKWaWDhCPXYtpnkoylyMLLyn/roWg0pfzlimZ6EH
9da5/aJZDYOTjoWp1Ffn1scnU7PFr1nIp566FtWLZ3b884qFr9RP1+LQtxdq
z33JQj/qpWtxZdyx81+fszCP+ujc/V01esC0Zyxcph469/6/GzZ8eMJCtZx/
/XMtZqyef0ZZwsIQ6p1rsd8rt1zbIxZSqG+uRWfffrOED1m4QT1zLRZuremp
L2bBlfrl3OuzFAuj77MwhnrlWgQn2aWnd1lYS31yLR6c/fNu2B0WHlKPXItx
Pi2P3b3Fgif1x7UY3b8kYfhNFiZTb5y7H7waWgqKuOtFfXEtjq/S9Qu6zsJL
6olrcfuwnvzThSw0o364FgsCa0d3v8pCPPXCtRjYk9/mMLKQQX1wLY5c3q+g
1RUWzNQD12L7zeu67r7EQhvqf2vR7UycqtFFFqTU+9Zi9bAD89edZ+Ew9b21
2KIoId7lHAtvqOetRd78tf8tPsNCN+p3a/GRvtO27/ksaKnXzR1vbJ+32lMs
5FGfW4smfk4D+0nuelGPm9s/hCvq8k+w0Jf629z6fXb72YtcFuZQb1uLYX0S
p4YdY+ES9bW1uOXndP3NIyz8pZ42930PvmgxKIeFwdTP1qL+3PauZ7JZWEK9
bG7/P3/cveshFoqoj63FRd18ru4/yIIL9bC5++eAYZj3ARZGUf+aW8+HP+/c
kMnCGupda7FxcUSB8z4WiqlvrcVrh1zOzU9nwYN61lrE+9WTP+1hYRL1q7X4
4tXQZrLdLGylXrUWn6nuLi9LY+E59am5+6XNtmsTd7LgTT1q7viz9j26uZ2F
WOpPa7FR2psTA7axsJd601rsfTiJf3ILCwbqS2vxRnJPc9vNLLSmnjS3Pp90
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
qyTbg0N0jnnpCFQNqvSYEaxzzEdH4PQhIdbsIO760Tx0BM5s/rXB6wAdNKL5
5wicvzx9t7u/zjHvHIECRenC4K46x3xzBDa0DL2Q1IG7fjTPHIHXhkwbn9la
55hfjsDxbjWDHvvoHPPKEdj784ZF1b11jvnkCPSpyG/Wo5HOMY8cgd871qkf
78FdP5o/jsBB1btHra6jc8wbR6Bvw0s/zjrrHPPFEWgLGv/RXF3nmCeOwMbr
kwfU/1MGKTQ/HIGnBJ/K+n0vg7U0LxyBs8YMfCKsLHPMB0dg55ZVPmvflznm
gSPwwJcnl0/byxzzvxE4slPsiTJLmWPeNwKbxPl/rWkoc8z3RuD7aV/WdS4t
c8zzhuOtXUPnTnhW5pjfDcfqoy+enfmoDJ7TvG44hg/8NXzXvTLHfG448hZl
tsebZY553HA8Lg6LMhWWOeZvw7F804HSmlfK4DfN24Zjs++Q2+58GdSi+dpw
fPQUH47IL3PM04aj7PLNIbLjZY752XBsvulbjZU5ZY552XAcl/qxwaGDZdCJ
5mPDMaPH5KlFGWXQi+Zhw7Gr+LqPeVeZY/41HE/Gm5tU217mmHcNx3NHJvGa
byqDUJpvDcdLvc597ru2zDHPGo5hgflPJ64sc8yvhuOY8DdO6qVljnnVcCxe
Xn3+8oVljvnUcDzguys4fU4ZLKB51HBs9TI27Oz0Msf8aThKit7kFCeWOeZN
w3FqzLtQq6LMMV8ajoOnuQz6JS6DTJonDUf7CMMsD34ZHKH50XDcM9vnZ5vY
Mse8aDh+cJUXBUaUOeZDw/9n6bzjan6jOJ7IHmWECimSlBUtdU57a2eWPSMz
e69kk91PhCSkvdfT3vN2q3u7RZJNQnbyy3ny331V937vdzzPOZ/P+3ywsFWr
xXYuDV086Bw2ZGnmzEWzG6CC+M85TKQ9pm6jdQOIifd0Z7OPTMw7aNbQxXe6
M51FJ36eh4YuntOdSePrrUH6DfCV+E13VtC/dUbEjIYuXtOdgZKdYdqUhi4+
050VTg0+UaTR0MVjurPt+0KUasc3gALxl+5sQMiftiblBlAl3tKdPWPug1sU
G7r4Snf222Whzw/5hi6e0p21LUhRkB7c0MVPurN3Vqoy/QY0gDXxku7M56+x
9pDeDeBMfKQ7i2rIClbo3tDFQ7qzn3Fz54/tqO/iH93Zj6pwpwk/67t4R3e2
u33HSc22+i6+0Z0t2rC857SP9V08ozvb8Hxszoy39V38ojtbcmFFtu6L+i5e
0Z15aDR0N2ish/+IT3Rn9k+Mjs2S1HfxiO7MeKG+lWFNfRd/6M4ulR22Mays
7+IN3VnAi9JTs0rqIYP4ws7zVVY2wCC/HgqJJ3RnGXoG5bpZ9V38oDu7MSe3
fEZafRcv6M7GN4wfNC2xvosP7Dx+mcFnNGPqoYV4QHf267SxzYTwevhO/J8b
a4lfYzb2QX0X7+fGLOxN9ygE13fxfW4s/8ax1sG36rt4Pjd288C7O30D6rv4
PTdm4Kbl3+1yfRev58bCpGXSv5+r7+Lz3Niudk21Dyfru3g8N2ZrtKTo2bF6
MCH+zo252S14WH2wvou363w/vdrcgj31XXydG3O6fVEpZXt9F0/nxgIi7cPD
Ntd38XNunfVdxu7A9fWwkXg5N1ajEXbozOr6Lj7Ojb0OK8/au6y+i4dzY2t6
vDVa51nfxb91Hu/YlM/z5tV38W5uLONo92cWrvUQSHxb52ujo72nO9R38Wyd
f/+hY80om/oufs2NbcqdKd3bvB6SiFdzY7In3lV9gnrIIj7NjS0787yhTr8e
iolHc2NJSc/GZM+oh2riz9yYrt/D6w+n1MMT4s3c2EeZ7nYXNOrhFfFlbmxr
VaT2jvH10Eo8mRvrO363q4dyPfwifsyNKWePf2isWA/diRdzY8f77tEdJ18P
/YkPc2UZ701+95Srh2HEg7kyp1bTr6/71cNo4r9cWZ9pVuOLetaDOvFerkxn
yYhTD7vVd/Fdrux9zkG1k+0SMCCey5WBod33Nd8lYEb8livbqW/2x/KzBGYT
r+XK9PJm6I37IIE5xGe5ssTD7+9LvZbAYuKxXFnHPV37+iYJrCH+ypWJ/zwf
l9Aggc3EW7kyrY9s2gWRBPYQX+XK2rcFbPGqksBR4qlc2dHxZq9MyyRwhvgp
VzZP/eQ5hUIJXCFeqvPnxsbrPmVLIIj4KFfmka+zOz9dAg+Ih3Jlrx5j6o0k
CUQT/+TKAvZqTdscK4EU4p1cmZ9rlcg8QgK5xDe5Ms23PWKGP5RAGfFMriz8
3BX2JlgCNcQvubJgDc+O5FsSaCReyZUN05+88VSABN4Qn+TKtlQ8lVt4WQJf
iEdyZb6B1i8nnpdAO/FHrsyoGd9/PykBGeKNXFnmgUDV3GMSGEh8kSub2KR/
+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
v4wGdqNWfesWB1Kcb8ajr1edf/QhFlpI37BCy8rDud7iWJCcIj4aDyZ4mxvl
xkIh56ex4+MyB4WoWIjnfDXO0XynJhMYC8Gcv8bz098N6fCLhQucz8a289Ge
MttiYT/nt9HQsq+j4tJY8OZ8N9Z4ms00nh0LCzj/jbE7LZb46MeCNefDcRMG
qiSOj4UZnB/HiqSTlf0Gx4Iq58txqu+g3I0dMSDL+XPc9KF9bvPbGOgYTHw6
/irt9nptbQy8o3rdGnfPT6yWyokB0X7i23HcnZijDyJjIJ/z71jRenrhisAY
iOV8PP5obM2edjIG7nB+Hn9BmMbgHTFwlvP1qHM78a/MihjYx/l7HJpiHT/A
OQa8OJ+PYcuFORMhBuZxfh+H2o+7t2BSDFhwvh+3L/UUBo2IAW3O/+P7mn5V
7TIxMJbPB2C4QGv8xi/RMIDPD+DJZCOXH43R0C5D8wV4TcnwxbWyaHhN/YEN
wpSk9c6p0VBL/x+zDQpfNOxWeRgNOXx+AVdc9rnX/1o0RPP5BjSd8OmYrG80
3OLzD3heuDNpsk80nOHzEWi79k3j6mXRsIfPT2BQn8agVKdoWM3nK7BuJ7ut
hdEwh89f4OSGuHMpWtFgyucz0KOjc19XioZpfH4Dl/1J+Da1XzSM5vMd+OOg
hWTkryjoz+c/8OGcr0dU3kTBzx80H4I5R6dH2omi4BX1I7YYVGyreiU/CoSU
x2WLlpc3BUsnREEmnz/B6U6pHRdCoiCSz6dg1gytbhZXouAGn1/BTT4P9iv5
RsEpPt+Ca8r/zB65PQp28vkXXOVfb2O4KgpW8fkYPPhT4uQ7Jwpc+PwMCn5s
tfhhGQUmfL4Gldf+HnBRNwom8/kbVLgefGmuehQo8fkcDDDdlW85Mgr68vkd
jH/ufm1p3yj49o7me3DBnub20N+R8IL6HzvMeHilZdSHSBBQXpwdCg1ueWU+
iYQMPj+EOr3ebb5UEQlhfL4IjzqM7HMtKxL+4/NHGL52q15pbCT48fkk7Hjz
vN/M+5Gwnc8voc/YD/4V1yNhGZ9vQs0htxqDTkeCE59/wksVp/vdPxAJyOej
sMQ0U6t5SyRo8vkprFsWs2L+qkhQ4PNV2KNJv7LXgkjoyeevcKjF/qutsyPh
6xOaz0KNrR+fDDWNhCbqt+zxcIq2YJtOJFTw+S5Uc1O4NXRSJKTy+S9c4np6
++cxkfCQz4fhwwn7TssOi4TrfH4M687WDd/UNxJ8+XwZbpDb6zJYKhJ8+PwZ
vpYZ97n1XQQs4fNpGCavfsVKFAGOfH4NW3csGjYpNwIM+Xwb/li1+mdgdARo
8Pk3PHq/e+WdoAiQ5/NxuGREyxTDcxEgw+fn8Mfu2PD1+yPgSyXN12HopnNv
dTZEQCP1d7Pxfbz+scBFEVDG5/Ow/kHeuLuOEZDM5/ewSHbnVluTCHjA5/vQ
wPjimCvaEXCFz/9h2OWZEj+1CDjK5wPxibu6x3iFCNjE5wfx5ueYhRsGRsBi
Pl+IkLPlyqruETCbzx9ikJ5qiezPcDDg84kof2QX2/gxHNT5/CLqCVtn+r4M
h6F8vhENx9z4PudJOHTn84/Yc/u3suaacGjNoflI3Nsjxm96RTg8oX7SAXtG
nf5iWhQORXy+Ej+vGdY4Ijcckvj8JW4Yd0w5ISMc7vP5THwd7OennBYOF/n8
Jrb/GPRhbnI4HObznehUrDRuSWI4bODzn2h99HwPw4Rw8OTzoSiy+rWyJT4c
bPn8KGZVrVDe3flzPT5fimetx/Vv6vz7cXz+FAc33e02MSUchvD5VAx7oC12
Tg+Hbnx+FbPG1XgtzgqHlgSab8Xd/QeedcsPBwn1rw6oIBc2ckZpOBTw+Vhc
FnXjuZQwHBL4/Cy+1YzPSJOEQzCfr0X5675HvZvDwZ/P32K4kkq3IS3hsJ/P
5yIs/NQz6kc4ePP5XSwbdnCFbY8IWMDne/GzjP3LZ7IRYM3nf9Hj98U5u0dH
wEw+H4wvjSfsk9eKABU+P4zxDjPHJBlGgByfL8agilF/V8yOgI42mj9Gpx4m
9UqLI+D9Q5pPRtGOii3PN0eAiPplR7TVCNqTciwC8vl8M76W//HofkAExPL5
Z8zRWhX3MDICnPh8NF7JPG+Rnx8BVnx+Gnev69NTqjECgM9Xo7S38o25PzuP
l89fo6qth9vrPp3rBZ/PRjvBgOb44ZGgwue3ccK9VwUj1CJhJJ/vxiyHmfaD
ZkaCLJ//Rk3F+Nj/zCOhF58Px9x1fpbMLRL+fqH5cQydP8xsz8pIaHOg+XKU
v9/+umJ7JLyn/twJVbp188n061xv+Hw69r3YpuTwXySI+fw69mu5N3JneOf6
w+fbsdWi9IZx5/qZx+ffcUSPX9WhNZGQxufj8Xr0wU9R7yIhls/PY6Dx2hGe
3aLgIZ+vx/Qgz02PhkfBbT5/j3uzrynenBwF1/l8PuZ/qNbT6dwvzvH5fZzr
bfzcZ1EU+PL5fvR8tHz6wh1RsJfP/+P9m4oGb89HwVaeD4BSN4/1VX0UBV48
PwC/+H+K6JkXBUt5vgA6n62afuVZFMzn+QM4hsVdFfyJAgeeT4B3ijWepipE
gyXPL8DLZzJk5uhFgyHPN8CiaV+635oTDdo8/wDHpyqXXdsWDRN5PgI+btnr
Zn45GpR5fgKKL8scuRMXDcN5vgLm6u0wia2JhoE8fwGztUy37v4RDT14PgMm
Dj34/atCDPx+SfkNOD72TeiEznroswnlO2CjYamn7LKYLv/CGTe39ngd6RsD
z3g+BC7QbBnaNywGanh+BA6tW/JYSRADpTxfAotN7m978yMGcnj+BH433q61
WTkWUnk+Bao0vzgXax0L0Ty/AqOXe7nGbo6FUJ5vgYaHSydu/i8WbvH8C5w9
Wz3jXWe9e5XnY2AbNKSP+xQLZ3h+Bq7J8C9UGhUHR3i+Bp7uP/mA0CYOdvP8
DTywuWyX/Y442MzzOfDGpwKHY/fiYC3P78BVpsFnDwjjYBHP98DCCcNyZ/WI
B3ee/4G9tH7vTJ7R2b/wfBC8kOip2b4yHsx4fgiq71nr0e1aPMzi+SK4QW/D
oaKieJjK80cw/XX9wHkdnf0NzyfBKdqWWx9OT4DRPL8Ey2D+iKzVCTCM55ug
irhp2a3ABOjP809w55eSaFNhAkjzfBR02zJ6eVi/RPgppvwUvOT8u7DeLBE+
zaB8FSwfeU9PuDcRXvL8FXQK2fPbPz4RnvB8FvSY1TF/5KdEEPL8Fmx5W3Jl
tWYSFPN8F9xs9fDjvjVJkM3zX/Ds0n2BHveSIJHnw6DKYDdh9+dJEMHzYzD4
7MrsrWOTIYTny+BZ82GXw5YkQyDPn8G7HV83hAclw2WeT4OHHUo373qWDCd5
fg1uN7yaNEA1BQ7xfBtcMuuk57qVKbCT59+g/CLFTf6hKbCR5+PgyXLpv4ff
p8Aqnp+DI04aDzGalgoePF8HH84eG5WxPRVcef4OHhWaiQakpYIdz+fBh2Y3
j4zrkQbGPL8HV1UfedDDPg10eb4PbmcPZ4VfSoPJPP8HI52mTxj7JA3UeD4Q
LrV44Oapng6jeH4QKrsODV22NR0G83whtHjVJjWNpUMfnj+EAxWdDAr6MZDi
+UT4sjZOQ30+g+8llF+E27Wsg53uM/g4gfKNcGFtlo/JNwbNPP8IfXZmTv+j
kgESno+EUuvyA43sMqCK5ydh1fByybOtGVDI85WwYphc8ZsbGZDB85dQviXE
yj0vA+J5PhMmLzk3aVxrBjzm+U24JzXaYY5CJtzj+U7Y1+aV7zvzTAjg+U+Y
kv31/vONmXCB50PhnJbAI/BfJvjx/Cjs0Prvze+8TDjA86Ww+6wH9xW/ZMIO
nj+Fjxr9TgSOyYL1PJ8KU4p7zD9knwXLeX4V9l3zrSFvVxYs4PlWqFRi+8T7
fhY48/wr7IjqNXp7dRZY83wsPL/PafHT7tkAPD8L1zisW/ZgejbM5PlaGDo6
70XV0mzQ4vlbOPn973uLLmSDKs/nwovvxZ42mdmgwPO7cFHJiryLn7JBlud7
4cZvDVeMVHKgF8//QrmXBUctXXPg7wrKB0Pzg61m4UdzoI30MFdct329r098
DrxToHwxlIsMab/2OgeaeP5YZ329xF1RMRfEPJ8MSy2SjH7PzoVKnl+G165N
W6p3KBfyeL4ZzhwVs1YQmwtpPP8MG19c+lvwOhdieT4aDpt1u1BxVB484vlp
eFNL0bvIOQ/u8Hw1HKyZc0bomwfXeP4a6t94VqqfmgfneD4bntlhWvbzUx4c
5/ltuO+N+eSh6vmwj+e7YWWr5JTfonzYyvPf8Kb05SNzLueDF8+Hw7LHgZH7
SvJhKc+Pw0rjwrA/3QtgPs+Xwx8brsjWzCoAB54/h7e+zdja06cALHg+HQZb
nvI6G1YAhjy/Dv1UDU95vygAbZ5vh5r2YWvuji6ESTz/Dmcp9b48ZV4hKPN8
PHymZXNbzr8QhvP8PPT+OWuUTUkhDOL5erhky7Gr1T2LQIbn72HvO6GB8SZF
0D6X8vnQBfunvttbBJ9J73PDxWZS+30Si+DNAMr3w4W7s72d2orgGc//w5+y
J4YemFoMNTwfEIeP2v/r7/piKOX5gdhbtTxE8KAYcni+IGpefnzr28tiSOH5
g7jE0d1r3bgSiOH5hCjqP/jU1GUlEMrzC/GiyPyYRVAJ3OL5hrhp51rJgycl
cIXnH2JypeIgz1GlcIbnI6Km9ajbizxK4RjPT8Sl8gvkwv8rhd08XxHVbrU8
sZWUwmaev4gfEjX9ZiiWwVqez4jzPgWd9FpYBot5fiOWFg5f/v6/MpjD8x2x
+4c7Z5Lqy8Ce5z/iZI+bxypHlYMZz4dEg8txudqLy2EWz4/E/pGv858GlcNU
ni+JO30uyFQ3lcMEnj+J2dqxe04MroDRPJ8Sm17lnCzRroBhPL8Sh81PW6ft
XgEDeL4lLm+Sr0vbXgHSPP8SH2r2uLDuWgX8tKV8TNxxa6udYXIFtJKe6Y7B
JXI5U+or4BXP18RxIrs4i44KeMrzN3FFnbN4n3IlCHk+J+rCyLe1ppVQzPM7
sXjk4tuuKyshm+d7YuLhh4mtxyshied/4uQGhzfhDyshgueDooLahvdnSish
hOeH4kC937vPtFZCIM8XxSX9Umc/HiKAyzx/FN+02o36oCOAkzyfFB/nj7pj
v0AAh3h+KU7T2n+peJ8AdvJ8U2wNvRy29rYANvL8UxRUet1RyxXAap6PigM3
NmtJvxGAB89PRYOLxT3b+1eBK89XxanRpc1DplWBLc9fxQ1R+w/YuFeBCc9n
xTFfFpy9sasK9Hh+KyYuLCzof7MKJvN8V5RxGfXyelYVjOf5r5iadC3Q7FUV
jOL5sJ31jHdIn/5CGMLzY3HBlcyEd1OF0Ifny+Lb3DC/N+5CkOL5syh+CBXS
e4Tw3YjyabHl+H4L3SAhfCS9dg4G+nnf8s0VQjPPt8X6S70vt74VgoTn32Lo
GNsGH9lqEPB8XLz0cdKUITrVUMjzc/HHs1CT4oXVkMnzdfFOaHrxjUPVEM/z
d/HloY1Hj9+vhsc8nxd/vc1WOVVaDfd4fi/Kzy7xvP+lGv7j+b54LPjOe8nI
GvDn+b/YqLLeV924Bvx4PjC2Fy1oOr2qBg7w/GCU9IpI6H2mBnbwfGF8b5SU
9l9MDazn+cN4d47kkUVdDSzn+cTYYnlSv2e3WljA84tReM5xdMOEWnDm+cYo
SSqSK3KoBRuef4wZRdHFJdtqAXg+Mn6Lq+3+4kYtzOT5ySjMV90yOKcWNHm+
Mn7rG1jm9q4WVHn+Mp4OXVX5aLAIFHk+M242y5o+3EAEsjy/GbfMlnt0ZakI
evF8Z8yYW/N54gkR/CX9ufP9POOzKiJF8HUq5UNjdL/dVSdFInhHevRcVPgz
8MlcKTE08Xxp1Pvl95+uuhjEPH8aWzVVcyc6iaGS51OjgovJ0Mk7xZDH86tR
6cUmU/MgMaTxfGvsb+XVZ32BGGJ5/jXmPpVTvdcqhkc8HxvlZ+2y+TiiDu7y
/GxsHdOoY2tSB9d4vjZOvRt3L25tHZzj+dt4fOZ1p2n+deDL87mx6NHCz6nJ
dbCP53ejtZmU5bzndbCN53vj9aC0nt37S8CL53/jy8KOj6kzJLCU54OjvdKK
tGOeEpjP88NRYJij4ekrAUeeL47yPbTaTCMkYMHzx7FoZXO1jkgChjyfHL1c
157W61YP2jy/HE0DfIRWGvUwieeb49vUn14rXOtBmeef49SCCQPO7q2H4Twf
HV+qeu3MuVcPA3l+Oh5etNarV3k9yPB8dWxu63d7zo96+EP6+jwMHrajLmps
A3xWpXx2LF48qHqEXQO8Ib19Hl4N3OV4yqcBnvF8d9y9+7/efW42QC3Pf8cN
M2+wC/kNUM7z4bHJ4YX2+E8NkMPz41Fquur4bIUnkMLz5bGPxMJ1nfkTiOH5
89hv56H9ozY8gQc8nx6lejmuFl99Ard4fj3+aFlfdjPzCVzh+faYc/mpj/e7
J3CG59+j76f/WTrzuJi+OAynSNZQSCkkJNuvEIrvN5VE1mwhqWm2amYaO6WE
ECWSJaRIEbKURNbsSbZkKbTv+zLNWvxO5/bn+5ma7pw5czp37vPct9lg3uBC
OMDcHx8Dh1geGIOF4MfcPx+zMg5s7u9VCJuY++vj73z1K/9OFAKfuf8+zv43
tET+uBA2Mvfnx7uyndWKikJYw9y/H1vOR+BerSJYxNzfH9lmU6YeNiwCO+b+
/zhgtlvySYsisGb6AZDL7xd9eX4RmDP9AZj2b9m3e65FMI7pF8BI9MT3m4rA
iOkfwNwD8Y9LDxbBYKafAOP3np/y73wR9GP6C1DBavMzTC4CDabfAG20Du6F
N0WgoNcPyPObOY5l/SqCpiG0HwHvhmxYFNJUBJX0esJavNVf+8edHsVQyPQr
4KG/2dd+6RdDLtO/gHaDpyRq/VcM75l+Blx2W3JvxrxieMH0N+Cw2u73+euK
IZ3pd8AZWaJj532LIZnpf0Dz5V6jPwcXwxWmHwKDE1as0TxXDBeY/ggMN7un
DbeL4RTTL4FPo+eY73hVDKFM/wRGTXh9MTmvGPYy/RSodWKRXX1DMexk+ivw
zqSOjvHdS8CX6bfAI7rj03jDSoDL9F/g+vFOy69MLgFXph8Dv0/uea/crgRW
MP0ZuDpv/Nsxa0tgIdOvgVsKE4VcUQnYMv0baNLrcvjV/SUwk+nnwMdz3AdU
R5XAZKa/A38cX55ndqsExjD9Hnhl8cDPgpclMJzp/0DXbp6/bv0sAR2mHwTZ
wVNLmupLoBfTH4Lz1M++t9AoBTWmXwTD1b4GbtUrBRm9PrIOg9gLS+9NKoXG
XrSfBBN3RBRJbUuhnOkvwXW1nm4zXErhF9Nvgja/rtjvEJZCDtN/gqEf+f5p
+0ohi+lHQZcHxTWSM6WQwfSnYIt0s7/FzVJIY/pV0Nz56mDfF6VdPNg6vC63
iLv+oxSuMv0sWOzf2qu8rhRimP4WLHrfON1IvQxOMf0uyDd30V49tAzCmP4X
9Jh/cE/YxDLYx/TDYGBru+/zuWWwi+mPwY8b+FmS1WUgZvplUFx5YedYQVkX
b7YO/UZGs1fvLYMNTD8Ntj8+sjP4dBmsZPpr0Pjww5g7N8rAiem3wVOuCc/z
M8rAlum/wfq+De/Vv5fBLKYfB4M2uiea1pbBFKY/B22VTXMXqZXDWKZfB+tW
PNkvHFzexbOtR//LfdaGmZWDLtPPg88+LryZiOXQm+nvwZUugwQvVpZDN6bf
B8sWGe/N8yoHOb3+sx5jpnj+rA8sh8Z22g+EgyrKN/yLLIcKpj8I7S+XdvS7
Vg6/mX4hXJTzJH7Y03L4yvQP4QC1v2D8tRyymH4iDHm1Kn1cVTk8Z/qL0PpG
jJpZRzncZ/qN0NUgv9v4QRVwi+k/QnU0v24yrgISmH4k1KqRkPP8Cohm+pPQ
MuhCwsDlFRDJ9CthXX7WV3VuBRxm+pdwymT7jU1+FRDE9DPh/HrZ9PxjFbCD
6W/Ch7dU8zLiK0DE9DvhO+2wgLj0ii5+bz3uO9P3fdDHCljP9EOhxdmehutL
K8CZ6Y/CgCGTWebyCljA9Eth3sU1hzX6VYIN0z+Fj6327f0yqhIsmX4qHDsz
Z9Z5y0qYxPRXodqIE5fcnSrBhOm3wocHLRJHuVd28YGu+FS2YE7B1koYyPRj
ISvr5LLThytBi+nPQr8ebV8WxFTCv1m0Xwt5szcny1MqQUqvb7niSOGswri3
lVDfSPu50P5PtJPj70ooZfq7MESmU1nVVAn5TL8XTja1jgvuUdXFH7ri3vSv
QgP9Kshk+sEw8/ZLq5uTq+Ap0x+G0xMGK2fZVcE9pl8MNRPk0c/XVEES0z+G
vzUzdO0FVXCZ6SdD9oJS5+dBVXCW6S/Dv3UdjrNOVcFxpt8Mqxd/qrpxraqL
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
E3m8Z0j1jzdkvaS+iDe+OpV4dGamEg7t3TYcV3qjHedG9Zl3StCgfYje+L3N
/29blhICf8+LinP1xi/jenxwzlaCkvok5Hhnm6++9YGslzOG6GpyvDHxW/U5
rU9KaKJ+iTeGyIZGe3xWguBExTEvoTce6Rm/Lv0LWS+pb+KN6z5s+6H9VQme
9Wl9PmzzRtMtW3U4uUoooP6JN0oPHNRO/6YEF8dDh/4L9MbatojsPj+U8I36
KOTvDdnttOEnWS8vr9E4edAbL8SOP3ozTwnZ1E/xxs1JgSfa85Uw/2/nBUdv
tH7i5rrwtxJeUF+FzJe0pNrTf5QAa+XKdWe8Mbp04dySArJeUn/FG+ta9N0m
FilhWmrm9qex3rhM2WG7rVgJd6jPQsZ/W27T4xIlmGmfbRmV6I0ODoF8jTIl
XKV+izcq7uVfdywn+xVvL9GBO94YvzXzQViFEi5Q34W8vrNjIj9VKmHY61k1
VQ+8cXvCJ6uB1WS/Qv0Xb6wOvHxneY0SBozszV303BuDtwe0Ha8l+xXqw5DX
N29W7091StD0zy++/c4b1fqnNPZpUMI+6sd44wDXF1fmN5L18tv1DTo53rh+
jP1/+5qUsJP6Mt6Y+27A0UfNSpD81wlMkePR6fa0tUUJIurPeOPYWfUvzSRK
qA11WpVf4o0teUmx7m1kvaQ+DTke9aHOp6RKKK4w+DKn1hsLzNR/Z8qUsIH6
Nd5oO8MeVHKyX5lbt+hSqzfu25mya6JSCSupb+ONC5NGHXNVkf1K9OPM7u3e
eLyDsye0XQkLqX/jg++7r3BK71DCG1mYPb+7D3IzH7WW/yXrJfVxfFD5ePOu
gWoqeOK8IeN9Xx98+nrBH+tuKphJ/RwffDNt0EiOugpSOr9+HuyD3u+jbY9q
qGAK9XV88NjD9Hmp3VVwTevv/ROGPqh5eaZZfg8VjKH+jg/mnqpq+qupgkue
H6dKx/hglG7UOWMtFQynPo8P5g8cbDqvlwqinsbcXjvZB1c3TzzH7a2CQdTv
8UFWSFLzwT4qCB/mO+GJpQ/ONHKfcqWvCnpT38cHlwh0Vr7qp4LgrXh1JPrg
zZgI9+L+KuhG+4x80GZlwqoObRXs/qQ9Oni+D1rE6k3TG6gCKfWBfHB2j3vt
5oNUsMWsKKZyqQ927LG7s1BHBfXUD/LBeQFhS1m6KvA+cEffycUHgwrX/No5
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
I+EkNl9CRgGJXNdx8IICRdiX29g/henhH76ouB5s3oSMHv34WXcArnjvx5mV
yWjCkQELneF9bP6EjMxHjS9VfVZxs4xn/HEvl1Fusw2XDhuxeRSwf79MH/je
pFHnwp/g+nfhr5k+HMXmU8ho1+Lbu8/XqrgZPFPpmecyik+NbrMK1mPzKmS0
6oWLsid8PaHVmHcvZbRxftvvdz79m18ho9rAa8vXwpNKNC/A4Pidt+GlJaz1
WjPPQkb3V82Y9+Kjirvwu/y08wcZzarr+SAaVrL5Fjh++v91mQjbDrwQrPws
w/3655t1H/7Nu5DR8fRvTknwmVlHhmV8w/Vc3v6aOyxg8y9ktK5+0mRtePj6
qE8vGmQk8tx/Neu9ivvCXuCVkbqkvZMffCJTdLyjCtsz5mix0ft/8zFktPT5
8hlX36m4AZW+yyY14Xpyf9Y9IfyGzcuQ0/yU1V794WQ9p/4ibTndVJytevhW
xS1k8zPk9CvMZtlGuJeN5etUHTntffqlbgz8nM3TkFPzsReKd29U3P6lml8g
yWlCBwPd/bAXm68hp86Wa/Zo5h902d20QM9QTu97WZn/rsH+YvM25PTqz6Cc
43C05uNCRnJ6+GKVozfsyuZvyGlOZdNjPVhP83JiVzml6r4MLHit4orZPA45
3eJ3bhEEb9Lk3HvISTn40D5TeDL7BbWcxtiFD7/zSsW10OTeestpYNaV4jXw
JTavQ06zYvz8LOG14k2dW5rLaen7pc1V1f/md8jp+ek7cdHw78PB90dZYHt8
ix8/Ec5j8zzkdO7o02d1L1Wc8J7XjoChcvp0N3xN0st/8z3kZL70kJkHXMfe
AIN/v3D4Ne2X/+Z9yOnJmTGB2S9U3MqhFvq3RslJ6JPfyR8exOZ/yMnVIa+g
M/xuXodbaht8/3ljAq5VqbjDbB6InB5F23QSw0s2/do0bIKcTO9eujgANmPz
QeT0WOv+6seV2F85Lx0X2svpZbvg3pHwQTYvRE615bH3bOB5r4pb7nSU0y5u
7oYPz1WcMZsfIqdBg9JsY+EHhqeLLk+T0x/+7m+a+Rm72DwROfX9ZZymfob9
NeFAaL2LnA7sGut/AtZn80XkZNf9V29f+PbKdRMGeMjpkr9PZXt4M5s3Iqfr
jv5xhRUqzpG9gVdOxdu7+AbDrdj8EXx/Q35vM/jyNfezm72xP2OUr8ue/ptH
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
w01CPizmV8dj79Xgy+/5gBcxjS1eteKOpYJZLeTFium3353WjfCwzi1ntraK
yb1LTLQF/EXIj0V7mX0Z9sVCwZwZywd+Sog0swtOwAFCnqyErJWM1syFBwQW
DPjSQUIn5/3trgdXCPmyEpKu980pGIF6ZX/qh14aEmLinNZvgecJebMSKjFI
HcLAPbOPHJ+mJaH8ySerfpormBIhf1ZCXYINElPgA/xx/10lNLxWNyAQnink
0UpoYFv0sL6wcByAvoTCW+Pkr4ejXhHyaSVkaWWSvw/exd8u0FNCVQ02x6bC
U4S8WgkdkhZtVIHV+ZczklCteeOs28NQrwj5tRJqmHJ4zAZYdmrgLMf+EnLr
/cjYHLYT8mzx///gOtWYoV4p5hcECfXVy245DmcI+bYSWvd453dvOLTdz2fJ
QyVUtOTdl66wjZB3K6FQsxs1j4YqmObhZbtLzSU0YrFh7Wb4ipB/i/aarfFj
Ahzkkzuts5WEwqZxrT+HoF4R8nAlZBe1ufMluG77RU2ywf+3UKffUviskI8r
IbHG4HH94MDrBx6uGS8hj6JHXqWDFcxAIS9XQsGt8tAYuLKKP4FXQh8KryZM
gxOE/FwJ2eyVF6jC87sucXhuL6Ft3KOWrEEKxlDI05XQxprBFpvgNzS9vaqz
hCaodltmCccK+boS2t0n8nStKerLlfyGRkJpwfs+n4R1hbxdjI/JA0fMh58d
MpIsnSGhKaUOYd3hKCF/V0Lt1zTlF5qgXnmgNuGwp4T6OFoY7YA1hDxeCR2N
bwmZBOc1f1MUeEuo67VZL1oGKpgtQj6vhGKfkPU1eFL/kht/50modOCN+NWw
0lj+CxMJ6Sqy1AfDmW53NoxYJCH17bM3fhiAekXI75WQVhdJ3WF4jPiM1aIA
CXUsGO3vCf8U8nwltFYu/qAFp53b8yN6mYQcns9e/KC/ggkW8n0l1OPg3S8s
POL1xkv3V0lIU5qxfhxcL+T9Suh5rlOH5n6oV1T5L2QldPVUQNxFeKmQ/ysh
kbe+ZSBsauVsNjgE47WH19O+8EchD1hCbYZmQaV9FcwJX4svc8Iw3o/t674f
XijkA0vI/dXOe65wn90GZ3ZJ8Plau69Vh0uFvGAJxUy2NrlnrGDiMtoFZMok
9Ojr57IweLaQHyyhTiYjjoyCu335jBVBQl4mGvO/GSmYIiFPWEJWAzYOSIb3
dC+q6LtLQtkeod8Wwa5CvrCEMuq6ZBnCmnx86B4JLTIeH/2yj4J5KOQNS+hw
/5ble+Bt/PGiMRIqHjzDeQpsL+QPS0g/YNxQFVhZ+EEZ40Hzlk5mb9QrQh4x
1osphS0hsJj/evKIhMbNDquzgMcJ+cQSOu+bUV5riHpFMSe2Z4KEBhyOfp0E
XxfyiiXUz6rdqwXwukGTPF2SJPTCp8NrA9hSyC+W0G/74++Le6Fe8eRP7MP8
6FX0JRK+IOQZY/52OayYDC+X6T5LuSAh1xl/tJThwUK+sYTWd2o0zeipYD5d
+hNVcVlCZ1dzDhvgk0LeMdbTM8lLRsCLyipddK/h81YGRn0xQL0i5B9L6JbL
nZsn4beaBRoO6ZgfOpc+z4cPC3nImH8+Nn0MYO8x/A1xEjro7T27uIeC0Rfy
kSUUN1J3fyT8IuDI1jP3JKTULeDVZHifkJcsoUZT9z7K8PSYzfZvciVkfuDV
0ozuCqazkJ+M97P9580N8KO7K5Q7PZLQgcEpWhZwhJCnLKFJx9sF1uorGMdv
HncmPMV461Z/PwluJ+QrS2jXpXWDFsKZhhPEq4sltCBu/+6ecLiQtyyhJz/d
/jzvhv3AlIHjE15hPfh2avlu+JeQv4zPnxxb7gynhnRWFJVKyHtq/zkqcLCQ
xyyht3Lnkkw97AeSmq+rlEso4I3m3E1wvZDPLKErOks/jITPF/E39EuoZ47v
qnpd7AeEvGYJHe/28+8Z2FQpd2RgDdaHwSYxfvBHIb8Z423Aj2F94MRhF7/H
1UlIYTKnoKQr5peQ54zrn+f81dFwn7kHUh41SKis8K++K/xWyHfG9fDWuGx1
OC5CvLK1SUL1o7uty9ZR/J/3LKEbfjsHi+Fu1wKGmssxPhYdrbSBi4X8Z8zv
ma4nGrtgflW6fl7YKqFTsw/7X4RdhTxoXH8itwxbCm+JODzzoZKUTul2VvSH
/+VDS+l3R8tHZdpY/47ttvygLKWdUU3H4+B/edFSWp/lEeYBt7sm0/mjIqVV
6e5ztOF/+dFSenWkfkK+FvZzBSENumpSOiMbZLIF/pcnLaUdO5V0beHwyuVP
zTpKKb9wg8qfzor/86Wl5L56pyINHqtYcNFBU0qpHNO8Bo4T8qalZG6yp2ko
LO/C3zAspePrpL8/dVL8nz8tpS0R2u1OwGmmTitCtKXUOXyC1jz4Xx61lDSW
ahj3gIP5uDwdKTUEbhhdrIn1ScinllJ5DDsjCrbgj9PXldLRDmZBzvAeIa9a
SvuK1+9Xgev54/a64fPqL8jM0lD8n18tpT7V1bWh8Hn+cfzuUno5t0uf0bCm
kGctpQ67Sjy+d8R44m/XN5CST5TtnvOwcPteLymN3+RUuAQexP+cbyhF/zbo
9Yf/5V2jfRbazC9Tx/rAb/f7SClim/H5OPhf/rWUZn8989cDTnzHPyAhpSWn
nnl2gf/lYUtJPe/Q5Udq2J82vZ04u5+UJvipdN0G/8vHltLFKK2QiXAfzWd9
1wxA+/vcLG9VVfyfly0ll3KV6Tfht33vK203kZKh2fe76+BxQn62lFh38ZgR
8GGbm+8TBklpo//5tNoO6C8hT1tKlzaEjT4Nz55+ITN9iJQ2x9beWgT/y9fG
+CtpcegDdwtIiC82k9KNqSnPX6tgvRXytqU0XKl94H64OHx/eN1wKfmp/m5z
gy2F/G0pqayKOtIJ3hO9fW4HCyltc8yd8KC94v88brz+0WOVMtj1LP9AmJQM
tvaMIviCkM8tpXka1hP+KGO/fDfIwHqUlMrGNDdcg1cIed1SWtrPM3ktnP/K
//d0aymFP5sVMBz+l98tpbEeCtMv7bDe1Xu/ChyD/rlO9UnwvzxvKX1SM73p
Czt0cL3GjsP7m3Epojf8L99bSvOPl/q8VsJ+23Di/kMTpNTSdmbUfvhf3jfG
Q1gP3RnwHcvR666SlBb0GdLcCf6X/y2lvB/vSh+0yRmx85CZBXZ4P+2t8jbD
74Q8cCnd8Ta7bgtPWNjH8uMkKfVUyjvX8lfOHBbywdE/be2TbsDyDfwDsFJK
9K08sQ7+lxcupdzh/kkj4OuRqg36TlI6tHr7+bpWOaMv5IdjfJq53TgDrz+p
eGI+RUqvV9x8sBh+LuSJY77b3H9nDFveqr/g5CKloNjgX29b5P/ni0vp0e6c
bnFww7MPu3xdpRQ16IaNJ/wvb1xKpoGuC3XgizUvl4e6Yf3y2Lbr8R8501nI
H8f8bVx0ezu8oi1/SrQ7+nNqxQ8H+F8eOcbvQuVhyvBg/azB5z2kFG+duzxT
If8/n1xKdS/MUkLharOr6vdnSekgjf41GnYU8sqxHmz8MKlRLmeSJvEP/Evp
wWaL/Snwv/xyrJdL+tcuhxfNOZz7c46U9AbccBgE/8szR3/c/nay6recMQ7a
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
d9s15YuKFUsf3o0JVmTLmbWxOd46o1gaf8k1Mh1+doI/kIOlcNumc6HwiIs3
bIZYs3TQb8jTsfDum5ZnRtuw5F/f8FNxT858yznffdIYlnamTe5/C3YtNNk2
fSxLWyKHe4TB50v5wGyWzk5J2j4O1qjuGRA4nqXBd89l/7krZ5b+iHmxbgLe
/3075Qz4QauWA8uwZDBkiUM4bNpxe2okYTzk9IocD/NP8x+yZelQwILXLXfk
zCcjUfQpO5aaqyyG3Ibth/5SvjqRpSVdoyUi+MTooLVZk1hSv8e9ngC3m1hb
8cge8zVXyeZvFvprmv+MEgeWvBo7Hc6E73i9v1PlyNKynqeVJbDRYu8R3yez
tELr6SqCRav5A4hYupSw+X1bJvordJq2xhTMz1N5HnfgsVvzxPpTWVpVH/tE
Csfttavv58JS5tRmFzv495Fb88ynYXzsef+0Hex1ZtTjca4s5e+aNfvebezX
r6aMd5rO0jrdOZUcrMdvf90wf5s/B0+Cg/MTe/nOYGlGe9WOKnDRi947V7qz
tEPr4omcDDljURGr2DSTpezqCtst8N46nWVbPViKW5BQ6QDzacX7PNGfjnU7
VGHX9vwXuixpr7w3Ou8W+ktLeuPcbJYmJPav3gZr9lSY3vBiyfym9hEneNnA
dRgxGM/irZ4d4YdY/Z7NYelV9jbd/HTs18fzB66hP2brvtwBR0z+8PGzD0sJ
GoPjp8Kf3H08f85jacS5B4GdYPv5L3OUF7D0RP2HzeObciZxqZuV9kKWon6c
7BwFK6/nPzA+r3XFJ1d4kdRed9AilsqSTuVow3d3ZnJWfiwVdmo+VXgD/RVr
88N2MUunxxZE7oVFJ674TvNnKbV16CZ3+O0Fs2feASwNGqC3VBced/OUbcAS
lvTCN897fl3OHMoxvrQ2EOO7OHzWfljxlP8BC5/vV8vMWbB3Kb+gYr24rjKr
O3ztU9Tf2OUsHSmL9im5hvn1Q33VyRVon3Fnl8TB61q5d5dW4v0dnhwyBy5W
5w+YZCn30fKdveCReiEZD1ezdOKg/sm3aXJmn9H3oS/XoL2fTr4bD38fsvzw
hyCWeo5v+zAfdh39UePbWpbqzo3vaAxfsOMLNpY61baNrEiVM52mvf6stp6l
W/ed/E7Ay71meuttYMlYvXusH/zI7/ED4xCWLMXLng6Ah6yebDNsI0vFjRM7
fbqK/gq9e3rMJqxPVsennYY/bRnX3TEU46sTFx0IO+xN2+oehvXOsebdYPjk
Ef4He5Y2XSwyq72C/foZfkPIUn9tO+l52O9q/xchYoz/kSNLVsL3MuPtN0tY
sq4+Y2UOG2G3sEfK0oKmhP0Nl+WM+AV/oC5L7wb2+XMZfleuGZ3MseTg2Ns/
GB5ft0X5moylFqNjxVbwkV9tQfc2s+QsSnT8eQn7deXQiidbWJozaEjmddhb
i//CiSWrWsuxm+DrBqvuVG9j6fbu2+ljYf2BNeZNEWiv9w+pJUXOrB+x6JjS
DvT3ydkPb8Mvxr3V6ryTpb1nAmZLYP70JINdLLmn/vxsC0e7F34dGMnS/L1q
rDLcMG/KPMsolp6rxxnmXJQz05fyNyjh/6s8m7EFvsh/vbaHpXa1430nw535
6bYX16NqV42O8Mqdlr0W72NJlFB+Pf8C9ut8vG801uuK70t3wUP4uL8Yln6s
4Yxd4Qg+/mc/5pv+vlJtuJqPAzjAks4R48PPzssZR/544FiWpj4YtiAaFo4L
PMjSHr+bpp6wcHxQHOqBUdlN+rBwnMAhtJfq1NySc+gv/vHCwxi/R9yOHIKN
+ccNjrD0/k7xBh9Ywt9+GI/1cMxzzz5wGX87wlGW1j+ZMab8LPbrRv45HY5j
PXF06XsCjh/yfmTXBJb+LMnuvBj+M4q/IZMlmeLa34Gwt11x16GJuP7lmDRV
J8uZGy58wjDqpV1d65Ph7l553yclob0NQuuWwxv87HzdTrGkbDHv2zAYm8FC
n9MYz3G3fn47g/166CjbpWdYajDYr3wF3rclJWV9Mto75HPXdfD3PYONuLPo
j403TEfDbkcSo6LOoT0q2tn9Pi1nUk73RoWFem7T/fnpsPbV2JWnL7C0WrU9
Gw6vytR5d/UiSzEu6acZuODhTpc7KSxd1aktUoKHvOiQUXAJr99rv3L2KTmz
vVwy9PVllmKH3Ri9Ba6plR/6eIWlDVoeqyfDk38Fa/y4ylIwF3i+I3xamb8B
HZ/XtfnroyTs17UCP2tcY6lotGJkFLzY4INX9+ss+SqFiN3gewN8HvS/gfZf
vfxxV7jviJfWI27iz51eGb84KWekQkAMrlfT0zfGwuWO+frOt1gKc9J74Q2T
u/1WzwyM119Vowzh+HmZzb63cX3ua3a4LBH9FWjjvyqTJf2IzyoJ8Jx1V56H
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
iYzqnE5yQfACS/6BNdQnfb4cHgffnvD02OizMnpIvW52gA2dnbUnncP4mGP9
5ukYORPmkS2efl5GtT2Ytjj4zQI+MFxG0kHmgxbDY5Zfnxd4Ee1npeE5HD64
weLxuhSsz5+fbPltI2d+sefGs5dkVNAYnn4P9owceD7yMuqvv7qNu+DUg8d6
HbqC8X8t2nw2rHvSYOepqzLyyv2zui+8NiVacSVVRqGlU1NrreXMs/TOy7LS
ZOSXIGtJg0fkbnv96Br+fc4JJykc9aydc8l11AffzhycAn99G3aj6gbWq6f7
6/Rgl5pm0+830R7aS+3fj5Yz5xr5A5hkpDyv3/FkWKPts6pGBtaPRXfbguGl
Gos36N+W0eICBz8GftCt7GO/TFxfHVPy1WGTvl6e5hjZ98JbRxWPkjNbzIpy
xt1B//UakRQPV1m7WDndldGkx449AuGJk3ITPe6h3iS73ZbwCVdbXd9srI+G
RhqtVnKm3Zx0bmWOjH7qlEfkwQv8rX5sui+jlfkyzX1w5pqLvltzZaTxo+M+
H7g3dqv78mSUYrXW0BQO33bC9tgDGQ1gMs5+HylnSvcZ4gqH9SS9enwGPPbo
AaMb+ZgPHk1FW+G45C67cx7h+nuzYsUM+Ffqjr+FBbj+xKRoGMKz7vAHzmE8
7Z13/pOlnEl7JH73+YmM1s6tnXEZ1nv12+XnUxkZHfP6EwYH87ezPkP7qiWd
cYSL+J+3ijD+7Qq9deARfLlbjPn9+7XWWws5s1ulQmPQcxnlvrybdwqu154b
avVCRpe2b9scBE/r9eKz7UvM14whDuPh8ybTvae9wvrU81xHNVjT8uED7xKM
Jzf1omcj5MyyCZNsAl5jv9Fx4tEj8AOn26fXvkH7NMxetQQ29bDuLimVUcwV
54mW8NYFl7fufIvrtUK/Z6s5+mvZ0J+x72S0fl1Wcx5svyHJ/2QZxvejiS/2
wYms0YtL73H9OH/8xjxYOZI/YBPj+27JsUHwwoO6qQ8rMB6uf9nROFzOZCVG
9n/5QUYfx7zclAn3SVGL/lApo8+Nh1Zsh8PTWeVvVZjPe238POC39/8E/fmI
9sy8OM8IHvdsfYVatYziB7bO/TIM/fX2m5tejYx2Bvefn/ZfR3ceVtO+xgFc
OA7RoFLtNKtESIqOof02nNKAKLMmJMpQHXWUngbtV9GtDCX3IBHuKSW2OsZo
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
ZiqpOOUZD2/XKJr7ZjuTdYeZ/zz4/06vJX0=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
ZlUvmMFvPHlMbeGl3Hc5JrAQRq+dDfXX16HJCHZ1on7ZDz9ynJ7RhytPfL31
lhX9rvfFDXow5zFRl51wSc4KM234uNUJpefLaOT81LXzGvD9fTnz2+Hl9jyZ
avA/04GaRyw04jIeX6cMmxttviIH38pkn9gK39B1O5jLTCP3XUOEFOCx7Q+x
g0P9PjJhIAvrKU/1pTKhv3S2dZOh50te9T4f/CL5dYoU3LPJ3zuOEfn8rvB8
I6y08an2clh3X+JPMfiiyL9lFxlwPL6N84jCHwX0m+b/UQlrjJmWMCzJE57i
DedZ3TolCJ/nrD8+tkQlawym4/jhV6wrpE/D1nsNy3lgfkbzsd5FKvG8EN/D
BTvNXys7Bh+sa+NYCZdOfwxpW6ASbiUhZQ6YbXyNyT44peqwDRt8eOgwd8M8
lYyfTo5ggfP60j8bwOtUGh8wwnOdXVnP5qiEX4yxfaka+4l28dNqcN/mrUwL
cNrHU1uL/lLJZUubLX/h/8o9PHkj/OAfWLN++EXOLJUocdwLmoKvVsvHiMIG
SQ13xuGOp+f2U2eoZKPOwLtRWL6sRIgH/sDG8HcIDiqa6Y39g88zwSc+CDfl
a+Qvg7PnJM36YdE7QV4h01RSu1HpfC/sjm7j728qKXHVyuiCX6Qys3jB3q07
XnXA3Mk7345MUQnLcYOxdtg+PjrJEbZn3SH4CS6Kfnuse5JKEpo0drTATJe5
JI/AV0sVz7yHDwTvH/04QSVHqsSvN8HZfsmP98DT/dxP38DTnp+D6sapxFZu
vq8eNnQT3rkDTk3qWfkKTnE6vqpyjEpuCr9UrYH7T9xsU4Z9qm/ZPodVj/Vl
Fv6iEqHooKhncJSVtNMm+Ir7waIK+NO+Mwq3RqmkyVv6SxksY3Z/RhjuTPvD
9Bj2MxonySNUUtHzYksx3KCrFMUF2xtHH3wAr9Xw2Rc9TCUdb3cHFcBnlJ8I
MsPinpx37sJP5Re6A4eoRFWtvukOvEJG9+6fn5h/60JnsmGbjRfPecAvxZTF
bsIFIrWo+FSiZ9RnkgkvCSxncoAjoq+dS4P38Jg1fBugkoxR9VQqnMkZl3gI
Djn3rToZHmd9f+T9DyqR4w8eToR1Gfk2msF5n4X4rsEJ81bDL/sxPysfaV2F
u6dpj3RgFmJyKgbeOt5xobwP87Gn/WokfHFoveE2OE7CqfQy/KHPnrPgO/IV
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
isr99HyF+8crwV5uWl17Yb+Qp4fu76aS+5dOM++BX/v/Wy8NJz9JlDaF157X
H8wyQ73hKjczhl3Ohj8Ugp0ut7sbwhXO9X5JplRycO3M9R3wipMrdqyCxxq5
y3Xo+bIxZ4/ahfpzS6pDEy44lPCeEd6Uos6wnZ4vixbaBRPU97s7JVThPbsF
7KeNUd+/7TNRgm/sPLLZHV6peMhVEf6llzE5uBP98a3D1+RgXc3uCnuYQcW6
ZDM9XyobL3UYIe8/9n+WhrsVHM2s4JzyXQsS9HxtvsvbbIj83tUSE4fDJEa+
7oJnKrYYroc/iCrk1BigPg6vcV4Hi6/1dNWG5zSXYtfCXryPlcv0Ua/yex6s
gV+unF1QhAs0X3zkhfmWa9be24H3M5w+w03PF1PwVQmYueK88Cr48cJzy0w9
KnmYZ6K7AmadYRYVhFnLBE8up+drYuePBF183v6+iGVw7nB04Qq4Ytv9e0zw
bP9bn3AdjE/WuaZ/VdhPdHPp/tOmEn65bZMLcOqX/Wz+cHX7L/45+GdL8rtJ
LSpZdyd3+wys8e4zxRUWTjxm8xuOfS1s90MT613GyrAJ+GvN8U12sOjripxf
sFzVzfF2Dfw+n0P9MBxY3ld+AH4VzD4yCDcVS4c1bkf/xp7P9QP+73YBmP+R
idJ3+Cz99IE6lVQG9lp1w4T+52AOR7+AbzBXutKtEjWMjztH5hf4RIrPGXk4
h0J98Ql+eO3JtjxVzKcu8f4WmPG/gkAlvcZ3l3+ALcJ1a9JUsN96t0X2HXwr
5GIsP1ztc2/vW3jKv/ZAvDLGW1vS6zVscH75OnbYWCI95RWcfNas76IS9heb
uSpq4D7nuIKFbegX9wV/ew6rnHx/3gdeSP7JUAVH2PBpj2+lEuX5fRKVcNsh
esOB4xFaYlwOS+9PbfyuiPVCgs/lMey7+1uyDdww6B5XDL/eKXb8kwKVZL2t
K3oAC+44KWUBb2gWbi2AT2ve+dUgTyU7p1xm78IVKj9LDWFe1XLhXJhDUTak
So5KoqkMujnwUaRDHc4RMrK/CedL/LehIc5Pw8Mz4UXR6U9b4I9B1Xlp8O61
6lm3t2C9Oz7/hgpn8F5wXg9n2CqOJcO/6FfPNyM/ISd4rsM6yxn/8sAsz+NU
rsHXmAxfXJGhkgfry62vwl0LEdGsMMuNbxdiYMWZ1xahm5AP7X+ZkXDoBP2E
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
KCkloiwtQkIj2YsUiYq0ECVS2Up6f+P98/vBcc595pq55r5nrnlj7GEGb6TL
D16xSGly0UkTGl/0dgSsd1D8khH8kb69drRnp+DiLbBGZtwHSzgzqOOZARx5
uenms5csElmwYkAffnle0G8b3MJxil0Plkvete5xG4skBXUs1oEDzrA41sOE
7z9NbRpfpzqfFLeyiFOlj+lqeGGEBEMdDkwuclsFu4fQBIFFfkeNn1CH7wdk
yMrC31I0U1Vg3kO9g5ees4hFg0+hIkyfli2EFcSvP5WHb7ocPH62Be0vrqNX
Fv5jX2A4F1YU5/63FN6+Z4Q/6hmL7GpYsUgaTrPQaJ9upq9vs0ICHjQNvBwE
j0UFG4nB67fRCQjaf3LqflEaX5v+qnrCeyqLQhbA3es3jPc+ZZEiviamIKym
dZLYwxFBPQX8cNjKWnxiFinn+F43B25R5jXbBbsX/OnhhpfIGy9qasT1DOL4
zQkfWprYsxkWdOJewE7ja/GLnMoG9FcHuZX/FY/qCs3c4GCRI8kchlPwfkEb
7Xv1LGL25s++SbhwzsVZqnDaxu8BY/Ds2XQFG4tYNfQk/oQt/i05txQO9WnK
+Q5nTe7fc7EW/ZNm8aNv8NjP6zIi8FLxi6+/wJuHBr4k1KC/lwr5+RlO6Vcu
5IEjNu7m64U/f6A3UNHeo1bKfYC1uu5umnrMIpf6uXXfwTGvRucGwG0enVZv
4c7nWm3DVSxylC/bpxNWfBqcdgCOa/KNaYeP1T50/viIRfgKVl9thZ9UzlLZ
B//LnyhtgRdj9GivZBG7puIXTbBn0akKM1iR79DXRrji1swDGuLuIc9ZD/Pf
5Dc1gIX7OyVqYLtMM9GHD1lELSpGswouuJzcvQa+r7/KlMD/zrdfv1PBIrcl
X7uWwzuSxXyUYGGx42Gl8JUztpjxs0j/KonzxfDIqfR/UvBy75LbhbA+3X1e
xiJv60wbbsPnQugDYIz/Gz68z4c/BLjbnH7AIlGdh37fhFcdyl3CBYed/SuU
A8+UKy1lkT73KKUsuI2WL7mP/tue1yADlqPbmWC2gFjbdPgIXd5UgvE+d/aR
NLiW3u6EX7CFnrkAi9LurxjX68iPLBbsto0uMMH4xrv/YTJcsumxU1sR8ony
Z+1JMI8ul5IpfC5Ra/gMvFtr28+6eyzSGn6JOx6+sfJ0mT4cnTwtHQP/Vn52
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
fTReK06WOj1B//zxwtwenrFo2HbXY5YYOdQv2wU/ljn3zfwR+sPgd4ntsK0Y
PXCaJZ9TBvq3wYOCFyatykT/9Rv9wRK+9lcyWjmDJYfdBZ+aw1o9UYvnpLNk
fdCEGBMaL3p840OWfHg8zncj7EvLOaaxRHnSsL0RLEe3d9xH+z/dp78Ozn+e
fqwrlSX/pnyZrwfvebRaoPkei/yzWnAtjVdKHr8mhSU5F3O+atJ4xRnKldxF
+wiIL9OA14984c8Sp0vnUlbA7SFb9O4nseRdwV5ODT5/5l1VfCLGKwltlyXw
Qvdde8PvoD+dFbdQhksPtPSG3Eb7F29bvpDGa6fT2dO38O/PMyQVaLy2dIu7
JmB8DPP9PRdONfRI2H8T8fFb/0EWNtP8u8ImniVH+cJPpeGeJfQFAYwnuSXR
M+EL8hO26cQhXpPOnZGE1Waybcuus4TvtcZejMaLpgexLJk2oVtPFPYYHTlB
KoYlVhmx8iLw9H7ZiMnRLLH03zheGH70LWHh6CiWiB7rbRsPWzcqPfkZyZJQ
7/CSMfDAmwcbvkagv9xWTxag8SqhLxSyJKO3mvcvFPHKzTlUEc6S/bsPHx2E
P6bp/31+hSU1HQJm/fCZ2yW8rMu4X1cuqPbBc6JMZydfYkmHnYxYD0yjERPG
kksbb/d1wntGjg/BfLFVubYDHjtSTgT9zTclqw1OGHm9iCXDJYsiWmDDvXQD
AktuLLvp1QS3bXPztWPx93Jm7vgIB22i39izRNYhVKsOXqB7Jm49D+1DZUDm
HVy6YpyaZihLrk7fK1ADH14U+kwlBOOtbElTJSwiS3dQs0TESOn5a/ieWPhn
iWCMz9z5m2Ww6YTZ7kJBLDnd//lcMfzfX7phEdd/erVjIUzfLuw+y5Jv8xmj
Z/CyL/fmtwRgvvxet5DAbz4sz3zrj/mqWmHiU/h4+RPDMj+W3H1/5PsjWLJA
522uL+I9fP9VBkxPE0g7w5LIdd330uBtKZt+J5xmiUqyEj8VHoirCo44xZKg
pXtd7sLXrtACByyJrrmyJRFeE/ox0debJe6RRctuwQ1n9q1292LJ5DM/xOPh
0+4dpY4nWeIQMOtXLCxz0Hn79hMYn29rv42i8dr565uJJ/KBb7seRcD2W3x8
9DxY0mfiHXEFHrN+tMjK4yzZUhXmFQbf1AyOXuiO9nz8znY+vI4eV+uG+Ujj
8RoGHilf68qSrllFs0Pgke1sLiwxmV0+FEjjNfn6p/5jmC/WvvkUQOM1WsH5
21HcL7+aPF/4ELKXT0cQ789VcafgSd9VL1QdZsnBfS/9veCUxiy5okMsuTLu
2V5PeHONVtpjJ4wHRQ8N3OGuElpAEePz7bj5LjReucbV1w+w5Nbt0PFHYbWH
5XsvOWL8eeHS5gRX397aF+SAfETQstgRdo+qO+u9nyWMo1riPlj8gr3EsX1o
L22TQuzhjHNtCXv24noCPzvtovHyOrLSag/uz7rMjdtpvI72Fhnbs2SG/Dll
azhyLy24jPl0rpnIVliTLj92s6RHZ3qXOVy/6dwJ+V0Y3898eG0C++hOFJqx
E5+vPiJ1I43XygsRE3fgftlu5RvBZNF0jNAsqeyf5LKOxks2+skPG5b8SM8z
14NHi8/b+MWaJW8uOKutheMnJNa938YSX1ZabA2s/48e0ID4JBX0asAtPel/
87ayZE7bgTcraLy+rGbSLfH59YUy1Gi86vJm37HA78tNuLwELqHHJW3BeGOr
7aEMO9HySeZovxLVVgvhifR1SjPc7+696gpwcsq73R6mmJ++dU+fB2+6sav7
oAlLJo33+i1L43WFHuiE+OoMv5Om8Qp1mmq+iSXBkb6PZ8Kqvt1xBhvR3sSH
IiThKncPNY0NLJl+z9NLDHY9+PeZkjHmW8dOW1GYrvZljViSp7NbUwSmp09O
W8+S3FWvpIRpvNaz7uMN0V62qP8dD//WFB83aID4hkbXj4EjltIDIFmy4/Pw
UwF49fw5Ck16+Pzbd0X/C8F6featzDe6iHfvo1ODsM9k5fXFOizpT5qyqx+e
PSbtbfZaltj779Hug0m/+oFUbYyHJx/I9MB233N+39BiCcv/O9QJj2rSP39l
DdrTC/1PHfCNmpKZIZosqZ0dRNpgg1J6YDTyrUtFsS1wa27NapdVLNFeNNq3
CQ56uL1snwZLpBpX2X2EF9xp2m6tjvwi44hOHVwa5fh940qWLE2OnvMOdrrQ
6bN2BcaDvBKBGnhioJvIsuXIL3/2NFbCd+nx3Msw/myQzH8Nm9By3Wp0vloZ
Vwb/R7fvqrJEzMLCrxi+QB/nLcX6QvCwfSGstnlqY58KS2bX+eo+g6t0w53b
F7Pk9esLcgR2Wzl7VL0y8oXmmFFPYXGl+AvlSizhJO40PYIzZRfOfb6IJdcO
pORnwNvEU9MyF7LEue5eXBo8MGGFftIClkw9etcvFY7496Q6WhH565xb9nfh
1bRajQJLUn5c002E677QB/wsSWph5G7ReNXRDoff98t7VDwsU1ElcXge8sMF
Dk2xcF6B9a3dczEentyUHwXbP/640kKOJWc6VOIiaLzu7XthOAc/7y3id4XG
i369IcuSBcrtdmGwPr1cGYz3f3N1+DReob9OyM1myZ/vF+YwcKAvfSGQJeL/
7ARCaLyO0wkd86OycmMgXHwweNHfmSxJ9OklAfDBXZOz/5vBkrnfM2N9YWGL
Sxs/T0c+4+1x5hScvH5Wfa0kS7wXqe32gjevuX64VAL5wcBXbU8ar6UK/3LE
Mb+2Rcu4w/z5d5kHYsg3f20ecoaX0uPhprHkofxgwxG4cmTBwBLieiPHCXal
r4+LsiS80TDakcbr9/PyM1NYonm0zWcfnPHd2M5tMu6v1Nkd9jReTeXdDiLI
j9ql1+yC+2u2+tlOYkl3zQOp7fDV0rqpJhMx/zXr/dkGryL2N3SFWXJgSsUH
S9q/HtINh2j/222emNN43aErGpZIFH+MMKH9K7rXQloQ+YOl3cmNtH9dONky
ZTxLfg03WBvBuwOH3ceMw/xftk1jHSzgfW5c/xiMN1mvpuvBcccmXukYjfb3
bG2/No0XWsvHUbhfnSm1mnCL9fSsSgG0Z40ZmRo0XptpgQKGvLtx+vIKWEGP
fuHJELPFTe5q8IuViQfu/mNI2Nu1lkvgA0pLBmL/MuR2XOQyZVhoTsb5sD8M
CQ7tmbaQxktcc1bQIEM0Lhv8mA9vEspP8hpgyKPcsMq5cNc/Q82jvxkydsKn
+7Iw++NlmX0/Q+RcFPjS8JKRgkYMmTR48NhMuGLkgQpDim8kmkjSeFXsOrWm
jyGmh1oXi8FihS0iS3vxeSxmi4jSeNHjCX4wpGK7+fdJ8FZarqCHISUBfmVC
8C/6+kI3Q9iylKTxcHj4X9OhLoYoLqs9PwbW4Pk39nQyhHkyeECAxsuXFkBk
SIG9lNG/8z+1vY/TB7YMKV2goTgIz3YSv/iygyHxU8zH98M5uyLn5n1lyAZJ
h9ZeeJfFnIcP2/HzazwLuuHh9bf0b7fh+gLOxnfCcWuU30R+YYjCV8a/A9ZT
TdvHtjJk6rEw+za4Zb7GT78WhpSJX9Zpgc/NohUCGbL9w0XZJnj+FAPJg80M
ySK8oQa4aEzprR1NDPlS4N/wAXb8bapu1gh/dX/6FhaiX59+Yshjlb3X3sBJ
dDj9yJBdYZu9KuFNtU3tixoYUjl9uc1r+DuyK5l6hsx6KqlRBjOkU2haHUOW
+/6ULIZVRg5YYIjsvoqfBXDFnYFFA+8YUu94+00+7BJ9Jvv7W4YcC/V6mAuL
XRy3qbEW8XltfDEbTg8Mra+uYcg4NQmXR7Cl99QjL94wZEpGvWkG/PNYOEZA
hnRsu66SBl+hx2FWMSRilp1IKqxBy2NWMkT6n9T3ZPg93S5Tgb83XF16h8ZL
L3Xt+XKGhMsFJybAUuorKnxeM+TCXo3gG/BTpWw751cMsS9scYiFd87R7dn7
kiHj1zProuAh8Rd+28oY4tWuKh8BXxfaPG1jKeKZWDX6Co3XUNUN7RKGfA45
1nQR/vzDeplaMUNqQyfkcXBAGz3AkSExd6NjeLB8/T7LmUUMWdWpcuo8XFjR
0TKpkCG3Nj/dHkjjVeh8XKCAId9frVsdAE948mtc3zN8nqNlM3xpvO75XGnL
Z8jPxZv7feAN8aMV6/IQT5GympPwt/DgrNeEISYi69I9YB5vstGzXIbkKmdf
dIMX+9EDnxky6vBiF2e4/Pisg4lPGTKz7JrpERovp+sDUdkMEdwwXsUJnkZ3
xzxBe28/PMkRTrO4O+vsY4bsu13esRe2MFJL9nzEkDfnVErs4L41jzQPZTFE
6uz52ztpvFS1X+7KZMjKG43nbGF1hYIdWzIYsqBx2b5tNF6zNnSuS2fID60A
PUv45JSKU6seMoTLfj3HHJ5Fj2NJw+exkRzeDGfT8iwPGGIpaduwAd5BX9e6
z5ATvRHZ62m8mtqIYCpD3LtrIgzg2NojZn9SGLJOZPIJXVi3rLex6y5D/jPW
s9KGm8hJl+Zkhjjfcl2uCfunD4+qTcJ4MTd2mgY8L/HcxZJEhvzOfdG9nMYr
euK8nDsMGe39/bUq7HDxwsP7txnSZCWSokLjFTTd4OYthlzdsihUCb7jHf0m
PAHXe1T/4ALY2Hne/tCbDOEnWq+fD3fsS/x5Oh79YazT/LlwqM2SQNcbDPl2
xnOMLI2XSYakQxxD6mb5NUnReOlp3ra5zpCEmkAyA3YeeaEP48394GgJWJSm
azEMKUoK9J4GP5jzynp5NENkCn1tpsBbJCy+Kkbh/w97qE+i8RJ6f1LqGkO2
2ByUEIIvD+0SnhKJ/l29rXccjVdvS+ToCNyvw3qVo+G3bU5Kv8IZEqiwMHU4
+Kf2ifru7K9XGNI7PJH5C8+spBsA0L4HOpwG4CeFf+srLjHEblqR0S94xxP/
IwVhDNm5MVqhF/43cvwv/t5N57HdcOxIOWCMV9I6zd/htSPbAxnimjEx7yvc
SE/L5Rjy9kh19BfYz2+OTiCL/m8Y7v0Znudxq+Ikg/lHe5tNI1zgRDcMMmSp
lZh6A+ywO63HLhTjDVsm/gEeb6nhbxnCkAetZ37UwreNcqcZnWfImp1LK6ph
Iy2DeM1ghtzsq0+pgL+qli5bEoR4J58LfQWHKpgVzA1kiEDAooOlsLJUraXk
OYYMniwzfAG/nrKjVegsQ8r5B+QL4KNjaYEBhpx5MWp0PjxlwHF8jx/mA5nw
Tznw/c5OrBjQfi8tyHkCb2l2U3x3hiE5izIjs+De2oGsstMMaWxceyIdvlx2
xoicYsinzMKtD+CVeePep/ng/99dv+weXJseevCWN0OOPysUTYY9E+kbqgyZ
+Htt1214RgwtSMQQv82ZZTdpvC7OlvI7wZCqZwsS4+DtQfHJ7p5o79bhgTE0
Xt4L1xzwYMhkkdH7rsHRzqkvtx/H9TYd0L0Ka+9fsdPUnSHPastkLsOfbLI7
9dwYcuDbor8XaLzo8VOuGN9kA9+z8FxajsoF+YZ7Q2YojRd9PdUZ/aN96aVg
eL9y9ZKpxxAfH1+Xc/A4OZu8sUcZcm/pSxN/+JbEJ7PfhxnCGyuufAZeL7y/
6dshhhj/3ibkQ+M11OHyyYkhLROvfjkBh/Q6j64+yJAda988P07j1f7rYtEB
5CcXJ8W5wi/rfeY9cWRIzzjd08fgI5W04DFDhCNcth+GJxcFG8Ttx/i5KUbj
IJz6ZHLNpX0MeS/zQsIBNk+9tD94Lz7/1O8/9tB4xdMnZgxZKC9SsRu+dPV6
4DF7hkRZLUrZAS9nFKbvtcP4ckc/xAauoY9/d6O9Stk4WsEedDm4iyHrU5wM
LGi8Rg5IYIj+7hNyZvDj3do2qjsw3qr6D22i8bIs+Cq/HfPP3OA6Y/iP0Qav
GbYMcVse8sgQjtKqEJ5kw5Du/cGX9WEtNatrw9uQT2X5u+rAHxXqlXqtMP4u
OGmqBftK7Xn6ZStD7j8+pLyaxku0fdMHS4Y8dLIVUoefj6UHKmG801z3ZRm8
lx53vgX5hLLy86XwWFr+3Bzzl9aU64vhBLod2gz350iXzyIar7fnZKNMGfIv
p8RGEW4vm3ifM2HIZpW4lfI0XnkXdAI2M8Q3111MDl6UMR0jDObvowbds+Gy
xGh7p40MCdEWfTULPhxDD2DE/KTyLnE6LBKW6G9uzJA52lGB4jReQUvE1hmh
fR7ZsXcqjZdPRrzGeoYY5szQmQz/cNZcrmzIkCTlSumJ8MX9+QWy6zC+ZZ8b
EISX2a7fKmbAkHmHVtaOhd+YvGodr88Q1dWf00bReOlbeAzqMkR5IY8bCvqp
PX3kwGbkuxqqh//Aj5V3hzetZUieQ5XRb9hGrlWxBlnV3oxj83/CgxI0wAxp
nyc0+gd8TbjH6OkahlikxXzsgtcMe7xP1cR4ZLc0+xv8sffvwfjViLdKbng7
fKbdf/DKKrRfaSP3VliuYUJoiAbivei1WTOcX8lKnVbHfGNttvgTvKdI/K7L
SuRTt14L1cNjsiPX7F+B+yFu/OUdnJBKJxC07zjyrAY2vHlr56ZlmH9N1WKr
4HZ63J4aQ9Kk47zL4WBafk8V+YnQJOuX8EL6Ov5Shsyd7ra8BC71yI2dtQTj
vUGtaBF86JDB0skqmB8vrOh8BovYleaNWozxeYhfQuBUSzPzn0rIP0LaE57C
ZsY0QcV8oL7G/zHcrbXDtX4h7u9Y3q5M+IJa8+iKBQw53f129UNYTfFA2HNF
5KN/Zaffh99Idc3LUmCI/MJ9vXfh46Lu6UnzMf4cv1meSOM1btAgRp4hjk2N
ybfgR/R0jnnID4/MDI6HrbvGOZybi/sz02TfdXigmS6AGSLeelonGo58OzXo
8BysVyqSpSNpvOjrJbIMcah/8/sK3EC/bpJhyFfBwTdhNF60+c3G/bSQesCH
ZZMWlqyWZkhirgbDwHkxqTYqUgxpM95yMAS2D1vRITcL4+9Px3VBNF4jL/Bj
fs87KXcWvjnyBRtDJJOD/vnSeLm8uPZXEvHIuPD+FNy2f7NytwTaX2N4hhcc
ZFv99LM45gelyAue8AJTm81vxRgy7crVI+5wif6nhtJp6N9zwoxdaLzocQ9T
GSJUdn7+URovWv5BFP3tss+oQ/A9ObrhD/nsmUMNjrCJJP0CH/nheavH++D/
hE/d54kwpOuh1mV7mD88Wtd3EkP6/s1x2QWr9gVXuk2k6weBzdvh6vbJexyF
GZLZU7fAmsar4dIPWyHke9cejt0KS1bNCjCZgPXT/qBGcziz6LqYniCuz2Tb
UxN4WzYtEIDx0nre1Y3w71T6gJAhqX7f3IxovG6qFUqPxfhelmq6DtaMeLRV
dAzyoeXOSno0Xoz2lzGjGeKfoyy4Fj7lX+DRL8CQ6w6tzZqwjOcGwW/DPHJr
SWSuBkwOVYR/HOKRmBkbI1fAdnZWC6r+8cgZud/H1eDRW2lBIR4x2RBnvoTG
a+QFBB4RDDNcrAyv025/f3eQR+79aZuwEG5VO4qMnEf0zp5rmQ8HKvYNhv3m
kWfKsnlzYUVpr9Cgfh5R+Zl+TZbGS1RA2vsXjwQ1GHpKw07jAu8e/ckj5a1v
tsyEJw1O1NrTxyNjJ+9WkYTvdtEChDyiYNUqJAZvpseL/uCRFbmOrVPgLlpu
tIdH1Ay/5E2CObr9qJtHZnfZRQnReOUnTpH/j4f29dZzPI1XxpLr07t45Gn0
BosxsHtSxtKJnTzikvBYRQAWj9XMH/rGI5Kv5IX/BWK9HpZv/qODRxLFea0D
sFUwLVjMIwt8/sv7Bf/2oS9Q8kjkGNOoXjjCxWLMqzYe+ZWU5NkNazq8D8v7
wiPrXEdbdMJ1trvl01t5xNfGSqUD9jFtTb/dwiMpdreE2uDZBofWXfvMIyVB
P1o+w7kaPTVsM49UvV6d1wjbLfZ08G/ikbIVZ641wKNGDjjgkaynxOMDHD/y
gjaPcHv/mr+F9enX2R95ZMeiFYvfwC10emvgEYmpThMq4XN94qsM6nkkb/q1
z69gxa+RJep1PGKrXZxbChc3zLFV+sAjX872RLyAnapudci855G93ySPF8DC
L5S9p71D/Fw0zPLh5Gx6IBKPKM+wUsqFN93XiBqo4RGfj8fGZ8OdN3OVO9/g
/heca8qCuQiDnMZqHukqDX+aDquypZvfVPHI1J6E8AdwFT3eppJHFNXvu96D
XWm5mwoeUYrO3JwMix3eMXyvnEfk5z1ecAdOt2vmbrzmEdGSrDEJNF5b6QGK
PNLBpn2Mg/uNu+6ff8kjT9wTH8fQeGm7654q4xFvr6hL1+BVywYrnUt5ZMn1
0GNX4Q+Kvnv2lfBITavHhsuwt/T43m3FPHJ04675F2HpqbyAjS945E+FrgBH
4zVumvjaIlyvh1xdKLx7MBw9GNen+S8jmMZr5MBlHrGQq+Gfg+M+xxfOfM4j
SQqJh/xhvXcLrUSe8Uj/xpOGZ+DPL1O/COTzyKoL6+R8aLzyV3j2ER458kvk
7wlYITNbsD2XRy57V9Uep/FK0r1al8MjD+aEPXCFD8bSNzLRH1tNecdgoUub
Hz/L5pHi0gmOh+GkYLpDCPEvz9E9CG88ZfMh8TH6d99RaQcaL2Sn0Y94hL9K
un8PjRetBpjFIwdiCit3w0u3fws9m8kjK+cdursDrjB1kT6RwSO/X0wKsoFd
DPrvHkrH5+El2VvB01ad0tr9EO3RxWCNBfyQHqecxiNDxz9ImsFbaXnlBzwS
Hnm4ZxONF91ueZ9H5n0aLDOGr068fGZxKo/c0T93yxDWEJASlbvHI3LFE/30
4fd916+Lp/DIxcPsdh3Y66uC6oS7+DxLRVZq0Xh9vJv/J4lHLCWCRVfDOVVq
W/5LRP+eOdyxksbrxaPm5js80qflWrgMHs7Wdqu9jevzb4pdCl+/XzCm9Bbu
/5dNXoth3YQNl3ISeCTKKd1yEdwcUSH/4CaPPJ88Y4kifJa1yrgZzyPNVZ5C
8jReAfXrrt7A+JBZ/XkO/MJzT21oHMbXbKXc2bDj4XaHM9d5RPjTmauz4An0
9dhYHhGaV+E6HU6kj8tieGQwUHqzOI0XTZ+jeaRdeL/iVPi7tkDi5igeeX0v
cdRkmF0WuEr3GsYX1446YVhlwaTS5ZE8cs5KMVMQLpe+aLsggke22trxx8LO
U+kJrxg/T192GgVPHR/jPSWcRxryiwyGziFeg/MmjbmC8W5+n8wfeOt/iVG/
LmG+SJw90A//+rxkcUcYj/zdpF/dB18Z2bDHIzdE96f0wOojx3nxiH6ff1AX
/G6kvBePfOqPsv8Ge2WuP/aI4xFnqYea7bBU8qvhZJZHBHYXSrTCObEW/FiG
R3jPqv9rgndeej8njMcjkww/lnyEh4L/x9Gdx9XUhHEAt2RJlKikRaQsUUoi
pShtqFRKIUlCSCmVhDZx7j3niqiQokSFCkVCepAtlBIhS7TYKZKS8P7mff/7
fvTWvec388yce8/MLDu7U5CQ8KEp8zl8ZFuzRQQvoT5577Y9hWcFswX+Etq0
5637Y7hh1Tef5SIJNe57Y/AQ3r5kU5srJ8H9xlOZB7C205/tdjslVNh1r/ke
fNNqu8KMHRIa4nWZ7sCrpksfnxQnIf83WQdvwv30dhuN3o7+Fhe/8Tp8QlPx
llIsxhO7YAeC5w47tHBAjIR8J7iMLYE/y7ANgdDf9PR6XoQlPbI3fYvEeOXc
9/l5WLd9Yv/mbRKallR3rgCu/FBw4OlWvP7Ok/Gn4cBXxuPvb5FQwZZNfrmw
fE3pRYqQ0OcRsyxPsLxuW80t3CwhtQYptSzYteRuXVa4hFxu3mw/Cv8447Qu
ZRPGozuxD47AScfZBoISyv1keiIVnpriKYkJlWD+/i32IMsrvkEtNERCfxKO
eibDm7f75fltlJCmotPUfSwvdnx8MPIt/iW3B77MtpMPwnix5cgHCezJlpdv
kFCsl0WZGP7jFt0yNRDzkeX1qTvhw3P7RusEYDyL2xy2neU1k204jPHvtpxT
NPzGcEiGvD/quc7R8dtYXuMOGPRZJ6Ge+fq9I+DR6iOud67B+OZ8+UUYfEP+
mMtnP4zXCpZFG+GVfXUa61dLaEbHjd0bWF6/T2+sWYX22zV7zXo4p8VI6vZK
CXmrk+VallfT5cRLvhLa6D1VbTX88Sk7oADXq+xE+wpYqLh9PsNHQok2wx94
wxOvO9gkLZfQsQ9xOUvhiqKaWpG3hM7lfo5ZzPJij98vk9Dt3U5L3Fle7Ot4
Lwk93XtmiitcwG7Pl0row/mBss6wi/iTsrunhH51+r5zgNu2BZ2Yu0RCgzwv
Xp0LJwazA40kNLJeOsUWNlq97a7BIlavFm60gp8s6b1E20NCDtZH7C1YXk7s
F6L9jWvSNodVrOW2DlwooW0TtP+ZwJemJw3s4SahZEefp9PgJXqqaW0L0L4S
Dp2dAndrZui+c5FQ1Y8q3oDlxY4vdEZ729TLVw+eybYzdJLQUFV9swksrx6G
9dfmY772apHSODimvTjwvCPq/7WoFi1Y8yMrWBKKu5FxZxRchmqQao/x4h1l
jIB92erjeagPOnURqnDfO1Vnt8/F+B7fukCZ5VWy0HLTHLQ3+d66ivCcsy8e
rrXD+HtOvu8Q+MNxdmAy2tMmtXpZmE953+Zsg/F18ehiGXjC7oA4a2tcL68x
Cf1ZXtvZhAjz4RjttX1YXuERxyfORl43Rs7uBQ9e32PqSEv053HKav/i2s3P
LN95a6gFxsNTMu2/YeeFA937zcL8wvF3RSf8fe7ed13mElIe8i6rHd43Uxk9
REKb2yujvsNGUw73b5iB/DsLPFrgJ+O0Dj42xftR22fwGQ5XZzdcqD/LAgd8
gJWH6F8qmY75TpltYzN8sW/R3DPGGH9s1Eoa4MW/TZ9nTpOQysfPifVwd8u1
dfunon/lXVz/Ak5rsu3mjTCfSoi1eQbPfFYhiZwioaJEW41auL5igXqwoYTm
FvfvfAhHX3+Wt3Iy5n+/b1Y9gEex4zMMJLRzWdSJ+/B1tp2GPub3jVNiy2Hf
9HXLZk2SUN3Ot4tvwX2SvrUY6kkofm6iYRmcLd4UPVYXv1/PfOBV2Dbyz2DV
iajfk5uaSuD3wdszZCdI6JHbzisXYfFq6cm9dHD/clAruQie4Ln7evs4CUX+
KQ0ohCuc2AfGaE8xbrZn4ADMnl+MkZCN9nuNPFjWZFRIlbaEpnwI6zwBn9bL
lrqhJSGdip7VWbDTaN2kC6NxPapFJzLhb8MKtU9pYv7XLhObzvIaOL3o8CgJ
mU8XFqfBU3qSzd6REnJP62uYAj9my3s0JBQ2KlJmPxzKHvcZIaH0m98a98HD
2Md/6hKqFi8v2QMXs3KgJiGZgIrEXSyvO57DXVUx3gQbrefh3yUNJ2xVJHQk
+aA1B6ee9TMxHS6htrpf6nGwWdbXu3rKmL/MXPgzGn6Vwlb8Sai0LL9yGxy1
u+uTohLuh/x6Z0fAI+PYF97ovxNdozaxvML7DvozVELG8hnuIfCK9ZK01iES
uqv4cVIQLMWOa5WX0BqTSf0D4GNs+9bBEpKL2vB6LWwzb8T8e3ISutaYV7wa
fjfzWH2pLOqH37s9viyvKTobCgbh+g9SX7Mc1vl/gT7a/0NHCy/4njp7oIbN
f7YOXwL7DykZtWuAhF5fzvrmDg/qZ1kQLY3x5vX9clc4//dty5D+Enqm3ZLh
DM9vdahZ3U9CTfygCEeWV1PNiiV9MR7JjXOZB+99tuiHYx/Uw/PmOnawYWV9
nKUU5tsRzr2s4ZrrbEMftMdl3nUWLK8L7IE9tFffdQXmsFJu0FT1nhLS54N5
U/hCesetwT1Q3x+E+hjDi5K2uUv9E6ivUaiJEdwl7v2+449AsZc2DJkMH4oU
h3/qFmiQt99HPXjGRjnp+t8CHdf2vD4BfrmardAWaI6Mfco4ONKTbQAo0N/B
xsHaLC9n9kCwQDR15FxN+Jr12Hl5HQLt3iqlqQH7mOQ9T/8pkH9D0y9VuPck
Q//EdoEW+l2rVmZ5jb7Yzf0QyEk25YQibK08c9eWNoHcHwXEDIHfDrypHvhd
oIBLMxfJwSJ2XNA3gfZdHWgwEB7Ptg9qFaj87eP+0vDd/xccCCSje+h1H3ht
/YtlZl8FWrbPs7gXPPCRT6v+F4GuDlfZ8297u3nenffRWp8Fmny1ZnU3PP9K
AGaUAhXsFM/8Bbee/ZEh81Egq/Wmw37CCVkRk/+9F6hp44ev3+HJh3qUfX8n
YP6/71YLXLObHTCA9/dm+uHPcEgcW9Ak0Hi7F6EfYMXNe0MqmgQa+CDC4S18
Yb1yn2uNAv0LVdRuhD18DiedaxCop1ludz38a6HWmJw3AilozXz0Aj4472TR
odcCmU6oPPUMNmXLB+sFCnJZtL0WfsEeJ3wl0KWDrxfXwJHs64WXAin29J1c
BWuw6cYLgaJFjdIV8NUhduKlzwXqmrTsTTm8vF/lcOc6gfiO2uJbcK/uBSet
ngk0sX7unjI4s/WZifFTgV69vbT6KmzVvOzehCcCHZMdO/MK/PZZ8xKNWoEi
F+5WugRzles+D3kskG9p25cieNz/BxgKtMLG9WYhfOf/BdkCBX89k3oGXsuO
p67G9SySDsmDZdh21VUCVRz2mneS5ZUkTY8e4P1kn9bMhh353fPvVAq08UH3
r0y4JVLx9eUKgRqH2VSnw3s2Htpw+r5AftFCThps4DeqZ+Y9XF/piqgU+KEn
O/BYoDNnB7jvhzc662ry5QIFRljpJbK8bAoLtt1B/isi+iTARSbTZwfdFkjP
P/fFLth9EtX43hJoQlJdIQ93jLb29bgp0MxXUgLH8lK+92PeDYFW2U7wiYNN
BjnvmFmG61XlMD2G5dXziaLhdYE6N/sPjoS3/fTMGnNNoCWzuXcR8IhPDVNV
rgr0fOLh0k0w1fvdHkToT1PPJoXA3o++uvcsRfvwvuofBPcsD3n/o0Sgxyfu
zQ6Aj17pCn9/WaCcoTUq61heqFYvLqH/pNV+Ww03Z/VNeXBRoCTb2ju+8M5D
Ep2yYoHy5R8eWQ6P2TPkctEF/P3f5WFeLK+4A2iBAo3sW+qwBF6zecSLtPMC
Rejna3mwvNjpZ+cEaolI+e0K5/ro/IkrFGhzc+xDZ9jB/cyu8AKBVDesPuEI
f2XHo50V6JGKXfQ8eDfbLu2MQFnNWu52sL6R5cwFpwWKr/qjaw1Xj7/zwCYf
fv5QypLlNcLR2yRPoOy+x56bwwpDH7Xq5gr01DmowBQ+329xzKhTeL1XTMTG
sFt3vbziSYHi7Hp4G7G8Wlce7X9CoD9t16ZOhg80f5rcnY3rQ1GDJsHT64LK
WrIEmnFqetME+Hllx4LG4wJJXWi5NA7eWratqfaYQG8aMhK0YfXi3qF3M/H3
9Zz8NOHSXHGf0qMCfUzpMteAl2XIJZ/NEEh5bIaiGtwjOWnM8XSBFtfM/qzM
8mLLk48IVHKk4boiPJs9rnxYoCmSbQeHwE3s68s0gW4fUNggB8ex25lUgcJu
ZtsMZHktNfy16hDa35Bp6tLwbeeL4sUpAmlGXW/rA/vZzFRxPCiQxsC5d3vB
A0xvnrQ4IJDJxYr0f7Ht5qcmzTM12i/Q+p0Om7phe63qe+OS8Xo2ljv8gj9j
dq+WJNCYGAutn3D8oJef5RLRXvLPd32HJ/Vasa33PoGcu7WrW+Dqn+8HdSSg
3q3dm/0ZDv5/e36B3nd0bfsAD339Q+/VbtST48tc38LnHkVQdbxArRuv6jTC
buU9nG7uQn4+6j1fwz+v7HxdLMHr2xD25AW8v2BgUK6A9n74Xt4zeHr23p7p
PK7nF7W4WrjukPLefWKBeniuXVwDb9lzWJMT4f18LNSvgtV2aBVGcAIdPPir
bwV8ZTPbkAf9wc/0ZTnsFaD/aPkOgfLcNxfegnusKPJ1ixOoYVWhuAzOcJ/R
brddIOPkD8uuwpb213fMiBXoZLPq1Ctw4yw7Jf0Y/Lvb3IGX4DijyqzR0Xj/
TSENRbC2juu0YVECFSYeKi6Eb42ouz0gUqCjvqXxZ2C/oWwDP4FyXV/65sHS
/d++/7YF/cW30+QkfLJ73ebmCIHUk+Tks+G5375JP9uM9t2s+S6T5dW8KeV+
uEADFk6+kg7vqvujc3UT/t5bs31pLK8H2y8XhgkUvt96TQpcVSZtnx0qkJff
nJn74aDi3S9SQlC/Fs1RTISH5LENf9H/1lp/2gMXZhz6ExMsUM0hs2u7YFd2
HGQQxqcvBvt5uJ1tD7lBoOtemus5lleU7mnPQIHWtsrOjoONQwpnOgVg/D3a
oRwDP/ObXjV7PfIOefF1G7x5KXlP8xdIZ9WVGxGwqov1N511mB+Ep6Rsgkts
2AEBqKcnN24IYXmZOg8ZskYgpT92NkHwv0lPjvbxQz0JVFELgNO1WAdB++j1
/tta2GJ4Y9nnlQJNOn/29mq4YdAa19e+Ao0TbUrzhbf3asGMTaDZW6ZvXA5r
dYSE3vbB+BbfYefF8vrU1efycoHqr50dsQRe/ZodKCSQt6LfD3e4P9v+YJlA
fcQqd13hHLYcwgvjmVr5EWeWF3s8YinG66qNoY7wJ/ZxiadAd46pzJvH8mKX
bwnG5wNXRtrBeqnHfq1YLJBLnudPK/jBHh3efZFAd9903LOAN+w4ozLPA9d3
6u4Mc1j+/wMIMT6d0txkChcElJhOXijQ4FkF9sbwghWW97XdUI/bzTSNWF7u
bIIv0Ny7NzsM4GR7xy8DFwh0hOZU6MHTLB5t6+GC6/u4/OgE+Ak7jsRJoPMD
bMLHsbx0Xh9+Nx/tybvUQRtW0Vg16bmjQD61k0drwpeHsgOLMd77Z3aOgJf2
D3a6bo/8NAdXqsJ/uzten5+H+WVneKYyfOQb+wBBoK0tL8MV4Vlve/dKmyPQ
6L4zHYfAb9huy3YCfZmROloOjn0gNzrOFvV4X3unDMvrRlLhJhuMrwPmVfaH
bxarWq2zFsjoaGpmH3hVXsYjLyuBDi/6GN4L7nt07EqX2bheBlMc/8Ugr+S8
dmtL5DsuYnQ3PEdgH1AKVDyrpLMT/hh1UUl3lkCl4V0V7bAkZGb2yJno31VT
Mr/DumtuTlMwR3+Ysy68Ba5cOu9OPzOBit6kOXyGA12qPX6bYr6Ycl/zAzzY
1v3DVxPU640dHc3wWdOXmxumY3z3H1HRAC/QXzGg1lgg/R0WR+vhH1rsCxDM
f0q9N72Ak4YHTrgyFfV02Fb7Z/BU2fbLZ4wECknYN6oWftJri/2xKQIZTsj+
+RAO7+jxcr+hQGrNRfcewMM/71wvTEZ/o+vp9+HL7PhbA4FWX7wbWg57su1w
9QW6V1M59xb8p1wZCaM/yj7QKIMPl7IvWAUauubeD4JnFmrNctAVqK2xrLwE
fp19smrWRMx3I4sPX4RjU/WXT5mA+mhyYmMRPDqh6NtYHYFSFJPtCuEbqKaq
4wXSko9SPwOvjLg+RG6cQC8m+n7PhfsG2mX2Gov7Dz/r2yfg7BWVhj+1Bbp/
QzM1C7bzYA9w4P7HontDJsvLvs715Wj0j5fV1umwYOHdXKUp0K+DmSpp8MSp
b0NvjBLoXFhQy0H4vo5/3+KRAqVuNL2RDAew7VU0BDq7p+fBfbAcW241QqDv
FWXr97C82ONX6gItnRBruQt2YR/HqgnUnjNjGA+3sfKsKtBlm7ZPO+HEt7vX
rFcR6LRU1tXtsNFzxS7v4QJVNrgmRcO1Dw7xrsrI582/NdvgTTdGqdoNEyj5
X5Z5BMvrYvYpUyXMT8znDt0EX8rTnTFJUaAhaR/ebYSXHC28r6mA/qq2o2QD
3J08fanSUIFsLqslrIcxlfgiPQT3exFnVq6FzdnxS4PRPhbPMlnN8gq5J/tN
TqDPi+7L+sIxa5yPNMlifrPZtdEb1vR6MunpIIG+XXx6YSlc5rL06r2BAk1V
WSRZDPvaNjqRDOYHKY+93eE+M9a8KRggkKupo5ErnKXfEpQljXrbfV3ameWl
zR5wx/3GS8NXDvCH4b/37uqHevoqvWAuzMvGjI7pi/nPP2nOFtbp3e9cSB+B
PC0Cl1ixvDokVn5SGA8zqyZZwOtx97GkN66Htp6UOcvrzYGV83vh9d3mnprA
Zx6P+GnZUyBB/DJ3Guz8/wZ8Asn7T4qZAn8vZQtoeLoTsM3NAN5XeCZb/S9P
+Qm3x+vBU3KmGsv/4enWo0F/deDHqSV3pLp5Gmzs9HAsyyvBclFnF0/85fgs
LVh5550Pn37xNH1ZecQo+GKEY0R9J0/Ko3vMHwEvDnw0oKaDpzH9DEerwr9X
sA17efKT8ekYBqf+v0CPp9eTdt1TgM0cVpXk/eBpR8i5I/JwvcVn+4w2nryf
PdkoC0dPDX6Z+J0nf68OWxl4FDvu+xtPp3oPVesPX2fbf7fypFKu0yoFr1CQ
2h3YwtP1fPMbPWEpaV5jxVeeUs45Hvgbjbz+yJ1Z+IWnrLrF/r9h2+9sATBP
b0eumNUJv3+rWm32iScPbrVCOyx6nrHc4CNPPWT93n+DdarGftf6wFPdOd+S
r/C9G3mxyu95+rBl6Z5PsP9Fw6ED3/E0cYWL73tYNv9i5r9m/L21s42b4dNH
Z05pa+LJZa/+wAbYaT87EIgnw7rhr1/B3wS2wQBPcy3/FT6H90ZXN1e84Snp
7mvuKWwY6h527TWu98bSJY/hx2z7pnqeKk0PTHoIh7HlnK94uqQV0PsBPIw9
3vkSr1d31pN78AX2dc8Lnqa4y566Ay9i07/nPJWlP428CXfpswMEeYobcMTl
Onzo/w1MeIpKXD6GYDMVrmvpU57yzEd2XYZfyQ4SnJ/g9Ug/ryiGo3rvU7Wu
5amoLSHjPDyyUznX+DHaz1+r0AL42ufDMyY+4mn/+B92p2GfN1oVGjU8vQg5
opYLS9WeXDr0IU9ur21ac+Dj7Li5ap6k/T+WHYdtiG2QxFP7MH7/Ufhd4Qy5
r5U8DWvSXneE5ZVz/cibCp6Cqq6Yp8Lj0+z0H9/nSeql85CD8N2Eyqt37vH0
QLqhOYnltdPVueQuTw8XBlzcCw/aUvfmdDna/42fkt1wfqB3cOYdnmKdt3hL
YEfft7323+bJ4N9vQzHc6sE2YEP7qwjvtxNOcPg+OvIm+sflb3WxLC/L8HNB
N5Bf+ar8KPjR1L9WK8t4Gtf5JGYrHDoh7rHHdZ5+2li7bYaVRg5YZX+Npz/n
88eFsbwU9vyceZWnmdYK3cGwh7QSZ0jI90fog0D4159Dw8aW4v3eqDnqz/L6
PipH5QpPPud0w9bAM95lG8uW8LTnxvY5q+CXz3XLe17m6cePx2or4MiqwkXt
F/H6rLVal8EaN6d/fF/MU3BRQJknfPUiRby4gPxszycvYnnlW8tUFfFU39mx
ZiHcO5Ot8OYp4O5UswXwsf3OEy+c48m4JGiwE2wteVJyspCnWZU5jfbw2+il
DocLeNre40XRHJgLbXyZcJan3gtkeBt4HDvu4AxPpTenLp3N8vJq+Rt+mqcL
Hl76s+B1C0J3++fz9FkmtrcZPNDut4Z3Hk9e9Rm10+HcGTFnFuTyJFtz5cRU
lpdBPwvbUzx1vX281RBu0d5VbXKSJy3Vj/P1WV4qQ330TvAkBHZp6sKT5Q7i
CvKk39T353i4prfGdsVsnoZslisfA4d0HhsqnYX+qqeQOhpW/KJzrPsYT4m9
FQNHwkVvzkxpzcT//0veUh12r516s/EoTzJyMooqLK+7JW5PMlAfrXu8V4JT
yPLt3XS0r0PfLg2FTdn2cEfQn4bU7xoMv2DLxQ/z1Jpzx3sQvI09Pp7GU1/v
fMMB8Aj2dXIqT57T9vTtBxO7vTzE03e9gGe94eVbVs2JTuGp3MYutwfca8Pn
ZxsPor9Fjoj6E9VunukbvHb1AdSDJ63OXbAVqv3i/Rgv5pNWB9zsECk4JvN0
+L24ow3eaSmlZpmE/p3hdLcVHjeNzzVK5GnglqFpX+DyCYPNxu/j6XjIw8CP
8NqRyRVqe3naFr/L8h084P/jNVGP71gpNsG5/2+3ifao2fnuNezwd2xURzxP
u9OyL72Ev37Pk/u0C+3LeMGuOnjPO8P0VxKe4tu6lj2BDV5c1H8o4PpUHp78
CH5YNfPaTZ6nA3fN+1TDG2/edL4o5mnr27onFbDCpXkNuSKecjQ3nrwLn8+v
Dk7nkG9Uv223YfdM996JOzF+/N4//wbcuf/lPm4HT4UHtDSvwQclK7S2xPH0
3i3vxxV4esyHcwHbMV4ZTr59CX4eGmjtE8uTqkHhwQvw1rXtj91iUB/m6/uf
g9WXsUB4WrrrhPlZmBb07JgRxVPTpxHy+bC3HcfpR2J8Xrun8STc02yQstY2
nkqk/57Pho8a7MsZthXtu3y16Bg8e8zw6TJbML7kVCzOgJtU2Ia7qN85k3QP
s7zktBd/D0ced3b9S4HHSp362LwJ9VT6ffV++E4nK/h4f2vMjyXCfl+KZCpC
eTr2cU9YAsurYUbq1RC0F6HeLh4+VXt94rmNPLk76KgKsP09uyvZwWivk4K+
cCwv3B0dCuJphME5ioN3s+NdNmD8XtCWEAPrn6gLiA3EeJqs5xsJV6V5/wsN
4Olp58qpW+DgvWxCydOvLQf7h8NDOf+RS/1RzzTK60JYXlu+n3Fah7waf+QG
wQs3hFtYreWpz221qAC4w/dv9bQ1PFncm+W8Dj6wKM5ngh/ybPEe7cfycmQH
+qAeTtnW7gvXWe7ZPmQV3u/BpNvL4S3TlBT6ruTp34iTB71YXhPZDStPGTcu
rVsCl47UNPriw9Mu/raZB7xMMefm6+U80YYqOTe4xwC9hY+8eTLf9PiNM5zB
tp9cxlPPw7WFjrAl247CC/k11+yYx/Jiy1OW8uRrX+FuB+9gj6t44v08uj7e
Gh7DPr5awtOXLed+W8C3WXNezNMoq6MV5iyvS0/mbFvE06GJkiOmsPTppXUb
PHhabhQcZAyfzGxc6+vO0wYv19lGLK8Da367L0Q9yJ6sOBn+ImnBjAP/Lj/o
nR4cH8MODEb7PNRYPAHWC/udO3kB6pt1ET+O5bU2xmyMC9r34B2e2nAQO07Y
maePXfP1NFlebHthJ4y3fYf10IDP2Q1t6TGfpzUGddWqsJvZwagfDugP2w5m
KsM/DTQGv7fnSemDa6givH/M8fTn81DPQwfaDoGNVScYPJjLU8uoq8py8DO5
s9euz+Gp4mvgRxmWl9Q0lyI7nrqfq5b0h9V+sS/0MH59KNvVB77yxXJjmg1P
psP8lvWCvdjpstY8zVvZ3+BfZLv5v1q2IyjqQc2xXt1w+r1HWuGzeXL1MXvU
CVtcXXx+nSVP9vIPj7fDjedeWy+z4Gnva59N3+G4E6tqXWbxNLaqxa4F1j78
eZXNTJ76vw5X+Qzf2sseGOBp2uC/n97Dq7lOTteMp/PeUVea4f5bI5VHzeAp
uro7vgE+uUHqhIIp6pdPmHc9PG8lP72/CU+9FD4bvIA/Lxp897cxxsPmpb2f
wRLH5MUt03i68uTeo8ew3my1Tw1TeZL/aJT1EH4w7eiWWiP0b7XUTQ/gDRPZ
A0moF4F/7e7DQ0blp14xxPy1wVOlHC5UnKJ7djJPW8IufLoJuw64dOWYAU9L
dGSvXIfb2XFW+mj/f73jCU5uu/lKmMSTXNvpZSXwtPfzAqP0eGro91v/Ivzs
RfW/YF20ZzPLXkVwRLX7nlUTedq0d0dNAax6iz3wyNOM/jePnYZLLq0466DD
k8PhHmG58NLTHywsxuP1uxrbnoD/ZrIdoVFPJvgrZ8FHDrT7jBvLU5hm6oej
LK9dW9pUx2A+PP3OpSNwQ0zPODltniKCWoVUeHsYp9Bbi6fQcoWlB2GtdYOO
/9TEeGdhpJcM31zGHqjmaW2d87+98CrX4XiFeP/71lbtZnmx7W01eMr0j8qQ
wCfYdjcj0N9X7QkWw3PZ8jd1nsZHp83eCX9kj8Op4fddylLYzvJiH4+rYn6n
kNscBeuy4VKFpze784q2wpVSZRd3DudJbcIpbjPL6xdbsMFT9ttjHmGw/NfK
uvXDeBJfTxm/ES5ocF23XAn1p1TSFQi7PKn77arIk83ziHv+8I973hI7Bcw3
lFemroGTrr5VmzEU9zeh89avYnmd98+bNISnV991zVfAT9nx6fI8Xd4zUM4b
3sy2Ux/M0yfHd/WesMo+tiAM9UK39Mwi+DIX1/JnEPrHxISYhbDn1gHR3wZi
vJ/n7bIA/rNhz+BmGdQDYcJoJ5bXSqWMpwNw//fxe5s9PGtxqsF9abTXdUU3
5sBvHDWvU3/UM5mwJBs4ZnaOS2E/jN/3DVbNhjWN9Rqz+vJ0Ju/D1Flw2US2
4BT9+3RaPzOW1ygTqXgpjD/VDk+nw/2UribG9Mb7HdqVMxXOGWCDO3SM36FH
NxvCc/7dO+/Xk6eaTpu5+vCHNmcbzx6Y/6e+U9GF+fdPauf/E1P2srhP4+GJ
L5eunv1XTAdmq5eMYXlVN3ZM/SOmV7YFktFw4C22oF1Mkf6zl46EB19uUR7x
W0yhZ6t01eEzp0NPyHeJ6ZbS4r/DYedjv6f3+SWmgNT6SiX4+4GYu50dYtpg
ufzIUJbXrn5LPv8UU0X/+sDB8NTYXZ/q28W0rcVj1iD4SdjQrTU/xLTrZ+Xg
AXD4/xvsi+mbusWbvrCyN9swQ0wFK0+f7Q1fdD2um/9NTPcrhsf2gJew4/ta
xTRzYbTLn23Iy+ysY1KLmGT/NWh2wYcnT6sXfRXT1DsWbT/hmWOvBG79IqZL
Z1PL2uB61dk9NnwWU9Lltn2tcPTg8j0rPuH3N9v4foFH9WEH8ojJRz95yke4
7P8NecTkdOiN1Dt45dfFlubvxXRwzPjHjXDfxtcPDd6Jyfyh//HXcPaTVSu0
34rJ4nBu6EvY9v7nNuVmMaXx763r4PdXg+MGNonJbf9IpScwf75ToUejmNbe
cH1bA088GXm87Y2YnsvvKKqCKw6zA/zElBN1dmcFHMC2z64XU/WguoV3YVm2
ndYrMbmX/B1zGz7Nlte+FJOZoNFRBjuxx21fIN+IGbevwt/Z12/PxaTCu+2/
Aiey6XidmIZdWrv6EmzETrN4hjwHbJ12Aa6dPeXS9qdiGrdF3O8cHGbMDvwV
k+nAfU/OwMN02YaCYsq/ciA7Dy4edWud12MxRe9O2XQSXqJk3+38SEynYw7Y
ZsPdAx5KrGvENCtx77BjcNo/d/XpD8Wkd1v0Lh02+/Eyb2K1mCJUtlxIg1+x
4yOqxKQdv4ZLgaNefqgc+kBMkzRd3fezvB4GYkRH+641GZvI8vp/w1Ix+Z5S
79gD+17eEv31npj49O5bu+A+Z3rKN9wVk1LRk2QePn6My3hcLqYen/NXcbDN
wUGTy++Iaa5l7NQ4+N2ufddLboupvdi5bwzLK3b4gjO38PNO6rXb4AmbjjRm
3hSTf7/m4xHw/XXaIftviMmkPid0E+zvzTZEFpPfEz/rEHiQm0FS5HUx/WzR
UgyC8+dc0A6+JqYP4142rWd5mZsVrbyK/z824dxaltfkMptFJKavvy3iVsP7
xs55Yl8qpv7JXxf4wlPUHqyedUVMUU77Ry+HHw126zQsEdOiCTPalsKhfZ6L
xl4WU/KYl9cXw0pdbMN19A/LiL3u8MWvb0/IXhSTceRQH1d4caO/Sa9iMWXU
5Rg4w7+ffL/bXiSmNe4mPR3hQ/fDl3w4j9/343bVXHjGtb+fXpwTk1aBc7ot
/PJ83NaqQrSnPU8CrVheJwcMulGA9hS/aKYFy+vInrQLZ8U0Me+JrDl8nR1X
ekZM9p+dX5nAK0SppYdPi+nBvDt50+De2zTn780XU/E9k22YApsfC8qp35En
pr7+J+wNYOtVehs25+LfJyqo6bH+tfhcj/WnxFQ5aMsnHVg83yTB+6SY5sm9
ujQW1rG6Osr1BP6+gRmvBd8ztimwzRFT0MYDi0bB63TvW5pmi2lkbcu4EfBA
TZcavSwxGS6a3anC8lJ6ukLzuJhOdu+9PYzlJeP1Q/GYmCRXXyUrwN/+NcZJ
Z4qp6tiYVfLw3h9rFP9kiGnribVGsvDkDy3HW9PFtLvypJQMXMO25z+CPBXe
1fSDQ9h2fYfF9HGzRqYU619s+X6amCb3cA3uyfoXe5w/VUyvs+Is/m5tN1/E
vt4/hPa0/uzg33AXu91PQf12q6vvgFMOsv/EtHjpv/wfsGm8hs6uA2LK3TEy
8hv8Mvb4pej9YlpeaebwFY7aNGFeSDL67zR3tU/wSP+zz1cniUn6mv+nd/A1
72n+SxLF9Gtt5KUmeLnblW7HfWJyMZKI38C95s7eZbkX/WtksscrONO8XH1q
Avr7hNSxz2Hr/4/LEdOThYd/PoHfjX1srr5bTI+Opt58BIvUljwYHI+fl9uf
WA2Pl3+zTGqXmIak7lpRCZf3Wd3aIYjJcU705Hvw2q7P0Z949E+lwJ534IEt
wfL1YlzPPourbsD5jZ0ZD0Vi2jnU4sg1eP7TyMm3ODGts9QKKIVb77MJjJhK
EnqbXYb3XOMX5O1A/elZL1MMGxQNbkqPE9PRhKK6c/DDk8khidtZ/+FPnIVD
jqj1EcXCQxeH58NKiUeTtsTg56XG2J6CL4jGjQmMFlO40lfFHNhjW36RTxT+
nl1B0zG4M2iK7cJI1I9DwYUZ8MFV7AZJTCLZSbGHYZMls/zMtopJ/ug7p0Ms
r/m3cAeMPBamahyAI63sxVoR+P91HL4mwhrTHw5X3iymGRpdJQkw6XqclAnH
+5mSKcTD3pqvTP6FiWnMWrvFAtxzmO+976H4+asfxolYXjIfl7wNEdONqVxH
HMurB/sABq+3YuStGPjtj/atFcEYP3YUJUbC3Ictg64FoT552q3YAo9lxzNv
QH12qzUIh+885PRyAsX0Yr13j1CW1+1BdChATN1ZbyuDWF7/H6iD99tjTVoA
nHdm+OtYfzFtj3i3bh3sePzIhrB1mB8o+Jj4wV8Psg94xXT3wdP+K+Hd8acS
lq5BvTk178lyWH+7gaazH8bHrEvHvVhemy4UWK0WU9d17ZAlLC9/s9nGqzBe
/JNYesCKy8tqJqwUU5Zn62A3uMiNHcCH/l83v94ZXjj3wY8hKzC/CD+V5wh3
mLvt6OuD6z2199Z58AFD9gUSrp+i+1w71r/Y8R/L0N8VspWt4RdsO1AvXI8p
bW8t4G1se5Cl6C8hpufNYXW2XMhTTO8eRW03hUvZ40NLcD3drjobw8vYx4mL
UX87ujWMWF5NKC+LxORx0eirAcvr6YCUZA/Uv0NrS/Rgqwr2BbWYuMOH+Alw
8zWly9sWoh5eu+MxDt5RlDovyA3Xt8/3MdrwmFOaL3xdxXRmzbD2UfDtIzn+
HgvQv74al41geSXq/Znngvqwb2GCKiwjPrdrprOYmj02LFOGc9nxYE6oR+Y7
dRVh++Cr+WPmY/y0PvBbHv6yij0AIyZ9/6xyWTh+yf0HgxzEtKPwzH4ZlpeT
i3dPe8yvVC+s7M/ysnra+mOumPZkXjTsA2+c7hXzfo6YrOyLe/aCFfSa5F/Y
Yf6pWPjg7xbcr2uuPfrAVkxy/06k/YbdhrVixBSTpnTauk74p0xYWZE15ieG
kunt8MEe7AE7vN/ITf2+wybtMU1ps8U0+qPX46/w8w/9QhMsxTQ0zDLzE7z1
1a4+OyzEFKKpGfQeVqsZmhw+S0wOLX/Mm+Ertw+O8Z8ppiMvHg9sgJeVaFxY
Zi6mVR9P1L2Ce549brvATEzHlCNynsNHj094ajMD9Xi1TdhTeHYKe4AXedXK
Wj2GG+On/dI1EZPOqhr5h3Dc9iviUdPFZKeUWF8Ja4fPVlE0Rn9665R3D77j
X36y/zQxvX8iveUOvGb5fNNuI9S3D6V2N+EBCx/fa5kCq25Qug6fmrvEs9EQ
8//16k2l8LyZbz7XTsb89/Wts5fhz4ZsgYCYpoX4RxXD8ew4en0xKY+TdTgP
66tvPHx2EsbL7lMqBXC1/C+943rI55v1+3w4uG8UHdAVU0LfF+dPwUN+SzlJ
JmI+MiNgew5c2MK/jpogppS93U7HYdemwUEbdcTkKs2NOMryeprcc/V4Nl8b
9PkwfKCCLUDCfMhjz8VD8PTrRzUdx+L66stxB+C6onGFFmNQD8fzrklwxKn8
2UbaYtK17Km5F1ZNn/JonJaY7mwJaYlneSVe8lUbLaaGx40lAstLPKtdThP5
Os3nRXCPyFs7eo8SU9ynIvcdcAY7XkgD/T9bRTsWtmDbDY/A+LY94nsk3MC2
H1LH/UBULW2Bt7PliGp4f6l6u8JZXuzxRFXUp7rYxaHwbfZ1hYqYBhvXjA2G
/dj0ZTjyL9JoD4ClR/+UTldGvXbzu74OPjFsa8q+YZgPKOTt9oPnDuw1gVPC
/cGPL54rWV492AJqtI92HR0fllf7IPsABfQ3Jd8OL3jSx30vlg8V0yH3gzeW
wFWvhq93GyKm2It3EzzgDTVH/tjJo/6Ydnq5wfLsOMTBYrr3atREF7ig5NQI
fTlcz6O2vxxZXmcNTo+WRX/buebWPJbX8Qszhw3C/I7n9tnB+1PYBg3oz6cz
vK1h491l3n8HYP7/44KuJfx0+5xv36Qx/1l8t8sc3hz+IKa5v5i+vH562xRW
wat71g9/n2tMNGZ5LX9+9H5fzNfmf1xuBHstXG54tY+YBk77ojcZ/jf3XVmh
FObXMz//1oOPzFzvmt0b80m/d3cmwLOmsA1gMN85+yppHPxm3ObQ+J6oL6oP
fbRZXur/+sT2ENOP49cmabK8huxIDv0nojqnvO4R8K2+MmPX/BWRpVpSuSq8
+veeC55/RDSx/+ZkZbhfq5KdU7eIkhUWrVCEc5pSn87+LaIdFkb6Q1hezzTX
TOsS0Y/4QX9kWV4VbIMpEb3vflMuA++6rseP6BTRYqEguT+sd+GcypAOEbmY
RK3oA1eeMjnV56eIKqXt9HvBgelXTX/9ENHdXwP//I3A/XqSDe4wRWQ/oLL8
N1wgvu/5+ruInEyF5E7YNdLlS803vB+J1Yp2uD346bbbrSJ6+/fXpO9w8mq2
gZ2INiWc6v4KT/VsOpz/VUS81aLyT/ATp7WTjn4R0Wjl3snv4XDrVkr6LCKr
gSd8mmFVkzAn8Sf8vpHzJjXAJXrdr7d+FJHswg+/X8FLR8cGbfggosuntt95
Dv8d1r+X73sRfR2lkvQUPvz/AXoiyirOXf4YntmTbZApooZAU72H8Jv2g4Xm
zfh321tdlfD2jxpWk5tE1DLT4fY9WKv++CPtRhFd9ajadwe+idF8eIOIhu2d
730TXnnnbPvANyJq+3R34nW475VpO3u8FpHHKstfpXAO2878lYgsehbdvAzP
ZdubvRTRuRLtvcXwJ7bc+YWI8g8keJ2HJezx5+fIP+mXTgGsy74OrRPRtIKl
HflwBbs9eiaiWy1Xyk7BAevfbD7xVESvHVT25LC8fFYPSHsiouj7wZ7HWV4L
v6TsqRVR9rrb447CC+ZtnBD3GO1hgnL7YfjHzF+XNz0SUZLMymuH4MT/N/gW
0cKB+bsOwEbj+7z0eiiiTN22RUlwrbqw3qVaROGBU8bsZXmx41+rRFRbHfQ9
Hlbptz9++gNcL9dTpQJ8+beahm6liAw7X/Mi2LP16OmRFSKaVDLEfQfc3TRu
lsJ9ERWlzxodC6c9y6/qdw/v7/jalkiWVyU7QEBEvvf2XN7C8rp+6dvXOyIS
yRdy4XDshVmxDbdFZBJevSAUHp17a0jtLby+f580guGydPvM8psiMs/u9TkA
9k1iJyCJaF+gYvE6uA/vceNMmYiCPbTi/ODsyFeux66L6MXySU4r4TkbfZv3
XxPRQ2Gqmg/8cTU7oATXp3b6ey9Y8NyAEUlEqyymn1sCT3D+mRxcKqJ/96dE
e8D3rbeOXXVFROM2T7R3Y3nh7ndRiYheWY9UdmF5TRLZOVwWkabh4CZH+Oxo
2WezLqH9zeo+PQ92UU5cM+WiiBwCm7bYwd8HqnSNLRaRcekdW2t43/8HIIno
rO6JoZbwlJ/aqnJFIiq+sqPenOX18dSpXufRfwO8TpmyvOoNZvwsFNGGmYab
jOHhjy7c/1AgIg0DqdlG8KU7ZktfnhXR8tnVspPhxVfKvlSdEZF+WEqdHvz7
7JzIG6dFJClfljUBTs16IFucj+ttNip4HMvrEDtgTUS/ql+ZacOvdz+fdCRX
RFLcAWlNOCZu+dW9p0SU7un4eAQ8avM7p50nRVTh0iNDFb6+njVoEYnX5Psr
wyt82oLW56B9pXsYK7K83Df3Wp4tooLOv72HsLzm/dvrmoXrF5TxQBa2m7Vj
tN1xeMCsQzLwhyky50yP4efL6lb1h8XjE6wmZYqoOi1och9YZ8Swx5pHRbTz
gNTfniyvIWkrlTJEVF64r/zvZuTVjw2YIjrSMiLpNyzHjks4LKI+9lnenfAZ
tn1imoh6lY+f2A47se0UUkW0a9WJjm/wN7a84pCIcrW0y77Ce9njFiki8uqd
Fv8JnsI+fjmI/tVLfvF7uJbFcUBEmzVjtJvhTbkuEVn7Uf98vrS+gZUz2IRc
RM1lbiWv4OIkr0O7kkQUYn2Jew4v4psmxCSKKOWdyoKncFfk2pKQfWivJzeN
eAynbWy199sromO7qj5Uw+Z+YS+XJOD9J2ifr4Tr/z/uWkR/zodF34OjnGP/
Wu4WUb/fZfPuwCNt+u+eGi+iHO9Bw27C10zYDT/6y1uXhmvwikkKZ9Ql+Pdd
iXmlcB+tlFnygoj6uz0MvwxnKY+sluJF9HfGQKti2HZQ1vJOkYg4a0u58/C7
nhO/f+JEdDIgpO4sLPp5NrZ+p4h8io8ez4d1Pk0bWrNDRGc0Kzacgu/XX8m8
FYfxMa/NNAde/4h9oCiiwYuU+h2HZcvLb+TFoj1oGz3MgE9fme+WEYPxTt4p
7TA8v+Bxc2I0xhON1X6H4NasJWGiKBE12UcYHmB5HXrTd2ukiFwPif8msrz2
rN4fuE1ESwcklSfAj+O+jF2xFe/nYGpiPBy2eWPxwi2od3PTlwmwUgD7wgLt
RTVdRwRf8Il6ZrZZRAEDU9vjYA/3PmsNwkXkPyLxagzLa57QpbUJ18tZJETC
qbh6ymEimnEsfOEW2Mxov+rAUPy78spR4fCr8eq5/zaiP+c6fA6BI0dkzmgL
FlHg8skXgmCNoeMr3gYhv2lDYwNYXv3YF6L4fbqt9utYXt1TvlYEikjaqnyY
Hyz17VLktQDUwy2HG3zh482z5M6vR/uqCcxbDlvX3cIdnIiG2puFe8FvK+31
U9ehPjX3nb0E5soeXt29FvXkyP1BHvD4Yg/n7WtEFL85/qkrfC/31ZswP7TP
EPtMZ9g/gz1wgfFxT98AR3hQ8sdeXqvY+FViPA/O4zfsc16JejQ+sLcd7Bj1
c7S1L9pblnqlFctr49ZzxitE1Gp154AFy8uvl/VEH/Sn3oErzGHD/w/MFVF7
g7yeKfzIWXbVUG+M/w1nOqfBIew4lmUiWtfbvmwKrMi2Z12K8dCqcZcBXMS2
a/EU0aKsMA89lhdbvrVERFfG9R09geXFHudaLKLSewlfxsKH2Me7i9A+dg8v
1oJnsHLvIaLUjWmxo+AXP80+nnYXUVi4usMIeNunsojMhSL6lnZwmCo84vUc
mf1uIhrQJN8wjOX1iD0wivF07s5cBdin3G1i5AIRKT/8GSYP9y59XhLkgvYe
scJCFs4sWO6w0hnzGcv7MjKwFWYbHk4iejnBoLYf3HxofYD9fIwXRnvTpVhe
e9r+znQU0XjvlrU9WV47Nu82dBDRrFN2Rn/D283vbv6nMdZeRD+VDv/rgtcF
sAfSMf/LbCnvgGVWyFjIzhWRnZNZ4g841z2huuccEb1R57y+wY72w3zabUWk
NrBi3Fe4dVba9/c2IupSkWv7CCcYjd7+whrXY67DlXfwZJ0TQ6usRHQgheOa
4IcjJh0rm435lEyp8xt449DzUy5YiqgktVX1FazQny14EdENR423dXBR91W3
w7PQv0bNPfME9vhm8zZhpoguKgRFPIJ/Nd8P22GO+dC4RKtqOKXOpd9mM4yn
SwtlK2GTB0/3+89A/ymofHoXfl7mNc7bVEQ2494evQ1vLW4qXmAiomulv/xv
wBp5a+fYTsf7DZWedg2+msEW1OH6Oyj2LIWXJ4et1ZsmIjkb9XuX4J5Cd9eo
qbgey0YlXYCPRsUKikaoRwdGLTsHzw7pryY9RURaberjz8LNfvG53ZNFNDJA
qS0P5pYqmLUaoD1Iy1w5CY9zSalo1Ed9ufV7ZzZcbjPS68kkEX0/+t7pGLzG
lC3YFVFserVKBjxAf2JUqS7mB6VFTWksL60CuYKJIkr8sz8/heU13Dj9+AQR
KS0NDd8Pt+Du/KAO7k9eOlomwnt6WV2TjBfRkEitgQmwfke5c/Q4zAdm/ny8
C67+NL9h41jU/1E3jvBw8OvHwavHIA+t+DUcy+sx2xAA/dfW1TCO5VX+Zp+j
FuY7gtKfaNi9dLWW5WiMl62Pbm2DOwu+nDPSxN8L270nAj6QvdF6/ChcDzWb
xZvg6am/HquNFFFNQ+foELiOHfekISK9u9lfNrC82PbPI0Q09aHLhfXwCLYd
lBrqe9ev6LUwseWhqiIys0qbuxr2Zo+LqmC+mD9DwRfu4aE+/eFw3E8ZP33p
DWew6aQyfr4pMHspy8ti/OKLw+AzvYMWs7yMTn/MVcLvT91n4g7v1DHakq6I
+ftJDSlXeKzGZZlEBbyep9kVTvDtoRap3FBcjzET9zvAfv3ZhkYiMkjO9Z7L
8vpjfyVAHu9nzHgdW/jUt4cOPoMxH6rNaJsNO7z1eOUmJyKdHKUrs+Cvda8C
5siKaEIKt9MM3v3A99+MQfj53B/zTeBJNz7u1h+I+ffrpcOnwVXFG0ZqyWB+
N6WswZDllffzzLABqI85Wrn6LK+jbMM0XA/z2FBd+Hxyr4d/+6E//HhurgMv
FEQ+3/ti/Ltr0H8s/DNKtq25j4iWXd9ePRreH5K4/ZmUiILqqlNGwsZrVBQq
euPvDVXzVWd5LU0/drWXiA76++iqsLxcxhid6ymiwrfHfirB6ra5N7N7iCgi
ppGGwqWmbENGjlpnjBAPhr30i9/G/+VIYbibyyD4n5b5ptg/HL1TFKkOgNOH
3+gX1s3RasMLTX1ZXrJzD6z5zdH+oIa83nBTr6pxS7s4CquS3tQD3tHhdtHp
F0d9nHRn/dmE+/XPz+dYdXI0u9Veugu+9Xp53bQOjqac9Xv4E/Z7zDZ85ahy
b/ShNlj67vrfI9o5GpmU6NsKnyptE4b84GhE8THdL7B94Wa1vm0c3f995ucH
+Ev2v9xf3zjS9b5Ib+FdqTvMvrRyZNp8RdQIT0qQqXzdwtFfvtT5NVy1I8Hr
0VeOgp0vq7yEgyOGtdz+wlGi8bnGZ/DQQLahNEfrZp3IrYXPrxg9+PQnjr77
pYTWwG4eJ9KPfuRIp4Azr4J/2k8ySP7AkZJaUL8KeL/F+Wvi9xwVZS2sKoeN
p5q6bHvHUV8X44O34Dqdaw0b3nLUf4SSTxm8VcMWd0gcXRvQqnMVVkO6Hk0c
jVO+1VYCX+nPNqznyM7mQMlF2OvPU62ZDfh7Sat2FMH/vnmdn/yGoxQpA8dC
OONtk/WY1xzVJHYonYEt2XFy9RyR9aX6XLiJbS//iqPlwzbnnIDj2HZzLzk6
Lz0lKIvlxZafP+eoVO3T9EyWF3scvY6jKKfDvdLh1ezr6We4Hscc7qWyvNjt
6lOOVFR+7TvI8hIU7l5/wtGv0+meyfC86JTFRbUc7Vllpb0P/hwy8tOJxxw9
MWv6spvltSZrS9ojjp4aRRdJYD2viQMTajiKd1SOErO8XApS4x5y1MXl2u6E
g2yNdcOrOVJvmDF4O8trBjtwh6MOz/KnUXChvpXjsgcccZ3OGVthV+27r1wq
Oao+V7tmM9w+3CnQpoKjqgT3yWFwsmztv+n3OeJ3P+oKZnn19tyje4+jn3kO
ZYEsr443I0fdxd/7cl3whyM+rz6rUM7RH/sprmtg1TdfLPrfQfupyFBbBZf8
f6AXRw0BMs0+8NK7v3xabnL0ST8obxn8tzSqreEGR7lDa0I94fTCPnG1ZRyN
HWZgvojllcMuIEdLTIW+C+GGVPnjV65xNCf6TaULvD1hv9HZqxx9bTbcPx/W
2ql+6xhxNN8/dpk9fBOzoQOlHK0dWjF2DssrkB0YyJH586Gt1iwv39Obokrw
/ssWFlvCJz2M+m+8jPwqkqJnwnMdLh9YdQn9r6PKbgb8yYIVaI7eWPSXnw5L
pt6+6FDM0eI802dGsO4Eh7kWF5Dv9HUZk+EHGjV1U4o4inubvGYSy0th0bpx
5znSP1dqMBGWl2YHkqK9Hm34NQ4u+OMrkSvk6OrZXte14QXfP6r1LuAo880I
XhP+8XYDKipHlpOnuWiwvJ6zCSBHRzLnqajB06q2Vr7M5+iikWeDMvzsRq9l
1Xkc7X7vd1IR3nxR1HIjl6NRJUHBQ2CVfNno4lPo/2fCTOTgy/8feMxR9M1N
vQbCnvtVMo6c4Mjxd8jd/iwvId1gXw5Hz5wD9vZheUWPub4zm6PR5SsW94Jn
hbIbTI7GL3fT/BfWbv5mzeTG9cc5+jZ89sffcKxX8cblxzgKbZtY0AmPXmAu
5ZbJUfEX3H3DN21vJNod5ehK/3aL7/CqGexAdY4irWqkW+D+BlXnJ6Vz1Csj
r/oTnMOOqzyCejoi7uB7eA47vuIwR9YlC5c3wx/ZdpZpHElv0R7fAAtse4tD
HEkWt7a+gnXZcpcUjh4svlD8HH7AHn85yFHtlojop3Ag+zjsAPK5Mt3uMTyY
dY/9HGmObJd7CJ+9u+MuJaN9ZeY+qYRdSGZJYRLen633kXvwj8KET1mJHM0c
OHj1HTgph31Ajr/37bLeTXhaWtrA+L2o550rfl6DnySMTotJQPvQ6F9aCofv
PKEbuocjqdU5Oy7Dw7dMKvXbzVHaAyuHYvhS4HlHz3jUF4+XCudhT1/T+vm7
UA97B784C//1uBY4W8JRZ0WvY/nwYQfbHtMEvJ+Lu9edgmdasi/gMD7dUjbM
gV9PXTBqhJgjg7a0rmNwzIRnZ+VFaC8WGtczWF4jl1n24XB9TqeKD8M3FJof
du5Af5up5HyI5SW9bsXnOLT/FkH5ANz3b2tb/XbUg6t/6hPh7O9hcTWx6C8F
67ITYLt33Qq3Yzj6eONxQDz84Tn7gp+j6Z2mUwWWV1X/qflRHC20P/yHY3nd
jL+VEcnR5GvdN+LgiosK7knbUD8Xukti4ID8lHeirWgPg/IXRMJymSPDt27h
KKSph+oW+Mz+rP4bIjha/2J+wyaWl2TiwRWbOdJrTzkRArdFF4x3D+eoQK9h
QxDLK5Q9QITxUqRtHAAbrS2dax7GkaLUyn9r4Vovq+cGoaj/R9JvrYY3Lbi7
TjsE8wHPp7t8YWU7p27ljcjPZKDbcpbXjFrJwGCOTIxnqHmxvAw81XsEcTTV
3a9xMdyt3ZDXFoh6mrznpDucpuJn/i6AI6HjXJArbC7HHlDkqCn8sbEzXN87
ZFmlP8ZT1e//HODozl8t19ahHr4ccHsurPklKvr8WtSPaxrxtiyvN33kT6xB
Pbul72YF+9YKGal+HK35ZKZmAfe5Jz95z2qOthrYNprBWbT/+vZVyOuA/UkT
2Pac+oJNK3E9NByDprG8ctgD0BwF3ZlnPIXllcZOvOPoTIL1P3144t7TUi4+
6N9bTG/pwvd3GiVZL8f4slN3lw68fstl7enebP6g6joWlmXH4S7j6MDfPqpa
8Gl2PI4X5kPrPr8ZCTuz7XKXYvz6VZmjzvJi2+d4cpSekxeoAu9jy+kWo76H
i6YOg6ewx+sWcZTtt+zPUPgx+7jdg6OXmyffGAyHseHXHfX8VE9hEMtLMcik
fCFHp//edx4AX5TuuFvihvoXnKjcD17yd+uSM64cXerrUd8b/v291+fMBRz9
uDwsqwecita334Wj7oQa/z+h7eZmL9gCLo4eiQTDLvhVVWJapBNHEekzu37C
0TdV9ILnc9TytOVqG6x5Kb10pSP6/+RUrhW+nj9m/iIH1PtcK8cv8IrM3Hp7
e9Qf2w8KH2GpA5M3zJqH39+Lf/4WPi4p7jFlLkeu9WOONsK2MeYJY+dwlPOC
/F7DH0LZAlGO7nS5TnoJ82vnFsjaYn42/W37M1hnWZVlLxu8voMbS2rhewsW
1rRbcTRQ5U9sDexv92LFh9kcbbgcO6cKHmTm8+OFJUfHtkkNroBPG7yPq7Lg
6KR3bG057DwmQPHGLI5ifLtTb8HfVH4cvzCTo4ni4BVl8F45tgAd+VQ2jb8K
G0r1uH3YDP1pyoLWEvhR5w73vTMwHy+5UnQRDvsi836HKUf9fLW2FcHDGhLC
N5twdHciN7sQvlg7THr9dI58lN5Kn4EX3Us76G2M+fFIi6pcuItG67hO42iQ
/YHkE/Chcycu2U5F/T3wyTMLnnGCbXDBUe8+pqMzWV5p55/rTcF4tHfnhyMs
r72m/pqGHM21qDydCo/krnUrTuYob/CQsIPwtS22u6QN0J56uMxIhn02VKj/
mYT+KB/fax/ce+WC/FY9tOfZt+7sZnktembepMvR9uSueAlsg9nak4kcyQ6Y
4CaG31uyDXQ4CjzsrroTFk1b11qqw9HxBdFvYuHxE7+hYqG9jj+eHQXfHblJ
PmscRwkjb63fCq9T/JNxcCxer3Gj4WaW14Dtk3eN4ahuQ/evUJbX3/5l0doc
md2VvxoMz2+LXxCihfytRu8MhFvfKTStHo35Z72+vT+c8IJt0MXRpkMmQ9bA
k6tH9pk/iqMZ4bOermR53cxKshyJehxqedgHDmXHbWtwZJs4y3cZy4sdvzWC
o701Jjqe8AW2Hbc6R+cMDVo9YA+2PZca6se50UVu8C+2XFcV86eFQ7a6wCns
8d3h6B/D/1jMZ3mxr/OU0X67G/vZs7zY9H4Y2kvP2xV2cOQyz5MPlTA+jcna
Zw1ruDaY3FLkaJl/zCJL+D+O7jyupueNA3gbCUkiRbaEslUk0bdNdoooS4ki
EiItFFruWW6FZIkIiSKlkErWHhIlRERliTZaqLQQot9nfn++Xy333POZeWbO
vefM3Ju78cnN/qFk82rFMAvY1azRKVUtlPo5ja8xheUm+X6N64fjk+9MNoET
Rv/eE6WK8eJZntcUltfgEOWwvji+rEjjSfBnFbbAKH4/Z2nnRDhUYf/EbX1C
KadRLWccrPtLldYqo3+YvgjVhR9/i160rHcobUkKsxnF8qoc8mler1DqaWKm
ps3yKon3MuuJ9vHlW+lQOPWJnqyhUii9y4qJHQzb3rtySKdHKKkkWbtpwE0Z
U7Q1FFHfb9fqDYAPJrEFjNF/G8ObVGHDWCvrLgWM31ZjMvvArw7nvWqRR72/
fm9XL5ZXqI3bZ7lQkl24zLIHPGDPq7Yy2VBykavt1g2+7rVSfCaDelvm90QW
Xr7+44D7XVLKLuo6+M+33bxj5foLGf+kdLNeXPYHjrFtML74V0qHdXpodcCm
1myBdCktCJZWtMEfpv5cHvlHSpW/ZRK/w4HjA2u531JaHr1zSyM8dIR8wI5f
Ukq1rzdsgGlAuNKmDvz+pJU/v8AuPVVinH9Kqc0w9041LNcVNdbuh5Tq7MZx
FXBC66DbM9uldOfwgTnl8MzauAUmbVLybvvW+x1c855twCAlhZ3zXpbA0qKU
LcNapLRn0NnoYnjMo0l/+32X0ovytlVF8ONbNyK6N0upW+5M7UJ48xXzob8b
pTS84OCXArh3Qu7lb9+kpPm9NCUPTjk+36Liq5RaTIZ458I2ES+eFzdI6epZ
56n34UbJMpf8eiktHhfTeReO3ME2eJHS89cv79+CDTevlVyplZLRWcXQLPjV
mlrV+C9S2hVhsjAD9rHfeu7YZynFxaxXTYP7z2ubtLdGSlfyD7xJhTPNdj0I
rJbSqYEZJ5PhZZNk7LdXSckr9LVLIstrtLTarVJKYzRaRyXAJwb39ltRISV6
3LshjuXVl20gJSWzU9pXT8PvFDSOWXzE60Ua+cXAe9j2fuVS+hw/Y3o0PIQt
9/9BSmplC7uOwNls+b/3UhqhvzT3IMuLLQfwTkoDLjiER7C8nmZulH0rpWYz
e9u98Dl2u0CplK79sFULha3ZxwclUnJ4MauUh6vZv3uD/AtMTofAYuyz5Oev
pbTk85i1gSyvI0tNHxRL6ZK22phdLK/QsifXX6E9BP9u2AFv2sMKgpRU/n24
6gP33F7z9XSRlAadvuvnBV9avznw0Asp9XY+Md0TXuj4XVl8jvdntr3LA/5m
uzPWv1BKyRazcjewvP6/AaaU7NYOCF/H8jLhac1TKVWdr7BxgYvGKy1e+kRK
q3sm93OGvUdEfppdIKV7kVtLVsJq6mzCISUlY/1Ty+CMnidlJ+ZLafrfBpel
LK+u4YdH5KE/1CSMWgz/bL2gPeCRlFY1rqxfyPKqHZ/e4yH6k0avK/PgaR/Y
Brs43+tu+MyG3xaZFDfl4HgKXU2s4d2Pst2q7kvpgJPiXwtYC73jzT3kr5R0
/z+W1xV2QSOlCyWzpdNYXgmL1bOzcb7yPs03hmVOsB3VpeReskNlMnw2YtXU
83fw+z2UivXhGVxl3vHbUnrlGH18PFy1g23gjfP/bISzHixsbqwNvimlBteL
I0bDo118A3xuSOmt+rjP2nC+/W8l9yzk/zUpeRi8cR77wATtvUpnmxasZN59
nG2mlMb/OTlZE06etP+2VYaUCiardAyAF4zpt3BKupQcI4Lu9GN5DT7+Xvea
lF4q1oeosLz6DvXUSsP5jbeb1RvW75bwV+UqzseaTCUl+MUvvQPyV9D//htQ
2A3e3nhl6M9UKcmYbj8sB/erYh/ISknL8fGyLp928/SS2xbll6SkFzNkcCfs
8NTqRVGylHT+eH7sgH/ey3N5mCSlPoG34tvh6Eyb7zcuSqlmmPzGFtgk+ZUk
JRH1rWrO+Ca4LHZlv7gLUnLND2tugHcd+XjuyHkpKRY+zKiFtcLWTw5NkNLp
tn/+NfDdPewLHylp/2dkVgmv2b4dFUFKxxPWy36Eu9b/rHY9K6V/E448fAfH
OQb6OcShv5TeCS+FrRbJd593Br8fX2nzGq5k24fGSqk4UqHfS1hg24mcltKf
U9pvCuHRbHnRU1JSf/JfzBP4EVtu5KSURg5aujofdmePH8XgePau134I92C3
Ix2Xkupg38/34ST28WQ06uHToORseAErV8eQ3xlx6234W+2NQWVHpRR5JGzS
DfjAB/NLT6OkNPdi6I8MeOLLXNN7R1DvP3C30uDnj+Y/TT8spaNGu4Iuw163
X6xKPCSl0SmeMy7BqlfZDSuohzOdu19keSW8DzwQifbzb25BAsvrxNo+3AEp
nSg1OHAWbo+ojfWLkFLnq/5LYuFj3FZ9j/1SWtbcNuAkPHVnG63ah/o3oags
Gi7dvGvx4r3oX/uSTkexvFxkKqzDUf97Bbkeggc7SLdPDZPSrEu2ow6wvOax
G+KktGHL4Lq9sLP54cNDpVIKsq1OCYX/TdIY2U+U0l67JC8BPjMmNr2bIKX9
fpuMJLClls7MX5yUuFtjOgJZXn2Ti79KpLRjeMXtXSyvbgbrP4WgPiQeC94J
6/zObH8VLCWTRXOtfeGHjabSvCC0R40f3bfDG6rYDbdSKpONK/CEFUvnJF7e
g/bVe/aBTSyvp8+mntuN/mRSa+fO8rq/NP/oLtRHUTrADf6aWbYiPEBK11uG
l7nA+5PX1O3xx+9Lsk45wxPO1AR47ZRSh8F8F0e48Mjmnm470N9ky0Yuh7eF
fY9Z7of+1Lruy1KWVyC7oV9K8d0akhezvLb/vW3ugzynbd1qAy/dwC+c5I3z
H/HNcD7c5qj0YdR2jDfyHu2z4aOLIj01vaQUcuLTDWvYeOaAf723SenrYvs9
liwvk5MHZLZKyVYv18IMDpgwYljbFimlaBvIT2d5aSde+bJZSt3Njj8yhm+r
sweGpLTSvzN8MryqV/qLQg8pXSxeZWMA/+0ycc3ZiPZod7PvBDi2Lft7pruU
pjWrFuuxvOpmckkbkO+VDdGjWV4fCvqdXo/5SGSW40iYe7k4/qCblH4eVBg6
HB6Z92aysE5KBuk2FVpw7u1VuTvXSsntx+EETXj9VfZAItq7Y7G7Otz9/Maa
1S5SevRRdZway+tEo9+SNRhPxQWNKvB8tj3xaoxvNpK03nA9267IWUozp6T7
KsH72PLFq6S00bxiand4PFvOyElK+zb2+iMHP2OPNzqi/6QbZnd5Iy92u+NK
1Mdh9pJOWJV9/bFcSk0p3jN/wWlsOrQM7cspQvEHvGRywt5KBylNHJtQ0AK3
jhk7+I29lOYPyopogqO0rl56vBSvP+7R4q/wFFXj/+4ukVKYc5FaHVzS7c7T
q3Y431dL39TAAb+tnBMWSylH5/2JSlizKQ8zaClV3Hy36iN8q4otqCAlWa+S
Ye9hp9JXfYJtUJ/mPK8shTufrjzjvRDv3+LB+ddw7P2P+hsWYDxbkb7xJWx5
ff29lfPR/w6fGfcc/pTcsNhmnpTSvoU2PoElZ7ZXWM6V0nuPLWn5sHbUz+1G
c6Qkr2jj+xB+EBYopztbSpMe6k3Ngd0C2YItqOcJcr+z4e7e4SNVZkrpWELJ
ndvwxQ0qGXLWqH8PLwbfgOc6HZ35wwrzyx47ZmTCdYsGv66zlJLlZotu1+C9
M8+u/2CB/t+kkH8ZHjdtzI8X5lLKj3q09xL8bEKqNNcM47WTYHOR5aU9eeCN
/1APZpj3PQ/3HcgWhJLS5fltL8/CV3tZmJyZLiU53wtHY2E7mYf5h6dJySXb
fsVJuKVt/kqpCeYrel2DjsNH6l7UBUzFfOH6+Q9RLK/yZbs8jaV0cN3cuEMs
r5fve7pOwXg56cvaA/DOvLUn7Y2kFDCCG7UP1rhTO27uZCn9MNSsDYVvXmUL
zmG+vS4lWYAdz7ct1DeUUo/rpp4SlteJXR+0DVCf9fL0g+DT6L3q+ji/2bYt
u2ALXvpPaSLGd5+XGTvhjzt7R/4dj9ebv2SnLxyy5fCw7+OkNHZG4bTt8AhX
javVY9FeHGd3esI5DrGWpXqoJ1G3sjexvOazBS3RHpvGStxZXhbJrjQG9XNz
tLUbfGGyQcu10VLq10Omuys8R/c6d2EU+v9Dt3xnuFbrP7UYHSl9Sni41xEO
V82JjxgppdcJ2jbLWV7d5xpJtDG+PtytYs/y+v0s13eElN4pFhUthrc2LXXY
OBz9d5N2lA3cp5otmCulXk3bls2Hr7Dtz4fieiDqpsYceDHbDm0Ijtex6601
/J0tj64lpQQrq9OWLC+2XNpgzLfmBa8xY3mxx6cHScnc5+aI6fBrdju1Jt7/
3aYqY3gH+3pVA/NRPe0Lk+GB7HJLHe0tc/FGA/hGIFuQG/Vx3e6xE1he3gP2
feyP6zvDc1/14D8bTg5+pYb6NeLh5dEsL6cRKY/6YX5nWO01EjZbnPjfLVXU
/3Vdk4bD5TMnPEvtK6Wl19XbteDgaenOZ1XQX8eOzdKEh0+c1hjVB+2JpgWo
s7y0KShMWUqNvrNM1VheA9mC/1KqX2DzVwVW6P3kzLZemF9Y21Fv+LyMncG6
njh/znYSJXg2ZrvLlKSkH21j3R3+UrfKbn4P9P+WWd3k4bDyygozRVw/bJ2e
17Udeb3a6G3YHfOnXuPCO+GneY1yo7qhPxcMXPAL3nLH94iGAvJNklH+ASun
sQ1FpLQiuaawBb58PiSjSxbn/8mjg03wopjus1pl8P77JCz5Cn8/sP/15y6R
ZnkH9q+Dj/D9Nrz9J1Kvn0ve1MCT/Y//ePZXpE+ndI5XwsVbhobe7xSpYF3L
yo+wn2vCwMw/Ij1YcGfwe1h92diLF3+LVGjPfSiFs+azDYtEagyaeeY1vNLC
+HFkh0hDCuRcX8J/Jt9Zyf8UaY3xXe3n8EndGfU7foiU+cCn+gn835D8XZva
RRrkPfpCPvxB1bbX6jaRjlq9dn8IB3UvPmnXKpLOpBC9HHj4n5XjZ7WI9Mh6
TEM2nNP08Y7Jd5F27ShIuQ2vrWYboolkXeCx9QYsX9bwYVgTjseim0EmnPBs
+1a1RpFUX5/6ngbPyvn5r/s3kTT2G6Rfhj9fZw1QJAO3e76X4PBL8sMb60Vy
cV5ofBEeGxd+taJOpMSdxT8T4IIoFavXtSJ1XVtx8yy8OfxoUf4XkbarlO2K
hXsHsQ0XRfqx3+G/k3Cq99mWKzUiHR5X+Dea5eU+ho+vFmlmwwyKYnk5papF
V4mk/DQ95BB8aDEb4ET69mz4jAPwpFk3jYIqRKpsDpffB7+aZvFw+yf83Kgp
NxT2nfjQYf1HkfrHLJYK8ICRCz6vKBdpyfDLcyQsL7bd4geREvIUlYJYXmz7
hfci9T3oXLAL/sWWY3yH8x9wZd9OOIYtz/BWJEPh70Jf2JQ9rlEm0pcrc/ps
h9+z2zdKkWdnxHNPlhf7OKdEpNObXhzcBA9j8b4W6dSvPkvc4Xt3ZP7UFouU
lTRPzQ12SWMbRov0dVdIsQssd6G31ouXIv3nmX7UGY6POZzyoEikMyGVyxzh
mZEaZlkvRNLOVNZYzvLi2QW6SDk9p5QthUP9dVbHFoq0Q7IiZjGs65nceOiZ
SAs1/Z1s4MeuBsHiU5GmvzyiNR/etOy6SsATkaxSLn2YDfdawDakF2l9IsVa
s7wscgxcHouU/OD5GkvY1mguZqgiKci+H24GN+kW2s3JEyloTXXFNDhyCPsA
EOf/Y+05Y9iw31vviQ9Fyg+uWzcZftndRV47V6QTVp91DGCfPzVHBjwQSdD5
WDOe5dW8WUcpR6QDusUX9ODr1d8zOu+JdN3moftoeHnZzlnNJNLfI9d0R8Id
z/6+rsoWae2fk3XD4BM5/IaSuyLV8JJkLXh6FvuCQSRxwrrNmiyvS5Gh2bdF
mtFhOV4dDowboHHtlkhDqwd96wcPPXry4vmb6C/fm1NV4OzwEdNO3BDJbNiD
rb1ZXkGJj/dn4fxuPaSvBMv6THAMuS5ScblTczf4nHt6vU+mSLZe2mlyLK9V
03a7ZyBf7ZrtXV7t5jWL2ReYIl38ET+pE5bOmnXK9ppIoQ2rWzvgMdOfjJ+R
hvMhq57RDudPtLs75apI8SaPfVtgj5ElNnpXRKo+6D+lCe6p4VyudVmkOT11
fjTAKb2rtvZNFelJwpPrtbCNrEeXfIpI3i7bdtbA39obI38mI38zFZNKOLKe
3SAh0mjTSx3lsMHH31fLL4pk5Gh98x1c9CrE6mWiSK4xJQGlsE9+95cPL6C9
/3Gf/hruf3f/2pvnRRof1Pa7CM5M69eakoC8RwTeLoSXXTjOx8WLJP0su+cJ
/DNmaP+ocyK5PeX+y4ePRyYkhJ4Vacurrs5ceJrAbsASKfqP/9378Dv/qw+3
nkGeMxsDs+E9nsbL1saK5HhljfltWItt53papJbpz/5lwdlse5dTIqV9MaYM
eA1b7vWkSFGZp4LTYBlL2+MGMeifCf8sLsPn2ONgJ3C+MlbJXIKt2e1hx9G/
Pl+/lwhXs4+Lo9F/TZQlCbDAho+jaA8pa6zOwqMVv25qiRJJyeqybCyc92c7
WrRIv3503I+BNzb/3Fd2WCSVQgsumuVVE6j17BDaxyNuRhR8qUw+9d5BkdI/
3pc7BC8oDDfLiER/HPQ3J4LllaNSmHhApA4/I34vfCCL3UAuUkmLu3UorJ8y
uOnAfpHKD0bLCyyvuLPB3D683uIHD0Jg76Nj+u7YK9IGgwY+EFbbmxrnES5S
raHKzF1wetBkQ+cwnB97fYWdsIPPzfuLQ0XafHxBrg/8w91iyUypSO5/1wle
cPSqh5VTRZEO8f4zPVleduwBFZE+jw1X2AS/nVUkP4xHf2w9mrsB3jV9eVQ/
TqSeH2KFdSwv/Q863SU43i/xM13guyPXZf4KFumD2nkFZ3i1Rt2sb0EiKbqe
y13J8lLe9uZTIMbP5yeFZfBZ2fYNxXswXq8+NHMpPOPHrp95u1EvVHiFxXBl
PXsADu+3wit3Icvro1TjSoBI24odhXnwqOLeSef8RTpbazlzNvwIs/FjO0WS
HzpSwZrldVejIHwH3p+vbK4FrHQt1jHQD/Xz6zv+Pzj5gk6Dl69Ik8Vr1tNY
XieTd7v5iDTXQpQ3hr9GGvRe4S3S/kH2DybBEQJ7wBbjo/owXp/lFfDfBAsv
1HOjzzPGwy88c+5O2iaSl0+SnB68fe1c29FbRdr6amPOKFh1eWG5pqdIJ+11
OG2W1wL7bcpbWPt6ZzUMtrd82yWzGfXjVqSsFtxu5HKwzQPj6RmL+xosL73P
w2s3iqR/viFkAGwylD3AL9KCp0cs+8Fl/Vqsnm8QKaa/iYwKy0vR/2XOepEG
BpVSL3hw59+1190w3+jhF9wDvtPMtyatE+lChrJFN5ZXjZJweq1INyTn/snC
XWWR/Q+5ivRn2+Tsf9vazeMKB5wXXPD+gu8F/oEtH5yc4r8G842r88w64Mos
tkCISM2yzzvbYJ5tF+2M+u67+M53WIdtH7UK46FS4e5G+BFbTtpJpJTsOaYN
sDtbXspRJLujd39/gXuwx01XijQmQv9WNZzEbj9dgXp24XRABTyffR21XCSf
T4rTyuEGNj1dJlKV6daOt/B+O7YAkUgRN15klcATZztvbloq0sZl+juL4efT
q/5ULhEpYMBe4yJ4m77H/jd2IlH7p/ZnsKpOk1bBYpGm/ZycWQBf0/BLvbtI
pHpN3jcPXqr8xyzNVqQXzoWTc+F2WUlhgg1+njOg9R587Ef3NccX4v3OW3nt
Ljy1gS1whvPffHz7Lbj0Y7+Q4Pki8TeLDbLggOLjfX3mYTyK792cDg96PPTs
hrkinbtseeUqfPtugqHjHPSnd15bU2Hna2NzbGaj/emenpAM/7twdYnVLJF8
ox9+vQDHnjSuMpqJ8XxM/aV4ltfBOz661iLdK+25OQ6uENgCiiKZXBoz9jTM
BeRjBoj5V6xl3QmW11bbUfKWIr1Jd7h4DH64tjjzhznaQ90G9yPwhuWOs+vN
UL+tfEcfhLsv/PTmw3+YP98MrNkPX7Tc4F5kitdbyieEw/OmfP2ZO12kx33E
dVK4Xs877MY0kfo0cNo8y2soW6AV/a12T0UwPEEtKOnMVJFmK/rE7YGfKSpM
P2KM452zfk0Ay6szvEA6BXleXDp0B9z3u4rTLiOM32PNP3jDaTVHGzwni+Rf
qHNqG8vr7eA9rpNEWnFE0WkL3FZ4treDIc53wGdND/jogzGn5xrgeiDkful6
2PgGWwBapHVJx6PXwiUpk7P1J4o0qXXzsjWw/9mbtiMn4HpktemAVbDmMYuP
6uNFiqzvXryC5bX34bae49D/jhcedoBXBS+Q+aeH+rjhsN0SuNOn6OB3XdS/
ZUv6LmJ5bVw+omaMSCM29nm+ALZw/pBWOlqk2JhHEXPhT3ZsgXnUz8ZdC2ex
vGbXvSQdkVatG9drBjzSdNu69JEYb3+VPDaHc/XbWy9o4/ogLSTMFHbT2S3E
jMD4GD5qjgnLS1N2wIHhmG/yj7pNgROVQ89LhiHf2HW5hvBcOWVjv6HoX+86
uYksL7Yd/RCRxk07bDUO3se2p9PC9cyNkTK68Di2XP1gkZxXpGXrsLzY8nWD
0H40TQNHwFvZ4+yaqMed90yHwirs9nYNkfbJWP8exPJiX3cPFOnpqPs3BsJL
2OWvOurbFtOd/eHWkznzuw3A9V5x2hRV+MjBue861DA+Ouu0KcNTRLZBjkhL
FY9c6wm/CbDv/Kgq0ruXf70U4Z1b3+5/1RfXO+Smr8DyWucyJE8F89Fned9k
4FvLP6fe6iNSj7+jU/5ubTd3WrjF/LIy5gs23KbfcKdlC1oM2guV6f6ET6P6
He2F658lE760wuZj/zWF9RSprXvg+Wb401C2AZdIx9/nr/sGS9R6qnr1EIl7
1Ve7HtbucfDsOkWRrjbYf/oM53QOmLS8O/IfdTS2Cnb7zt4wjj+4aNUnuNvn
EUvNFUR6+0dp8Af4wtvEKkN5zG9PmJeVwXOfT/AdJYf5/fJt0W/gugfpCpqy
qG9TTzm8gvfeYBv84fybPFR7AY9LpVEyXQI1OtYXPYWfnp11vfWvQFGxvQ4+
hj2PPZn9pVOgQHk920dwn32soAp0LXxG7wfw1eAS98LfAo03XFFAsJ2vc8f9
XwJ9/eURdgf+vrEqLLNDoB9VO2ffhI84e2gm/RRoTpNE4TpstIRtICpQ9eCw
nGvw69l+0w+2C5TnsTfkCrzT9E8B3yZQa2mYeQqsYSBx2tkqkIcH33kRvqnD
JmwC6Q7edes87KgZsWf1d4EMGrf4n4P/KKspL2kWiKt0Mj4Dn5I7cXpWk0DD
O2a3nYTNfg6dOK1RoO76E68dhz82sA2KBZoSqup1FA75NHbR8K8Cpct8n3AY
Hv766ke1BoF2nnzacIDl9djYS7FeoH3LE5L2weuy2QWhQJ+N/N3DYIX0GYca
vwh0ePLcUSLLKzF/ROVngaRL+1dJ4Dm4Wnhdg/cb9T4uCK49WDzjcbVADj/j
Vu+Gw0S2AbpAE3e7avnDY3d9Wne1UiD74UPf+sJPtm5oi6/A339+E70d3rLu
qxD9SaC9hfsctrK8VrAPnAQ6XvKf2mb4ysKO80HlArXJ1r9whxdZBRl7fxDQ
vo8ccGN5se0v3wt09JbJQlf4MNsO451A5XPfKq2GJ7PlMd8K5N2xM8+R5cWW
yygTaNljVXE5vIM9PlMqUPjtxBn28EB2O02JQD2fT5Oxg2+wj9fe4P/J59+1
gVey7vZaIBnHJbvnw7/fTl4gVyzQ1qJSkznwyec337W/FGjSJqcf1iyvXIst
dUUCzdR5m24Jl9942Pn+hUCJXfbbzeCg1AURL54L5Nj5ZOJ0lte5oiG5hQKt
GWTx1Ri+f2z55axnAmWuvJw0GV67j31hJtDqW5ruBiyvkHXPY58ItPw/ic4E
+Lxv3ZrDBQKd/1hdoQfP9tjWLD4WyDJh5pnR8Gfn9pCAfBzf3rhVI1leS3ar
euYJ5HeoQ3M4rDdH9pzLI4F63VpYogUXmIZOsn+I/iB/OkqT5WWg/GBOLtrr
tjo7dVh5FPtCXqB7fwxV1OBUTc3qiTkCXUja8VSF5dXnjK/2fYHe+2eF94ab
5UZ1U78n0GaPttlK8KGfyUeVSKC5uycodGd5fTUY/feuQCGX196Xg4s/Xb/e
fEegPvJRQV2e7eZ+r/+bU31boHr/+6adsHpBTknJLYG0+zZ0dMBZ2eyGH4FS
8vteb4dXpBd2ZN8QaP+5ST4t8K9E+/BrWWh/pxcbNMEnT73VvHAd7fPWpm8N
8H+HXJJPZApk0hGSXAu/Fz9Pj8gQyHf5EfcaOGjXlich6eh/pWd1KuFh21qc
fK8J1ByQUlEO31vn/9U9DefXLD32Hbx2BbuhUKCCEdedSmF5G0F50RWBbo/J
1HgNJ1j1jJ1xWSCFRVdfF8EzjQ9ONE7F+YtOPFwIfx6rTnopAsXJnlz0BA4d
dmrRkEvoD/v39s6Hdftrf+qbLFDstB2Pc+GCHhe9FJLw94qrpffhzX8nyHYk
CtTtp5V1Nty7hd2wLBApasvchlM/T9P+eF6gV9P+3cmCbd/RtZcJaC8RbwIy
4Kbns6wfxQvUQ+6ScRp8KPfJq5vnBBp7fHdrKjzppp1b6lmBkhbNvZoMv0ot
aYuLQ/3SVfVMhH3OOYtRZwS6of1GLwEeEF01ICwW9dQ8+nMcfH0feyBCIKPd
9vGn4eVse91TAu0pU3aJYXmx7XZOCjRi5QOtaDiGLb8bg7x/+5YdgU3Zcjwn
0F7uaB87yPJij+cdF8gs7umSCDiQ3a4XjXzPe6vshYeyj++PCfTsSf+nUpjY
cH4U51ctPYyHXUexB64EernHZlYILDfo/IKuwwKtU6yWDYTP9Rn3vuWQQHbp
O7IDWF7yaVs+HxToTEi33Tvgmp/Gf8siBVq47eBUH1j69U7EswMCLQ0e2LaN
5VUxY+j9CIFyr8Zc3QI/fp1/OWM/2qf8IE8PeFOBrcXFfQJd33lUbwPck9gD
nchDWfnzWjgl3dElMhznPzfk3BrY5uKnZi4M9f1U8+pVcOOpDZIdoThfx1YN
XgkfPPRVdZMU7TEtt8QBNpR6IxEc7zfdqCVw0a6OSXaCQF4LwhcvYnltC3ow
kxfoXEFN74VwfzcFexMO+Ww2fzwXzlzBHhgXaNyEI+IslpdNX79hIQLxfaut
ZsAdVse6qQULZD7A8J85fMJY61j3IIFWme66ZQpPH3du9O89qKcc7TCB3w3T
zfq2G/WjQWbyFHhP/8tzKnahve0wbzKEh6A6FwcIlDHC/9JEltffmxvz/QXK
aUx1Hwe7tLAFKdBfP3wcqQvLfHkYfmWHQH2/KX/SYXm9WzAo3k8gm6Emp0bA
1i+Kko/5Yv7gtXrFULg6d7npXh+BflaH9B/M8rr54Umgt0Buu868GAiPubxu
1fbtAhkb3trfH84/V/fVzUsgT6WiuarwxuhtgSu2sfpUrdCH5bWfLXgjUL+h
rfd6wpdCdsdaeAoU7PhvjyK80E9Wf/IWgRbf6DZNgeXlEUqjN2P8m6rULgNH
rlZePGgT8i3tkfZ3C67Xlx75pOyB/GIUPH/DRXM0t8tuFCg+sFP3J+z93xnZ
9g0C+XPN1a2wmuGow7XrBbp18VNcM5w5ii2ohffT/HTVN3jZIMP05+tQz1Zm
atTDP/tkWT9Yi/NRdaL4M3xc3qz4uqtAxZG7DlbB0zpy3JJdMP9wXr7wE/z2
69z202sEerPAoMcHeHdFoXhotUAdTt1yy+Ahb+zVRWeBJBFvgt/A2Wz77lUC
BXyKN30Fr2bbeTnh7+09fz6HZTI+561xxPupn5T+FD7LlvtaKVDJ2batj+EZ
7PHfFQLt2HVt7CO4mt0OvFwg0XfL5xxYZF8PLhPoX6T2OYJHs8sFB4E+Pi12
vgM/wtXMAHuMV+N4zZvwRreDt3ssFehb8oTXmbDSSrYgqEADFxYfvAYn25x6
37RYoNQ+OxdegRfO0PasWoT5Y8uAHinwN+OLf9/Yon91XH1wET4wbuKBAhvM
B4bNDT7P8hqeMTR7Idqb+7vp5+AX/adfSVuA8aJo049YeLvSPYvz8wXSX/Uj
7STL69+sF8fnCZTfI8jzOJzRwhYcFqjwjazeUdjhi9334DmYPzySVB+Cf7wr
kfjMFmhMyd8zB+DoF8793GcJtFtph9M+2ORh1TnHmQJZONerh8FlNz0m21oj
75eOLwWW1+WmB1Yz8H498iIksFa8n/0UK8yHRxjMC4LvRv+p1rXE+/0dpbCb
5bWfLWiO8aS9nXbCXSGK3fuaC6TSb+luXzjOL+KYvJlAdYtSjLfDVpvUxvw0
RXu9ItviCVetPpFVPx3tS39p6iZYWDpsbvk0gbRexm10h3Xmni8tMhEo+2j9
SDeW13/jPB5OFejFLoOPLrC7YdqvG8aY30i8Y5zhHqPZhgnoP0lXHRxZXoPu
DoozwnjaUt93ObxAxfrSkckYD51HPF0Kf5V/jBkMxue6paGL4YgO26e7DFFf
o7kZNvDEb8WrthoI1LIh9e88+HmF4zdXfbTH5cU3ZsNebz4FOkwU6LHHTx9r
uN+TDX3mTRBo7Wl1fUs4ndiGLJhfthjW/wcvzfDWNxgnUPvGeeenwe0XO2jk
WLy+jLOLMXzsdNDigXoCud7aMngyPPWwQkVPXYHmHfV/o8/yku7d/m806u+h
kEPj4V27+8q1jML87IqwUA8e7HXscI0O6mWjoDgavuOmNbJspEDCIkmONuy8
km34hP5fFBA4DP5nozvz3giBtvhtNdGCz8y4XJw+HNdL09e0arC8phqtTxyG
vEYsvDwArhx3qz1mqEDz9aZ49IO54ZbSA0Mwf1sySEeF5TXgkTqnJVDV6T/l
veCHbLvAwQK59yw70QPewLYPGITzc/yafTeWF1tOUFOg0jlhKnJwElteQAPt
XcOx4N/mdvP57HGDgegPvXTFP3A9u/1AHfVzWItFB7yffRwxAOOT/Y3fbfAE
dnj90R8u7cr8Dhde3j2un5pAMSOneTXCXvGyd7r1E2jD3daxDbDq8dCFv/oK
lOafXPMFTtvPNqwUyMfBOa4aXio54vmpD8aXpb2dKuA2P81/r5SRp0/WgHL4
6KYzB/J6Y36TsfrFW3jqGjZBEMhloNy+Erh06aUrl3sKdOjk2VnFcMBcQ8tz
SgLNsDKTKYIHmWW9ONoD40WP17eewbcNzVzDFQXS+L7RrwBeNZptiIv5yp8O
/Tz476B5nFc3gSpHi/UP4DMqz/u5KQik5Kt8/h5sqeAQv1xeoEuVh9bchT91
sAsQgZ549xt0C+a+ueSay2J+rRNZfB0eWfnZfpIM5hc/FSPT4dw3W2pGdfE0
9uueeVfhDU9a8I55mivXKJ8KK95jG27zVD3NKTsJvpjx75hMJ09yR3L9L8Bz
k4Qxbb95ilMeOzme5XW6540vv3jKTtr37Qy87zD7gIMnF/e6xFPw+FD1ssKf
PHGzrdeeYHntPuWR84Mn7TkntI7B27y0f2e28zTbo+HNYVhl/cW9SW08NaZM
OxTJ8lo5cfDpVp769RMW7IeX2GZcOtjCEx0v6BYOt86Y/p/wnacGS+V7Istr
6r2nO5t5Ot5z4S4ONh7PPkDlqaBdahQMlwx/+m11I08SuezG3bD/gCVBS77x
dNPg+0V/WLNnaZ/ZX3nyDRm+zg++9c/5zLQGnjK+LxjiDTu1VulPqOfJX/Ap
2cry+uJxb3gdT7km0Yc2w7EYPfrX8nSwT9aCjbBFkV+F4heeKru96rae5fWQ
fUHD062hDeQKS25J5JqqeRqwsitgNax9RfFIZRVPfzJUjJzgB/ERI99U8uQ2
SatxObz+uFrG4wqelhTpXLSHu0ecmHn3E0+PDumttYMvSIbhip+nHJ+xWrYs
rx3n1yeU8zRr55g38+G6TeN+RH/gyfbU8INz4L1r2BfAPJVXDpg/k+XFtiN9
x1PHfEUFK/gZ257kLc5ncdtdM3grW660jKe7weU7p7O82PIlpTxtXZhrOBW+
yh5nKuEpcfqFhsmwHbu96Q1PHvOF8wZwC/u48zVP13evXjMBjmLlr5insEIj
zbHwlF/sBhOePs9QfDUafvPt6ziVlzw9K329fyS8s9L7jlwRT2YH42YPhzVK
Ohb+eM7TdA93mSHwzSdBH+oK0T7Wjb2lyfK6p7D1wzOengfX+ajDnRl7/714
ytOmuwkT1ODTSX0jc58gL61VX1Rg89hjw24U8GR9WuVsb/jjYXYDG9qLBTkq
wSGh5yzP5PM0X35z/+7wiD26RYfzeDpT269QjuXlddlV+gi/33Q9tGtTu7nb
eqOWgIc8NQ1cbtUJKzje4jxzeap1bf3dAV+wtVRzfcCT97N9Ge3wHFxt2efg
fDgO39oC105daDT3Pk8TlNLGNMF7x7MbZHlyKjOraIDHjVjhoE88aT15FFML
Px1QXqOdjfdXvsC+Bvbs6bZD/S7yV3umXAn36arr3vMOTyke8/PK4Sut26L/
3uLpYsWDkHfwktr2Md9v8jRp97TppXDr+903qm/wtMD4UmsxHFUkO680i6fv
/TRTi2CjR+wGfNQTVX5DIfz6lvImyuSp1aBu2BN4x5Ujv69l8DTPe0FZHqyR
oLnvQjpPU18nHc6Fbx0/MzjmGk9pKxUW3oedIkalRKTxdLvLsVs2/Edy6T/J
VZ4c81Kzb8Gndhg+873CU/jVzp1ZsNnmLOeNl3F8t+cYZsDla9gDPjzFfDlQ
fxWW2D8IWpSC+jPlZXwqrD1vHmYI6F8Jqs7J8AOz52eMk3nqZmyjngivm+Rg
MDaJp3O1wvN4lteYd/eGXOTpzZ0bYXHw+cGudqqJ6A/Xaq1Os7z6fqlQuMBT
y+P+f07AdQqe3h0JPH2SM8s4xvL6xR4g5Gmts6vnEXhso/+Rj+dQP8okow/C
Tyr/jXx1lqeRO2M/7oe3lAgZj+J4WmecdTwcVn7ac9atMzhfA5/aSeGr9w6+
To3F8Wl+6MnDdpnqG86e5inerP5BMNySdOpH1CmeTPnWPXvgw2y745M8udd3
TAmAJ7Ptj2J4Gu/zu9EPLmbLIZ/gKXRIR6I3y4stj3Scp4C67y7bWF7scclo
nrrefNHcAt9kt08e42nE57KXG+GV7OuUozy9Vc/ftx7+zaZXUWgPHtdmroVP
Wi/pNeoIT6ofjv9dDf9nUnpS4zD6m/fu604sr/FsAQSeUvUct62AQ0ZU3+mK
5MlVboquAzxCfZNN6wG0185eFXbw/Z7NHz5H4O81Pp6whdd2+W19u58nlWWX
lyyA5dv+/Hu2jyfdzIBec+GEWknk/b08vZ9ilTuT5fVBcXhmOH5eqhBoxfpX
UcTVi2EYX07lTjGHwx+xBVZ4ipKENE6H9W6fKIqUov6HmSROhQuuDFvLizxt
S/u6xgjenHC+ZYfA08M/pzQMWV4nxvGbeJ4y3ecVTWD9KyJNbTXH08z27+Fj
4cXc1AQ7CU9bEo7NGAM377hrNCuEJyO/qX9Gwoc2Wz80CebpmDumafAkF7aA
E9rbbs8tQ+BX9os+DwvkySRNbtQglte81zvU9vDk0yPqgzo80NxJUXE3Twsl
I46pwTcmVUT/DsD4NPiSbV94xRh33UZ/nkpLDBSV4V+Dv92o2MlTROY1UoJj
+vrgP/JUkWHg353l1e1XWb4f2v/rZAN5ltcvtkAc6ovGiLouj3bz4EaFP1d8
eDq558jZTnhY1d598d74uZyc4y/4XklfrejtOP9JW/r9gF2fHkvZ68VTs/er
ghZY7r6WWdA2ns46G/NN8PnMc8+2b+Wp3eOo6Vd4drLu6vWePNVFN7fWwl9i
Lzeu2MJT0Jc5KTVw6BG2ACVPN1acdKuEdcNuqVhu4imyoV7rI/x4j2XcZA+e
esUZv34Hb97+yGDMRuS/IyiiFFbesPD+IHfMHzxzZr2GLzu+tOuzAfU9VO5f
EWy7aEWl7HqMtznm1wvhJuty7/Z1qB9Dd259Ah80cZOvW4v50+lLo/Nhwwls
gVueppm9L8+Fi0d46bxw4enJvx7R92E/9R8ZD9ag3lQaLsqG1XvtmZW1GvXi
8zLF2/D1Ltk3yc48bVD2pyx4eVvohthVPO13OLozA+5g26k7oR7SZf00OIZt
r+bI0+P5uV9S4f/YcusrMX/7+fpMMvyBLb+2Auf3UdXyRDiQPY69HPO5rG8q
CfBQdnv2Mp76PG7Ni4OJfV3rwNO9zvbg07ALu3yz50l9SdvUGFj+gNnuiUvh
x41Nx+AE7kEv7SWY/7nWJB6BZ+2cd2qAHc63Vumag3DN5ufjlRbj9ToeDYyA
pS5sgX7Ur/a05+HwGId3Ns02GA/7nwiVsrzmuZZXLeSpxGGPBc/yMv+ytWQB
+tsNp5/BcO/Jnl0F89G//pt6ZQ+cMqY1Mnse5qOVfdwDYButgOHX5qI/JVcO
3QE39u26en4Oxtcj1954w5HdRKsTs3laHRt0YBs86TfbAATtsWD27C3wq8aD
a0Nm8jRRs9e/jbBvlXqrjzVPmuFPMtfD/UtP8e4zUI8GhXmuhTOfavd3ssL4
/sxy1Bp42f2LCbaWPJWda3/vxPLKnDhlhgXmkycuRK1geSVnPJxijnqStnSh
A2x6ZvoyPTOeEho65ZfA746wDYYwXs85d9sW3hM2e2dfU/TPXGufBfCQwKeK
CtN54tdVjJ0LZ29fcvynCU96OrsrZ7K8NpTqNkzlaXd31Rgr1r+cVt8sN0Y9
7xlvZw7HL6qe93IK6rOBoZIpbD1z09uHRjyJO2/fmwpXmzRvujmZp8OfrPyN
YHEC28AM9WRzrr4hPFq7c1+cIc7/QOsvE1heuBqMMsD8quZu7Fh4U68eqaH6
PEW/Nlo2Bu4lwxoMT32/JCrrwJfa1Aq3TkD9GjTw4XB4Yd2J1WvH4+fbuD1D
4G8fhjU5jEM9qambPIjl9fJ88LyxqD+BNg3qrH/lsQ0SUc+mpp5Tg1/eTosz
0OXJWU3JsS/sfXWqoc4Yni73dVVVhtXO370/cDRPV/Qz85XgjBNsQEL+Xt1C
urO8DjzGCMxT3ku7qfIsL26RT4s2Tx+XxTR2bWw3P7HztfznEZjPdpaf74Sn
b3GKKhuO+pE7zPkX/NaFbcDK04rUVf1/wLsd3DPvDeXpvxtHn7TAWvO/zcoY
wlNxdQHXBGeb+7xJ1ML4Oblz2lfYZTKb8PI0Ol7vey0sqxv888AgjKdGSy/W
wGfZdg6aaA+1/msq4RlseUcN1Ie7Meof4Sq23MNAzIczbjx7Bwvs8Q91XA88
fSmUwmPY7SADeFJUrDN9Deezj4f68yS77k9LEezBmosa2vMnpeRCWOkZu6DG
eBjS3/UJnHzfqPcwVfQHq8Ea+fCC67dO9evLk4zO0Oe58LdkywndVTBf1R0i
vQ9Hnnl095cyrrdsNcyyYYMotoE8rkeOqbTdgl+EvSz/1IsnPxn5S1nw9sAV
24p7YnzY1+KaAffzLu/KU+Lpn0m5RhqcvoF9YMfTB8VHz1PhZU71w68o4nqj
I0maDP9c5JV2rjvqT8+9Zonw8Zk/rI51w/s339AWD5tM2/MyXAHHF2V+KQ4u
myC3LlAe9be32trT8C7tsFYvObTH81UaMSyvgX0EN1n0D5erz4+xvHpF9V8h
g/z+C5AegdfIsC8EOPrP1NzsINzVdmaKxT+OVjt1te6H4+pGPZr0l6Ppp+8k
h8NW5ZeWje7k6LXMDlcpXPnS8IvmH47GSsdp8LCYl7VT+TdHZhM+FAbDo++Y
9ZD9xVGvH3vFPXDe1QfH235yFP3J6L8A2P38PL3aHxxVfn3b4gf3iGFfOHL0
ZVBgkjecdMBh/vM2jlI2DXbZxvLi373NaeXI4H2m+haW107XzddbONq6beGz
jfCBLV/+JH3naIvOR349PNHVc//pZhzfH8/pa+HnDq1ah5o4utja0bwa9pof
kCo04vWVQxKdYFWLLjP/bxyVz5NfvQLOmMxuaODoWCLX3wF20O21Zk0DR/3H
/Cuwg3/gvy2p58gm309iCx9THRgyu46jufvqpi6Ap3Y/3Xd6LUcKXisb58Cl
v7XPTvjCUciOhwkzWV5NFw1HfObobuwEJyuWV/XEnP41cO0hVXP4bmnGkh7V
HAXbt+RNh52fsRum8P8qbYOmwv/u3/NpqsDrHUo0MoLPXJ+tUPWJo8VrO+sN
YMtLT6PefORokIPN2QksrzNLRhWUc5ToEbN8LOtfUaWZdz9w1HGmSnkMPCp8
9ey09xypdOjmjoQfBla/SXjHUfX2TbuGwxvY9rBvcTzKFw2GwIpsu5gyjioK
Kj5rsrzY8rGlHMknDzytzvJiy8mUcNSYPG+pGvyVPV72hqNTz3Yq9YX3s9vN
XnPUt9856g1PYB8/F3M0xz/fTwkuZMPRK45myzSM6w5vGxjTYPSSI+VkpUo5
llfv4bhi5ei4n87xLnf0Lxl2wzdHdWtNbTth+/Zxp1WecyTjbavwC26rS5sg
X4h8zznfaoePlk/N/vGUI2n7Rq8W2PjVXdv6Jxzma16jm+DSPOuPHwrQfmR8
3zfAu+483lb0mCPdGz6Ha+HBaYtkHuZz1HRo29wa+M751wdv5HEUFOH+rwJe
FcMeKEF/SXbKKIf/HqhIO/OQo7a6BZvewbEYfY/kcvRpvsnwUtjS/9tL6QOO
op4Nf1MMV27xWbcrB+fHu9v+Iph3/dXqeZ+jFSafrQrhkcuCBdd7HG0a/uBn
AZw7v9sAB+Jo1thTqXnweot95+dmc9TgsH1dLtzdiD2whv4dP0PzPpykG/1I
/w5Hp/v1fX4Xnj9kyPKRt9E+4suEW3CDavwX9Vsc7V52ZnoWvK+7nn/Pm2hP
41yb0+Hxfy73+JfFUeiIYReuws+ajE58v85RzrQyp1R4W/UtvZpMjgp8IlWT
YdUyy1ulGcj/uVXeBfjaM/ZALEeWNs174uElOQvf0TX0968xk+Lg1usvN6en
cVSfalV7Co66tKLzwlWcv4PVp0+wvOLK98dc4ejpUX7pMZZXlNuQA5c52nFn
qNIROCC8PlWSivancD07Eh4U5GXul8LRpG3zfPfDt7x/FG68hP7zp1QvHHZy
Zw/cczQxye2jCHc6yTUvSkJ98P8axbG8FoeFWF/kaMMmr/nBLK9ZfVSnJqK/
BjZ37YYrpkWdHXsB/eXalkx/WDJx0KSh5zl6r1SzyQ/WHhmXo5rA0Tlu5XBv
+MHA0Uu7xaP+Dil4vRV2651S1XEW9anMeN9mWFGWLejBUW3WGcuN8MX2LIVP
Z9A+sxR+uMHzcLX6Khbtq2z9JVe4rvzBqLzTHO0f8sBlNbz31TyMcBwN4LXU
neBx+c9nXz7JkVdP7yfLWV5s++kY5JH+IMSe5cW2ozrB0ZkgVWM7uC9bnvo4
zudmpwYb+CpbriqaoxG7zsbNh+3Y46vHODqbXOUwB25ht7MexfF1jug1k+XF
vt6K4mjI9lX3LFlebLp7hKPBikf8zOASV9HJ/DBHzdkPx06H/Zf1+mp4iKOT
x9s+GsMaCw7tGXWQo4FRw45Ohm9aDFTWjES9T5s93wB2NGILkuH4mz26xrO8
dEdOlInA8duFZ+ixvIYkZbfuQ/stTvAYDVv001/0ZS9H4wLuDB0Jf+ye+fFt
OEfXLV68GgaH/JnuVRjGkbrupzAteETzPZmcUNTTSV/NNOGc6tmHMqUcrV3d
1jKA5VX2dESSiPqf0pHYj/WvQrbgIfqr1q9VKnBiTumMgzxHl1LbVXvDc7JW
v+I5jka6Nj7qAddeql63U8KRt3HV7m5weNymtk0hHMVMKDaQY3kdbRZWB3MU
O/t+zb8NyCt8x4AlQRztkSTH/IG3BnWenxXIkVF55KIOuI8PZzxtD0ePVm1X
aIevuLMFVTky+Wt78zu8eNWB5cN3cSQh3a2N8PfF/WvVAtDe4v9pN8BHZsX4
K/rjeJNelHyBp0wfrvRnB0dhRbH7q+E3Ey+caPTjyHqwh1UFvGPk+LGVvhy9
ler/+AAP1Lh267UPR7b9W5Lfwjd6myx47I3jf3B1TQnsKMsWbOboRdTm/sVw
Z7v1lqteHH0I1X78Aj5d/7gzfhtH+adeBz6DzT4uiojeytHBV8KkArj81esh
+zw5mjbe4MsjODjf6XLQFo7uXSg5+QAefrfC3HszRzrWuxffg3PS3J+v38SR
h+zgbndhtwvf1qz04Ciy4vrNm3C3k2xBeI4OV9luvQ6fj/wVYunOkb9ilXY6
PFsIVjXawJGFjU/JFfiLf7dzY9ZjvMvo2pcCh3numzTYjaON5mGWSfC4taoP
+qzj6GVd7/bz8NNl0Uvl1qJeZkUknYM9FwypbnfhaOaFnqvPwMqW8b51a9C+
svh+p+DLRmzDCdTD+o5Hx+FFeleOvnDmSM1i0+6jLK8hU0bnruIoN7NE/zDL
q9/t61lOHK2ytao+ABux7e0dOXrTI/H4PriYbXe3EvWupodNGOzHlr9fwZFf
1QZZEVZny+EtR3uTv58pYXmxx+OXcRQ/a+CmIJYXu13egaNDSR5Dd8N/2Nfn
9hyt17/xcid8il1OL+VIq0Qu1Bf+L8XryZwlHN2Im2e6Hf4Q98PJ1A71bf/+
Jk846OierxMXo/6deBK/ieW1Vy5QexHqeX73Fe4sr6AwZXVbjK+DzHu7wet8
+sQq2XA0I2L7PRdYfiPbMAvnT/usrzOcsGoQNc9Hfy57qusIz7KLwxUhR3/T
2t4vgz/PGv2pZC76d4rGoaVw+HR2gBwte2wyazE8Vn+SLM3m6J2iw6+F8JOR
Nw5dm8XRoo2eqfPgzRrm2hdmYjysl7jOhnsr5147YY3x6MDhAdZwqizbkA/1
1eHMYwuW14/nr0KsMF8wuxj4H8ur3sHN1xLvZ06q4TT48Md3be4WHKn6XK6Z
Ak8qZgWQo8/3Lp2YBL/K/zJgkRnOj8F5G33Y967nhRn/YXzKiZEdz/K61mps
bIrxxG9/pi7L60JAnt50jpwW7PIYBa88yTb85OjBDLch2vDvSLG2rwna36r5
RUPhGKFXgMJUjhyjx4uDYdOAQ0odUzgKb+s5TQN+78kmWHh9n5qv/Vlea0+P
/TiZo+T+d+JUWV6YHbychP5ccsC+D3x/QdKCR4aYz95x7tELdrXUf3/TAP3/
ge4dRVhuCttQmKM+X5u2KcDxeqZ/4yaifRinj5SFZw69HxE1Ae0/3rvk73rk
1W/O0LDxqCeGE/f9hsMU2QUcR0sqa8x/wnqdSyy2jcXfZ5xoaYUfN5c+X6uH
+WrSvAvN8Kaa1S7LdDmyp/aV3+Beb6ub541B/fp5WrkeTi1kG5ZzlGo34/5n
eNGDZlXDUehPzyp9q+DmrB3ndHQwX9kcrPsJPpjSOUljJH4+TuP9e9jwLPuA
iKPLyqmRZfDLoz3su4Zj/qhqbv0G9tl7oLplGI536pMfL+EBwf39Pg/lqF+w
ffJzOMsnptvbIfh/tWXOT+EVG4cfe6bFkbuvk+pjuGPVhdH3B3P0b0RZ7kP4
hN34rIxBOP7vS/xz4OlsO01NzP+r8scR/J5tr6GB8fnH9I+34SC23OZAjsrG
JR2+AQ9jy2+oo//zarMzYWKP4wzA/L0z4Fca7MJuz+nPEUW/T7kMy8q9SXZW
w/WAvanLJfgc6779ONI2OqZ2EZ7ZUPFkpir645RvjxJYXh/dV5n0RftbYbnr
LBxazL7gwnz0dOSEWHjMY5/AYX1wPabw7lMMnI+raTVl1I8I7aho2ONacGz3
3uiPJhvmRME9E7vp/+7JkXm3C78PsrxO7qNvSqgvbRWpEbDtQdXFFT0wX1AY
5LoXbhKiPxUrYr451bZ/KBwZMGR7fnecr/1BeTxssJV9gY56IX9pVwhctFbv
8BUF1IeTryYEsryWX9GOl0eeyzo+BbC8Fk5JPyaH+fVkzagd8HXL29Z7ZTn6
ZWg8xwdeNsWqOFCGo6NLFv3eBv/Uy3Pb3iWh8UfdUrfAx4fatLv9k9CdX34u
HiwvtVfiir8SmhvCq21geSmyG3QkVKgb8WgtHNhZfsHij4RsWw8HrIGHfneb
Ovm3hJ5+jBq/Cs6uqc8b/UtCMxoPf1wBr3nrtWJQh4QyhkYcdoBlnv+oVf4p
IZ3t/KwlLK8HewJkf0jocI1fhy3L64Zcz/Y2Cf3a7XZpAVyTEhZT2yohZ6NF
q+fC4ll2A6CEqI+x6ix49LGo28+/S2h4L81cKzhv76CFD5oltEevY4c5vDE4
7v31JgmVerzSM2X9y3e0Z3KjhAyfJr+fCqdsTPl7+puE9i0OijSCbZwnHTj0
VUIfftjMMIS/2d0YKjZIaBJptk+AD8w2v+JfL6GwpIrEsbC+KbvBWELlmecd
x7C89Oe/WFOL/1+9XlmH5aXzwmXpFwmJRtr3hsP9NZd9n/1ZQmUX3noPgTOU
30um1yAP08hRg2AHubX9JlZLiPtuUaoO//jx5dyIKvz+46971VheDZ6TB1RK
yCD3qFlflten1gc9KiQU/ml6c2/4XTF7gEFCNUPfn1OC9zzuqm4ql9DM4ACH
7rBWtuhX9UFC52TVesjDd6/16l7yXkIKFy7e6nJrN1+deOhYwTsJbdky3bMT
ljk1cEz2WwkV2+cP+wWfY9v1lknIfM2Sl+2wNdu+p1RCV/eVCi1wFVvOt0RC
I986Tm2CBba8zxsJnZpfVtcAj2KP+72W0KAPS0/Vwo/Y7X/FEjpxqMC2Bt7I
vg54hTw3mslWwj3Z9OClhC65pKSXw5emPDO1LZKQ2e6BG97BC8YufWr1QkKv
s4I0SuGvQ8tWTXkuIS/1yoJiOEJtzTfdQgmpR1sFFsH6PdgDmGg/007rF8JF
nZv69H0qIc9/bRUFsPf35lj5JxIaUzM3Kg/u93mH/s/HEqr9dnx2Lpz+tpPq
8yV0WaOm4x5s/5xbXJ4noeD1Ey7dhX8gjaJHElpRvN35Fhx948D2hw8lZLL+
mkoWPC21v9zNXLw/jab76fDbs+wBbwn1+zbG9yq869hwXHFJqE/1qtGp8OB9
F9KP3MfP/0aUJsF3gsfPDL2Hvze5vfcCy8v3WvEuzI6nHa3+L57l5WGyfmu2
hFb379l0Bj7rnN3uehftI3Pc2VOw1ZKZUoc7EnrgP2/pCbhydoH6vNsSUly9
rtsxmDdlC0hIyGF9QNZhWMfgzVSDmxK6dmCfRyTLS2dV/sgbEtJ8e2LwfpaX
ZuWKgVkSipiT8CwMVuqzsa7ndQn1LEkOFuEkucaAfxkSOh6WasjB83/69GxJ
l9DkVSlVQXBDw6+YmmsSemeXeHQ3vP9T8LiyNPw/j9g5/iyv12yBGgnZxR/6
5Qu/eLxv4b0rEtLuCrm0HfbKVv2QfllCMoFbnLfCqunRnompEmrUslfZDF9L
HPIvJkVC9eVT77uzvE7FHzhwSUKtOQN93OD2g3rDuGQJ9X3cquPK8hKvXPFL
kpDp9ydvnGGTXVMsPS5KaIdpXJgjXLqVLYAloexEr+nL4YB1Vv+j6M7jcuii
OIAXLSIVbRIRUkqLFGUpJES2IkopLUooqdSzz2OXFMkupEJCIb1pcSgiESUp
exEpopIi6v3d97/vp7zN3HPnzp2Ze89Zs+SclIZNmv7VFR668n6rQxrGh0/y
p5bA+c4Lt05OxfV18+HihbDnzGeDTVKkdOjyXtn5cI+1e4reWSlZ3513fQ58
BrOXwclS+vxXNsABnjEi4K78GSldXPGf1gy4Tr152e9TGB+qgh5Mg7f2Ywn2
cL2Ga/Ft4dH/fkW+PymltVa3TSbB91qFClUnpBSlvfaNJRz4qc+R+8eldGJY
v3hzWJGVAz8mpacO52aMhy+w8mBHpaS7b0abEezE0oUfkVJ0V3WKAdzE0ocd
ltK3HeuWj4L3su3Eh6QUbt2lMAI2ZcuLE9FfFbfl6sJP2OfGg1K6/0cpeAgc
yh4/EqQUq7ZPVxNW43IzVhzA8c9TfjwIvhphN23Bfin5nN0lVoFd1t19ZBeP
n+v1mg+Af3rNxwiNf1+wuU4RPuzy9JvBPimVCOsT5OBJc93EOrG43r0XzZaF
X0xlCYKlJPDL6fjnh+d1C9/TMjFS6t4z9PwfWMeg0fznbintr+Sv7ITzdEJu
f94lpRnTXyj9hD1Vfi55tVNK/R6a5/+Ae/rw68p3SOlL9PYN3+BTnb1hRdul
9MHp+fAm2P7rjj4526TUOW3Uk0/w+/cDDqZvRX91Wc99gKXPWQJyKQXvyZrw
Hh79UDt7PyelsvrW+tfwvVtJs7dLpDR3tXliLRxwffTzKLGUXncHOVbDChfS
A9aLcP75p35VwudPmv9aLZSSR9LT80/geXjadxFgvE/uWfkI/rJjqvYcPv5/
9436l8J7+XfO2/KkFKC6OP8ebBrKChzgfsAL21AEP/Z7/GBklJT+yu8fTnDI
Sld3jS1SCsu+WJ4Pqy6s/aIYif68444kF86a6c3vDpfS9agqixvw0kkN/b9v
Rv+M/VB3FW43Xn+iPkxKIcUtCVfgxBGtJtWb0J+G/XLIgK01ogpKQ6V05sjv
n+fh6n6sgAra1+p3Wioc9W/rm6yNUlr886dbMjykrV9I6gaM98+/Kp5i8foU
13NkPeJb+z73OIvXK434vcGIX+/TdUfgv0+Oj5Csk9LYuYVDE+GkuyOzNgdJ
yfRqWtl+2O7muRlrA6XkMj1GuA9+d3l8hftajFfNwaYxMHeWFWiSkmzB3Lc7
4VFHbNpm+KP9r4yM3wYX77211coP43txhz0H+3Oz1Y18paTwp+SHEJaPfJii
u0ZKv1wSk3nwuXVLrFR9pKRc7uWyBZ67uvpuH28p2a8f3TecxcvFc/kvL/x9
44broSxec+sbvniiPyun+G+ATaaxAnCYT6l6aa6DH1m0KFR4SIlvrV4SAG80
iDhy111Ka0T3tvjCKqz84Eq0/+dwQ284k5UjWIH2DterWcXixdITuuH49O/t
Xgm3sXQFy3H/bAu0XQ4fZNsXlklpUINC01LYii1ncJXSy9/JxxfBz9nrDRdc
fxa2CxbAW9jpLsV8Zc+j7rksXjTu0rIlUtKQ97w0m8Xreua0eYulFHn2s+dM
2OMCu6FLqWdN6EA7uPtkvpf5QildcmgvnAKfPDCzZZSzlHbODQ+ZDE/feV+s
tQDzqY3f9azgt/yFqv3nS+nyjcAnFixeoayALfrviNcSU1jf392ida6UIi45
WxjDRSvf3f44B/OPVTffj4X9FgYsrXHE9Wsy6sBoWG4We2DA+entmjkSTpsU
tpkcMB+d2Ng6jMXLpLPP9VmY3653PKvD4jVCdPDcTCnl3D3logXv0eg75vgM
KbnN+NlHHTZWYgWycb9+63hdFS77p+IotcP4eOqgnzK8oS3xecR0zC+5N+pK
8MDPQ9cGTZMSt330XXkWr1fshYSUui4GRPRh8Xo6dtfiKVJKak8Z0+uL5/W7
l7QdbBGv1W+ruuGEm5YXJtlgPtOssaMLnngl18Z4MuZXx+dad8BVZ+1Kh0+S
Utv6LQ2t8Bb0lkHW6D/eyYda4CGx85vkrKRkFvnAsRnO5Z7yuyxxf7zc3PEZ
do9kLzwxnikOOPcR/rPu9Yl3FhhPto11q4NPrPYd/8wc9xN9O4W38DTXxoIS
Myltrl+a8xJ+MzdkYZ6plGbeW7P2BSyZ9vPN5fGYzz3cqFUFj5zAD0k2wXjf
GlnyFL5jINObaIzniyn8LY9h36E743ePw/PAOf7Yh3BfVfZBRUp6VlHVJXBa
34SsUEM2fwrdWQzP6dKe6TcW7ZvjP+k2/PlrUoWbgZRiLi7/VADvqRvtO3+M
lNTvzDp8Ex5Xnd42fbSUHv42mZMDP3xovm3CKCn9t2zQr2vwerqhbqAvpeqK
trRMWDl7auqQkVIyDnu6/BJ85QL7YCulq5YX5dPhxUlz7/UOx/locTfS4B8H
Hi9vHyalFcNcAs7CB3a6fvqki+eV2SM1T8OWgtotL4dKqTKu6e4J+Fmot2K5
Du6H3VkRR+EIVt50CNo/JnzMIViLlTvRxvgw1bLqAPwfS3+qhf6p8m1bHLyS
pUPRlNL5vqkT98K/2fYoDczfdVd82AUfZ8ul1DEeLVc4uB2eyl6fDkZ7XL06
S8rixYbTQVJaYu7eJoLFSprDVqtJ6d6Tv8l8Fi/Mrpaqov8lnFwaBd9uGznd
UUVKrlE2shHwms/nHtsMxPxA/DRrE9znNVtwJqW75/19NsKpT6+1jBiA32//
qRoMO96zkaj3l9IQjJlr4U83b6kqKklJu1Up1A/edWX2mT+KOJ6UOD0f2Cjl
IUZAzGejVMs94dIjS+7UyUspNCRW5M7iFVu99Lkcrsdd8qZuLF5Sz/oHfXH/
KeK/doEvR7IFrXi+GfF172IWr+CgvlmyuH5Ou091hr+vbjmYIoP7yczipnnw
fteIMUd6OVoiP+64Izxh3p/smB6OTjTHOM2CK6dxjuJ/HI382dhlx+I1QaE6
7C9Hn/QcLkyFNcfGrg3o5ujz+mMrbOCcoYM7V/7hyOBVs4I1vEKVLZjn6NSG
KTkT4K6+ekNmdHHkPnJHgBmLV1fKhYmdHC39VaZhwuL1bZyt4S+Odrao3DWE
X9dllg7t4Kir36LwMSxe1dYeKj85uuS4Z5Q+rFeW3yTbzlFS6u2K4TDRTEFH
K0ePDX5yQ2Gf7PsDvvzgaHrpaAttWDadbcjh6Efc4nfqcErSs/FPWzh6tyUq
Tg2eneBeWPyNIzXpiekD4Yad7xb+95WjrZfzvyrBOwUBby82czTx74sTCrDh
puaQU00cjdv4Y35fFi//sN4DXzjylpH/07umwy7YvTN+RyNH1Tc00//CAxaJ
RvI+c7R/36iVv+HLs9iGP4727DJR/AUvnLxnpk8DRw9TLHLa4BYT1UrXjxw5
108I+A7HjzzkO/cDRyoO5hpfYQtN3fYp9RxplRgVN8KVSsnbzOo48l+vt7kB
Du8ZqzHqPUdtlmr69bBG+6VUzXccPRjW8+QtfOOzpbXSW47qjBrFr2C312xD
MUf2K8pNa+Cup3ZuP17h5+ezXlfBx+7d/fThJY5vaPzeCnhK3vyoF7WIT+a6
KeXwa1Y+uYajDYEzvjyEhayc0guODGeqH70PD2fplas5MppeP+cufIulW3rO
0aZVlztuw95s+2UVRz0nIlILYdktLGEBR1U9k13z4LPs80wlRz+3dcr+Bzuw
6VoFRytNrmddhz+6ysQGPuWoX0ewdxa8Y97OYauecPT3vZ7KZdhwuvLlReUc
Tf1eXpAOP5iQMH3WY47ujhCsPwevGzuk3PoRR0c2jx6awuKle2r1uDKOrn2+
/+A0nKHKEqJwpC0JijoJO8tdlKiVclRiIz/2GPyty1xN7gFHpHGq6hAc9+3G
mc4SjvqqT9yWwOJVP3VC8z2OEifenRAPV1TfufP2LkchW5a+3wtvLpvrUlmM
n796GbcbVr/9uP5eEUcKfj7Td8DZ2a7hN+/geJXrm6Xw8nSWcImjJzXex8Vw
Z5J34hniaOz92nkC+GhCw5jEW4jXi8WdUbDtrvU3dhVyVNi/KC0CfilodRQU
cPTH22JZGCzYFFUdks/R7hfH+4TAwwL+rfXNQ38Kk70aDBe6b+tcfpOjWFN/
70AWr0VKu51yOZJTLh7oD8s4sIRu+HvKegU+cPJkzXSLHI7qzSODveBZ40/Y
jrnB0ZzIB0M84A8j9fHEwFH3a+37bvB2zfMeA65zJBvoF+kKj+1v2txzFfFV
zxi9BL7fc03QloV41rVUOMNB7TbKnzI5aq8045xgpcZbJ2uv4Hr/FGw2B774
miWM5OiZbsrrWfCCioeFty8hPuEvYuxZvO4tWZSdgf72TdF2GotXXvXb8xdx
fjFWn21g80zP0BPpiI+T1yFrFq+U+t64CxylGm91sITDjgbt33qeI2OzlFYz
ePC+lpFbzqH/Lbt92gS+Lo24ui6NI6uTtQuN4GVbWEJajvIUvnePgX+hNy9J
wXhwUOaiPnzEW8Fv9ln8fJbKSj3YZlls++RkjqZpDFHQhWvnDd5ucoYj9X56
2dowf/pRjRGnOZqiN9JXg8XLUi9t8CmOCtz01AaxeI1NtVZI4ijh6pBbA+HV
usYlv0/g/M1UN/Rn8VJjCa85mlEuO1QRPiM36fP7Yxzp7v9xvy88k5VnP4rx
J+JVpAxcz8q1HeGokl80+p8P4sXStx/G9ZGSVvEbNmDp3A5x1NyyXfILLmHb
uxM54nv6mLbDgWy590H0p6+TX32H+7HPvwkcpZ0asOcrnM4eBw9wZBf+atIX
eMGp5u5N+zmyDD7/sQH+mhAW6x/PEbctNKEe3rerc9jKOPR3mjjjHWwuFF1e
sI+jMcN/fnsFP9nU184+FuN3UtaJGnhTwJ5yy70cTZ6xzuk5PMhD1XtsDPqj
vF5nBXxt0aHvOntwPl/LU8vhZQ6sYAeO/5fApQzumJysJrsL95tRBjIP4MPj
DZN/7uBIL+zh5bvwZP3LExq3c/Srbv2qO3CN5sSiV9s4sohUUroF8/vfdHmy
laN7xik5ebBur92HIilHuX1s/f+DC9rvhudwHPX/93BQNry6cT5GGPxcx52y
4J7XrCAQR0UrP2y4DJ/G7O+AiCPTvHVDL8IzSl7f2C7EeDz96/1zcH2e75xo
AY7vY3BkCrwts7F6PZ+jc5caRp2Bx6SGBHrz0N+PeD49Cd87+rPTJRrXS+oT
0TF47T7+7jlRHEVX2ZkchhW3yuhM2cKReOzFmgQWry2s4BjmA8cH7YyH569X
nqIfwVHmhMiJsXCzd8JDjXDc/5qq3u9m8Vo2ZFW/zRz5lljE7YBNnViAcf+/
u3vqVrh8+hjh91C078fXjWI41PKi8ocQ/NzQ9LAAVjO0SKreyFFALM8hmsVL
N8f04QaOatWLfkTArmqsoCFHVwsVToXBP+WKFl0Nxv1+z9wFIfCh33Pfpa7D
9RC9vSsYntTyOPRoEEeH9hSmBbJ41bMbCMajgjYXf5j3ona/ZC3Gs8FjZNbA
Qx9564cHYLyIWXrZC86/3XB1rT/GawOBhwfseWP9LA8/jg7Un1FcAf9LZwVT
0R/uFGW7wqdORfnNXIPrs/j9miWw/cF/7VY+HH39/EdlIVy3a9t2I2+OtpkN
KnCCtwrZBJUj0ZHR6+bAo8Pi01S9OPowylLLAb4boDmpryfmQ0+nFdvDAR4n
Sn55YD5zxmHTNFhhsf6KJnf034NzhtvCFxxYQWbE74LjQ2vYiZWDXMFR07sZ
UZZwEysP4Yb7g63NGHN4L0sXuRz3hxsmFSbweJY+YhlHZ5bpio3gx2w7iSva
W1PRxAAOYctLXDAe/m55oc/ixV43LcV8qrdyux58lXW/JRz5GF6foAu7vGEF
3zkasjn+rTbcXlEfu2YRrv93gXs14MSSoOHLF3JUHjLNZhBsnd9yeZ4zR2Uj
BzYMhKsz2Qs2jA8dtQf6w9Gpf8rN52P8/XrWThHWOcZ5j3biaJ58UHNfOG+f
wg+teRx1zBh3VAZetTWW6z8Xx3f60+x/3h12f7cMHtTjyNHxEWdaf8On1h9N
bp3N0b6i5ad+wfY+epYNDphP7VJc0A6/X5ZaVDML9+PQG53f4a1O7AU+7od8
79Sv8Ci7rA80A+PJOfmlX+Biy0kR1+05qug4/68B9jcskDtvh/YInHOxHlYY
NuvQ8ekceXW/d3sHn1d7YBA3Df3valTf1/A8+UU50qm4fmP6Z9XAX34/mxM5
haPOHcc8n8MxLe4vgmw5ykkZo1QJm3xgHwg5+vgh40Y5/PhFQNfiybi/zzH3
LYNDHjXvdpiE+X7ZFZUHsOqdMJ3J1hgvwo3z78JXb3SmG1thfjn9bOAdeOlF
0RS9iRhPx2lp3ILbTvUtG2SJ47XZeTsPPnhwzyr5CeiP69o2/Adb7Vb92mWO
+V2hh042XC1kCxBw/BPpXhYcFaY78L0pru9HIzZfhoesTcaMnKOwXUK9i/BN
D0Oz+yYc9Ql4/vAc7LH48q08Y44GBBhHpbB4OUxcfGUcmz8LRp+Bk2xuvks2
Qn9/9ODJSdjO1H7TIUOMTxMHC4+xeOnfk9kzlqPiwhVGh2FOiy1wwvkFH6tK
gPUHVOhvGoPry+YFFw8X9bpd8xuN5xnjQaaxLF4/X89aMYqj19Pn1u6G5b/4
Ppuvz5FqBG/HDvjcm0Y/u5Ec3Xh0fsJWeG5lyM8JIzh6PrfyjRhuLPm53UCP
o9CGrj0CeE8+X1NnOEfSNN1J0SxeWWwBJUeKu6fUR8CPUndOktHF+e5bHhcG
bzymfL9dB+ebvWFKCItXXMKKz0M4EvZIPgXDmazcrDZHLcHxCYHwElZ+Rouj
mt/H7fzhVpaOVhPziYyzTT5wAktPo8HRMMm5w14sXmy7mjpHkZHnZnnAz9ny
tcEcLYw72+IGb2GvswdhfC49ftwV1ma3NzXM9w3j5yyBcw3nbYhSRf87L2lz
ZvEaVv43WAXxmL/hlBPcrbZs3+qBHN1WXT5/DnxS/uVwF2WMR522v2bB0/94
X3EcwNEtWd2z9vDblgY72/64/5h1LZwGSz6wDSC4v4gqftvAI2tavUf242j9
93Np1vCdR1E/1BU5St4WvdQS9rvzj1NU4Mhtypx/ZrBczrZB3XIcxairpZvA
aReVzrb0xXijWr3MCJ5zOt6yvg/6n+lRGQP480HN4ueyiH+I2yV9ePfuE66l
MhytqlBbqQe7/pn1gNcroYEr7vfVhQ9/WPTF55+EZvfyMrXh2kce/ed1S+hv
qdEqDXhozloT898SsvzvmcIg2Ov0ZmetTgk1l/CvDYTP7BZv/PdTQmN/D1/d
H64LYwsaJNSwsFBJER696nBm2Q/8/N7KG33hwNlnn15rkVDj6h8+MvAF0yut
x75KyFx3u/K/1RjPtfIGS5sk9Oe3eu5v2FSmZGJQo4TmdZ/2+wVv+lKxbPEn
CemOMFJth69Wvomc9FFCmwIu5X2Hf+Z/OTy8XkILysev/QpPTmMLICWU4Z4+
6AscHSdb2/xGQgmKowob4LyogX8qX+F8XxwOqod7fHR082pxfg8VNd7B9qw8
6wsJ+b2PoFewlKVrfS4h7yFvg2vge2z71jMJ1W120HoOK7LXuRUSavqeeqcC
nvd92e3pTyQkju+zsRzeW8M2TEjo8FLPIWVw+Z0NfZTLJGQ76VrxfVg1I3p0
+wP8velyoXdhl8Tts1+WSEgj0GXoHfiQaH/AnbsScr5+8l4hXL325M4LRRIa
POrDpjx4yJIL5+NvS2j1dYNh/8GettkPttyS0MRA//vX4aRRt794FeD8p5/e
nAW/G8A2WOL4JlUPvwyP7nhhMj5XQq1LlUrT4YC3H5zVcyT0I94m4hx87v73
jX+uS0j4w29ECvwlqzuu7qqEDoTvfXgaHn9cMetBJvqLTmbkSXjjNvWKzMs4
nrrykcfgrA0j2g5nSEj7UVPZIbh9uYm6OF1CXrV9ohJgK3uWkEFCpkrao+Lh
LUYOy53TJLRvleHjvfDNQYu3TEyREP/pxOjdcPcfjyNDkyXUHjht9A54+se1
ubKnJdSjP7NcyuL1eHNt40kJJfbM5Inh4hzxnyfHJZT3z26MAJY7E6P731EJ
bRhh8yQKnsvKAx2WUKafKT8CjmHpghIlJH2oZxAGl7HlgwkSqndVfroRHsim
E/sl9Ky3gx8MLzUruT0lTkJu5a8MAuEE7co6/VgJBVLhUz+4SuZtH6UYCQ14
dkLgA2s3fRn9Y5eE7JW2jPWC3Z91zH6xQ0IKvs4V7vCJAtm1t7ZJyPONntCN
xSuNJXyU0BzBt7GusH68zoVYiYSKpuZWLIZ9ow1Kw0USqtCTCJ3htDUTmjwE
EgobM8vQCW6cP33ALJ6EzjnLVjrC46ycxo+LklDokQLhLHg9Zi9qkRJ6IBdh
aA9nKqwJ6dwsodxEw8qp8I/vG+LfbpLQ9LkvhDawZS1LEC2hZcO2GVrDkUXb
Ky5tkJCMhknlBDg3Y3/bwWCML2ZPhGbw78ST6oIgCQ1bH2poAk8TX7DyXSuh
3Q8HVBrCksDs5U7+iLdzqnAMfHvJ7S0WvhIybLUx1If7Tnl0RNsH7ZtbWjEc
njO6JrfHS0J6Z92EQ+FdyqygBPrzlXdjteHSju9/HrlLaMsb/wp1Fi9WjnqF
hGTNPwnU4EUsPfVyCZmk+I0dCO9n21VdJfTF9s1TJfgZ+3y1VEIz210ECrAW
nmaXLJaQxZO7Bn3hFRsn35m8EP3pseXTXq8Ou+NuDvV6CyT0puUk/y/8xp4V
oJLQScu+Br9hvXGrxnybI6G2owFPOuA1gwMdq2ZL6KP+XV4bnNq9eW3+LIxn
j/XGfIcbPop3nZ0hoaMnIsubYcPymAt77NAfYh9EN8Lr/ztcummahApOa49u
gC+dOdu0YoqErj/3fVwHt+y5MsDeBuOF2cWot/CEcFawUkJc+jf9V3CEZ8nC
gVYSWjTX9NEL+IYjmwDg/6e4bksV/NvsbfwrcwmVNJ0ZWQFPHdKUVWSK/vKj
6uFjWCj7qyLdRELZQ+QjH8K3mmTb94+T0HG/CSPuw7JVAzWiDTFeV7iXFsMO
hTrW3gboP2vE4bfhHedYgWvWX04PL4RL4ydEmepLyOdL/v2bcH8ee2GA8bau
KiwHdvZ1utk9DL//94vudTh+wfKX9UMlNMO2+14mXGG1prt0iIRGH+u36RI8
mJVD05JQqu7goemwG0uPpoHzua19Nw0+ypZLD5ZQzG6dkLNwLXt8UsN4sll7
yGl4WPHJMwtVJNQtGVR0Ava+xD4w4PrJVNxwFE4+lF2v219Cv2T/aB6C68W3
+/bth/vflkY6AI8NejSmSV5CPJVn6+LgoKU1jhV9JXTtwU31vXD6FDZg4e+n
nSzcBX/DaHC6V0zKaYLA7bD5wL8Xdv4T04T7boOk8KZfig83dovpzwCzfBGc
/Y4tSBDT2nDZAD7868EI5WmdYuL/e6oSBU++ZmI6ukNMFhdP5obD/BOTF/Vv
F9MBnr/vJrhwu0No6w8xJa43Ut4I925cvL+mRUz2XOONdfCMFauu0lcx7f8v
1XstvH1GYOW5JjHFDvJS8oNLxoW372sUk1ncoOvesKI6W8AopkjTIk9PeMHf
GGvPj2IK+B6i4A7vaziMK0RMf59pZy2Hy8vPRhm/F9OMVwXuLvCg3CtHB70V
k5H86r6L4WXJeTe7Xokpf2n3pQXwoZiSl+9qxdR9O9FtHvwivLK75IWY3rkY
yzjCuiwd/3MxbVIsSJ8Je7Ht+c/EdPGtk6sdfIp9rq/A+dQ8+zuFxWtIH87v
iZj0O9zPTYbH9FFJnv9YTB5WrxdbwQHNOkUTysQ0+7DHbwsWryqDD0NKxVQz
9PlZU7i5cIKczH0xaRQtcDaGx5+fbvD5rpj6xN7qGAuH7neaU14kpuPRpqdH
w9d4bIOkmN7vOjpvJNzuu2b3yVtiqrzZ2zoMtnbemL6tQEwRKn4ndGCeNe9h
cJ6YaEfRbC04X29H89JctMcIvZbB8F/FA8q2OYj/68gjqixerSdNR2aL6XZ+
6QxleOvLC4sUr4npQaFOUz+4uDg7tCVTTJL6gIPyLF6XWUIFMTWOuzKtD+x0
+NHVggwxySa2NfR44v4nqalMSRdTyciJ8d3w46CP7THnxTTraahNF6zm8kNj
c5qYgs9eqPsJu0z9a+2egvY68iamFT44pt+KGcliqriiYtUCv2DDwWkxqX6Z
+qYJ1ukccUwlSUw9jgE7P8Me71kCJjGdvhdj/hE+VTr51eujYvoVeKnmPfye
lX88jN8f/1D6BtZn6SATxZSr8dH4JRzAtockiGnsiD/PquHz7HXRfjEtcFYW
PYMbV4RzPnFi0js5dOxT2HimJHluLPqHisGTR3CI8d4isxgxNaWYRJfCWeos
YSP61yoz/RK49e9ZuX87xLRnkunDItj60xWDj9vw+xONwgmOepI3p0wqJpll
I4YVwLm5JYHXJGIqPTz4Xi78N7ly9zGRmBb9lQ25AdvtfZvOCcS0e/s3rWuw
JKLpYSBPTFHmz+kKXOT1q3lRFI73X25QBiw/lyV4FpPo29FBF+A5Fipmw8Nx
/cpE5qXCu3WGLpYLE5PfpIV+yfCjPmM3NYfg+OL0lU/BKl8nHKjcICbT/m3Z
x+HFz6dfuxmM6+3CLa8jLF63nJ6dCRJTbdAuhUT4+fnlP3etFdM8Z+fM/bDW
gTWaof5i2uwycOU+Fi8+KwghJhfBQ5kY+KQfb8V0HzF9L9mWvhN+47wjesxq
/HtrW5dt8MhJB44N8MT1VdL0RwL7jUjKa3MXkzH/aIoQTu2X/qp2hZiyl8xy
5sGfWPmR5RjvnBp/RrJ4sXQkroh/QEzSZngDW560VEyFqUZzQuHLl1kBKTFN
VShuWc/idfgj57VQTFti3I8EwRO5H8mzF4hp/YSv9gFwxLq/RSZOYhrVzW9c
w+Ll0u/j4LliOvpZ/sBq+M9UDfk/s8X08Fes7Sp4qsHIsXWzxHTTSK1+BSxW
GT/3wQwxhYjiY5bBdzonB2Xaientz/4Tl8J961jBSYzn8VtfLYRnP1x8UTQF
x7/g17b5LF7XV5X524gpy2Tt+Lnww5OBXxdMEtMIs8oqB3jAzvCBE63Qvq5T
RDNYvEIlZkMtxTTnxCmD6fCBlXsXy1pgPJXvfWwLV848sqnRVExhB1dtmcTi
ZZJy4ImJmC47ZOtNhFdqsALVYrqgpXTfHD72L+9ZkqGYfJU9QsfDrz+xB36M
B2POa4+DRzyt1NwwWkzjfX6QAbzm5ttJrvpisr5lHTQKPsumGyPQ3+2j1Eaw
eO39Fa0/XEwJ9dm5urBRZJ/j/XTF9OlCi88QeN1qlfzvQ/D7CWOUNFm8WLlb
LYyHSW5XB8HfWfpbDTFtf7TdXQW2YNvhBqM/Dc+UHQCHs9fjargeEp6nK8I5
X518wlXEpD2ua6kc3Pl8udRDWUzP67X+yMBTaM3Zmf3R32jC2X+rOuxEFzYW
G/UT09lb8+b/gXEj/KiqIKa896vafsEygh3ynX1x/Abrj7fDs/0PjH0rK6ZJ
+7bM+gHvXMgWFIgoVVvc9BW+Pyk96NI/EdXclSZ8gQeMvLHnYLeIqhOlUz7B
C5XuXOT/FtGZXaL6ejiu7VHZmk4RmSVFxryDK17VfJ3XIaLdz9dZvoY17n0c
aNEuoisWHi9r4OVXfphpt4ro1JU5W5/DR4/8XdzTIiL3xebGlfArji1AFNGb
wRqV5fDwYI2ER00isvj9k1cGr3Ydef16o4gW9anUfwCfnTa+6vgnEVmZZZTe
hT8a2HRIP4qoWciF3YENVGdrrasX0caWpTq34HVdiycveS+igq0j7uTBGXWr
Vk5+i/O1/RL0H/wVo5XeaxHdVc9Uy4bNs9mGBRHx1cJys+DNSZL8ry9EJGth
7nMZzmbllp6LaNnmL4oX4Q6WfumZiKJfnM48B9uy5ZgVItrg7bIiBRbMyrTf
80SE8Uq29zRcYJLvs+mxiOhFxrmTLF6a96UrykSk/8Bl0TF4Vk/lWbtSEbm+
6ug4BG/7zDY44u8NOpSUAJc8bfqofE9ExsEWjvGwUt4v+Z9FInrccP/rXnh+
Sh/DV7dFNHv7qsTdcGysyryiWyLa59g8dQf8NHLouvQCEZ0bF/VBCg/2Hhuz
P09EiRa9MWLYdZ5lRlQu/p7HNksBfGSC3aPVOSJqONf3ZRRcO5QlRBDRAi1O
GgEPlXNTMb0mom0XuozCWLy+rTHXyBLRfq+NTzfCZ6o3Lum+LKJw67dRwXAd
8cLqM0Q0zmLBiEB4TPqOhNJ0Ed1YmF3iBwcmHLiedV5EmnE6IT7wBUFS1ZE0
Ec1v5Wt6wU3+6R3iFBG5RdUUuMNmi1gCJRFNGWnp7wZvYo8zp0X0o3nXAFf4
6sjHK62SRCR8WXttMYuXUi1P94SIPjYbejjDk9s/Hu9zTEQjR26WdYKjWXnv
w+hfUbkXHFm8WLrvRBGNav2zeBbcw7b/JqA99tl22sH27HPgfhFJF0acmgpv
lbKEiyLqMs9wtIHvBY9fszFWRHOs3361ghWW2WxdFiOiEK+BiRPgedNnp0zd
LaLQCzZTzVi8xi65O2qniBZq+dQbw+Wqng1K20Ukd37bHkNY9XegQqtURIc9
UizGsHjVhxvWSETUY0EvRsKHyiTzSCSiucYvxMPh6myWoFlEwXOaDYayeJ06
ErOPJ6K1O7ofacGeu1IyIqJENOuzYoQ6nLQp89GqSBz/ejVdNfi9e/63WeHo
P+qaRcrwaIf7KsZhIvr7RnOdEhww/pn5oFDEp2ywmgJ8TvPdkq4NIuK9GvBf
Hxavnqawd8EikqjIru71wPyykRV0ENE6/za5v/DGij7Zl9diPHnzLqMLvpqn
8jzRX0TPoktdOuD2lKG/BL6I9+TM362w1b6x2n4+IioccuBMCxy1xdJm/mpc
n8ND5zbDed527hM8RWQw26nlM9w9bz5/iIeIjOJGHPoI21m6nehdISKV7tap
dbCUlZdbLqLKmNv1b+Bilm7OVUSC6Xv3vITl2PLzpWh/dReLF/C8FztGnFyM
eA3QfPEMjrl9YMa2hTiesVWip3BZetKa4AUiavKPH/MYVj2YvnWpk4h6780p
K4WXCm+k2MwVUZvTn7ASOCHgzt0RjiJ69CN9SDH8fBErGCmimLzlRPAQm1qF
lhkiGn/+X0AB7K7fYPjcTkSZOcnKN+GT/VvnFUwTke6XmddvwO/a/65LmYJ4
2711vwbrv+m3N8YG42/OFplM2LdE41LYJBHlLh1wPgM+l8kuEBHdVD258ALc
eHR8i72liE7/MPqZCo/bygpMI14/rx5PZvFaPxszNhEN15088xScuWzJ0g4T
/P/8cz8fh39M99z8epyIbCus447AEw2DDhYb4n7jk2mVCG9Ri8i+aCCijsEG
r/bDub8lzw+MxnjfeFi6D/5Tz27AIlr6Xs4oBp7OXpeMEJFXd0j5TljCmm+4
iFxsn0dsg2+fynQ30xWR+fHJuhyL1272gl9EncMP3xHCc8Lun/irJaKMuz8C
efAuVt5AA9dH3FyVLfBDlu5gMNqffzx7MzyQLX9QE5FDzBePUHiRFpvgi+hs
gZXsBnh/b5+ZnDLuN4OE54PgqkYV38D+GD9iaGEArFU5dNuifhh/DXrb18Ar
89mCABEt+TDl+Gr4RKrlvWFyuL7vbp6xCn6zz+5T3z4imvzg3KcVsF7UfMXm
XiEN/F4du4zFy8fNqPKfkJ7a9J24FE51Yi8QhLQjzaR2IdxgGRJ85reQxlov
kcyHjYbx9+7qFFLu500Gc+H18jsvhXQIaWLhvjIH+FILW0AopNQb58JmwC0v
klqmtQpJriJfezpseSdddcx3IS1WfVxoC0dcvGEx4JuQ4ja99JsE3zh4Z2lb
k5Do5welifBvIXtBKaS3J75kmsNT19YevP1JSN8DmpePh4WLG7LPfxRSu8uX
biMWL5vW53H1Qmr0/ZBsAPcZxTYcCKn8UO3cUbDDAKUhXm+FdKG57JsevPOn
hu3s10La7J93UBcufTPSw+SlkKxk0myHwP3vjxcMrhFSw6297zRgZ1ZO87mQ
Ys6E7BjE4sXSaz5D+6QtNFGBK9l2mwohZT8yqugPq2/w7L3yREhTtGWiFOEV
y9kGRSFd2/5smBx8zC5ipqhMSHqaKUUy8EtDzte/VEhbH4QE/XNHvAbFbltw
X0hvTk1S+QP7/DmCCAtp3NE/13/ByR9S7ukUC2lTdp57O/zxUeYnmTtCutS+
pfc7bJiTr9h4S0jvlpunfYXXnb5v9KRASANefZj/Bb64myU0EJLZtsQfDXAL
RtOkXCHNWzTzcD1ssap57/YcIa2a1jT1HRw2u/PS+mwhBS2Mr3sF3zDtW+5y
TUgbpRa7auBOLdXvtllC2lDzePxz2EZGV03/ipD8XQIrK2DBl7ET+l0S0rLv
f6PK4VuVli7f04U0IzNueBncm88SIAlpTMKw4vvwrLT5iYVpQlI4ei7oLrwj
zu1GaoqQ6m+PV7kD34/yrd6bLKQ85czrhXA/9jr2NPqTwNQ9D3Zmw3OSkLwG
XujJgeMm7rSdeQLtV6SXeh1+MizBw+iYkNqOHXDKgtUVTglUjwgpJ1Hm+yV4
OSvnkigkwbX1ienwYZbeJQHxbK+0PQfXsuVe+4X0y23Su7PwsIzHvRlxiP+b
Q9tPw16JtSMPxgopdFfruJPwGVHDTH6MkIyWOT05Cn9Y2+q7ZreQ3jskRRyC
DZb82zZvp5COuX3TSYDX2iqlmW8X0tJYW4pj8RrFEiwLqX+D1H8v/HWA/ud/
EiEV+ZQo7YZNO8b3axAJSdirkLmdxeutzbhHAiFNuuOwTApfvz97/nWekH6k
CX+L4J9ZS9YfjxLSlctXT/Hhycc9Y6WRQgqpqXeIgvnbgi4HhaN/jFX7Eg7n
b4goXxyG9jpsG7cJ7lnOCjKg/Y29J26EZ+LpQ2+jkLbVcTXr4G1GRyfIrxfS
kvxTorXw3UGpLl+DEN/c3FF+LF7dmeHP1gqp60X5fW94/sf8xDx/IVUOrdvg
Ce99fP9Gsq+Qsrjvg9zh8pxn1bt9hHRQ6U/OcnjQmXedoatxvjdkPF1glz2s
gJOQ1m/vK7sYTtzcaWvnISSfLX3OLYBrVvVdZbBSSB57/82fBw9l5YPdhORZ
/PP7bNiTpRN2FZKfXmPiTPg02164VEgRJ1/Y2sF1MhPf3VkspL3Ti99OgUc1
2cmkLxTSRdmMbZNZvJ7N19+/AMffGGdkBV8oYAUfhSTbHvLYAv6S5uu3eq6Q
bEcu2GwKj48P2e7oiOPfNFrbGA6N5qeNdxBSyYfO/LFw1pqdJeozhaTLf+Az
Gm6bn/D5jx3648RD8iPhSVan+tVPE9JH1dUXh8HRwy+OK50iJDfV0Yt14DyF
nPlZNkKqmvCxXRP+950ViBaSd1Ty0cGwfe3jWLGVkDreeUxXhbmi2ssBlkJK
XK9WP4DFK6Oh3NlCSA5Di3b2gxUOtX6faCak3uZQE3l4rvifmu54Id17r/NU
Fo4JVLLsYyyk410U0bOyw+7xEk3XL4Y4v4m+Ot2wyhT9iKcGQgo+IHOrE14y
2vTQf6OFFDj4hO9POFHZNueUPto7Z4JiK1zNPveMwPUsupvxDR7Cpn/DcX0G
ui5pglc98NRZpov7QcTbn5/gpKtBU6bq4PpMCzj2AX57PGLVKG0hJXQ1Tn8P
j2LlqzSF9DckqP417M/SWQ3G3+v3cWctnMaWt6oJSebeKpNquNE+9d0tFSEd
TX3ypBI2Gcc+6Atp7nn7iCfwhsEF+vv6C0nxccaQR/CV7vuzIvoJqVpTo/AB
3Pbxmd8qBSEVSKPX3IOtyt9tnyUnpKtqtfJFcOR/zWnj+ggpv8j64i345pnO
EjUZIb04ErcoH+7e07ex85+A+u3/0PYfPC1cVeldt4CcM6yOZMMST7YAUEBp
X6RTr8JFjoYLLncKaPCCsneX4b7mEzckdgjo8BO17RfhOUPs9wnaBWQe5WJ0
Ht4ju+CKb6uAXs7c/ygFLmtye+L0XUCnzB9uOgMrV/n+sPgmIN4MGc0kFq/C
kEFDmgUUGGF58xiccI5v2dsooJAyH6/D8LN4tmFAQLGOe2UPwtq8hIjHHwV0
u/5qWjzs7nvqUHa9gNRSqpxi4eMLLuaceC+gqJ3t33bDb6xyXmx9K6CfsSoJ
O+CRekVd614LKCbHYNJWeI1iuc7SlwKy7Wv7Ugyn/qidYlMjoL7h88QC+DMr
l14toM/yy0ZFw+NY+vQqAX3IX1USAQez7dQVAvqb6B0cxuJ1SImqngjI9IC3
Sgj8Q6z5Pv8xjidr1bVgeEKQvmxKmYDq2lzdAlm8lpqOiinF+a+c98cP/m+K
rUPYfQHJ19mc8oG7Rjv6r7yH8401mOUFTx24dId9sYCOrVL55A6Lf7GEBGif
he173GB6F3R/IAko2bfK1BXuUxrR+LNAQOXHr1Yshh2vcUqv8wQ07FdMpDO8
60SscXGugHZG+Og4wQ+2H0ULCmiQlmWhI4tXSOqGA9kCyn/Z6zMLXrQia1/0
NQFtLSqVs4fjZxRc8c4SUNDj+AtT4cpxLIGRgMK6lzrbwJrqVT9MLwnoiLPa
DyvY7e+7QZoXBfT69sODE+BjDc2Wf88LaPZK6WQz+HV5p+uHNAE9Hmz1yhge
nts38mGKgKJ/1IsNYZ9k1cNXkwU0q3XfqDFwCvucfBr9T9O6ZCTcwB4vkwQ0
w7Nm3XB4rBdLeCigTSVRA4eyeM2xH7romIBKXNWvasGXzBdMtT4iIHu5jGXq
8DdWru+QgGpe2HWpwhYsfd9B9Pfy8hPKcDhbzr9fQMJGD3slOLuKTxVxAtpu
8KFeHu4s3Pk+N1ZAV3YE7uwDTzmfIHsmRkAySo3jeldgfrmfJUgWED/T/3E3
fIt30SFkp4DUeW82dcGyfjn+y7fj7we4aHTADs5FO6ZtFRBFFv/XCm+3Lj83
mhPQkwsWq1rgB3ov7/cXC0iu91hPE9y/36fGVoGAfKJ7kz/DC1pblWp5AmrU
WOP4EY57+c/4dpSAEqtuNb6HK4pZQQX0v/+GxL6BB1/W3BgXjngWhpi/hJcd
1o+LDBNQ3KfbldXwUYlppmco4mepuuUZ/DLI9qnDRgG5nXXXeQoPc3FsNV4v
oN9WZwoewd5Tlw4evA7t3VTvXQonj2EBEVBBsX7fErh+4Lpl7/0F9J48zxXB
YztZASYBjX930IngoPfc4Ss+AkrVv/81H04vjf3v0GoBOe36FZ8Lf712tEbo
KSAdtVETb8DmJ1N/+3kISKvAqfoqvGlH1tAFKwVkt3cj7wp8LaRgqqUb4ina
NywD/sXKRSwT0NCD6XQetmHpI1wE9LDsjm8qzDdmBRsFdMGwWj4ZLlT/SuUL
BfTfuU8XkuDev53vbywQ0I957QuOwzPwdJTkJKBVKn9bDsPbnqiO3j5XQL9+
ySQchEtydWevdxTQnT59rPfDimcNA1wcBHRzQu+LWHj+XjahFNDHbV38PfC+
CPvzI+0FNO33t+E74XIvVuAZ7Xng3e2tsNrcFV9apghIuvCxn4TFy8Kvf7UN
xs/x/ykI4cM6oSaFkxA/s6T0aPhFH4FzqhXa21XiHAnrft25ca+lgHxPen0P
g72eJ8RtthDQkH42CSHwqVvsgVVAPYdVrNfDdecvPp0xXkC6TnUvAuExB3Ja
DY0FtFEvi+8PB/CLBqsaoT20BMPXwBf8yif+MhDQRctZt73gZueXy96MRv8L
k/fzgE0nfYq8qy+gnGd35VfAIWy5yggBDXTnLriyeLHXV8MFdFLWZsES+Cfr
zrpo38fN35xh61eaf3x0BLS84MR+J5h3V193nraAtpXPnTgHzmflSTXR//v+
eD4L/svSlaoLaJdnYrQ9bM+2L6kJaGWNle40eOu6pac/qggoIKqi0AYudvG6
XaaM47cN9rGGFaatq7vWX0BjR/T2sYSdDNgLd9zvDPenmcF7VaSjpQroP67D
55nAjzpjZwfJCaj97LkmQxavuqMBi/sIaJnm+H1jYJeHbAEf2uviZXN9OPF6
1vnhPXwq8TOpHA5Xnyx4IPeXT8/t0yKGwjo7H3xp/s0nfXtdbW3YI7Sq/7NO
Pl1Ys++mOnxyJfugx6fg892r1OD3M786J7fzKUhtbY8yrG/StXF3K59STz46
owT7a8jFh37nk66zuYMCfP6fapbbNz490Ytr6AN/+aRbMb2ZT6TxZVevW4ed
8VPDtjFf+PTddIbxX3jDzYnqyp/55Bl88FEXnHnW3qr9I58UH9aHdMCte9mC
Afy+s9mgNnhi5Iotd97zaUh75PUWeMtqvyMX3vJJUnBzeTOcOzc0N/41n8ak
/+78DP+xYBsE+aR80/r4R3j60F1/vGr4ZPV147Q6WNL3oK5jNZ+Ozzr79g18
h5XHwZjsUFDJvYTlWLqcSj6Nd+8d9QKeQ2xBEp+W6RjdewbvvlB0uu4xn4r+
Ogc+hR8eKL/9oIxPm/uGKD2GBwpe1mWW8snHdG9GKbzYnyUU4FMCP3VhCXxg
Ydto8T0+KTXf/F4EV03qmR1QzKdicdkBgrVG9l/rfIdPt61rJxbAK5W0dk0k
PsmqfXieC59o078wtJBPOwZ+iboBv3llWiqbz6fFZs061+AR92ybGnP55L35
S/4V2PeK44CnOXzKrv3glQGnHmEJiPi0yP9l73n4E+e18NQ1PhkPfpycChsF
rwvZkcUn1w/5DsnwetfI+A1X+HTrxbmGJPjyNGmW6yU+bfq+b9dx+LvBvoop
F/m0zjhs3BHYUvUYjpBPl3YvKTsIR3Slqiud49Ok/uM37odz6rKsfqTwSSGz
r+o++PdDlrCQT6OiXmTtgaey5XCncX6+5112wiL2ejyJT+Zh4T+3wsRulycQ
75SphyVwn01fa8OP8Smgq3eyEJ7t3vXH4wifWjbdro2Gd7JyzIf4dEdZJIiE
S1l65oN8eltmPXwzPIBt1zzAJ+crTbdC4IU9hpLOOD79vX7CZz28//PEM29j
+dTzel6fILjyqf2dezH4/XFtKf6wRt6C+ku7+dRw9IjjGnhFyoq+iTv5VGpi
+9kLPhbrN0awnU/dddW7PeBXkaGOvlv5JMrfZLwCHu4tWOvE8Wl+rsIjV9hn
3q5dFmI++dYc3bgEPjuBFUTg0yNdQ9WF8Mehp0t7eHzavvVqlhNsKJfR1BDF
pxhlG5c58LpvOQMeR/Lpw8289llwRnXR+OxwPu2OsT1kD7fgbnQijE9icfak
abBF+suQraHoz4dMamzgzQmf4tdt5JPH01M8a/iGoA1P6HyaYaaiawl3+rMC
SnziZfIKzGDbRf3b9QL5JLeszssEFkzW0lAIQPvqOvYawrdGjrL+5sungYpp
Z8bAMv3N3Kp8+LRXU3aWPjyr3TYqfzX661z3D8PhHa8dj571xPmdvLx9KHz/
3tKbezz49E+jx0AbVsr0erlpJZ/KsubfV4edj7KCi4h36MEgNTiOlQNbxid/
lxqlgfBTlh7MhU9mK3UylGB1tlx4Cfq/1M1ZAV4+/Zjk50Kc/+P4b33gI2PT
zrxawKfY6ffiepd32NWqXr1T5MSny09/mf+Fh/0uqE+fi/63a0xFF7y6/kHf
A458+uGzaHMHfKaMFWjGeLU6Qr0N/pD93tF7Jp8Oig9nt8AGp76unWPPp7VF
2cub4cBdXbtMp2N8GPfk12f44ia5dI2pfNLMbjjyEf7qrvaw24ZPP9d02dTB
Zg7Dmusn8WncRMWXb+BN442UH1rxKddwsOAlfF3TyvSqJZ+S7HWGvYA7euwX
HbXg03v+sMJn8OTGBaESM/S/Wt3VT2F+xYr9a8fzacsq7d5HcEGe39WFxrif
yKieKYV7UkIrrYwwvpX2mVkCz8TTm+5Y/PsbbXVF8LYtuzT6jkF/u/t2K8H3
vA9aN+nzKaWzZHQB3I8ttx2B8WNhxt1ceD77/DacT7b39wbcgGPZdFyXT4P9
gxSuweVyxTd36mA8HjPz/BV4UEv5y43afKpV1JqXAbuy8vOauL5UPjeehw+x
dPTqfNK2zd6TCtew7emDcPw7RcbJ8NCDPav7q/LpWeessiTYU9ifa1Xmk12s
3Ibj8OkAreSa/uifs4uUj8B1i0YVUT8+2YwQXj4Ij7Yx+3BOgU/3hlsu2g+v
1Z8iFyeH8dT+Y0ssfKH/HNzRMT7vSIjfAze1L53jKcOnrG/TLHbC4994BTr0
8KiY9+HpVji0ZN1u4788mjRuZ5gEvpoZmT7oD49U/44ZLITbj0ofdnXyaF4b
XYuGJ23d1/yug0f1A1a4RsLR69mCfR59mNfUHgbnLUszvdLKI8d0XmII/G/6
1UWHvvNogKm89XrY3rAwVPiNRzZVsc8DYala6X6/Zh49OKW2xR8u/l11df4X
HhXE7tdaAyt8eF854TOP1E8p/+cFz3v0tX1IA49eVG5f4QHH3OjSkPnAo3/G
vzvd4Men2AY/Hu0+t+6oK6y6W21F+Vse8RyrbZbAS8OGRd94zaMqRftaZzjR
w+jYyZc8OvothecEVztY5W2r4VHhL7mhc+AhpjNeBVfzaPFo37xZ8CpW/rCK
R07h+R72cBJLh1jJo/RPat1T4Xdse8RTHkWKfE/YwPqVLCEAjy5MzppqDfvn
C7iWMh7N1vzzagJ8LnVX8vNSHi3QmiE0gxv3HSwquM+jvClbh5nAJlGnP6Tc
49GxrbcLDOGNPhlye4t59PbbH88xcKbTfwab7/Bov3DCv5Fwm2XxHHfi0RUz
/6ThsNWwJ4EzCnlkLXdw+lB4izxLIMSj8f8K32jBN1s+pavc5FG8ToNIHe5+
0fawI4dHq9376anB0+/0NL/ORvsUGN5ShiUX+w+8e41HMx0cVivBRQe1zDKy
eLTqm0ePPCwnGrU44QqOLy/kVB94zlqzTbxLaO8MsV3vsg67PYunHPC5iP52
O+ZtN1xmwxIO8kipK0HcBQ8c5fLM7Bz6m+sRvQ54yYDVPzVTefS74sitVjjh
5zrNf8k80o1IXN0CV7Hl/Kd5dMl2X08TrM0+7yfx6PKorac+w+7scf8Ej0ab
h9t9hE8cY//h73n7vH0Pv9malscdwflecxK/gUduYAmKeWQ0zlzvJezLym8c
5JFvsdqtajiVpeM4wKNB0havZ/Bnw+d2w+N5NMH3wb8n8LhBdd5y+3hUsvZU
0iN4/Z+vXHMMj8rjNk0vha986Equ3I3+89LuzT34xyM2wPBoqpOSqAi2zFH7
eGY7j5JfPRlGcMRpVtCAR4IDCQX58H+7jcaGcjwqDV7qmQv/DrOa6yZG/AOV
/2bDU1fNCJou5NGjXcUnrsLi2c57xvB5JCrbMvUKfNt05cUB0TxKsRz76iLc
R9u/rC0S12thBf887CjDJjCI53re0FR41xfBwDthPPoybXjeGbi0khVA4lHb
hEL3JFi54ODi+I08Cp3v/vsYvCjt9KYt63kUuLP16GF4f1zGAa91PKpt2GFz
EK6M+u/a7EAe3Q3SqomHNdcUPzMJQHurpkTFwivmP/k52I9HcrUm2nvgYxPZ
AxKP3EuycnbAr4d9nlS3Gv33xQS3rbCeAiuYyCPhgMwOMezzvSc60wPXl5/R
IQGcUtP/+OGVPNrzNskqGm64o5UvckP7i1SrImBDVu51GY922IvCw+Bglv7V
hUd2Bp8Hh8CX2HawJbiezRZeC4Zb1rIXMDjeVZlLA2GLJS4+ss44voyBrX5w
uC0rsMyjfiOC9vvAN0YFn30yF/0955a5F9w5YEtxjiPGy02DnrjDUzqkH5Mc
MN4u9glxg4Vv98nvmMmjnCUZA13hW/ePjd1gz6N3kW2XFsOyV9Pmuk7n0d5b
1s7OsMNx9oKXRzeMI5vnwTu2Fe7Rt0V/zsuKcYQfbCi92G8yj2I3No6bBfd3
e1723YpHtrOHldrBzvZ1X6steRRg5xw0FY4z+jbwlgWPhnhGK9rAFYN+m6WZ
ob2SzpyzgtW75ZbEjudRr+w9xwnw8o9qYeHGPJoc0/DRFD76mH1AQv+w7rPd
GH6ZY3R95lgeWcjrjjaEh52xqjIaw6OfneZFo2HvPTM6VEeh/6vMXDMSTmbb
hUbwSGHeIpnh8Ae2fGg4j1akrTitAxuw14m6PDId62WnBQex4UWHR7sern4z
GL6oLTx+UJtH6xI8harwVxn2gZpHT0RuusqwOSs3pM4jinXO6weHsfRDg3g0
kezc5eHrBRl6Fqo8MtM07ZKFf6X9Z689kEfX4rSP9Lh22NnEF/v09OdRvkmP
dTfMj34ibejHo2Vf31d1woVrXp19pMCjkKcU/hPunf+5+Locj9Rqjg9uhWda
sQUwPJrVd/PVb/C24b3yW2V41LXUcUkTXKIwwHBdTzRNvavx/RPc74fWvCV/
o0nR4/2+D/D82lHrJv+JptXqF8a/h/cVmcXodUXTtB/ry17DTzKmZMj/iqZL
P0yCa+FBh+bgjhlNqRqN/arhZWKXb89ao2ms55nzlfDhQLbALpom31825wlc
syTY/Oy3aKpaLt9QButO2bJkT3M0/VW8tu0B7DV6a9imL9F0/Y3HqHvwaWW2
QS+aflf33r4D13Ucu27XEE2P289434LHvEurMvgQTeOt7Hry4LUPrnYo10WT
ztEXJ/+DL1wt1Pr5NpqOjtg4NRtuPs4W8EZT2sOe2izYdPvzlUUvo2nGsdjo
y3Doxjpeek00he7V0r4IX3P7dnx/dTSZJJ+8cQ7uYOWtq6Ip6qXeshR4Ekt3
XRlNyycntZ2Go9n216fRVPKf9oGTcH73sBGm5dF0d1Wc+TH430ejGRqPomnl
aNnyQ7B9OdsgEE1ilU0bEuCt/83YWn8/mqyGv+ofD98945xSeg8/XzwrfS+s
ELPyblZxNHmlpc3dDTuFswRA0fRIT/7Tdniv5yYFCUVTZb7Pdin82FFouLYw
moKFuaPEsJr57nkL89EePsp3+LDLkMR1VjejaVWQp3cUnCjLNiBF07WDF/6F
w9VNGRl9bkTT6fofJzbBOlX/PfpyLZpGLbeeshFeVVj87WlWNNk2R9asg5PO
sYSB0dSUem3LWvh9/Cvz05eiyWJrs4YfPIr3ecnOi9Gkum3kdW/Y37c9bOOF
aNp+/n+O7jwupi6O43gLkhRKZC0kW2khoSRF0oYKJQqJNNM0+4xQpLIkyVKE
RFEooUW2fllaJLSQPFRClpBERaLne++f7xfTzNxzz53t3vNZunQVnObUc9Dj
nJwOfgv95gl/mq6WY5kqJ3Pv9Jhl8JTRQ5+NPSMncfOjKW4wT2Vch2qynJxO
fnvgCl9mTk88KadbIvUAJ7iN+bniOMYjaEIfB3g68/blGLZH9JzU+bAswy3k
XIKc0ssX286Drx/xOR5zRE7hpj6v58B/mLzaITm1XQ8InQ1bM8utxclJcUPw
SAt4+9Lwf7axcrpgLrwxDb47e7/u5Bg5fZ8o8DSBe+sn2gyKllPlXG6HIbxQ
nQkSyMktxO/wJHhPx5Xwhig5cWuXmxnA5Q23U4oj5DRhpX3FWFjjwYP7meFy
Cukx5enCS64+azq8XU780mH9R8IHjzf22RoqJ+Xcv+d14GcRXyf4bZWTWVHd
Qm14KO+3g2OInHr9vt40CPZa0TvQVC4n4ZKDOzXgEzZMwEhOOx5uGKMG108a
ldEjkpNpoAWpwHpakx69F8hpu2Gv1b1gv+7pLY+C5cTTfNSlAJ9tshmQGySn
fyMOHv3rhvcrj51NTnBw+0XuM7rgSfmeS3duwv0nDnzaAXNPrxcGbpTTZo0y
wQ/40l7+oaX+coo7FzagFW4VMcFDOS1aZ5r5BZ62evcz3bVySpvX4PgJltgf
7ujjK6fz8/d8bIKvGScPbVmF8ecYR72Bu3QyZj5bKafDuZXjGmArpXyvW56Y
P+P4d17CoZ/vhaQsl9PA3H6+tfCdp0+O7/WQ08LA091PYWVmeX837N920xMr
4QXM5f5L5HRm7j2Lx/CuAz/wCVNOpb6uz8rgss09uhOc5RSf8kxYAvf3U5un
4YjjqZrXwPuwq/PQde0L5TQuvjazEI4zH7fz1QI5vZ/v4XQbrh5tnHrPTk6L
h5Z/vA5r97UsujBPTmvUbaLyYM/v9u/j5uJ4NuHyuGw48T83lc1z5LRt/cg7
WfCrez4T11jKaXdRhE8GrJsZuGjhLByvHT/9SYfXxksDp1rI6XjbomNn4ZSw
8GhtczmlFJybcQZuCtif0W0mp+WXeqqT4IluiY/emsgp546H4DgcaHmupWyq
nG7/OqtxFM7QvzrgqiH2H/cfFw/D3/Bqfmwy9u9Kq0VxsEnng6XbJ8qpXhT+
PgYWvX4m3GiA7TPr/s69cN6DxkOu+nLqGKs0Zhf8++rXHPOxcupnYlWwE559
4vezkXpyerBG6L0d3sqc/jwa8z839ddWmJifQ0fIyd2o+shmWNETH4+GyWn4
g79mUthu3qSV14dif9qtXyGEoyabb0nWltMNzsKgYLiUyUlq4d+FG/px4X7M
8pKD5KR9ckdaAOzy3rN+2QA5uXw+Ot8fjn2yvsdKHfe/OqNxLVyZz9fTV5PT
w7aboT7w4DNb56mpymlwRskIb3hF9O51bX3kpLHnSf4K+Kj48M4XvXD/e6qX
ecD/rU5OLVSS05BL1W1L4FELM4rSFDDfO57EusC+Jvnv9/+T0de1pYaO8Olh
91Wk3TJa9/3WA3v4nVLFxNVdMtqTmrnBDjb48nLR/F8yCtiSqGwDBzz7EDil
Q0Zdkp3JVvDFgh/Rmj9lZHM4YM4s+GtaT8bv7zKyqln0nzlsHKf2+PU33J/l
BJkZLAwZ+q3kq4zcihQGG8O5fuMGZn2WEU9Yc3kK3OFsbBr/CX/PLt1lIjxz
hqXbtg8yemAhbdaHt+guxCuSjFSW2OwaA9/u637Y6a2MeqL76I+Ge7775Jo1
yuji59LC4bAtPv0Oa5CRZvCu1UPhiPvSToU6GRkPse3SgoszmQvyZdSn8Vf8
QFg1Yf+sJ7UyOvLk4jR12Gl74sq8GhnVN66sUIVjNp3bcvKpjF4P7RPUB65g
ciZVMjopyFRVhjWZ5U0qZDT425JzPUvxfmV8Wb3bYxnNP9Bq2w3Ha9T0zCqX
kcmyfQ2/4BedjXpjymRUM0d/azs8opFZwEdGsxzzddrg1WW/130rkpFXiENu
C5yc3Tui5p6MZjx+uvQz/ObEoLO378iofMHqlg+wftSo4lSS0ZjGxr3v4I3B
kz5E35aRWfK6CY3weU/zvqKbMlLe2XCvDv48j9mhZbR/j+ea/2CjKS6O867J
6FX2o+4amD+YWfBPRh8U5x6rhq/+Xb9vQLaMrooyzCvgn+/5mR2XZTRbdUhV
OWxRsfVx3SUZ7by7hfcA3nx997f7GTLad6quXzF888zhgRkXZOSebJl2F/4X
nWx6KB3b9/4RO4JtJMwLpowmqX9puAmH++SL1qbKaPpm6635cNFCZoFgGSmp
xujkwiqmFbnGyTI6fOt5zhV4EXN5RZKM3h8avfQSHM2cbnEc++v+tV8vwI+Z
r1+Oyag6M3lPGjyQGY4EGQlaX45Phd1IzTv7iIyeLNe6mwwfYfK5h2TU9tre
5yT8nFlONw7bZ7+06xg8bAsTFJBR1Joz8fHwqvWWDYtjcH/LyswOwUkuCxUs
omU0LbjlcSz8eob7mNF7sP9laHD2weP0fG1775JRe/8pKntgf1WO35cIGW2N
s0uJhNPapBHV4Xg8szznhsOfXjIf+PH8em96GQobFu0vPh0qo5J2iWwLzLvE
BIgwn1TDtOTw5YRzffkhMmqwicgSwz+2X520Qo7980SkkwA2DyxwtJbKSGfE
zg9BsMy9jDNeLKN3t7fuDIRvWNXs6y+U0eYIoe5GuHv8m8wfwTJ6ylt/0w+2
HsB8oSijf1vdVqyBt//6/e0OR0bfL1n9WAXfa2SChTLK6jUu1gvu/XCQ2YGN
MpoZ2nvKcnhhzih3mb+Moke8K3aD956cJPbxk1Hmq4J1i+HyKPMjC9bKKPHO
kX9OsAZ/Xp6hr4w8ygISHeClXi7PtVbLqK7DYsYC+JAt84MF5tdC5ap58LMp
/sPeeGJ/u1kWZA3raDOBYxnZuu9XtYS9/231vuwhI8UBrmct4BNMvskN86FF
dd50uJ5ZzmmJjJq/33llAo+5kVzg74rtNUwqN4L9UjIanJ1lNHC9weDJ8Nl9
+QrTHbF/VFVlGcAfJcwPoth+/lucxsGTfStsleyxfUfofdCFuQ6v/D7ZyWhs
R2H4SDjL9GNExTzsLz9Xjx4Gfx/+E5/gMF5DOq9rw9N6KZQkzZFRsfe+ZZqw
9Kvax0hLGbkUjfquAV+vGaoaNEtGZ90u7lODu2jcZA8LGVUqm0/sC1udZ064
kFFV7Y17veCwg5bcsdNklFpp5asI39myMEbVVEaOLTe6/i7B+xV/90utU3F/
U83ju2B7V98nzw3x/A9dNO2Ed1twWgsmy8h6xOhHP+AyPdmgcxNxPCjZF9AK
q/fbaRZjIKP+CZ3KX+HFP/a7i/VllLPX59QnOO4Vc0IX5veZO7Pfw0+Lzh2x
1cPrT51ezRt4KHP51mgZ5VptFTTAnszpXCNldIOq+7+CE5mvd4fheL1hQnot
XMcc7ofi8ZvK7J7Buh5vZhdry+g/3Xv1lfBaJheuhdcXM7WQx3Aqs3z4IBmF
BSzWfgi/H8CcMCqjo3djL5fAE38PonXqMoqxKXe6D3PejHq9SE1GK9/0+lAI
Zz6cpGiqKqNe6bPCb8Pf8G5DR0VGu+MCR92ATZPm2fX0ktHHpIT8PFi8y2X9
eyUZ6VUUumfDeXyvyEcKMrIc/74lC/7l5X8u55+Upiap7M2ALe2YE9Kl9Hf2
+PHn4W2G2z6Gd0kp44914VmYtPeoBv6S0qzXHt5nYKWew5OXdkgp+eOGjiR4
/sdkp5k/pfRhsCTuOBxVmcHVbZPSAP8ww6Pwgxv5MX1apaT1IrLkMKyWev/S
169S6uDvXhcHu8RUPHn6WUrXDXf9jYFjpcwFL1Ly7R9+dC9c5ftxUMoHKb0d
sHnaLnjwop9me5uktMCC+3gnvNxMwUPwVkr7wr03bYePjegv8WyUUu53+17b
4Je9dOLnNkjpVsTUU5vhUS3jrhnUSemspSY+ubdbr3luXKv+UkrCIW1PhfCZ
QsvfP2ulNE77cXAw/O48c0GdlPIszvXjwhMOuVveeyolw9CQswHwJiZXVyWl
iI+ONv7wRWb5ugop3ZEOfbkW/urKLMAjpaaJryU+zHjN3Em+5VL68i91oDcs
HBP72r5MSs9/+V9cAef0O644tVRK6UPG2XvAnT/OjdUultIaz1evl8Az65gL
dqXUfTtuiwu8pbhg/ds7UgpfaDfEES7IKossI/z9n62X7WGFYzXnrtyWknVx
opMdbBvOLNgnpc03bd7PhSM4LR/Drkvp2NM3263gEo8u1Y3XsH0G7RgxC+5v
3WeKa66UEoQj8syZ+TVB09k8W0qCzitLzJj5NZBZEEBKM5Lnf54KV/+etF85
S0rvuNWRU+Ahb82zmjOktGW1j95E2Kt8XkXlBTx+QdMNfWZ+5TIL/Eop8ELA
sjHwqyQvzeRzUrrX5+O3Ucz82u0/bVeqlPrs8ts7nJlfAoEH74yUzKe81B8K
p6zcJlmWLCW3H66kxcwv5vLQJCl5NhR4DWTmF3O66AkpuXyb/LM/HMj8fJQo
JaNxh/arMvOLeTuZgMcT0jmxDzO/PjJBACnd6FhxT4kZr6r7loWHpLQhPmd1
z2LMLyaXEIf/76X+6w98LfXVtv2xUoqct+7gL/hXzMckSYyUupyzDdvh2bKf
tCpaSmu3KpR8h7etUWi024O//2TR2haYFvVXmrJLSj32sX+aYcVpOuM0I6Vk
8abiyAd4/kgmIITbn9YweQdH9Tbxf71dSiERDmWv4dIWy6iSUClFRYeur4PV
ahemXdoqpZ15l/+9gF3uuJceCcH+3bvhaA0ce8H301Y5tpdcdVo1XHWI02+9
VEqTBpg8egIP3iab4iSW0vcHbhvL4eUbdjqbCaV0KV2g+AA+upgJDkpp1cV9
x4vglzOP71fgSalXVYr5XXjU2LSsDxwpJY689qQA9lXLrni8CX8/unjTTfjM
z4LvuRuldHFUlXI+/K6uTPOkv5QmPn1xMgc2KKmZFuEnpfhLdRZX4E2X33hw
1mJ7Z9RVZsIXj7VI3Hxx/09ecC7AX8OZQLGUMrWreqfBxtw++XreUvoTVnwq
BRYu03yh4iUlG41rs5LhHOvRXS3LsT8WplSfgDsmTB5R4yGlrPh9QcfgWUye
001Krw4IVOLhLcxynUvw/LLcTh+Eb791CY12xfHhu7FlLKzwyOuU0FlKVitU
n0XDtnn+hV6OUlraWM/bDUecEjTaOGD8Yi/3jYRLdm9TmmgvJe7a0DM74H7C
PeMGzJcSf4WDVSjs5H1kfsc8KYkEGjUhcMz80/51c6UUnFURLIMrjDKj7s+R
0qZBsapiWHPo9bSLljheJixK4cMeCkWlB2dJadk8hTlBcMKnik+bLaS0cEB2
zSb4RdWrfmvNpTRdcR1/Azzi1scpDtOkNGaoej8/2OfsT3xCkpLG0pwUXzgZ
ozvEWEq/Lq2Yswp+I+sf+9cQx2OTzhpPePxancvvJkvpYc1B/jJ4o6N+5cOJ
OP4mT+7nBp+fZtJ21QCvF/sLUlzhzyOttBL1pbQ32XWOEzy1j8P0HWPxfGv+
q1kI87+5LwvQk5KfiR9/PnyVufx8tJSWXPqgOg9uZ05HH4nj2ZKAlDmwBfPz
9HA8nyFNVrPhzczHVR3sTwo+NTPgW9tiuz5r4/lpVAdPg/9tOD6iWktKI23m
q5rANkweZpCURsRfOWMIh8/KXn16gJT0Bo6wmgQXjaXQ3erYfy9tfzYeVun/
8FSwmpSm8d/wxsKL2msKl6tKyWG5TV9deF/9m8Y5Kjher0k8PQJ+XNKiNL43
9rf9rbN14IFXusb1V8b2eG37dDDsnthnwQ8FKZUvjwsaBB/Zqbnhv38S6mp9
2UcDfs4dvetOt4SmZY1N7gcPXz45Pb1LQtI4/1kq8Kq5Mx7E/pJQQUJqlTKc
NNG2Wdohof53GzgK8OtBrmo+PyUUMHBo77+u+Dzwx8twQZuEysIdk37D/u/8
XQxbJTR9WIhFB5z2SMDTapHQheqzFW1wcx6zASVkePXRpm+wYfKey42fJJST
813pC8zbc6Sy9IOEHF4OOvERviI83ZbVJKGP46eaN8E/8G4o4a2Ejhy2f9wI
my+4Pj20UUKOE7w31sPyqUXL/BskpFHPUXgJ3xxaKXWuk1BjvvzYc7hboS5h
2ksJ3b62w+wpbN3MHKAldO6/qIcV8I7qny8Un0vo9Jjd6x/B924p/Pn4VEKp
+yL/PoB7MzniKgnljwiLL4YdmOWJKyT032Ox8T14r1zfJ+mxhAae21BKcPla
k7DIcgktOe2x9hY8wMkqmVsmoVOF1l358NLpDjiiSkih1/hDufChUcwbQAmJ
OCqGV+GaPmuUx96X0M+OpvuX4GGtzIJ7Etp1rnD1RXjlC9mCVsL2DEnoSINP
3N254fltCb0VBMamwg0XY3cV3JTQxZhZE0/DY44cTz97XUK7H/W6cxL2C017
sO+ahGSm5V6J8LmN2c2iXAnJr8e2xcMflzAfMCW0z39x9CF48uyHhrZXJJRn
rqZ/AA4axyzQK6Hvk+7d2gdn9X/LG5gpIXtb2bI98Pf2ltjOCxLKDJ3QEglP
a+i6XJ8uoSkN1VHhsKy0T1XROQnd8NuqGwbnX9H8kZEqIf/+Y/K3wF2Jowcf
PiOh8S/uLJHDcyKYL7Ak9OuBzycxHMYsb5Ekoab6zh0C+A5zucsJCX0eGjOc
B/eycT1qkiihPpLR2YGwPfN12FEJWXZcdNoI72amxxEJRR03f+cHP/wj+NN0
CLdff3PrGlidyWHFSSjIbY72anjx4z1zcmIl1Gv9zUwvOO4a8wU59odj5vbL
4WfJp8PCoyUU+eNivRs8ZC8TAJJQoGC0bDHsKbp+Z8kuCfG0YgY4w8dXFb2x
iJRQzIvONAe4bkGlsu5OCZXc87FZAOsa1+n32SGhUVV3aufB63Q+LfgaKqED
vcYIrOFUxfYNT7dKaKT3VlVL+H0z8wMc5uOz6tMW8KSn/c+fkUvosHjC7Okw
9zYTDJRQiIWsygTOPKf/mS+W0I7R9wKN4G+xJv09hdjfJ6kpT4bNNlsZzeVL
6JPn4uMGsHidg6sBT0JOGbHTxsF5Th7B6lwJPRpX/lAX/j19zYGfm/D8sIVG
wpajmR/4JWQWNqtbB96mIq+66y+hwX6Bh7XhwlYmMCyh4ZwEQ01Y6b/YwXFr
JTQvofC+Bjz/3nFzuS/21w9Nq9TgqIy05b6rJdTmrdKuAj84ki2z95ZQ6E/9
mF6wWhgdNfKS0NQr1uMVYZeAh9cHr5DQvziP239d2q0PLGVOIMJ8it+wrAuu
YvLrbjheFIq/dsCDmeXYl+B4oh4W+QNeof5nzhVXCV0KjRzVCh/r6ON71BnH
t8G7c7/ALxs0t4c5SujdoyiXT/DoB6NPb3CQUPbFHU1N8Jqrk++62GP/z5Rv
ewOfOT7j7fT52F7VHO0G+F0Ec4IijhejvTNfwhN4ruOVbSQUts9+QS28acVK
++Y52F66U+uewhdtNmystJRQxbNBkkq4ZZJwd/4sHD8vf+//GDbRCj1/ykJC
hVmPUstgYfeesihzCXVUnbUqgXObjnwOmiYhj+EhT+/BnY9P919mKqG6SEdu
ITwrnzkBWkL7tYf2ug1vPX3ddZyRhLgPGo5fhwv2FgX3myIh4enUaXmwgrjy
wPeJEjp70v/hVdh2dd2VWgMJKReM9cuCI+0/VZG+hKKVXnVdhEuM2/EJBOPL
iTuYDqsOU9Teryehcb9sJ5+FnZnlc0ZLyPR8653T8H7mcrqR2J9CE72S4Arm
9LrhEqqV2XxPhLWYr9t1JBR85M3uBHgZ8/I7BOPzfLveYTjhgMPLX1oSmjRn
RP4B+D8m/zdIQi4lVxbHwKP81owqGYDjsWT+hz2wjzPX+pK6hMY4VIdGwcnY
+46oYXtb+wzZCb8dzVzAheOfV1NmGDy+74HTfioSKj0asGArvPH78buOvSWk
1v3hlRy+8F/aW1NlzK+dfmIJ/OVedq9hing8xi/VhPDUTBqv0CMmpR7XFB4s
iH9o/6FbTAN/FMzmwNlhzzc+7hKTi9qUqo1we8Db3bm/xHRn4aFN62ELN+YC
UTH5p3cqrIW3WP4p2/lTTDZGnkdXw7f0Vb4EtuH2NTnGK+F/6lrqbq1iik1R
L1kOz+scPXVWi5j6HFnn4w7vfD15sd4XMeVcyG5fDBc9mMFXaRZTwjuFGGe4
b7ZtXMsHMV21ddRfBDuecL36rElMCkWxNxfA+yKZC9DFFMWpdLOFn/A2/Exp
FJPdjAHN1vAgT6F2dIOYZo1ftMMSdp8XOkNYh8c/M0xnJnxk8t4VXi/F9DD4
StZ0+IVWvNzmhZg2PWywN4WH/z19bMJzMVk59as3gle9z7yh8QzP75uJZDJ8
6sn1l+1VYjp6zb3/BLiRyU9UiGlkqjBlHDzuTOWo+4/F9CInZrYevCG6zvpi
uZiqP6VWjoTTxZ98D5aJScUuP2AY3Ly6ffvmUjFJC0t6tGGjhYpn1hSLafS6
6nhNONhE/d7C+/j/E18aDYCvDBv2bupdMU3RbLivBv/Au7UhhWLaq9fg3ZcZ
ry/MAjpimuT+sq0XLH9mtfDdTWz/C9V7FOEbBQ44YolJd3yp3j/nduu/aR57
rl7D/d/Pv9YFz41jFtgVk8bus66d8I4Q7sPt2WJ6F7y/6Qd830/+ZeMVMf3a
ItraCvdxiVBfnCUm1wwPra+ww4wDU2dk4v8rmF34BO/VZRboEtP1zWrz3sOP
+qbze50X05Mhjc/fwAPasuM+nxOTQe1VXgO89CVdrUoVU+Ht7b1fwUfuMwvy
i+lEieOJWrgm8/nP5GQx5bcPnPYM1mGW50oS0zCH6geVsDdzue4JMd0siFvz
GD7JnL6bKKZkL+fOMriB+TnvqJjKdZT3l8Bjmbf38dhfunP178Prx+veVDss
pq/K/jcL4XNM7jROTE3GA91uwx87mYCPmMZsv/bxOjyl0Xb0nRgxpf5cGZYH
B5W5zk2Pxv4U06WdDWdlr1wTu0dMIY7xGVlw24kNO6S7xFQ5ZapdBjw9illg
VEwc07sv0mFpcOi9+Tuxv3m78c/C1z33vpuyA7c/X9/nDPxnXnxvrTAxtYzY
eDIJnjOFCf6J6cLVz9OOw9sHX1rYGCKmzCBuWQJ89+/1gFK5mLqdP605DPf6
ULQnSyqmuCXrOg/A9hWVF+LFYhLKn8fEwHuu1z3cJhTTyfsO+nvhh2c+fVnP
F9Mg87wbUbD6vnZ1Z56Yqh7oLt0JL5EoGk/jiqk+PPJDGHzQhwkEi8lizYdt
W+GnC4cJFAMwH9YuGLwZHmo6/uBHfzGV7Tp1QQJ7DTfNfuKH/bOq3UYIH1ee
8zRvrZgO2Dg858H1XxzaT/qKaUN1fBAHHlPjMSRytZj2721UDoDX0RoLrreY
evwnJq6HU9O5nu5e2H/8OSZr4Q9x8s2zV4ipYs+F4tXwpC0RiWOWiWlaVdOq
lTBn/YGbfd3F9Np61I/l8CUmt7NETI1Pluxxh1tnpP+tcRWTWeR23SWwmV7O
6AJnPH+fjFxnWKJaOPeso5jurXrqtAi+1vZwzT4HMfUN+9W4AP798vkOkT32
3yIduS1sWfT2zMr5YtppYq4xFw679O3ePFsx3SaXVEu4MOHPu4k2YnIUrZs9
E1baodJnoLWYJjuJKqbDCwK1JnRaisln4fYNpvAud12H+lnYPzfu6TaCH1hN
2VRkgeN3xv6Dk+H+BhZ7M8zF9F37wMQJsOsAu4uHpmG+p8QUjIMP/HItDzEV
k8eyXR56cHXjyq9rjcUUOWVb80hY++EGjUVGYupnELx9GLwiR2hsMkVMzfNX
DxkCHzsZumToJBxPdi/M0ITrovYK/hmIKe2bke0AeDQ//mCTvphitgysVYPX
eJ3JLh8rptIp34L6wim2l55m64lplUKZcm+4iVn+b7SYHH4nH1OEJzDLAYzE
eA8RG/9zarcOZC4PGC4mQ0+7oi44gzldQAfHjwIN7064hfn6YIiY5A41rT9g
U+bPDca/dx6LaoVFTN5ZU0xTy7xGfoVz96nXfRmAv39H++onuFMy7F+1upgW
1z1a+B629GUOCGLijgqvewNvdTC1OaMqpjc7zEQNcIHpnLV7VMSU16+h7ytY
ccSicH5vMX28tiupFrbrtSxlhbKYxHsMpz+DI7+uuW+tKKY1YY8eVMKlNdym
8T0iyjgW6PsY7lco76P+V0QrapXby2Dn8xETfnaJyNfy2N4SOPYg84ZDRPfv
Tta7D1duObHpboeIonn5uYWwln/63vM/RXTV2tbpNrzMNefigTYRzZpW+vo6
fMyisFzWKqIxzo7SPPg/vfKvPi0iCthTqpYNj+xXq2H/RURan21PZ8G+P94a
GzWLSE9wfUYGfBqzY/BHEcWOMCxPh98WMR9oRLSqOXHtWdggS+XQm7ciOlDX
u/M0HHBUK+dBo4gmtXP3JcEXdug+u9wgorGmFWOOw18Cp3Qk1IloR5zxtQTY
2MNiaNhLEc0fEu18GBbMsZu54YWIOPSm8QCcbbDYy+W5iH7tmyGLYcZrgHfI
9Gciag6N6r8Xnvmb+cJERLZHqk5HwSFMXqxSRD1PhlvshG8/DK379FhE+sa+
5WFwT87efxXlIsq6emrtVnheUrxufpmIUle+6pDDEbvO2JwqFVG3gfY+CVzM
v7Q2qlhEt4c6jhHCfVfeCA+6L6KPhlvyeLCjXXGKx10RhWxId+LAMYbMF7Ii
kt+vfL0RfqJd3zS2QEQN9p2S9fCgnk99+t3C/X/VUVvLjNfH9gnfr4uoKX9G
8mo4vlJxUe01Ee1LX2K+Eq69oR5IuSI6eWtD2XJ4ROqw6HPZIhrSLvd1h1fH
jM+IuSKiP0t3/VwMn5KaPhJnici1Om6PM/zGl/nBR0Qam4+OXgTrL1qEI4KI
Ztgdz14AbzBjFtQXUaVpooMtnD5i7dJBaSKqnX+kzhr+3CtI+CtVRIu27hNa
wkYt8kMNZ0Q0tTZMZSYc/DwipzhZRKGewSemw1eZ5UWTRDTn70pTU/gns9zI
CYxnsW2xETyDufwoUUSqOQbek+HNzOlIR0WkU9yn1QC+yXw9GS+ihO43EePg
v8zh6rCIolbcHKYHz2Vy9gdF9Kkm9tJIeOeYd7d6YkV0M2SN3TD4fr/Wuvcx
Ivpra1SrDff5+effo2gR5Rp3cDXhRXUqerl7RPTa5qbiADi6mDlhBeMl3Rqv
Bj/K0l23M1JEuytmTekLDzzGBPtE1H/xD+oFu4VbpC7dISKltnQPRfgwx65o
ZpiIgq+v/PTXsd36ucfi97rbRLTkbN/QLniYtbeKyhbsX7lXNTth7wkbJ7bI
RcRr9kz7AZ8cKFr0TCqiS3Z/LFvhxt/MCXEi2njnWMUXeOzbvdEpQhEd8Zvu
/wleX84EfkU0e/LD301wWu6ZRwIejh/aPvvfwJ+SLrV4ckX0Wf/r2AZ4yu4b
A2wCRdTpKb/2EuYJik0mBIho65Uep1r48sqqpRob8Pyn7nz9FG6zqxe2+4mo
5YmSpBI2N2JOuBVR/ZFQ1cewbEhHzj1fETlu7zhZBl/vUay5sFpERrGBZiXw
n4/qnXHeOD7d/a/4Hjy3apjOZi88n+ELvQvh7TfHz1qzAvMpPuvbLfhuqunK
hctEFGMxOOI63Hv/nC1T3UX0qluskwcvZHKKS7H93ldmXIX3rGFO6BfR15+T
52XB5YvW1r91FtHlCdufXYQ1pgX1lDmK6Gdo5aZ0eMnIzXpXHUSU0zX6Xyp8
qHfkvGP2ImpLDDh4Gn7WcmDd9vnY/r6XDJLgobUndm60xfx2aL2RCHvdSU91
tcH9L5+6OIEZrws5RebW2H92B7w9BNcfYi4YEtHxhiTZAVhvW7lKr9kiqllZ
qRYD+22onfjZQkTxXT2n9sBnF79bVGUuoqqCydOj4A8zWwOvTxPR4bSlpeHw
5LHd0cmmInqWI14VBnPV+mbuMhbR0feHWrfAl35qPeYZiajRKitCDrfW6X5b
NgWvJ9eKdSTw9BLmgkQRdS3/L0MASy5bmOpPENGD4c02PPjaMTs3tfEiGqfc
8TSQGa/wxaK2sZgvA/4FbIStuN6HX+iJyHue0l8/OJRZvng0jq8JSnFr4DvM
ckYjRXRxUI/+alh5Yljn/uEiOnG5M98LXsCc7qgjIk3xF+fl8G7m548hIhq8
qu61G1zGvB0aLKJjAWXixXD/R5e2TNEUUcqx7L7OsCuT8xiI/fvb0RMOcNyp
4tu/1UXkuSnEZAFcvbuq/rUaHq+K5/15sLawvqdEFfvfQ1NPa2a8vJv1slRw
PL2q8mU2nDi/A++gRWRAL8Is4FdGzIIK2D++pWlNh3WHakSsVxSR0wJhmgm8
VmH4WaceIRnSTEsjOOXT+GKzv0I6tvrP40nw+yrTD8P+COmg3o11BvDEW3P6
Kv4Wkk5fScdYOPDsokkfO4Q0ebDhXl04Y/8yxyc/hVQyv2HUSPibbC0nr01I
P47tv6IDm65lFmwRUobW7AXasMhxc2ZEi5DarjTWDmLGa1rkY84XIRWLI7ka
8K+Rcd/cmoU0adV4BTV4dp+TA2d/FNLIgDuHVOBt39JNx7wXUtJRrwm9YKrN
cev7TkhXv369oQAr3i0UfWsUkvvGUNe/i/B+5WL54ZoGIe3srfbmNxx1mFkQ
SkgOpYckHXDptnc1qS+FdDJLR/UH3G9ja2f0CyGF3zx24hvssqRbR/RcSF2f
h5h8gWNn9Z298pmQes87cO8jXDl2sPe8aiGdvtF7RRM8mMnHVgqp2lPW3Agv
b59ycsATIR0e0bStHj5ab1HQUS6kZqXFg17CL0uYBeeEVKORm/ocHnVlsUJR
qZCWzR068ynsm+g9JqNYSJzDkocV8GnM3kP3hTREo8LnEdzEFfmF3BXS8gyD
tgewwfKwiLWFGJ/gzZHFcMDc6LMOBUI6urxU5x58cWJCsfEtISWu08og+Oug
lA9Dbghp2qGVc2/Bxn+YBS2FtOHjyap8WPjuxqSmXCGZrKvzz4VzHhU7lmdj
/1AY9vsK3JFXxcm+IqSYe0v2XYJnJdfvS8wSkt7FCN2L8JY9zZk7MoXkeC3n
ahp8W9jxOOCikLQ/vl6QCvd4K7UuPi8k8RzVF8nMeC3QGGSRJqSga0bck3DE
VGbBXCH1We7acwwuHmrg3jtFSDOGcQ7Gw6qKZuIvyULqpRgx/hDsxCyPnoTb
qx/Lj4VjmOXSTgiJb33BaR8zXszl04lCGnz4Wv1uWJM5nfqokDw07ggiYQ/m
59V4IZlmFvcKhxOYj1uHhXSRX5oQCr9YyyzILaT7nsWTt8AjmHzRASFt8S+8
LYNXTz95sv9+IVXG5y0RM+M16nzBj2js31/S3/LhN32Y4J6QVm1MkAbB+q2F
Cnd3CSmuT7hqILzxRfmY85FCCiwLOLEBTr9ba3tgp5BeX3Uy9oObL77zk+0Q
0i+afNcXnnqEWfAf+//33stWwcGh3WcXbBOSmkPdB0/4ysa+JYZbhNTv3uWQ
ZfBPvNvV2iykC+u2q7vBFrOZQK+QWg2ck11h+TjDyW/EQno+YPA0J/hG/5lO
D4RC8h1VW7QQ/tdux73Mx+NdfNRzPjy3YXFMAk9I/uc8PtvAO0qZoIiQ6sao
h86Bi65sfOIfKKS/d+4MnA33OS5qdQ4Q0p0oYcoM2CEibND0Ddhf+bozpsH7
gqLNRqwX0uzQ0lJj+PHyBHeldTieXA7yNoQH2KSIP/kKaXHfAS0TYbdJWUcq
VmO+RGRsHw8f0byZd81bSMrj7bXGwjV/ip8neQlpZfPLs6NhnaaqX5ErhLTi
adDMEfCqx/XDgpYJSeHtn7Kh8MlrzbM93IW0ZEjU6sFwA5PLXiokF17/1oHw
uL1K28YuxuNp3h+uDq8XaSSpughp3j517X7wuVXDqdVRSHPcdqf1YcZrgcHr
5w5CemvVM0sZNjQ2UyR7IVk4C8t7HNqtg3Ssx56bj/m3vdGnG85SdLSLscV4
1zp//wX/aF62XmwjpOnLc3a2w9OfMjugkGb+GjqkDZbeDjpnayWkzwWy9Bb4
xrnNJZNmC8n5QvXsz/Cf2MiPA2fi+d6Y8ugDPGdznOovcyEN/Rbm+w7ese7k
5IZpQtrhUPH9NXzX6bxTsSmOD8UjI+rgXua53ExjHA82+Q/5D144+k7MYSMh
vTO5kF4D71VhXuCEpDHq8+xq+GFr7ZN1k3B8M5r46Ams/t+71kUTMD/81vqW
w0vvtQ4yHS+k67fjv5fCBzO6zXTG4fXBqnRnEfz0SF+PHj0hLX3drn0X1mHy
C6OFlJaum14AezHLMY4U0uUjC2bfhI8zyzMMFxIvbWP5NbiBuVxDB9uvLtIn
B9ZjTt8YIiSVWcmtl+F1zNc5g/Hv+XnhmfBZZng1cXxY/WDwBfgjk2sbKKRr
BrXnzsGTHoi26Wrg/ga/nZkCc66GJfXpL6T1E5rLTjHjdTyavqoKqczn66oT
cGtEwuunKnj+N760HIXNeMwHdOzvlh+3H2HGa0XW2BRlIbk2NmgehK/Z3LTb
q4jXh4vVqfvh35NK1gt6BHQg8d6MaGa8tKojPf8KyOFSVukuOKy7/tzcPwK6
/j5hZQRc2NRcYvBbQO/stn7ZDis96cA7VAEVF60K3Qbb5yv1a/8poA3cWQND
4F2nmS8ABVRooXlGCj/YO9z5XquAqiZ8mCZixktsEHShRUBnrPKLgmHX1Wb7
474IyEgauYILH7C3zpI3C0j41PVTADNexo4Vvh8FJF8xeIs/rD1s+Xf79wKy
7HnWfx28Qmmd5tR3eLwPDyX5MOP1OWia9hsBdd5yMfGG654yPzAIqKVK+e4K
eHRBpORtnYDOq+e5e8Br0uLiy14KSC9ofdMSOPXAyWtXXgho2XcNmQvctPl8
7dHnAnJNzO3rCE/wy/0d9kxAfQI8E+2Z8XK+M3xjtYBCVnZOsYMzzB9ZulYK
KFtw8PZcuGX0i1XmTwR0MXPSYitmvPoyP2AKaKPG7dczYdH31iTlhwJqPOQs
NIdz/+um5lIBjbGuVTaDf93r21hZLKCx6muOTIUtMwcrXb8voCaFdwZT4K3x
euOS7wooaNj6/AlwQZjh/F2FArq2/PUifWa8Ns305xUIqDTf86UebOc2P2rZ
LQGdmPuIOwqOtGROkBDQjM9z/g1jxkt/Vem4fAEdvHkhdgjcTyPgU788AeVd
1hqjBTt3ivq1ZQsouUx+dQAzXq/Dpry4IiB31f/s+sOVD6KdC7MEVMK1eNYX
1spOCErLFJBK+4ENveHlJ1L2778oIPUz7zsV4WORWVmS8wJ6Lpq559/Cduv/
eMwJWALiBUYN/wOP9Cz5bndWQI8jKy52wmvmVWtOScH4Fg2Z8xM+jaOL5mkB
vZ/s9bgVfsvkXZIEdDonwfcrPIFZ7vWEgCb4VbV+ggOY5V8SBSSboRr+Hr7A
XA52VEBxU6203sItzOlh8fh3J05qA2zCfF18WECTY+LNX8EC5uXjoIDSftwu
roVzmDzlAQF9D21c8QzuXO2IPVpAasaKnyrhmQuXhw7bJ6DPyqNCHsMhJutO
KewVUNLf6WoP4YJhvMIPuzDeIxedKIF7lEIaH0fi+ft6Gd2H532JVMrbKaC9
Jf4FhXDkM+YEcswHD97i23Bxwcn5EWECMusjen0d7pvOBHYFVPBKJMiDneJy
o9y2CGhkLV8pG94fcidt1mbM91+bDmXBT/welerJBLRgjq9+Bqzp8uKTikRA
WmlLctPhZTOa+n0TYvzNre3PwvG636fU8AU06dOE56fh2r7MBSrY/+6oByQx
49XWl5fKFVBkwbdfifDql4NjowMFJHj9aE8CfOq+3mVhAB7vhPThh5nxyjSs
9NqA48nB0IsHYP2EmW0263E8GLfUKgbesH2+1sR1Agqs1X20Bz6/acn0AWsE
FHq1eXUU/MVt1bKO1QJad+VKSzhsZMVcAIf58kwcFgbzx4sT7nvh8Y+aPnAr
nK2xPf/iCgHpRn9LlsM/8W784DLcflSaqQSe0ZjQtdldQFufrrwrYMarLGXE
2qV4fpf7ufPgm9lZVg6LBWRxJe9tIPz3xM3Vxi4Cqq3xEW9kxiuqJHSIE+bD
GOXe6+GdwcwFtgJKP5ByZA1837Oh8J29gJ7p2xishlVsPzc+nC+g+rraPC/Y
cUqnUratgO7eDFq4HI4erKyfaCOg7QX/nrvBj/5qLNhhLaBh76MDFsODPgzf
EGAloP1m2r+dYLcKg12LZ+PvpSTucYAPXzdLnzET++PskcMXMON1hrmAX0A6
7ccuzIOH7XNs7jVdQP+eallaw96S5WpfTHH/L/Y8nM2Ml886w2pjHN+Vu70t
4NcLeS43jAT0YWngl2nwWNMQ3ukpAlpY9HSrCbx+eFTs7kkC2r3aUt0ITlM+
eDl4goDODk86OQlu/nKycvl4AaV2dxsZwFNqmAVCBBSh7FkwFuZRrtb4MQKy
Nc5y1YUvM/koXQG9DVNqGAG3MctJj8TjaV8arMOMF7O81HAc32JP9gyGZczl
pjoCGri4KXYQfJ05/XQIjm/TJulpwN3Mz1GD8fetNl3uB1szb081sT8GnrVR
gXcwOd6BAlK8XVehDN9t05uzQENA+dM11yrAvV8Z+hj2F5BHpe33bnu8Xyma
GabVT0DVB4N3/Ib3XJqf3KUioNmbjw7qgMsTltxp7I35EHH7dBussWPVm1Jl
AeXm1Jt+g5cEBihfVhTQQ9XuO5/hw+5i/YQePj3Yqe32EX5mxSxwxqdLY6e8
eQcPNdi3wf8Pn7a8txI2wisHHN3l/JtPJk8clerhE79S0qd14vavPA7+Bzc0
Zj0Y3s4ntwHeY5/Deg9vNiv+4FPBhtVXq2G/nBK1T618GvrW27YCPnuy2rCi
hU/eEcuryuEPUQ0u177waaejy7oH8GQ+s4Ain06Y27QVwVyvTrwD5FPyAuPw
u/AlW+Ur3Pd82hsyXJPgtikDqtzf8cnvqeKZm/A07RE/Zr/h0yT3JtN8WPLP
YPDY13x60XH/Tg6c/8HMXLWeT3JKXnoF7qqwXt76kk9KmfLGTHjODUfZ8xd4
/uQsuACHpjALtPLpXcdIxTT4zr51188+49NM908HUmBlKe+/fdV82vb0il4y
vMA35I+okk+XQ6SXT8C7HaJGej/hU9UCC5tjcJnpwTm2j/j03vznkyNw/xFJ
PpMe8umTY6bvQXhxrwthAx/wqT5i3bf9cNzX3OTOYj7dfasVFg1X1zALQPPp
+MY7GrvhIYWP3hTd5dO6gZykCNjz/AvlzEI+jaofOHUHnHiwSf9wAcar4urt
bfCrLd8XbLnFJ97HJS4hsK7/3w3rbvCpR//zKym81lV196J8PkVF7eCK4BQL
7fMmeXxSVh/cHcyMl96YsqE5fJLkn4nmwhP7MQvM86l2t9GITXDgj5n932fx
aUZozgV/OPPVfKNHmXyKOGoxex38rWiJa85FPpU/z3vgA5tlrQo+fp5P/azM
vLxh8dGAA+FpfLIuOv9xBZy3Q3xl01k+BYpGyT3gX2zvnk/R9jEqS+HZbN+e
T+nWv+Nd4G1sz55PN7zXGjjCxPbr+VRysijXHlZke/W4/14GC+yY8WL79Hwq
OxD+dC4cxfbo8f/nvfSzgkvZ/jyfrg01+TETVmN783w6p7kj3Bx2YfvyfDpo
9niQGXyA7cnzSSQbenoqXMX24/m0onGVyRR4MNuL55MZP4kmwMvZPjyf1PVf
uerDR9kePJ/edmvX68Ev2f47n/K6nIJGwaPY3juf9owK7R4G+7J9dz55+WdE
D2HGi+25Y/+vqhmuBb9j++186vD7e34AbMD22vlUNFxvVn84gO2z4/F3WJf2
hS+yPXY+rer0WtEbbmH763yaMkrwXhE2YXvrfOraGCH5t6DdWsj21flU+vxQ
rz9wDttTx/zlnjrUCXew/XQ+BRukjf0Jz2J76Xyy633xSiu8he2jY39VvWjz
Fb7N9tD51Gma9uQTrHCB6Z/z6VnYKZ/3sC3bO+fTzbZDX9/AEWzfnE+peyO2
NsDFbM+cT7ELBWqvYFW2X86n8EkrE2thJ7ZXzqcQk7mTnsExbJ8cx4NVevmV
cAXbI+fT1sy/9o9hTbY/jvkw7vmzMtiD7Y3zKb4gY30JfJTti2O+h4b+uAe/
YHvimO9+zuGF8Ai2H86n7qAhg27DPmwvnE9TT746dR1OZvvgfAr4njQ1D37L
9sD5dCFw9e2rsD7b/8b27qvjnAVvZHvfON6WP/7vInye7XvzKSdnx6Z0+DPb
8+bTuLsmv1LhqWy/m08nf76MOg3z2V43n8Y479ROgq+yfW7cvtQgNZEZL7bH
zaclgcVmCbAF29/m0x+TdXcOwZvZ3jafskd2LT4A32L72nzabLS/fh/8j+1p
88nJb3TQHnge28/mk3HBhT+RcDjby+aTnvW0veFwEdvHxuN5e00nDFZhe9h8
MsqcmbYFXsT2r/nkfCLXXA7vY3vXfAq9PPW+GH7M9q35VPgpxU0AD2R71nwa
5KDdGAS7s/1qPokfhgcHwkfYXjWfPou+/N0AP2f71HwSznPb5wcPZ3vUfNKY
njN8DbyK7U/z6ZaT5vlVcBLbm+ZT2G6uhRf8mu1L88mj+W7RMngc25Pm0xyB
tocb7M/2o/lkOWr9G1c4je1F88m15RLfCW5m+9B8kr5r/7cQ9mJ70MGU1zMz
Zj78iu0/B1M/G/mIefA6tvccTJKz2efnwO/ZvnMw/Tb+bDEbDmR7zsF0qGF0
8Qy4le03B9P8HFePabCY7TUHk/qlkDfG8G+2zxxMbeVn+IZwKNtjDqYvA0v+
TYSV1jL95WBSDPmwbzy8i+0tB5NJ314jxsJqbF85mOQ3R54fDR9ge8rB9OqQ
qcUIWJvtJwfTyjjboqHMfGF7ycHUmr3YfTA8mu0jB9P5P56NA+EzbA85mEIC
fILV4Qls/ziYArp8/6rCGWzvOJjEV1ZH94FN2L5xMB2LWTFMGc5le8bB1LDf
Ja1nPl4f2H5xMNnlzjXvhgvYXnEw3VOYeu8XbMf2iYNpg0BnaTtcwvaIg2m8
Sk/9d9iZ7Q8HU6+7jdwWuJLtDQeT8pnCrmbYg+0LB9O4tOO7P8D/sT3hYFpf
KRzyDvZh+8HBVKpnn/oafsv2goNp0RFtszo4gO0DY3tMbaQX8Be2B4zx/5ru
UgML2P5vMCVXcl9Wwe1s7zeYLv1nuOkJHML2fYOpvu+njodwD9vzDSazVacj
SuGdbL83mDKfLtMsgvuyvd5gchL2Sb4Dx7B93mDqb55tVAAPZHu8wfRz5Kqb
N+B4tr8bTEqTFRddg4ezvd1gmrnqTE02fIrt6wZTXPbc9ZdhfbanG0zaJi++
Z8DpbD83mAoqeWHnYSO2lxtM+48qqJ+Dr7B93GDaFbE/8Qw8g+3hBtOFIzoT
T8E32f4tHs/DpNzjsDXbu8V4TRhjdxS+z/Ztg6lv+qmKw7AD27MNpgqX4T5x
8CO2XxtMd3TiPsfAbmyvNpga+/bavBeuYfu0wTR5tKjPLtib7dEGU5Jn/aGd
8Gu2PxtMc/MXjNkOr2d7s5iPc85f2gp/YvuywdTnQ1+rzXAQ25MNJqO89Q8k
cBvbj+XRzgu3lgthGduL5ZHK/YHveHAX24fl0Q2ltQIOvJ3twfLo6IbMfxvh
Xjym/8qjtG/t0evhPWzvlUcfTs4ethbWYPuuPFou2HJuNXyQ7bnyqGNT/rSV
8FC238qjkl3fC5fDx9leK4/Kygxc3WE9ts/Ko24zz5eL4bNsj5VH6wsjA5zh
SWx/lUd/hFntDvAltrfKo/uOz8IXwNPYviqP7i3sHGAL57E9VR61b9I+aQ1b
sf1UHnldMZ5sCReyvVQe/Rxlf80CXsD2UXl0N8tz/nS4jO2h4u9v2FhpAruy
/VMe9dgKfYzgarZ3yiPe/M2fJ8Er2L4pj7Q5W+UG8Cu2Z8qj1rwtvcfBa9l+
KY+UJ8oO6sJNbK+URy4FPN2RcCDbJ+VR5eZ1GTpwC9sj5VHMSrdZ2rCQ7Y/y
KHSNdfEg+BfbG+VRRrSBuwa8le2L8kjzVb/X/WDFM0xPlEdXln7mqsBRbD+U
R3u/lPxWhvuxvVAepWYkRynAsWwflEff4yRaf+3arbXYHiiPwk7YJ/+Gj7L9
Tx7Zl2sZdcCj2N4nPKbuehuczPY9ebTr+Bn7b7AB2/PkUR/L9dWf4Qtsv5NH
hT1j1nyEjdleJ4/yP7388g7OYfucPPr2K25zIzyT7XFi/I3m96mHb7P9TR4N
3dV28D/Ylu1t8kitz0nd53Ax29fkkfUFu4xq2IntafIoW/R+ZgX8hO1n8mjj
usiictiD7WXyaJVUz+0B/ILtY/LoUNa1+iJ4FdvD5FE/DSfOXfgN27/E/hD3
X2cBvIHtXWJ/m70h4ib8me1b8khJtWVgPsxne5Y8iuwWnMyBf7L9Sh45a7dN
ugJvZnuVmC/uvLxM+C/bp+TRubz3thfgcLZHyaPZc72fnINV2P4kj7S+PvRO
gaPZ3mQQTS+c+fEUPJDtSwZRQv5p8Qn4CNuTDCL7mj6Kx2Adth8ZRLOGBcQc
gZPYXmQQCXcUDTsIj2X7kEH0U0P33H44je1BBlHBHbFZNGzI9h+DqOJYccEu
+DLbewwiw4TBThGwOdt3DKLK6z7Pt8PX2Z5jEBUqnvXbBluz/cYg+sX78G0z
fI/tNQZRiKLBVim8kO0zBpHD9TV9RXA522MMojXxCYeD4SVsfzGI7h8t0+PC
T9neYhBJCn9nBMAr2b5iEInVx8/yh+vZnmIQ3QxzLloL+7H9xCByH8pf6gN/
ZHuJQWTxNLZuJcxl+4hBFJB3cdMK+DvbQwyiL7fvtbvDErZ/GES3mp/vWAJ3
sb3DIPrP6qO6CxzG9g2DyCnn57FFsFIWsyB8EKku/TveHt7N9guDSEdL6aot
3J/tFQaRvEvJei4cx/YJg2iSikKZJTyE7RFi+876vWwmnMj2B4Nox4GWxumw
LtsbDKKJ6q+DTOEUti8YRGOzHv02gieyPcEg4kuvRU6GM9l+YBBp+J0cNAE2
ZXuBQdRLEnZyHJzH9gGDyDVj9SQ92JLtAQZRc9+ZuSPhArb/F0Sv9mrMGwbP
Z3t/QWRg1liuDZeyfb8gKvqX5akJu7A9vyDKbw15pwFXsf2+IFLqa8tXg5ez
vb4gSpvfu1sFfsn2+YLo9Ln7u3rBvmyPL4h+GG3XUoTfsf29IDrxn8Wpv7bt
1pvY3l4QpWR8ntwFf2X7ekH0L+V4XgcsZHt6QZRbuND2B9zB9vPw+JRaH32D
Q9heXhAZBR72+gIrvGUmMO6vY3rTRziC7eEF0ZDzlfwmWJXt3wXRge2B3Y3w
frZ3F0QbtvXsqoc12b5dECWeOqD1Ek5ge3YYvw+jTj2HR7D9Ooy/R9rkp3Ay
26vD7d8b5lXA49k+HZcGJF2a9whOZ3t0XBqyxfDRA9iY7c9xadu2c57F8FW2
N8eleWdHvrsLz2D7clwKaMObQPgW25Pj0uf1f7tuwjZsP45Lld0bo/LhIrYX
xyWdG48H5cKObB+OSwUnTE9egR+zPTgulaQemHgJdmf7b1yaVvU5+wL8nO29
cemfvt3cNHg123fjkuHJ+LIUuJHtuXGJZr9flgyvZ/ttXLr217TxBNzM9tq4
pPl+M/cYzGP7bFyq+HG78wj8g+2xcemHwb/wg7Cc7a9xKSRstkYs3M321vB8
/wqPRcM72L4al24mp+nvhnvfYk5A4pJkU21WBLyH7adxKWFFb8sdsAbbS+PS
KM7U4m1wHNtH45J6qvvSEHgo20Pjkr+S5JUUTmT7Z1waF3VwowjWZXtnXHI2
zmgLhs+yfTMu1f29s40LT2R7Zlyq/V7ddxN8ie2XcclK7c0hf3ga2yvjUn/H
L6PXwXlsn4xLCy61nfeBrdgeGZeaLdqne8PE9se49Of9D1oBL2B7Y1x83mlx
9IDL2L4Yl3xzm54tgV3YnhiXcp7WrnGBq9l+GJdkw0o/L4KXs70wLqXvzJba
w6/YPhiX7LWOK9rBa9keGJeWlobumwu/Y/tfXHp4xmeoFRzI9r64lHdm9pmZ
zPxj+17YfqWaRubM/GN7Xlx6ofnhmin8i+13cWnwzmu2U+EtbK+LS7d0Ih5N
hhVbmQuisb2qnT0nwFFsjwvbP2fQ23HM/GP7W1xaf6MqSA+OZXtbXKppiv01
kpl/bF8L4z9j0c5h8FG2p4X5lPlPfQg8iu1ncemlw+Wjmsz8Y3tZXBrRz2fc
ANiA7WNxqbxV5ZIafJ7tYXGpoztzZl9m/rH9Ky7tn7rkXi84h+1dcelsZIuL
ImzB9q24NEVpT+3feXi/wvasuDQhVdevC7Zh+1UcSuZc/doBF7G9Kg7t85wn
/wE7sX0qDrUGliu1wo/ZHhUH29s95gvswfanOKSn8HzoJ/gF25viUEv48jNN
8Cq2L8Wh6VOqDN/Ab9ieFId+/lp0rR72Z/tRHDL+cnveS/gz24vi0JteU8uf
w3y2D8WhgXaJy5/CP9geFIdunFNqrIA3s/0nDjUYb+Q8grvZ3hOHwutL2h/A
O9i+E4eSrupvL4ZV2J4Th6wytvW7B+9l+00cWvqw6jDBA9leE4eaBujr3oIP
s30mDnVtFpzPh3XYHhOHolVvTsuFk9j+Ev5+gULBFXgM21vC8zlm63AJTmP7
ShyyOba96gJsyPaUOPSo4MaqNDiL7SdxqE71+/sU2JztJXGIFzJOkAzns30k
DoUOdPtzArZme0gcGlS+NfIYfI/tH3FoYmbKgHjYnu0dcagwu/jYQbic7Rtx
qLahaVwsvITtGXFIbqp4KRp+yvaLOHQ8XWfmbngl2yvC411geDcCrmP7RBza
pGLlvAP2Y3tEHNL5trBmG/yB7Q9xyKl78ZoQmMP2hjjUx9ijWQp/Z/tCHFq4
y0MsgsVsT4hD/Xsv/RcMd7H9IA6tTF+0mwuHsb0gDhkJrDU3wUp/mT4Qh/b6
Gp/wh3ezPSAOBYtGGqyD1dj+D4deZPS+7APHsb0fDj1R+zzLGx7C9n0wvgfK
762Aj7E9Hw4tn33BxQPWZfs9HGpWjXi+BD7D9no4pNLjtdYFnsD2eTh0aZjh
50VwJtvj4dBbry6xPWzC9nc4dIbu/7OF89jeDoe+OEbvngtbsn0dDt3/46Jp
BRewPR2MV1X/EzPh+Ww/h0MjHpeMN4dL2F4OhxK/hWaZwi5sH4dD6TPMZk2F
q9geDofsUhrvToaXsf0bDvHNY5wnwC/Z3k0gTf46vWYc7MP2bQJJVFbrqwe/
ZXs2gbT4kfzTSHgT268JpBvtg0XD4C9sryaQcuwyu7VhIdunCSS7a/OiNOEO
tkcTSOuXVA0YAIew/ZlA0hzge0wNVjBlfhAMJM8f/9N012FRbV0YwO0WCxUV
WxBQUQQFBukUQbprZpgZBrADu7sVu7sLu3mxsOPa3d2BXd8763vO/e/34IWZ
02fvtd79vEk5epSsL5MF+z9dNpWiy8t6MlngY1G74vRUWT8mC3NHZOOP1xeP
arJeTBZsfz8J+knPlfVhshC5KPHSV7qurAeThUras0mf6WWy/ksWUkNVT9/T
VrLeSxYCUld1e0Ovk/VdsnBsVoXvL2h7Wc8lCzc+dBnxlN4u67dkYVSvMxUe
0e1lvRb++zrWs+7RB2V9liwsfza4/m3aU9ZjyYL5zQtrrtPHZf2VLNT/2KDN
FTpI1lvJQoF91r6L9DlZXyULxXO3+Zyjo2Q9lSzcrPvlzCn6mqyfkoVOp5xi
CulkWS+F229xj3tH6IeyPkoWis1dlwFaJ+uhZMF/Nx/s6Vey/kkWmv6qNHAv
3VXWO8nCMr1ryV30Z1nfJAv7vmgmb6P7y3omWei2cWzNLfQvWb8kC4fHrl2y
gR4h65VkYce4Y83X0qVkfZIs+G25m7eSniDrkWShz89PrsvoKrL+SBY8upQ6
uojOlfVGsrCpZPWQ+bSFrC/C46ug3tXZ9CJZTyQLhpWNU3PpRrJ+SBZ2b2z6
fCq9RtYLycKam417TKJtZX2QLLi0svwxjt4q64FkIWtN9ZGjaSdZ/yMLPv6l
K46g98h6H/y+5YtmDqHdZX2PLFz7fM9yIF0g63lkYXbJwtU5tL+s35GFny7r
7XvTZ2S9jiyUnDV+T3e6s6zPkYU8c51XF/qKrMeRhX/73U4Z6XhZf4P//9gq
kXr6jqy3weO7//1bGlor62tk4d60jemp9FNZTyMLZ872fpNIZ8v6GVlIbu3S
N47+IOtl8HzY8/1PFN1b1sfIxCD9rrHh9A9ZDyMTpV27VQmlB8v6F5lQtW06
ryNdwsO03kUm6kRcaRRAj5P1LTKxePaI9T50BVnPIhOX/9m19aSny/oVmdgy
7eJ+N9pc1qvIRDv/Xr4u9DxZnyITxkZVzzrRDWQ9ikwENd4Q7UAvl/UnMnEp
0OtuK7q5rDeRiUqzLunt6A2yvkQm3pXWvLOmW8t6EpkYufh1TlN6l6wfkYnD
ib3+NaRdZL2ITOS5fxlnSefL+hCZCAnoU7UO7SvrQWRiQZ/382rShbL+QyZm
njQ0rk6HyHoPmfDyubXejL4o6ztkYsnDjm0r0jGynkMmNqzZtb8sfUvWb8hE
xoz6vqXoFFmvIRPXlo84U4x+LOszZOLH9YdRfzy/eBhkPYZMnHL0uPODfi3r
L2Qictcc3Ve6p6y3kImpya/ffKKLZH0F7j/bDn3f0wNlPYVM1LOc8Oc1/VfW
T8hEL6dLY17QI2W9hEwM7lXb7CldTtZHyESHa/FzHtKTZD2ETOxIm9PgHl1N
1j/IxC2zi2tu0XNkvYNM4HHp1tfpOrK+QSYS7znvuUwvlfUM+P3/6j0v0k1k
/QJub7/pJ87S62S9An6evN1hp+hWsj5BJl5437x+nM6T9Qgy0eDHt7QjdHtZ
f4DH47XqL/Lp/bLeAH//DdseB2gPWV+Ax0Nx9+976GOynkAmmoWFDN9JB8r6
AZn4fiSu3Db6nKwXkIlxyWnTN9MRsj4Aj9d66RYb6KuyHkAmbhZLX7aGTpL8
/0wsrZhms5K+J3n/mWjSIS5vKa2TfP9MaHM7uSyiX0qefybSzDoUzKO7SH5/
Jurm2QTNpj9JXn8mZvWrdnEGnSP5/Jk4p/saN5X+KXn8mTje7/r9ifRwyd/n
/s3bmTGOLtnJlLefiW9mU9+PoidIvn4m7Gem9xtOV5I8fSPs3Nv9G0zPkPx8
I55VKjluAF1b8vKNMJQ4Z5ZDL5B8fCNW1585pxfdSPLwjdiQGtOgO71K8u+N
6Hm8xpps2kby7o34EXG+lZHeIvn2RgSVGrNLR7eVPHsjEu84u2voPZJfb0Sb
W8+OpdAdJK/eiIt/ZoQk0pB8eiOcAl2vxNL+kkdvRPLuO0lR9EnJn+fv7zT4
cRgdKnnzRhQrY5EdQl+WfHkjhj3b+imIjpU8eSOOvPEd6E/fkfx4Iy5YXCnu
Q6slL96INVnqCR70E8mHN8L/0YuqbnSW5MEbsXlY13nO9FvJfzfigc+7hk50
b8l7N+J2i+y1bejvku9uxArVE/tW9CDJczfCsXvCblu6+DBTfrsRuadOu1vT
oyWv3YiDHV2ON6ErSD67EdvfLw9pSE+TPHYjeh8oe6UeXV3y140otTkzyYKe
J3nrRqQeO/HInLaUfHUjJhVvklWNXiZ56kaM1fX/WJm2lvx0I0Lenu5fgV4v
eelGPF5Yp1hZurXkoxsR3EM3riS9XfLQjRiZtdGsGO0s+edGjJ/4bvZvD77f
Sd65EWkXW9X/QXtJvrkR5TtkrvpCF0qeuRGjzy1r8YnuJPnl3N+jr2x/R5+X
vHIjPmpKqV7T0ZJPbsQTXZvDz+kbkkduxNop8UFP6GTJHzfC987gCw/oR5I3
bsS28MWxd2m95Isb8eHVvrs36deSJ87Ps/GS7hrdTfLDjfg2/fnrS/RnyQs3
Ys+i770u0AMkH9yIsPOlf56hf0seuBGwqjLiJD1S8r+NKL3SvNxxuozkfRvR
OKDWtMP0RMn3NsKiinmtfLqq5HnzfPtTefF+epbkdxsxtXqpZnvoOpLXbUTF
0K8bdtBLJJ/bCP3mJw55dGPJ4zZivuOFvZvotZK/nYE193d5rqftJG87A1O3
zStcTW+VfO0MRKzvF7qCbid52hn4UBh5ZQm9V/KzM5BZwS5pIe0hedkZONb7
z8O59BHJx87AtxLnjLPoAMnDzkCZvfPeT6fPSv51Br7mqnOm0OGSd83/f2az
PxPoq5JvnYHu+5+MGksnSJ51Bn6VWV5hFH1X8qszoB2QMGMYnS551RnYUs3M
YjD9TPKpM3DjQv6S/nQXyaPOwMMd2VZ96Y+SP52Bc4fMN/Wk+0jedAbmvd3X
thv9U/KlMxDkm7Qvix4qedIZuJX/3TODLjHZlB+dgTB1bmE6PV7yojOwqrlN
qJquKPnQGbhjvv9yMj1D8qAz8Lt5UGICbS75zxn4q770IIaeL3nPGXiC+IxI
uqHkO2dgu9/tt53pFZLnnAHN+4Q+nWgbyW/OwHdc+RlIb5K85gwM2t1phB/d
RvKZM3DvUn5Zb3q35DFnwLam/VR3WiX5yxlIGTLfXEVD8pYzMLBi8YXtaT/J
V87AUOgaO9InJE85A13mH1vbmg6V/OQM+M5vZN+Svih5yRkogf47begYyUfO
wIYK51RW9G3JQ+arwOD6hxvTqZJ/nIGjNbICG9BPJO84A63+236uLm2UfOMM
jNz5Lao2/UbyjDNw6pDLrRp0L8kvzsDPN33VVemvklecAXOfrc8q0YMknzgD
DQ496VKeLlZgyiPOgEVqrc+l6VGSP5yBP838BpSgy0vecAYuV+v276/7F4/J
ki+cgQXNZo35RVeTPGHu75TdFb/TcyU/OAOfDlyZUUTXlbzgDIzxel/7I71M
8oEzUPl16SVv6WaSB5yBEQcsmr2i10n+bwZebWu+4RltL3m/3J7n27Z5TG+X
fN8M5FZV7b5PO0uebwb+6+/e4Q59QPJ7M1CyrPuRG7Sn5PUaYH/AJegqfVzy
eQ0ImN3m/H90kOTxGhAzu1n0efq85O8akHTA/NZpOkrydvnzssXVJ+hrkq9r
gO+Al0+P0smSp2uAXbXz2QX0A8nPNaDMhS0fD9I6ycs14Pb2Sf320a8kH9eA
NQd1f3bRXSUP14DsN66jttOfJf/WACufiuW30jmSd2vA9UM3pm6kf0m+rQHj
0laYr6NHSJ4tv19z44JVdCnJrzXggrldo+X0RMmrNSDL5sXqxbSZ5NMaUEK7
osUCOlfyaA2YeTh+2xzaQvJnDWgYWNF5Jr1I8mYN2PBp38FpdGPJlzXA4ZjO
ZzK9RvJkDdhxoOLJ8bSt5Mca0O7mltAx9FbJizVgm2XnyyPotpIPa0CrsS/j
h7orebAGrK054t5A2l3yXw1oesZc148ukLxXA5asWfWyNx0g+a4GmK9r070H
fVryXA2YdmFvURe6s+S3GlCxvvvATPqK5LUaMGr6oX96Ol7yWQ0obqcao6Xv
Sh6rASNebq+QRmskf5U/v9B8ehL9VPJWDRh7a17NeDpb8lUNqFSpzMJo+p3k
qRowP717owi6t+SnGmD98MrqUPqH5KUacHB0+xbB9GDJR+Xx1HlWXgBdQvJQ
Dfjo/q6dLz1W8k8NmBXld8DTXck7NcBr2hyvDvR0yTc14MOHJ8ddaHPJM+X2
69+6Uzt6vuSXGmCwzrnoQNeXvFIeHz/3xtjTyyWf1IBfn7/dsqObSx6pAZdr
OKqb0xskf9SA3QlZT5vSbSRv1IClxxdnNaJ3Sb6oAblx595b0i6SJ2rA9Co/
+tSh8yU/1IAFbxv9rEn7SF4o9/9Hv2HV6ULJBzXgfD19qSp0iOSBGvA7e8SE
ivQFyf80wPnRfLNydIzkfRowcOiWmaXoG5LvqccFL1gUp1Mkz1OPNrZnF//p
wPc7ye/UY6nz1SY/aYPkdeph2eXW2q/0G8nn1GN94e2Wn+kekseph2/gzW3v
6SLJ39Tj3dtL7d/QAyVvU49N+08eeEH/lXxNPQZs3u/1lB4leZp6xBeuO/6Q
Lif5mXoElp4ZfI+eJHmZegRkDbhwi64m+Zh6pH5Jir5Oz5I8TD1Gr1HdvNxB
yb/U49CQmqkX6aWSd6lHhUFvHp2lm0i+pR5dliDjFL1O8iz1uP986pvjdEvJ
r9Sja1xizyN0nuRV6mH2tvHXfLq95FPqcWTd04EH6P2SR6nH9Imr/+2hPSV/
Uo8+uZrRO+mjkjepR3ZBnfLb6EDJl9RjiPn5KZvpc5InqcfaqUOrb6DDJT9S
j2f2Leauoa9JXqQeXl8u11tJJ0k+pB67H/ZftpS+J3mQ3P5FdawW0TrJf9Tj
Rcs96+fRLyTvUY91k8LtZ3dQ8h31GFP12fYZ9CfJc9Rj2IF+zlPpHMlv5PeZ
XPrgRPqX5DXqgVHTvMbRwySfkdtzec3jo+iSkseoR+8nczsOpydI/qIeP0Nr
nR9MV5K8RT2W3J0eOYDOlXxFPdJmlr3el64leYp6eHQfmNSLXiD5iXTPl/e7
0Y0kL5H7e360LpteJfmIeix8fuBFBm0jeYh6/Epq2FVHb5H8Qz0GfR36UU07
SN6hHnX33OqbQu+RfEM97i1u+zOBVkmeoR7HNowdGktD8gv1OHv3Woko2l/y
CvX42r7puDD6pOQT6uG3O7tiCN1Z8gj12JWUNy2IviT5g3p0bP6xhj8dK3mD
epSsYz/Pm74j+YJ6PGiTYelBqyVPUI/n3RYtU9FPJT9Qj2qXzzVzpjMlL1AP
dcqvdY70W8kH1ONGZatWbejekgeoQ68nwdta0l8l/08H1cMu7Ww7KHl/OtiU
mrTPii5uZsr308EzdLV7E3q05PnpMOjggcMN6AqS36fDk4jz/vXoqZLXp0Pf
yndP1aarSz6fDm3fPw81p+dJHp8ONb+9+68qbSn5ezrYWn2KqUwvl7w9HfQD
Pt4sT1tJvp4OZz+/SSlDr5c8PR00s548LEG3lvw8HRon3dD/c+PziuTl6WAW
dPLlL9pF8vF0aJm0s+t3+pDk4enQZ9aij0W0l+Tf6fDm8/C+H+lCybvTYeYA
zY+3dLDk2+mQYeUx5BV9XvLsdMj+Vqv4czpa8ut0WPH+9ejH9A3Jq9OhnNmh
cg/oFMmn02Fp5MTJd+gHkkfH73coqupN2iD5czqoO9eZdZV+LXlzOkwqfbv2
Jbqb5Mvp8PrRvIXn6SLJk9Nh8LPIhmfo/pIfp4NH1fIrT9C/JS9OB1f1Aetj
9EjJh9NBdy1zQwFdRvLgdDjey9z+ED1R8t90SG53YNs+uqrkvXH/N0htt5ue
Jflu3D+t/uzdTteRPDcdtNp5HbbSiyS/TYdLh1oXbHRT8tp06Od51HcdvVby
2XSIfR55YhVtJ3lsOvTYdS94OZ0n+Ws65K83nF9MO0nemg5+x15FLKD3Sr6a
DqVLZ1+dQ3tInpoOJbo8j5/ppuSn6eD0I+3ONDpA8tJ0WLvpStpkNyUfTYeI
sf6Px7speWg6uIzdbhjjpuSf6ZC4qd6rEW5K3pkO+74P7zrUTck30yEu+9GH
gW5KnpkObUp59ennpuSX8fMenf+tN50teWU6LFj3fmAPNyWfTIfWO73/dnFT
8sh0+Pt02ohMNyV/TIdqHrdKGdyUvDEd0g82Gq+lS0i+mA5F6vSKaW5KnpgO
J1qsmJrkpuSHpeOW5d1q8W5KXlg6WjuZz452U/LB0nGsZ6BFhJuSB5aOpVdz
Foa6Kflf6TiYtqJBsJuS95UOi6qnlwe4Kfle6Tjw7G0zXzclzysdKx5XXudJ
t5H8rnRcKGPXooObkteVDo9wny0ubko+VzqKEOvQjs6XPK50fIjJ2OngpuRv
8fNW7+Ns76bkbaVjX9Hg/XZuSr5WOsb/GeHe3E3J00rHspajCpq6KflZ6fg7
YrhvIzclLysdq/8MKLR0U/Kx0jFrafeOddyUPKx0nMvQnK3ppuRfpSM8Niys
Ov1G8q7SUT/b9ZKZm5JvlQ6nNQ1jKropeVbpmF22xI2ybkp+VTp8pj1ILOWm
5FWlo4P7gbvF3JR8qnSMrJar/qNS8qjSUaOS/vEPlZI/xe3T0snwla4meVPp
aNDn34tPKiVfKh3zHhZmv1cpeVLp0PWd+O61SsmPSsfA1sE9X6iUvKh0PKpS
pugJvU7yodIxt1Z+zkOVkgfF/e/b68ddlZL/lI6vc5oMvqVS8p7Ssajqhb/X
VEq+E79vXr8Rl1VKnlM6HudYlrqoUvKb0jE0/dDYsyolrykdPXISy5+iz0k+
Uzp2bv086bhKyWNKR0CVCWZHVEr+UjocZtedka9S8pb4/3uvq3FApeQrpaOU
eds5e2id5Cml412lvRY7VUp+UjrsW6oW5qmUvKR0HO65t/5mlZKPlI5Nd9su
W69S8pDS8bb7+iZrVEr+UTrG2ViuXqFS8o7S0b/spOZLVUq+UTqOVPq6fiE9
QfKM0qF1SWk5T6XkF6UjbWLBlll0ruQVpSOvRCOHGSoln4j/fvmgHVNUSh5R
OrINl9tNpBtJ/lA6zkQ03ztWpeQNaTEpvZ9qlErJF9Ji7cKjB4eplDwhLRr+
rOg5WKXkB2nxaWj44f4qJS9IiyZ2M3z7qpR8IC22/Tp3vKdKyQPSYuHnMkHd
VEr+jxZPqnU4naVS8n60mBLbNSSD7iz5PlrMObzgfLpKyfPR4mfksXC1Ssnv
0eJ4hVeXklVKXo8Wb15UjElQKfk8WvR5a3s9RqXk8WiRauGXEKlS8ne0WJeZ
eLuzSsnb0SL2YZeUTnRvydfRImPYoPuBKiVPR4sbvmM1fiolP0eLPPspj71U
Sl6OFi89p+vdVUo+jhYT+0177kpXkDwcLSZfnZjZXqXk32jxLWHk67YqJe9G
iyOlcrq2Vin5Nlr8uKp/30Kl5NlokXsuoqeNSsmv0WLGa9fPzVRKXo0Wv1o3
6NuYXi/5NFqcXfD3a326teTRaFGy5e3+dentkj+jxZrHO37Wol0kb4b76/D4
wTXoA5Ivo0WzwoS/VWgvyZPRosRH6+GV6ELJj9EiyOdD8fJ0R8mL4d/ft2tU
aZWSD6NFvfh+pUuolDwYLVZZthv31/WLx3XJf9FiUdn35X7RKZL3osVvi9UT
v9EPJN9FizPhcZWKaL3kuWhRbmvpqR/o15LfosVOx7wqb+lukteixel7sTNe
0kWSz6JFVN6P6s/ofpLHokXHdfNmPaJ/S/6KFlsKHWvdd1XyVrQYW/HM3Nt0
aclX4fbLSa1zw1XJU9FiZLl3C67QZpKfosX6ggGW/9EzJS9FC7+lxZeco+tI
Pgr//qoxDU/TiyQPRYuLF0ovL6QbS/6JFocbj2xy1FXJO9HCdsHPlaDtJN+E
+8u1u9VBOk/yTLTo/Pf+mr20o+SXaFHlVYjNLnqv5JVoEfB71/ptrko+iQZf
nOq12EIfljwSDSxmDd60gQ6U/BENtte51WotfVryRjQ4etxx60o6TPJFNOg4
b0KbZfRVyRPRIGjG7W2L6HjJD9GgIM/Wcb6rkheiQd7X3jtn0xrJB9Ggbvr+
drn0M8kD0eDvl9+7p9JdJP9Dg+Stbi6T6PeS96FB22k5+8bRfSTfQ4NRszer
RrsqeR4aRBx5cGA4PUTyOzSYV7Oq+xC6pOR1aJA6zS1/AD1W8jk0WN463TOH
rih5HBqov44t6EXPkPwNDRY9XuPdnTaXvA0Nor8dOZJNL5B8DQ2mOtz2NdL1
JU9DA7/c98d09ArJz9BgYJ1iARraRvIyNGh9otKJFHqj5GNoYFhYMyjRVcnD
0KDOnLqnYl2V/AsNIvfUC46iXSXvQgOzfxZnwmhIvgX/XtfqISG0j+RZaFCy
RLlzQfQJya/QwPvQj1B/OlTyKjQotfT5eW/6ouRTaBC89r8wDzpW8ig0qH5t
z0UVfVPyJ7i9WiyIcKZTJW9CA6e1/S85uir5EhpM7BgV1YbOkDwJDbKq211p
6arkR2hwrvifaFtXJS9Cg121z161or9IPoQGttFzY5vQgyQPQoMme1KvN6D/
Sv6DBsu8msTXc1XyHjTY+OHhjdp0ecl30MDtxOIEc3qy5DloEH8s5lZVurrk
N2jw63n5pMr0bMlr0MC+7f7b5em6ks+gwZMVhuQyrkoegwY2qip3S9BNJX9B
g+/fdqT8c+HziuQtaBB1J/reL7ql5Cto4Pr8Y+p3epvkKWiwxWLS/SIXJT9B
g809Gqk/0vslL0ED9/fbHrylPSUfQYOEWZ6aV/RRyUPQoLT61MNndEfJP+D+
iwzTPqbPSd6BBmWz/3t0n46QfAMN0jaEpd+hr0megRrBVU8/vuGi5BeocXyR
l+6qi5JXoMaFsB1P/qN1kk+gRpZtE/15+oXkEagxz3bK09N0V8kfUCM+vEh/
wkXJG1Bj0+K4Z0fpHMkXUCO32h5DAf1L8gTUqLyp+vOD9DDJD1CjbtesjH10
ackLUAPR+c930RMkH0CNr1oz43a6suQBqHFkbuKLLXSu9P+rYfV5hXGji9Lv
r0aDvs9frKUXSn+/Glvq22SuohtJP78a19/oXi6jV0n/vhqzHi3OXEzbSr++
Gq/+Xno5n94q/flq3PQulTXHRenHV0O30eFVLr1H+u/VGOOWlDWNdpN+ezW8
Pg1/NYkukP56NWZfWJE13kXpp1dj9OWCV6PpU9I/r0bVv7eyRtCdpV9eDeew
j6+GuCj98Wr8LCyZPZCOl354NRL11V/n0Hek/12NGLv62b1ptfS7q/GuZrPX
3emn0t+uRnOb5tld6GzpZ1fjl9r6tdFF6V9Xo3tB42w93Vv61dUYHlDntYb+
Jv3pajh9rpSdSg+WfnQ1xhf+fpXoovSfqzGw4EVWHD1G+s3VMHt48VUUXUH6
y9Xws9mVFU5PlX5yNSzmzH4VQteQ/nE1ptn1yuroovSLc389DX7lT1tKf7ga
mScaZvnQy6UfXI3TFz689KCtpP9bjf/+Hsp0ozdKvzc/T/S4l850a+nvVuPU
xZBMJ3qH9HOrcaC32cs2tIv0b3P7uZ81tnJR+rXVmNlq7AtbF6U/W43Bfh2M
1nSh9GOrUW7ku+dN6GDpv1bD89mijIb0Bem35vfrGfi8Hh0t/dVqLGryzmBB
35B+an7+n9OfmdMp0j+txtIfrQ3V6IfSL61G44ZnnlamDdIfzfM1W6uv4KL0
Q/P4vvflSRn6nvQ/p2FxvzG6kvRL6XdOw0nnak/+OfN8lP7mNCxrMD/9N/1L
+pnT0KRl/cff6VLSv5yGMPVi7Re6kvQrp6HVgTqPPtK1pT85Dbs75Gre0Y2k
HzkN75+UefiKtpH+4zRc39FP/ZxuK/3Gaeiy/sn9x7Sb9BenYcvx0LQHtL/0
E6dhRbkd9+7QodI/nIbAXuapN+lY6RdOw8ISve5epTXSH8x/v+9M8iU6S/qB
05Ayt/Gd83Rv6f9Nw/GFvZPO0IOk3zcNjwoP3zpBj5b+3jTkWVRKPEZPk37e
NLSdEXmzgJ4n/btpyGgzO/4QvUz6ddMQ+fXy9X30BunPTcOnR2Zxu+nt0o+b
Br+v/te204ek/5bbr82AmK10ofTbpqHyjHVXNtLnpb82DSMtrkSto29IP20a
thX+urSKfij9s2mYs7Bh5HL6tfTLpsFhrud/i+nP0h+bijH7ksIX0L+lHzYV
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
o0WjWLVJg2rRV6X+LBr2g7d9qU7fk3qzaGwwu9K9Cv1c6su4PU9+elmR/iD1
ZNEYvb6yrhz9U+rHovFqW7N7peiSUi8WjYUPneOL05WkPiwKS1wCL/1py/ud
1INF4dPuyJCfdAOp/4rC7OTEwq+0jdR7RWGCbarX57ZKfVcULtRP3f+eVkk9
VxQMrolOb2hfqd+KQsTgyC0v6FCp14rCtGcBNk/pWKnPikK9/s4rHtJpUo8V
hX9tmlneo41SfxWF9tUqz7lF95R6qygcs/hU5To9SOqrorAq8PKEy/RoqaeK
ws3FeSUv0lOkfioK+noTh5yl50i9VBSCC9K+naSXSX1UFEZOduh5nF4v9VBR
MB/+79VhervUP0Xh94JTunz6gNQ7RcHj7rR7++njUt/EvxcQGb+HPi/1TFE4
fb3qpR30NalfioLF9DOd8ugHUq8UhfzuI49vol9KfVIUDue081xPf5Z6pCjU
X/1k72r6t9QfReHqz2ltV9Clpd4oCi/7OW9aQptJfVEUkixvWy2kLaSeKApW
LwYunUs3lvqhKETerlVnFm0n9UKRuPVlS+502lHqgyKR7+xbaQrdQeqBIlFm
+eUxE+gAqf+JxEYH9b8xdJjU+0Riy8sX/UfS8VLfE4kap7p+GkprpJ6Hv//C
u+xBdLbU70Tiz5/sp/3oPlKvE4kxUU9T+9CDpT4nEt0vJt7oQY+VepxI7O9z
NqIrPU3qbyKR6aU6k0nPl3qbSAxyXOVnoFdIfU0k3odWyNfSG6WeJhJnp3Vx
TqN3Sv1MJCr8OJ2XROdLvUwk8iZY2cXTJ6Q+JhJ7vAevjKYvSj1MJKwbX7CM
oG9K/Qs/f/MGc0LpR1LvEokOsZlVguk3Ut8Sifsb88YHtFXqWSLxzqaouC/9
V+pXIqE55zjIky4r9SqR8J7fvciNrib1KZEYO3ltVxe6rtSjREK19vYzJ7qp
1J9EIvZlRbUD3VLqTbh9I11utqLbSX0Jv+9jdaQd7Sn1JBGwWzTmjDUdJPUj
EfgwaI1fUzpC6kUiYDPq6KGGdKLUh0Tg9LY77S1pndSDROBW2U9bLeiuUv8R
gbgxJW1r0jlS7xGBILtqK6rRw6S+IwLLv9atZ0aPl3qOCHR91WhWBTpX6jci
sLZ008pl2yr1GhGICmo8tiS9SuozItBje71//xy+eGyWeowI/PGt3v83vUfq
LyLw63epj9/pAqm3iED23c+ZX+hTUl8Rgc5P7z36SF+SeooIrDIvTHpH35b6
Cf7+7PVXXtFPpV4igsfv+NDn9Dupj4hA6jRd4WP6m9RDRGBccgfPB3Sxxab6
hwhYR1Tde4euIPUOEWjf9UGbm3QNqW+IAPI2rb9KW0o9A12vb5NLtJXUL0TA
eYvrwvO0vdQrRMDK+LPGGdpZ6hMiMKXjnsknaC+pR+D2i+xR+hgdLPUHETg+
0mpoAR0l9QYRmHXr2teDdLLUF4TjUcLo7vtog9QThGN9MfsXu+juUj8Qjlfn
L6u30/2lXiAc6471vbmFHin1AeG497BG5EZ6otQDhGO29ZbTa+lZMv8fjlO5
fr6r6MUy3x+OftbXDyyj18j8fjiWP9Q7LXZQ5vPDEXrsw6b59F6Zvw/HgPP9
rObQR2S+PhxNi/1anEufkfn5cHRMGFhrGn1V5uPDUXTzy9RJ9D2Zfw+H5ciu
ZcfTz2W+PRwnIx4OG01/kPn1cHwOivg+nP4h8+nhWJZxqMcQuoTMn4fjwmar
lwPoSjJfHo6R9SZqcuiaMj8ejr15r272ohvIfHg4enUNjOxO28j8dzi2RCw7
nU23kfnucPRO+eJjpN1kfjsch6YHHNDRvjKfHY7xr2c6augQmb/m9u16d2MK
HSPz1eHYU7tps0Q6Veanw2HxUrcoljbKfHQ4ij1aYR5FP5b55zD0KnF3chj9
Reabw9AluEbpELqczC+H4f0+/yFBdD2ZTw7Dz/A+X/zoljJ/HIbpVZZ29aY9
Zb44DHlfjj91p8NlfjgMiSVfpqhoncwHh2GqS7lr7ekcmf8NQ9jspp0d6Qky
3xuGJXXcClvTC2V+NwwDjnf2aElvkfncMDyYl7rbxnS+yvxtGC7PzLK3Mp2f
Ml8bhrjdvdY0Np2PMj8bhsxi/Ro0MJ1/Mh/bGRV79ZtT13S+yfxrZ7hX7GNW
23R+yXxrZ/w802VsDbq1zK92RvBOzd8qtLfMp3ZGi2OROZXoaJk/7YyFvzzf
lTOdHzJf2hnLE20NpU3ng8yPdobrQ7N7xelJMh/aGSnTPsT8bcPjXeY/O6O+
/vy5n3SezHd2RhftOv9v9BGZ3+yMsHFDD32mr8p8ZmecvBze7gP9XOYvO+Nq
YMPNb+ifMl/ZGf0fv2z2kq4k85OdsX1N3qKndAOZjwzFsBm9zR/RDjL/GIon
K9tOvkf7ynxjKJ7ffVvyNh0r84uhGOC5etB12ijziaFYfzL+82V6kMwfhqLn
gHLZF+kpMl8YivMROx+dpZfJ/GAoz6fkxFP0dpkPDEXKgGKXjtPHZf4vFJNO
Lut4hL4u832hiPZ0P5xPv5T5vVDsu3vV5QD9W+bzQnFgZVbeHtpM5u9CET/j
V/OddGOZrwvFjDXjl+bRjjI/F4Iuj6vV3kwHyHxcCB4Gzp26no6X+bcQFF22
KLOGzpb5thBsGDdnyAp6iMyvheCXtuqXJfQ0mU8LwTv92C4L6RUyfxaCodO/
P55L75T5shDseGRImkWfkPmxEIxP/u/SdPqmzIeF4N8f5+Ap9BuZ/wqBxYkF
hyfQf2W+KwSX9/xwGUtXk/mtELS5GJ03km4q81khcKi6qfkwup3MX4XgWr9/
SwbRQTJf1QmNy4bV6k8nyvxUJ1TJXzClD91V5qM6YfWiR6V60sNk/qkTHq6w
HtyVzpX5pk7Iv2j4nEmvkvmlTgiyXplloPfIfFIn9Ft5+6GWPiXzR50QElQ1
IY2+LfNFnXDW3PtiEv1O5oc6oahct8B4uli8aT6oEwqbzc2PpmvI/E8neBoP
tougrWS+pxPSL9/dFEq7yPxOJ7Q1/GoaTAfLfE4nbGlUc2EAnSLzN51wsUSL
6r50d5mvCcaaSu4TPOmRMj8TDCuPTsU60LNkPiYYoXNj+rnQa2T+JRjWFsnv
nOh9Mt8SjG0FqXoH+ozMrwTj0fSUO63oezKfEoyT4+Oj7OgPMn8SjIR1Yaet
6ZJ603xJMBa/9/FuSteU+ZFgTEttu7chbSPzIcFw/FK/tSWtkvmPYIzbUXqN
BR0i8x3BmDL/pWVNOk3mN4IRtPbUzGp0T5nP4Oe7s7qCGT1a5i864j/XoSMq
0HNkvqIjluVHfi9Dr5f5iY6wyW7avSR9QOYjOkLj+eHpv9Z8n5D5h44Ic9uX
/Jt+IPMNHVGUOvTyd/qTzC90RPgGz+AvdGmZT+gIdf0/BR/p2jJ/wN+/d7fz
O9pO5gs6Ys3ALlte0R1kfqAj7uoaWD2nw2Q+oCPO5pxd+JjWyPh/R/TKy6n+
gO4j4/0dcbla/Ql36LEyvt8Rbxbg3w16noznB6GgU2rOVXqjjN8HIazZjzf/
0YdkvD4Ii5tNTz9PX5Tx+SCsCGl66zT9SMbjg6BdtD38BP1Fxt+D8KiGx4mj
dFkZbw9C3R3H3QvoujK+HgTzgR13HqRbynh6EM4aT9ntoz1l/DwInsP8l++i
I2S8PAi9Dh2qvZ1Ol/HxIKQ3bTt1C50j4+H8/dtWlNpIj5fx7yBMNFQZtJZe
KOPdQTjk2//jSnqzjG8HYmfQ3YxldIGMZweia1+Pe4voSzJ+HYhHpxZGz6ef
ynh1IOoHfDk9m/4m49P0q2DvXLq8jEcH4t6uRXum0pYy/hwI3fpXrSbR9jLe
HIi8Y06rxtHeMr4cCJQdVHc0HSXjyYHI7XVo+nDaIOPHgbAv/bvMELq/jBcH
YgbaDxlAT5Lx4UDsWd71c196sYwHB2LNxmWZveitMv4biOS7F+53o4/IeC8/
X/tfMdn0FRnfDYD13iZnM+jnMp4bAGdNgI+O/iHjtwEwb2vYq6YryXhtAPbY
jbRPoRvI+GwAbDstWJVAO8h4bADSZ26pG0v7yvhrAIwlMT2SjpHx1gC4LzxT
Jow2yvhqAO4kXhnciR4o46kBCPK5+SmQniLjpwEYHXHL6EcvlfHSAIwff/2e
F71dxkcDoH5+MdqdPibjoQEo1a3wtCt9XcY/AzDAcq9Xe/qljHf6I//T6t1t
6d8yvumPSx+mtWxNm8l4pj/21cpZ0YJuJOOX/uipi7ewoR1lvNIfP2+2n9qM
9pfxSX9E9KtWqjEdL+OR/hja4cWA+nSWjD/6Y5Ttgfd16CEy3uiPKI+J+lr0
NBlf9MffgTG3q9MrZDzRHwPvW0ZUoXfK+KE/zmY/KKxIF8p4oT++NlzWoRx9
U8YH/fH5V9L2UvRrGQ/0x4l/NWyK039l/M8PvVqcXPzH/otHVRnv88OXof1r
/KSbyvieHyJ+NpvwlW4n43l+GL343N9PdJCM3/lhqrFXn/d0oozX+aFvUo1X
r+kuMj7nB8ecvLQX9DAZj/PDub0drz6hZ8j4mx+8m94PfkivlvE2P+Tu6lFw
l94t42t+ONj9b7tb9CkZT/PD0YjxG6/Rt2X8zA9rk8waX6bfyXiZHwxTps+5
QBfLMY2P+aHsc7NKZ+nqMh7mi1HGCSNO0lYy/uWLB9WKfTtGO8t4ly/qPu7V
5TAdLONbvmh75+HDQ3SyjGf5wv5PSNx+uruMX/miXMDOs7vpETJe5Ytju2v7
7KBnyfiULzRh/fZspdfIeBT/XpXLLTfR+2T8yRc+3+1WrKPPyHiTL8aUG1Z7
NX1Xxpd8scnrwuTl9AcZT/LFnmX1SiyhS4wyjR/5Yq2Nrt8CupaMF/li0I11
b+bQzWV8yBdOeS81M2mVjAf54PJW6+vT6BAZ//FB/PW0kMl0moz3+OCY9ezD
4+meMr7jgzpLCtuPoUfJeI4PIt2LNo6g58j4jQ9ySjVoPJReJ+M1Phj92XfO
QPqgjM/w5xUMFfvR52Q8xgfRHUcP700/kPEXH9TPW/KlO/1Jxlt8cMljV1YX
uvR00/iKD7p9OXHfSNeW8RQffL58LVpP28r4iQ+ybj08paE7yHiJD86Xe+mR
SneW8RFvWKS92ZFIa2Q8xBuxd1/bxNG9ZfzDG0NHPV8cRY+V8Q5vzIm4Xz2c
nifjG95YEnh5XAi9UcYzvDFTf/R3EH1Ixi+80W/j1p7+9AUZr/BGaJ15z7zp
RzI+4Q3zrYOTPOgiGY/wxtkuKRdVdFkZf/BGn0iVvzNdR8YbvFFFXWO/I91S
xhf492e/sG9De8h4gjcaft63siUdLuMH/Dz9x1nY0ukyXuCF31YRU6zovjI+
4IX4X7VKNKHHy3iAF9Z/v5HTgF4g7/9e+FB/7uu69GZ53/dC6+wIdW0a8n7v
BfWDsldr0Jfkfd4LU4bs71iVfiLv717Y5pOZX4n+Ku/rXjjV2tyxPF1e3s+9
cMfvwNrStKW8j3vh6YhUyxJ0a3n/9sKrZ3+m/231xcNL3rfp3vNL/6Kj5P3a
C49tHAZ+o/XyPu2FK6WPv/tMf5T3Z08cqxCT/oE2l/dlT2x0fnj9Da2S92NP
zJicGfKSTpX3YU/0Lf+u4Ck9Ut5/PRG9pVu7R/R6ed/1hOOg1+vv0efk/dYT
VXroGtymP8v7rCdeTL6Ze52uLe+vHjj8X3DZK7S7vK96YIHH3kEXabW8n3qg
9+XGH87So+V91AOdpo/TnaI3yfunB6z6vrxxnL4o75seKDkyMPQIXSTvlx64
v3v54Xy6jrxPeiC/xvd2B0x/T94f3bFiXvCGPabtI++L7hjrP7/BTnqCvB+6
o3fdJ7l59GZ5H3SHunaLsptNf0/e/9wR2aHboPX0d3nfc0fohM3vV9OW8n7n
juC/L9JXmPaPvM91QMjCRjeWmP6evL91QII6OmSh6e/J+1oHZIeOLphLb5P3
sw4Yo81zmkVflfexDli99Ma66fQPef/qgIul/lhOMf09ed/qgJK59WdMoP3l
/aoDvAJVpcfSRnmfcsOEZlEDRtLD5f3JDTdtjW+H0qvlfckNqrgBmkH0aXk/
csOKTWOv9qPfy/uQG6rbTe/Yh64p7z9umH1h9qEetKu877jBavFch66m40Xe
b9xQkDt7dSY9St5nVDDmTatjoNfK+4sKjb6OmaKlz8r7igpP0/sXTzMdn/J+
osL+H4a+SXQteR9RYcWeiJdxtJu8f6gwZ7FLSrTpeJH3DRWWbKz3Xzg9Vt4v
XLH74U+/UHqjvE+44pHntb0d6Qvy/uAKy8LNLQNMx4u8L7giq8+IZT60hbwf
uOJccIS5p+l4kfcBV/h2rD/ejdbK878rznZ/+suZHifP+67IzF/f3cl0fMrz
vQsatct63Ib+T57nXfDssnVcK/qbPL+7oHDB/dO2dD15XnfBwQmzPKxNx4s8
n7vg9DL/7U1onTyPu+Dt/U9WDU3Hizx/u8AucNH8evQWed52xvBr3pUt6Mvy
fO2Mt1MeDzc3HZ/yPO2Mvl1HFFWl68vzszNq9q1nrEz7yvOyMy6v2na7PJ0h
z8fOWPvbN6wMPUWeh52xaPClIyVMx6c8/zpjfbOU9v9a8viU5932uFz0eP0v
+qc837ZHvbeG+t/phvI82x5DKz+bXkT7yfNre5SI1ZT6SGfK82p7rCi80e8t
PVWeT9tDmxby+iW9U55H28Or0cHUZ/RNef5sD8/yNpce0X/kebMdkutO979P
N5bny3ZYFFW09zYdIM+T7fBvZ3TLG3S2PD+2w3CPbUuv0NPlebEdGn8oX+M/
epc8H7bDq1OpY8/Rt+R5sB2unNn64xT9T57/nPDwy+8uhbSVPO85oVZQwIMj
dEd5vnNC1pFJUaC7y/OcE57qzhUeoHPl+c0Jo1tXVO2l98jzmhNCm/hv3knf
keczJ7i5D2q0jS4uz2NOCBu+eeZm2lqevxwx+fXtMhvoTvK85YiPQ8sMXEP3
lOcrRwxStXq7gp4tz1OOaNMgXL2UPiDPT46oYtf98kL6njwvOcIidWLAPLqU
PB85otP+5ftm0TbyPOSI9R67Ws6gQ+X5py3avj62dArdS5532uIpLlafSM+V
55u2OHXwxpixLZXnmba49vDO95H0Q3l+aYtqre9mD6PLyvNKWwxYdfPeILqF
PJ/w5z6XIvrT4fI84oBrZU8c60P3kecPB5z9sse5Jz1fnjcc8Kni6g1d6Xx5
vnBAQPDU+ln0Y3mecMCpvN7TDXQ5eX5wwEjPmJLpdCt5XnBA9te2OWl0pDwf
OGDM1Uovk+gceR5og0t3HiXF04vl/t8GUZV2nY+mC+R+3wZldaO8I+hncn9v
g3ePQ3eG0hXkft4GlSabNw9uqdy/2yAl+fr8ADpa7tdt8CR6TiVf+rPcn1tj
Wd+IYZ60u9yPW2N2frlPbvQYuf+2Blof1LnQF+R+2xqNTmVfd6Lryv3VHvsn
1g52oHVyP7XH1D442Kqlcv+0x7yx6a3t6K9yv7THnYKSK6xpb7k/tkJy02Xm
TelJcj9shRpbXMY1NJ3vcv9rhfKacz/q0fXlftcK7TukdrGgM+T+1hKrPF/f
M6e3y/2sJYKy+0RUo3/L/aslWuHH0cqm81PuVy0R6jaofQXT+S/3pxbYdP/7
ujL0DbkftUDHTb3qlaSbyv2nBayXv5jyr8UXj65yv2kB7/zEYr/pPXJ/scPi
kqd6faf/yf3EDi49HZ8W0R3l/mGHGmUXxH1sYcoLMd0vbGF//Pepty1M+Rmm
+4Mtpm1M6vCKbi73A/58/+4tz+gecv23hfnHyo0f0/vlem8D13DNzPstTP33
puu7DVZdzyt9p4WpH910PbdB1Ljf/W7Q8+T6bYPANL9XV+iHcr1ujsFp45P/
a2FaH910fW6OX+NOnj9H95PrcXMU3CjlfZrOl+tvc5yMcN9RSJcLM11vrVH3
c0+ro3SkXF+tsf3girmgF8n11Bq5Wy6UP0g/l+unNfad/D5oL+0g10srtKjY
4N1OeqBcH63wvK+neht9TK6HVnhTLuXSZtos03T9awb3Yzl+G+g4ud41w421
k3evoZfJ9a0ZsGOJzUr6lVzPmuHD800LltJOcv1qiq5+eyotoofJ9aopVKcO
DZ1Hn5LrU1NE5BR8mEVXl+tRU+ztBO0MOlmuP03QpeP+K1PoNXK9aYIe3bcF
TKQ/yvWlCY4dWrV3LO0i15MmMDjNshtFj5TrR2MkXB62aBh9Vq4XjbFgQYbZ
YLqWXB8ao/XETsP702q5HjRG7RUtPvWhN8j53whhj8rqetJFcr43wu3gB1e7
0h5yfjfCvts7A7PoaudM53NDvJk1Zp+BXiXnb0P0yYlskd7CNF9tOl8b8Ppe
b3EafVLOzwYYvv2BWTKdIudjfZSsvGJ4vOn7yflXHw+mpX2KpkfL+WaJ6m51
dBF0neKm88sSi80uXA2lN8n5VA/DKowIDKa95fyphz32rfcF0FflfKmLToNu
2vnSRjk/6qLdh2GLPOkfcj7UQb8pTcw60JPl+K8Di6jDw1zoxnK8W8DcO/mj
E71Tjm8L6OM+ax3oIDmea6PWnLFXWtF35fitjaZ/agbYmc4nOV5rYdLk5Xus
TefPSdPxWQsRfra2TU3nixyPNdGn2eYFDemWcvyZ43PLVpUs6YNyvJnjUsr6
IRZ0uBxfNWC2p/F7c/qpHE81sNlljroa3V+On+pY/6jMpcp05d+m46U6yu3q
7VvBdPzK8VENp7be2VnGdLzK8VANry55W5c07R/Z/1VhbLBy7j87Ho+yv6ui
c26x8r/ph7J/q2CefeLA73QxmPanGTw+b31dRNuoTfuvMkIfFE/5SEfI/qqE
w1/Czr+lB8j+qYh5jgs8X9HLZH9UwLX5D/Ke0Sdl+5fHQJumTR7TH2R7l8OI
+7z+0HWam7ZvWXzIX1TqDu0t27MMCgsv971Ba2T7lUK5b2WeX6EnyPYqibyw
9vH/0XmyfUog/6Lm1Dn6hmyP4mg/cILqtOn7vDN9/2KoG7J5YyEd3sD0ff/l
6wLOWR6ll8v3+5NvmflyCkyfT77Pr3yvncX/HaC9npo+/4/8c81r9dhLT5fP
+y3/5FHrhzvpi/L5ivIdxztGbqMbbzJ9nk/5Zfp2OLqZ7iF//0N+4ERvpw30
cI3p773N/3nCZ/Ua079/Zvr9L/Nr23vVWkkfzjL9vif5qw66jltKq9+b/v8H
+St6t/6+kC7+wvTvb+ZXiWqcOc+0vT6afn4x/0NilVuzTN/3i8kF+R0m/Qie
YbL81/Lg38f3D0yhRzyTn3u01R9pOdH081fy/3vcMFu+eCxd8EB+v8eHB4PM
Rpn8Wv6+x5DbkcOG0Y0y5PN5DP5r9WGQ6fs8ks/v8bHjF3V/+kGKfD+P24cK
/utjOh7eyPf3UCWO9+lpOn42yPbxMGsYsqMrXVWeT4s8kitVapZl+ntWsn09
GjY5OctA93ws298jTj28dLrp7y+X/eNR8YRTThr9X6rsPw/n2KfPkkyfx1L2
r8fNyrlx8bSFHP/FPIveqk5Gm/ZvJzk+PCd/ve8SYTo+5fOU8FzafMT6UNPx
UF6OL89WIxrUDTb9Pvl8pTwdSu6dGEDHy/2ojOeuzaG/fGgHuT6U9dw7/H62
J13+/8e3p+PgrnfcTNtDPn95T/tl30Jc6L0+cn54rn0z5JATPUO+T0XPJZpi
9g50pjxvVPKs/m/oklam40+un5U9yx3/YWZn+j5yvTXzHLqjxzBr+od83yqe
PU4/ft+EfuEu57fns/JR6oZ09P/Pf89HPfMv1jNtX8kDqeYZX8La28J0fv//
+uEZc2DCNnN6vtyPqnteXvSycTW63P+vP56X1/jnVjbtj/9fnzzjby4uUcH0
/WR71fDUOn3qVYYO+v/1zfPjHp/HJUzfV7afuWdJ3bSof7bcf/+/Pnoudrlx
9Bc9Q7ZnLc8j7eo7fae/58j11VOXlLqqiM78//XXc8b6/9F03/FU9m8cwFWU
UikzI4VCSNrbh1LRoh4NGpzjOM45IirSlkpDKUkDSZqkvXdpa5C2RBpaSnuP
57q/18uf79fv91Scm3Pu+/u5Ple60Qfy/Tvi9zMGtrwz/y3ZnX9/Y9HpBl9e
kfeI+9VmGLKwV0gluRn//kf6VM2dJ+TF/P6AaStW9SsnfxCvhzlKbh47+JAs
4/cXXOn5qPV98hXx+lig341fqbfJ3fj9CQMWm9S9Sd4uXi9L3JvQNuY6uQm/
v+FbrHvlFfJcfv/Dlp0+Iy+SXzUW748obTDmYj7Zn98/sWmFvMtp8tlw8f6K
327KrcfJrvz+iwpjpckR8jrxebsF/IzlCQfI2vz+jYDeAV/3kI/w+zveLxuq
3EmO4vd/mNTD3RyyA38+QNF2p/5byaXierCGxWSjQ9nkVfz5At9DfrTeQPbi
zx9Qzi1JTSfX4s8nCLtwWGct+SB/foFOh+ToVeQJ/PkGHS4pn6+QXm/+/IP3
87uNWCa9fiIPaQvvsLoXFkuvP39+QpfpRZ0SyP348xWO7129OZ78W1xftrjb
1N9ojvT68uczLE4znT9Duj748xtuDSr+NLWNtN9YfL7D4daLg6eQb4vrrxW6
OPS6FUlexJ8PMfC/N33CpeuHPz/ix9bV+9Tkz9Xi8yX62brZKMk7+fMnnC9X
JMvJCv58irzUubUCpeuLP7+iILF51BhykXieYIf43IOPR5EX8OdfPPzg7etH
7s2fj3FdVnLaV7r+xPVsj6CfynZDpOuJP19j1fHqTG/yWP78DfmWKY37k435
8zluHf4yqw/5mrjeHfDs46S3buQ4/nyP5JFVY3tK1yt//sezJ7JrXclVx8X9
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
PfIbc9EvBv3Y4l7a5CfcP4bo90s2a5EfcD8Z5q1Ewz/WX9xucn8Zeo1/P/kH
+SL3m2H9f+sffiGf5P4z5E7q3/cj+QD3oyHo+Jvcd+Qd3J+Gs22XGbyxlvqa
Rb8aiq84Tn9BXsv9a0hafr7iKXk597Ph8+wA78fkhdzfBr21VXtKybO43w1F
JdObPSBP5v439B2gE3eHrOF+OIQ8Snxxkyzj/jh0Wt/Y5wbZn/vlcCRh2aEC
8lDun8PbdbpWl8j9uJ8ON+7OWXCO3Iv76xDc+1PVaXJH7rdD7nW53wmyE/ff
YfPCG8ePkFtyPx6Gh3WxPUg25f48HI5NW7LXWurrFv16uLr754edZB3u38Oa
JqP8c62lvm/Rz4dm6bvPbCV/FM/7/DDER9thE/lVI9Hvh15tRyzfQK7g/j88
7pT9NZ18l/sB0Vv5Ztxa8nXuD4TvWdcLq8jnuV8QzftPck4mH+f+QWz6vDtl
GXk/9xPi6bVXPxeTt3N/IR7daCFPIG/gfkMk/xx2JZ68mvsPoeUb5zqHvIz7
EeFUmLtmBnkB9yfCIPbm36nk6dyviMMDP4dMIUdx/yLMBxhej7SW+t5FPyO6
hbt0CicHcn8jTE72S1dbS33xot8RB7r411aSB3P/I5qUqNRycl/uh4TztilF
48k9uT8SDTJndh1DduV+SeScisscRbbn/knUrz9Xx49sxf2UcJw1a4Iv2Zj7
K9HYIubWYHIj7rfE/ieaHt7k2tx/CevbYzb2I/8YKPox4VPtpduH/F48zxyB
vp06THQjv+B+TfzONr3bg1zO/ZuY3fNHr67k29zPiXN/7m7qSL7K/Z0oerWn
gSv5HPd7YuO/hChn8lHu/0Qv+N93IO/mflBkbbdHa/JW7g/F9Z4ft1iT13O/
KC58P9LQipzK/aNIKJ8x2Zy8hPtJ0eR9jxIT8lzuL4XS8au7ITmW+02xKGnn
Nn3yRO4/xRRLWeOG5FDuR4XL7SbRuuSx3J+KQwdPPNQm/8f9qmhwVtGnFnkg
96+i7VfdnD8tv7h5cD8rWozI0f/ZUtoHIfpbUfaoX8xXsgv3u2LSirLSj+TW
3P+K4gmT+1aTm3M/LOpO1s59Qzbk/ljU35Tc5CW5PvfLovS3+dRnZC3un8Wi
uKxHj8nfeot+WtRxsfF8RK4Wz2tHwlcnK/cB+Rn322JyXfOmd8kPuf8WmvYr
phaTi7kfF50TapfdIF/h/lzc047yvEo+y/269Hn7Ye4l8iHu30XmnD5Nz5N3
cj8vzs3YMvVMS2kfiOjvxZmN2mUnyOnc74u1HwI9j7aU9omI/l8MCDuce5C8
iPuBcbWxXtN95DncHwyX0oCpu8hTuV8YmltbH+WSJ3D/MOZ+ftd3GzmY+4kR
g465m8gB3F+MPgcmN8kiD+N+Y1QN3xOTQfbm/mNMsXhVupbsxv3IKGlk1TeV
3Jn7k2Hl6JOTTHbmfmW4R87UTyLbcv8yPB5viV5CtuB+ZrScfvVhArkJ9zfj
ee+3HvPI9bjfGQlOetvntJT2yYj+Z9Tt27rxTPIXV9EPjYj5PafEkt+I59Gj
sK96SMkU8hPul0bZ/LHuUeQH3D+Nqr6hW8PJN7mfGqXOEQ015IvcX419iJqk
JJ/kfmtEzIy8Lycf4P5rNHoa5hZI3sH92EiZHLx5DHkT92ejlsuoBqPJa7lf
G/8ZDIj0Iy/n/m0sb9nxri85gfu5sXe0Ra8h5Fnc341Tx/5t9CZHc783DvV/
XK8/WcP930j+fSK8D1nG/eAYV5p6y62ltI9I9IejaaWme0+yD/eLY59Zrw1d
yf24fxy9ptbX6UTuxf3kOPC3WONK7sj95TDfs7bImezE/eYISwzo0obckvvP
sXNFs4zWZFPuR0fp6eJaNuTG3J+OH80Wh1qRdbhfHToZPa+bk/+I5+ujUcf7
dQdT8kdb0c+Ojy1S1xqSX4nn7aNxvWWvv/otpX1Rot8dGweVBzck3+P+d8iz
Zl/RJRdyPzzMW5i30yGf5/54nLu0d1Ut8nHul4csrd/PPy3o/Y775/Fx9Z3A
n+Qc7qfH1JOyC1/JG7i/Hp8avXb8RF7N/fZQLopYUU1exv33uO5c/eUNeQH3
46Ptr7AxL8nTuT8f8Z+enXlGjuJ+fdwyDrCrIKu4fx+W8quJj8iB3M+Psfe7
fXhAHsX9/VgVmz3yLnkw9/ujoI/uiWJyX+7/x48uGuvCFtK+MbEfAK1HXE64
Sm7P+wPQf71N1SWyPe8XwAT9acPOk614/wCW7bh66AzZmPcTICfK3PIkuRHv
L8A5Wcjco+Q6vN8Aj2bkVR4k/xDnB/74drp60D7yexOxHwF6Lu327iK/EOcJ
/rC/qDHZQS7n/QpwW5Q9Yxv5Nu9fQMCUu483ka/yfgZMWVK3fxY5n/c3YEVB
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
eb8u2pinOziT43j/LnLqOSc6kKfyfl4sanH0bStyBO/vxRVZH19rcgjv94Xm
xqV9zcljeP8vokK8jc3Jw3k/MO7aXZpqQvbm/cHIMvAoMSC7835hXHc43Eu/
eU1eOhDj1W026JHb8n5i+N1eU0uX3Ir3F2OPurZCm2zB+40R2UZ9UYtswPuP
sdbwmsMfS3q/4/3IsHNwSvxB/ivOkwPRPDTh7RfyVx2xXxmxRY98PlrW5LED
4aZov+8d+SnvZ8YEm7lGb8glvL8Z2nrXY16Qb/J+Z+hYGT94Sr7M+58RM8a/
52NyOe+HxuBz69aXkgN4fzSWj7j7776ltO9B7JdGXwN9+R3Lmrx3EAJ/9D1/
k3yN91PjZYNouxtkL95fjYr+2YsKyOd4vzW8dl59fZHszvuvYeX2YfA58jHe
jw35D4Pdp8ldeH82TMpdm54g7+X92uhVPXDyEcuaPHkQbreR3TlA3s77ufEw
aXLXvWRb3t+NkVbx63aSM3m/NzzvL/2VQzbn/d/YdCJl3FZyKu8HR+zV1aez
yU14fzjytVdbbyAv5f3iiFMlz0u3rMmrB+HA10XP15Dn8X5yBO2eOWCV9PqJ
8/IgzFw5IWcFeTrvN4dR1mi9ZeQv4vw8CK3vu4cvJkfyfnTs6NG6cIH0+vL+
dORe0mkfTw7l/epoPefJytmWNXn4IJjKjn+eTh7P+9kxP3zFyKnS68/72xGx
WXZkMnkE73dHsU4780jLmvx8EPYlf58xgTyI98OjsdepRyryJd4fjxcOcQgh
9+H98kAnt40y8inePw8Dzffa48ndeT891AW7FAHkA7y/Hr1GyC6OtJT2qYj9
9khu0MThP8uafH4Qgl8fW+xDtts9dmJ6ThCOfJa9GUTOFuf5dP210RniRW7e
QFqQG4Tnizbv8iSnifN9en0M3Jt4kI1C/ijlx4Jgc+leVG/ycnHeH4RaW8Nu
dSfrnbn+5EJ+EEJ2/+rUxbIm/x+E4U8Xru5Arm2ROb7N1SCc82jy3YU8S+QB
gnC4YJW/E/l7dETJ0ltB6Djb+Li9Zc28QBC6jl1p2YpcXeQ28v1D+vco9Ga3
JGtEXiAIt9bElVuSK530i/97FoTILx/czSxr5guCsHpWYLaxpbT/pnzI4aog
eLheqWNAHi3yBEGY1ahdSGPy7YrdV8y/BMHNOPliA7KPyBcEIWlAtX09ckEv
6YYpCKGbvRfXIQ8QeQMZrjllvf5nQb+f1/ierdCR4dyjj4N+W9TML8jQ55jH
zu/kIx9b9u7XWIZhZ5c2/kLuJPIIMnz8eGviB/KuIR+ObDeRwdzH9OZbi5p5
Bxnu3xnZ4TV5y/aznRq2kMFh4cqUSrK1yCvIoB1c8PkJOaPOyj0T7WWYrP47
opzcTOQXZIhKczn80ELaPyR3vtVOhrpfA5rdJzcWeQYZnGbOm3abnHi0w/Yu
3WSodN5eUmRRM08hQ2fdKz2vk+OM6rRKc5fBtHFlxhXyH5F3kCHJ7d+fC+Sp
E6UHRDKkrzMKzCd/EvkH+vpb2J05RY4o2GQhGybDtMKO1sfJr0QeQobBub3j
D1tI+5amrDnvL8Oh3X2f7reomdeQ4Vh5P8895LFxnoYOchn8enhuySPfF3kJ
GRaedqubQx7+0Gh5okaGURM7h24hF4r8hAynvB0ubyR7d3neoHoSvT5DTdtk
ks+LPIUMitm1l6RZSPuiDiYMnyHDpvuvXq+2qJkHkWH6uOuDUiyk/VILah+a
J8OHhjvzlpP3ibyFDPVeLGq0lOwyYORss6UyHH8TFLGInCvyFzI0tuhcOJ/c
Klt6IC7Dvyk6rnPJWSKPIcOKHzdXzCJb/Pka/ThDhrPb0z5Ms6iZN5FhbXzg
8Biy4ehLH/pukaHBwpb7J5GXibyGDK0PPTKcSNbdvyZ8204ZyvTXTAkjLxD5
DRl6rxp8J5T8r5HqVYNDMrj3/dtZQZ4p8hz0elvmrQ4if1V1C4k4JUMn65Hf
xpIniXwH/fm+v0f5W0j7vXQrbl6kry8n88gIskrkPWT41ba32XALaR/Yg7Gd
C2WoKL03bahFzfyLDBGHIkoGkkum5dxfe0+G7GO1eg4gjxJ5EBnmvVqR3pd8
87Z0AChDw76Wv2FRMy8jg9ulTWN7WUj7yQYWBb6kn48Y+5PdyH1FXoT+PJ9t
zTtbSPvMzAefey/Dnf9sZ7e3qJmvkWF/fHpZW/Kh568v2f2gP69UH47kDiJP
IsOMoLgNduQ89+N9l9SSI0j/7T8bchuRL5Hj+8sRQS3Im9ITT7+tLwfeHjtj
QbYSeRM5OlhaWjezkPaxjek5zECOu9HT5hpZ1MzvyOHys7iiCXmF9HjIXI72
OQ59GpEbijyKHK/ip2fXJy/M+92hma0cIxderl2XrC3mfeSIOmQQXJs8u540
ICNHnyb+5/6a0/2CyKvIcWFVuu0vc2mf3Hq6YuT417dk3jfzmvkgOaqaGz/7
RA4/Gb61Ty85km0Ge74nvxB5Fvr7h83ZXEWWN3Oz2eopx88du7RfmdfME8lx
yrVE8ZzsP7lxZv0hcng8rnWhgnxX5F3kiD3WunUZ2fdGmVn4CDlUp/stKCFf
E/kXOZpUy57fNZf25+1OLRonR7T39H63yPkiDyNH6o2kLYVkt/lzmnZSyhEx
e4PONfOaeSU5tP3zQi6TO5X7LFsTIYff+IMXzpP3iryMHMFJx1qfJTv1kH6h
0vf71fEFJ81r5pvkOBBx9PlRc2n/3/v54+fI8cdqf79D5PUiTyNHnZ/bt+wz
l/YFntHKXyjH5X9pOrvNa+ah5PBxXRyyg9xkUPLM1ivkWJU4+cI28lKRt5Fj
Q9OA1pvJdbfKvi9aK4cyv9eCLPOa+Sk5Pqy3eJ5B/qPVYUpVlhzum796riPH
ijyOHP/dub451Vzad1j7vU+OHA7tN2qvJE8U+Rw58g9HKpLIrw8Vh+3fK4e1
utf5JWSlyOvI0b+fdquF5Iqmm16YHJOj3eDL8+aRx4v8jhzlsxY9nUO+P2Fy
8PR8OQJKPPvOJPuJPI8cabI/2bHm0r7GvuWPCuTYbLivdrR5zTwXvV7v5fIo
8iUbozEet+Ro9F0/P5zsIfI+ckxxPGqtIZ+Y9ezu5of03y8cP1dpXjP/JUem
vlaFnLz//gG6o6TXK3+9eyDZReSB5Pi8oWvWGHJuxwU3wqro9d1+/d8ocmuR
D5Ij/mFgoJ+5tJ9yxMDCz3LM7P7ulC/ZUuSF5OibH2s1hLz2VeuLHf7IURr9
b5Y32Ujkh4LR1y/+UT9ykudXj9U6wZg2rlbvPmQ9kScKRnzyzAw38oINF0/+
aBSMMe8//ephXjOPFgzt6aFjuppL+zVXdx9nEow4l3vHOpK/ibxRMG416mvu
Sp4yIvTgGatgfDbdMc3ZvGZ+LRhvB+s/cCBr9nRt38o+GIfzJnZrTa4UeaRg
jOx6bY01OUhPd+fCdsG4UdXqW3Pzmnm3YJhdnzbSnDxKed/hTddguN0vOGhC
LhZ5pWB0a9zM2NBc2ie6ffNQ92DUmyibok++IvJLwdj/c+stPbKn5bSW+7yC
0X3vyw665LMizxSM5JV2K7XJPad6ZxgPC8bVzKAPWuQjIt8UjEd3Vvv+MaPf
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
W3LD7JkeevVVKN5zcdMr8iKR71bhZOzOv8/J2tJxSlMVWk5Y4f+EPEfkvVWo
kzjxQBn5lxRXNVMh+M5A/YfkaJH/VsFzkI3mHvnDvrcHOtuokFX15fwtcrjI
g6sw9+iFFkXkl41Oua5zVOHx3uTp18gKkQ9X4fQd/zuXyWWqpLzfHejvb23l
eoEcIPLiKuhklS05ayzNF413COqpQlj/9Ocnyb4iP67CiGZ+7seMpXmjdpvP
9VXhnHH99EPGUr+wlCdX4aDbsS/7yOem/WthP1gF55RQ391kiHy5Cg6GTXfs
IB+9XZi+xE+FvFOHdLaTO4u8uQr7U0cHbSbvbZdl+m6sCv3Wfj2WRXYW+XMV
xl1cYbzeWJpXikwZFqIC/S2R68g2Io+ugv2WowWp5Mzn7voHw1W4P8Kr9Uqy
ucinq2Da4dacJPIq96aJzWJUKOseULKE3FTk1VXoEP6o00JyYnpF3ZmzVTC+
Nnb5PHI9sS9Jhdkj77+aQ573dW98eYIK0Q19PWeS/4o8uwq/3p7LjDWW5p/i
//ZZrkKTXx1/TCF/Efl2FfZ2zPovihyZN3z61jUqPFujuyucXCXy7ipssw/X
1ZCV9Wy/1s9S4duT63Il+YnIv6tQesXxpJw8Xv4pKny7CsNK55kGku+LPLwK
o8wfRI0hjzh57m3RHhWq5zleG0UuFPl4FazMYu38yIOarVJ3OkrXx4Ozcb7k
SyIvT1//xXoPB5P7TFY8X3OW/v9l3p29yadEfl6FDOtFy/uRu9+QAjT0eq3I
f+VBPiDy9CqMdfrR181Ymr/SeTS+WIXsD06ZPci5Il+vwsynAd+7GEvzWHdG
55eo8EErYXhHcrbI26vw23tnXjty8/Itt1s/VWHrqaK6zuR1In9P36/x74Mc
yIY9YnwXv1HhhGPD463Iy0UeX4UuNq2Mrcl6qf2vVX1SYUC/bhObkxNEPl+F
ryleV8yMpXkuEy/f3yq4Nx5ha0KeKfL6ajgfGDfLgPx94Au6o1bjwAL5vcbk
KSK/r8a9+OD2euR39O5m2kiNrB1BifXIYSLPr0YdrYDndciV0u2bsRo6cT7Q
IstEvl+NXU4e634bfXF7NGZ017Lmanyt3e7Td/IokfdX47GO2ZAvRtJ8mMN+
Dzs1JnT6t/UD2Ufk/9VYn1Sh9Y5c0PSHyxYXNSKNzgS8JvcX8wBqvLyQdqCS
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
/lPH/QrrI8tJoQjZ8AfWFThes/aXk+akzNxfcAHrJcvJx7JOsxEOi7WSLFsl
J6Fzv3n18EzWT5bTgoMzD9bBGoUGdvvXYfv1OOW18G3WU5ZT4PVI0w9w8O8/
DbeD5HTmQMqat/Ak1leGYwoTX8MtQ94n/+TLiVfy4ccLOIP1luXUecLvCaWw
yLMgaIhETqsLtYKL4dGsvyynqH1Gdx/BX0PSrRYp5BQRYtLtofr/esxy8jgz
2OMevP5yDPagnGq/Wxy+DQ9lfWY5zeGbv/kP/vBaFWyUU7CxsfkNOI71muW0
5bdBwDXYXzto1ddQObl36nw5HTZm/WY5NU1p/HkZfj3ec5DJbjmtP/dmUiJ8
jPWc5ZQ+JW9LArxw9eS37ntxPGicvxcP92J9ZznltITqnIafqt4+HoXjecDy
+SfU/9d7lpMhb8KRo/Bc1Y+X0TheGrpVHIJ1WP9ZTndOvTKPgh98/dm35pic
KoPPB+yFd7AeNM6nCN7l3ar1wtW+90lcDx7aNe2A1VkfWk6Tx/2ctA2+Oevu
odlxcsp8krIlGN7MetFy0jsWcG8DPFmqCtTKiaIG6shV68X60XJyzSryEMPX
4g71SLokpzF6mw7zYQnrScup+cCQN0GwbfGmoorL+PrOhYMC4HrWl5ZTfyvu
utVw8r/VEfoZctpor5O8HA5kvWk5Xd1wrnEpPGzEPFfHTDk9+zx54mK4lvWn
8fp2FW1eCJ/1Gaclzsb+9vLLm6/+vx61nEQen7TcYNOdA++fvSWnvhv5bq5w
BetTy+lUaeNBZ9V6ZXQJfZ4nJy0/Ufl09f/1qnH896o3Ibh31TdHrQdy2te6
ZvVk+BnrV8vpvP6rixPg/XqqBcH55unaMAZ2Zz1rOUXevzZ2tOr8mnLzv6Bi
OS0LMN1gDT9kfWs59ZkUestSdX6tP78xtlRO1ybWdB4CO7PetZymrZvuOkh1
fh3ZN+nJSzlduXs8cqDq/GL9azn1mv+jtB+85a4MP1Lj/9ed0b+3+v962HI6
2Lzfvyf858eyq3ZVcsrSf31WD85ifWw5PVg0qK4bLDWdJV5dAxetGtUVtmO9
bBwPkjhJJ/gHfjo6/FlO0S4V1zvUfjlcZv1sOa2a16ujDQ7a0Kch/5uczEJm
zfwND2c9bXy/q5LtboI/JahuKLEeorii72r/62vjemNXYPgNXlX2MXBEM75f
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
wSmsDxFMF5L/quXAGzq+2mZ4LZiMg2pcsmET1osIJiO/ov1ZcO0Y4QQmmJIO
pJdkwgmsH4GfV3Ow3xXY1/O/DjvvBJPF+oCFqXBbTwLjNcThaDL8ftf+7Ov3
g6m4q96b/+CTrC+B/Vvn28Bz8JJrYq4+P5hCl930PA1rs95EMJ15uu1ULPyy
arnloIJgmh3kVHEMjmb9iWCS2PYcehh26+vQ4vI0mMbZP14ZBauzHgXWK8m2
85Fw4QyzzK3P8XreWNbuEsaL9SmC6dC6BuMdsMOGAVvSXmM+joz1C4NVWK8C
+/sA+4sKYbyOdxj/qTyYyi2+Ncjgtn5FMPnsiBorhmc8FD6Awd/vMm5TEKz0
QehZYDzTC9ID4Bu/n16yqw4mx/2+v/xhCetbBFPP2JZJa2Fzwxv+ks/B5Pk6
QuwLt/Uu8Hpnad5YAae5nRmZ1BBMlz+c/OsJB7D+RTBlJg2d6iGMl2JXbdkP
rN/nz/IL4Xr2AW8wbS02uDMXvpC86XyvZvy8kcc7uArjxfoYON6lq890goe+
8Vg5428whfuHhtvBH1kvQ0RdFnzPnQmfUpk5ZJOyiAav91CZAS9l/QwRFV25
Y0/wwImjPsR3EtEAk6G7LODXrKchor8lIY8nwIe8hS+QRLTlQpmaGTyf9TVE
tC9lvIsprLH/7xIVNRFNrdq+z1gYL9bbENEOxxfFw+A9wu1C6vj77w00hsBO
rL8hopb4tfP0hPESPk7sJ6JBRy9G68C5rMchog9ZX59rwuHC49y1RTS990it
vrAV+4JaRNOivBf3htsJj3vTFdF7myPHVOFbrNchIoMR+W9UYNnm8D7tDbA9
Jv8a2FkYL9bvEFGEVM+zPfw7zr/IbJiILtfPPPmvpdHyCut5iIjf4/v+DxxY
OH+vj7GIGpaG6f+C2/oeIurgGbuiEf7KLoARUdae9DNf4bbeh4gGfsmtrINX
Gw/r/sBMRENlpYbV8HDW/xDR08nvfT/Cnxb2fPBnooiMjarPv4PjWA9ERCNs
62rewF7hv8JHTsF4Haw1egkPYn0QEQ3r82ntM/j15XLrpdNEZHj7bWIRfJT1
QkRUEFNU/xhe+D63faQ1/v2EbJN8uC/rh+DnVyatvw8Xq126nW0roucu0Zfu
wPtYT0REEz+Lv92EnaYcljc6isjmqvvY63B31hcRkVLqpMCrcP5qfspQVxGt
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
9oEQq5c5eP0fh8ur4B6snyynx0c10ivg/NtrlbvnYzy2ttaVw9tYTxl//tg7
/TfwzC9ut6Y8wfb4dHvRC7gd6yvLyWH58cgSOGvAFJl/sZye9wzKLYQlrLeM
+fXF/t8j2NxuyOSTpViPlHTGP4CbWH9ZTqun16zNgS8H9WgueiWnmrTUuGw4
gPWY5VSxKPhlFjz6zI8rHcqxvo626HUNrmd9ZjktnvTb5gp8oUi4oF9OJRtT
ZanwatZrluN8dFVaMmyolDPWtwqvVzSg7j/4I+s3Y/+ZlT/4HBw3MqnhcJ2c
7ttsXnga9mQ9Zxw/tujsjYUHLj6YnP9VTm6vbuUcg1+zvjPmo79n6yH48DbZ
utZGOX01axkbBbf1nuXU2fjA6khYI93HyOS3nM65DTu5Cy5m/Wes30lXS7fD
ez84VXu2yklsbq0aBjuxHrScUpoeWSng0G1H5+QpcbSh0lUsg9v60Bxd7/T0
kgiecWLPmPfKHO1f4FK1GW7rRXP049WDgQHCeKVv7fWnA0cVe6fO9Rd+P9aP
5sgzKGXnGvjmw6Cv6p05WrVnUPZKuK0nzdHf5zt+LRfG88OaJ8ZdORri1jDK
E27rS3P0WsnN210Y3+alSdbd8P/LUo4uELYH601z1Frfo8gN/t1TuGCYI19T
7y4uwvZh/WmOvOOuWjrCaYaz1gapcfTNpssmW2F7sR41R9oD3f6zFuaDkMvr
xdHTIcfeTYOLWJ+aI4Ol5f0shfkhPE5fnSOVB4OczIXtyXrVHIX5eISMF+aL
8Lg9DY6Omh3MHAO39as5sjHL/zpKmD/C7fj9OIrwbhlqBHdjPWuOVucO9zAU
5pNwub4mR5Xuc/brw+zyPW2O/gwOztOFhwlf5w/g6D+to/+04bbeNUctMzLG
9YfZ2/2BHH04XrymD9zWv+ZorVHNyZ7C/Hsj3CDB0YHqltLucFsPm6OFL7qp
doWXNb6ePn8wR7eb+1p1FMaL9bE5ynccKGonzM9uhXrrDTjaWKR3sbWh8f+9
bMyPbXqVv+HXeveUtg/lKGG9zoCfsAXrZ3NkuUPD9Rt8dGJG2clhHAWUdN1W
D/9mPW2OnFybb9TA82cnZmWO4OiR0qfvlXBbX5ujX+VPhn+ANXxOxhQbc5T9
7fLSMjiQ9bY5Mh9/MOoVXCyJktSN4mjRfwH5pfAY1t/mSNfVsd1TeO/+7Ys7
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
afNrfATSz3EInwb/Dy66dQ0=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{1043.3333333333342`, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.025, 0.009999999999999998}, {0, 0.000026574798696790586`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8116386823031907`*^9, 3.811638688118484*^9}, {
   3.811638761301439*^9, 3.8116389141159487`*^9}, {3.8116389871975*^9, 
   3.811639036546217*^9}, {3.8121489139681377`*^9, 3.812148940359681*^9}, {
   3.8121491083510885`*^9, 3.812149112027954*^9}, 3.8121491937146235`*^9, 
   3.8121492306587863`*^9, {3.8121492784807987`*^9, 3.812149322662549*^9}, {
   3.8121498998825035`*^9, 3.81214991383871*^9}, 3.812149949631363*^9, 
   3.812149989207431*^9, 3.812150049760746*^9, 3.812150161630205*^9, 
   3.812150242907862*^9, 3.8121502794780493`*^9, {3.8121506940063887`*^9, 
   3.8121507840106144`*^9}, {3.8121508162028284`*^9, 3.812150836755519*^9}, 
   3.8121510618793964`*^9, 3.8121511261989164`*^9, 3.8121511836499968`*^9, 
   3.8121575426072235`*^9, {3.8121592772406807`*^9, 3.812159289098442*^9}, {
   3.8121593326449594`*^9, 3.8121593719176006`*^9}, {3.8121595121058197`*^9, 
   3.812159603634881*^9}, 3.812159702742821*^9, {3.812159772511136*^9, 
   3.8121598082505693`*^9}},
 CellLabel->"Out[1742]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
/4dTxAneuhS+neL/cwrZPuGDuxOjaK//AWRECVY=\
\>", "ImageResolution" -> \
72.],ExpressionUUID->"ebd56770-2b69-49ed-97d2-be177c6b8c62"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
23edeZ2ykEzMfFvWKsHRO4vieGG12U33ZeEO9RmruPlkksVtskUc3qSyfT0r
HF227cU6+Lz8fz/YRzInRs1Www0bnucv/E0mnU9P97DBIvSf+4LnGco9mGBP
+uO/s8mko6lpfr4X8zp9OzBsJlFwZRLmot8enEkmihO2/L9gR/q4ABvt/HC/
D87HNPN5OpkEMvCodMOM/5LkzOHYbUKkFTb/+3mifiqZ2H8bM26E7/0RLN8N
l83Ftr2GJ37Zh1VNJpNzwbPOz+Fdg2nG22Dnk/K/S+Hr376vefInmdiUy10o
gH90bujcBMt4/mHJhtU+u93PmEgmqSERSffg8A857mJw/Mh3sRS4lf5rKL+T
SVMB+6Pr8IZXKour4c3vFtWuwn7Pz9ZeHU8mQdvKnl+GX5eVXlsJR/zRMb4A
CzydtwwdSyaScwktZ2G3PC3RudFkIm742NETfvbwYr8PbNKVOOQCs92vyf31
C+9XqOfjCB9OZfY7AfvVVSxYwY+oRtpfR5IJ9zrGCDN4IfEasy0scI+LyxDe
d62psXk4mRx2GqTowrcj12DJJJMHZjHrt8O/Lh5yqvuZTN6cns1SgbXO02T1
4PgyReVNcOy5zvHyoWTybrPyM0m4x0vsmRqs/2pBRxhWOnX0Yt5gMmkITaxb
C4cezzDcCMsfnjDlgD84DvKkDyQTZVPhzytg8cObvgjDWXbcDks9iK+DnveS
+5OJXcj7H9Pwi/0F6GCSybqiQ6fG4DWGkyrRfcnk4UzW7wHYeZf6PBPcZlDr
1wsX7Qx8eeFHMvFOfbTYBq/YVhkz8z2Z7Jy3DfsAW6owHDwDMx9uZamHH8jv
Eh7+lkxSSgRjX8DTGyJ+OMPPuTeuKYf3iL/J6f6aTHSOMlILYarQqrPW8Les
dOGc/5F03/FcfX8cwENGZslICWVEoSWpZDSE7EgiISEhqygzISFFn/uphJZR
SlMo45QZMkNGRoMSoW9WCr/X9fvz+SgfPvee8X7fe877wN+Fjbc39uD3fRK4
nQpvWZjAbgDncunIJsMXuJtryrqZ5PQynfsU3D5/CVMTPiuyUCkOpquHvexi
Eub43SeRcMCfZLmNcGgei0oI/O53z9DDTiZhs1LI9YPFh6Rz5eCBpqVbPWH3
704htz6iv8m3FLjAhZ/v71kKT5laa9rD/J2DAowOJskyyHxjBR/+sLaVD+4U
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
IAyXvxNsH4OjqeoVbOgf7CdtBuABDRVOPniOYTbYDW9XudR8lRXX5+KYSwsc
uo3awIv5okBuph7ulGY54bsI8ecu4cByeJPkns1TLBi/Vz5dUgBfWBc24cJC
PT/8FpUBvxR+WfKNGffTo2lVMiy4mif4JDwwZRl3Fz67zNjgAxPi77SI9TS4
hOvmSks4PNA+PRReyt7R/fYfnTRc/C7jB1szLRwQIJtpa/Lc4YzZI+dq/tKJ
Ucl35bPwv8kExZ1w84T982Ow0djn+cJ5OrFUiNSyhBOGJGrl4SDPQzVG8I8+
++tP/tDJcG7T3j2w5ofH5v/B2waGXqrB9M7Rtffn6OQXe6aRPPypWe6rAPyG
V/CtJCxPPY2dpZOjs9IHReGgugIvbli9fKiVH26pmN0ZOkMni6wMzZfCEqU7
ljDDB6otO1hg9/yANz7TdFL8i8ty5j7mr6yqmMkpOnk3eKpzDOZ/zH7MCd4X
7WA5AJ+iygn/ppP42RWd3fBCeSHYeekpixZ4MZVu+BedmNXatNfDh6j0Q3Cf
OLNZOZxGHUecpJOsNXot+fAstT0RNkxWNc6A91GvKybw/cqaXyXBd6nwBTa0
XW5wF6aqPeX/pJPWyzMvbsBqbsnbtsJe68L2hMKRjl/n0n/QSb1iWYUv3H2K
OkBNJxYFsTvcYZlj5yLixukk/75Y0RnY1yrLdDXsPGygcAx+ZTYhTBujk1U0
sacW8NoDSl84YcVrsVJGsLPehYzgUTqxanmetBuu2F3q8XeETvhPhIqowXw7
/+3whr9tm74tBx9X2cX+8zudnNvJxycJZ2+jEjTQyTr/12FrYRaZF7e/DNNJ
9HdFZn7YVJLLxgY2DdS+wAUnrTPa2PWNTj4qTY8zw7/w7UzgGnZT++kErCdW
txY0DtHJ1W/mH0fhW8tWB+jAue+ZzL/AX7gO7y0fpJOXLcaN72El9jg+Vfhg
475dzXAYE5UABu21bLDgBdwxuy5RGm5IlpEmsNQvO4fUATqp8BJ68Az2HkuT
E4dV5J6uegLXDw3P3P1CJzkNQ+EPYOp040o4a8fLvzHwmQ+u4df76ST78kG3
KLi0M89kCaxyO+hLCMzVMiUY1Ecn1U6Wlpfgo01UgincX/a2Bjf4SZ3vYw/4
s8W0ugM8X1F+fuwTnbhZVWbawPtLF6k7wHOc28TM4fh8Hda+Xjr5Y6NHM4DH
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
AalHSTJ+sMZy7oVgAY1cbDneAy6cq73oxi8BfXPIzHKGPWbfqEnoFdBV343z
58LiBsY+Z3oE5Hp7ce1M+MrEe328bgH9Ew3wnQLPHWMdfrBLQCfmvhdVgb/K
lIzz7cTn+xw4PRxmuOOCfgooyGOlVr9Rt5UOlz6oQ0BPRu28/QN++v+GAwG1
7S60r4O3fapdb/lDQLVbllVVwjKvPDoM2wQU9lFlQzF843FTsFargN6WarTd
hpcW7MSMUkAk47E/Ge7I7E4c3iwg7biPEufgU8kHpg82CajD82wEC0+/IFLc
+U1AQ5azYw/CLyO4AwYE5LAk55IP7B/KbWgS0MkFGlPXwaP2R/o/b0D5Gjy8
tRTO2TFGsvCLgLLaLpnZwq4eF6NufxaQtV8+TYf/rNSafK1eQOZXRs7Vgs8v
Ss2+UCegvQHxT0bB5tz2wU8CKnq5dfFQuJZ7nfCjgH5e86n4bYj64h4vfBDQ
o8+pTs2wOjfdqBWQ0s6Jr2rgBwrzWfcaAZ01rXZ5Dm8c+mLs8vcCGqNX/Oo+
LNbnnDrnnYDWzGp2zoAvd7ybPest/r5gUVUiPKdx/bOpbwQkt+jr0tPw13eN
burVAvqtm1cWCvNebG9VeC2g8NdP5gfAU/4/wFBAR00VHnrBj//fkC2g45Zn
rFbD27jjqSsFtPDV0rsL4eFcuuoKAR1smmNkAd+IkqJX5QIq3bInRR9ewo9Y
+viFgCrNazTU4fbDo+ryngvIxiUoeiR8cs8Fv5tlAroXu1JWDDbaqil6+ZmA
3oluO9ZlgPX6Wu7AY/x7v+zeBnjPcv0J/CcC4r8y31YNj3LIunXosYAWq/6t
fQRnzzaz3/VIQBpGP5fcg1cZ0EvPUgGdF9N8kAr/mjjX07VEQPODWMNY+PyY
Z92LHuL7+boJ4fBs2eVh1sW4HxUJuSNwreibUcZFAho7RvmQH3yod23y5EIB
KfttaN4Ij2/5PFPlgYB+jfiy0hmmT1sfyZKArOrjiubAG179WCV6X0C+L0/q
z4RFn/g3decLqL8yL1obvlTwN7ApT0A+T8aLjoXnIFrV5gpoWvI9b2m4MXlI
TPk9Ad11EVb+m9ZtdfyCULf4roCCC8/OaoMnn1TIy84RUPfbtxc/wo9Dz6EF
CugIz0miAvbeP7427g7a9z1x70J4OHf62W2Un1tr2S04zUO3PzQL/Wu1jOEV
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
QoF0nlx2DHsXB7+b/XPtyS6eFPTf5J+Gfab4NIv/8GRUYnf1KKw5Ru7gvt88
tY8/F+gGk9qxfjt+8aSsHOK2HrZXHBSx6SdPrOsSi6Vwr56wyVY/eNLpkzXF
EL4iHXF38XeeXhQ1KmrBi5tjzed08rQusOTjAPjDW+EABp4Cxu598LtBKuLL
rruN/oa/96yMaoJ1Hht0D/7K058V3/aVw0V3bgcpfOHpXvCTlXnwzhSR5p92
nrTVN4+/AQ+48jC5rY2nxrvX/4TD18+vMKn/zNNVu1slPGwRVPq84hOuv/jQ
xT1wu7+tfWErTw/bfnvZwyf3CQe88LT+nOEiC3j6Tkf/lGbcrys6g+fC5Vua
VS5/5OlQR2XtBHjPml2XzjbxNHK16LoqPMSs0yDwA0/lifb7ZeDM+Yce+DTy
NLTEeEFbvVRkayCzZvd7vF7Ei37V8K8JfKNTA0/TWsaUPYbDRw7wXlfPU33Y
5HPp8Dxl4QApeP/nDbHwG/lhZ01qeTrp5jo6CD4iHO9Xw9NSi8j6g/Aoodz/
O54cOiWXXOBcofzfW54mG+s5robthXIAb3j69C9QyxTu9Sxzm2w1T5/VL76b
Al8Stgu84mn7Zo/w4fAi4euDKp4iU76vVoAbhZd7ydOtRkMlaZ1UxEUXJz2v
5KmpatKjWlgndPW8BxU8WW2tOvwMLpK8fnqrnKcRDsbTs+EdR4SAwNOWa+s+
xMGKuz98jirjyVBjyvnT8DXnnT6nStFeQbfMjsL/2X1V4p7z9Oj1z9874baV
+6MPlPB0qrojYR188v8HYPI0YEe07RJ4+hyGtjzjSd9RTs4ALpvSb9Xqpzx9
uKCZrAl7jTlZt/QJ+ldnx9r+sKq6kHDw9HLBfplftVJRhmKkrH4hT5VbMq42
wrY9WqfHFPD0T+eqRRn8UxqvrfaYp4l7Lb/lwOHNU9L7PuJpnOaNM0mw0Tvh
gF2e7vbQ7HNwddmcio58nm5+k7xi4MOPc53e30d/K5U/4AlrYHS8zOMpdc8s
9U1wboqwoMHrZWqkm8H2V1ap5+by9GxX1spZsEy4cKI6T9aHFFq04YtBG2fH
3ePJNq2feBC8UNxQcP4uT15tecP/1khF7/cJB3jzNL/vlNRmmN3Z3nw0G/3l
zYollfAE+70H99zmSd101Ov7cOGaP/1cs3jSU768MxneZiZ8YcLToPFv/0bA
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
sJSjs6BaDVaeX/N54CbU1z1Hl/wIk/IKnQL5fzay9Nguuq4G9rT9qPB1A+YH
l54uvwFLjddkNK7H+Fl4seE4vG9Ml8nLKJaaKkYFJsA2GrHXH0Sifl1WfLMK
fjmIS6DCkpES4+UGx/6Lf1e4jqVx/LjyibBW96CInLUY/473OKjB15pTeg+u
QX9u+Pvc91Uor1qN3TtXs+RTxGjXwH8rD4+RhGN8admReB3OvKtbuCGMpeGR
Wl3HYN7VU9NXrkL5tU7w2wLX5ZtWLV6J8bTf9esrYeYEl6CJJSXfKh1XeOxB
++7pIZg/pYWJzeA7O2/GW69AeS9ia1XgEMZZfUIwS5pztW2/rcR6fdPDbO3l
6M+UbVNewafCF1grB2E+5V714Ro8J+DlXdlA9Nd57bZH4c9e/gt/LEP/XJaY
yMI75zR+/OyP9u924kUIbDKVSwDH0sg3Dnou8GOLDvmqJSx1D/dZbQKvM4g+
eHcx+tvc1kIlWIlLP+iH9mnV960rVMor4NIR+GK+4pdm+wL25MITLsJ4c/P4
pitwNxeuYCHu72Czogx4L3d8wQd/f2vTLoatue0M3iwVvr2mHwy/4B5veOF+
5pf4zYJjuK/rydL7LrudE2AtMjrnswCvdzcvUYSvXSyY6uKB9r4qq6UjBOv1
M9yAjvZQt0v9GfznSMky8/ksuS/95nAJPpLm1DF2HkveoufL02HHbWViTTfM
9z6bbRXA7/nzlRVcWfoyQ+ZUAMxEcglsMd8zc7vrBOuFLLbomsNSlJtS/Tj4
tl9dadNsjJfT5/4aCK+YH+r5ehZL8YV/lNtWSHlyM7gFA/pTR4NxFfBJ2/Ub
aCb6qx33bC7Ac0x6ZC/OYGm0w1vnffDnMaK9p5zw+q4wz1g4SaP/uMPTMZ4u
WLN0CWw8mEuQzZLzn8ZgR/jRP6VZLI+lb3srV+nCa7v3vYh2ZGnmDYvV/eGh
n0auDJuK8X2E/OrmYJRXLfdAAv25m8eqB7DnU8NEjynof78rBp+Du+6eGz5z
Mvq/qw5LdsN7rlqdsbVnqXXye48N8KTzV+yN7dAfaElnLISfn+A9GG3L0oKf
cZPs4RjUFlUblkL4G/S0Ya1k11Y5a/R/098O6V2O9TrzlP/TiqV/Xy5/r4cX
b+IeeGJ80Jd9ewf+Hf42o84C4138DToFZwQEm1abY355ruV4EjzVu+X6/Ym4
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
c9wPDBgvO4tH1cJZ+4sbtRUkNFDjaehVuFFc2r//IAl9uZF39iBsGPZ4XOsA
Cbmvc+7YBId5vp5V1V9CHcePmPnAuVO4DktC0a+Kwq3gL+gNjvWJKXb3thMq
sPnQv2e2/RPTyjnDX3dMxPj3Y+DDdX/ElCUKUXgCF9dxGxLEFFK4bvJZ+Ef5
mCFTe8RUs8wqNAm2KzIx0/8upkFyRbtWwfwMO3cFqZiadduLZsE3EmZGdnWK
aY5V/XN9uG+dR+rrDvz90i5pP3i679IL1C6mFUbflOrNpLyE6auenWoV02wF
9fE34ftGG6W7WsT0+8VnhyPwQHVuA6OYKgZvns+H3f7usPFvwt/H3ljqB+/6
eAAtREzpR6+stIUrKk7EGteLKfdXeIQGrHrlfLrqezEpX3i6odtUyvPJunb1
Z62YDji1b3wK799x/01djZi+jr++/jz8auOzP/dfiSm/ftraZFibC8f/Qkwu
LTErVsPLuOP51WIaWxLk6wIf5X6urxKT4MXfOYZwo5Yss6JSTMKLrjZy8DhZ
pSzXJ2KyrJo7ptEE41/biNuWj8S0O+/XgFI497nBB60HYgovWfw5E267YSkn
UyYmkST8gQA2Pe1o8OmumNZumHBqMRyZOnd2xW0xXVE+ILGDi+K4A5JievLs
wsJhsDR4+fYjN3F/bAUTpMZYL85bl7vlupjW/9fV8xSOs4l7uPqamOZVatw9
D5fobG3zvCKmhF8fkpPhvwPThky+LKa/hQFeq+HpXUfMdIvx/aISNFzg+Ddn
3AcWiSmvyKfaAL5zpziyo0BMWt0VKf3hgflcQAUx2eR2z24wwvr6wOML18+K
yd+L/tyEd0heP8vOFVP5Kuv8I/CTsCbpjtNiyljhuZQPq3h1amw4KaZXNEze
D/Zy+GuzOFtMYT+YfBt477hBvtOzxDSC3eOpDr/iuoNjYsqsmdvdOQHr3Z4x
h5QyxbQj7tTuCnhJPReASUxL3pw2OgcffWBX+zZdTKs3zS9Nguu59I8HxNR7
54D3KliPCwe5T0yO07Z8cIZDueMhe1B+QWpRY+HT3OOiVDE9ODbzV994jH++
G5mgFFxvjKbkHWzsJMmakywmjYAd/UrgCOOdtyfuENPIiqNMOlyozgVsxPeZ
5v13E9z194Tcv61iCjY+He0N2zSfN2jaIibXgYc/W8CxlddmP2LF5OFuslQJ
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
7bnvJRp+Za8WPRot9ivc7xKN9OyL2xVC9+A+l2hU8X68/ccosV/h/pZoZJyo
unit0AO4ryUaKb4y/05CX+V+lmhs3HO/HkaaaAT3sURjR/7giz5C3+b+lWhM
UB4Yq7MxkT33rUSjvLLi1flCP+Z+lWisbOLQtLHQXtynEo2Es1GKEyNMlMb9
KdE45B+0fqzQwdyXEo07besdzyCxX+F+lGiUdl58coLQEdyHEo3uU5O2VRG6
lPtPonGt+sTYHcNNFMN9J9F4nv2ya1+hP3K/STT+K76Tem+Y2K9wn0k0HKoN
Dw0V+if3l0SjoFW3lx+HivWS+0qioaqY0CdB6IrcTyLe/xz7GS2ETuA+kmjU
8Ak7dGaIiWpz/4i4HugG7IVO5L6RaJhKlcgcLNZL7heJxsDyIw5OFHo794lE
I7T1qGlVhG7F/SHRiHmn6Ll9kIkOcF9INL4kb37aS+jO3A8SjUZ2r/xuDxTr
JfeBiL831rwXIHQ/7v+Ixu92A1sZBpjoAvd9RGOk81jZfKGHc79HNCxTui1t
IHQK93lEY9aznE2H+4v9Cvd3RKPqPf/VJPRD7uuIhn/OonHP+5nIlfs5ouHm
EdJfJfRL7uMQr2/ki7zvfU3kz/0b0Zj+ImPGSqHfcd9GNOo203xtJXQ492uI
x+80JfhsHxMVcJ9GNHZ91x+yE1rD/RnRqJdw/93b3iaSuC9DvL5bP7/GCD2J
+zGikL96+g8Lob9zH0YU6t3um7+ul4niuf8iCvv6tj7XQejy9P++iyiU7eoX
c6mniZZwv0UUpLvyGs5CV+c+iygEB2xPzOphojXcXxGF6T9f/x0vtDX3VUSh
sWNV7wpCb+Z+iihsSmu1ekN3E7XgPooo3O1Y/1RHoXdz/0QUCi+lX7rUTayX
3Dch/v5PaJKT0Ie5XyIKj4K3zcnsKvYr3CcRhYe95g2LFfoc90dEodajCtkW
Qg/ivogoOExpEJ3YRayX3A8RBU/10bdthR7NfRBRaJF2sfe5zia6w/0PUTiW
3yPWVmhn7nuIQuUT5da97mSiVO53iEKbse12qIX24T6HKBQdSVj5vaOJ3nJ/
QxQaZbaLWCZ0CPc1RMHtbnGrpkLncT+D+HuXezePdDCRivsYovDZ/rzzMKHL
uH8hCkMW7b/yqL2JJnDfgnh9t5ZahQj9ifsVorDxiqeTvp1YL7lPQbyeBl80
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
H1M8f4rDlIpCr2cephJnQqf1mHpWMvMvlTDlZ18uOiPRTuZdKnGlVNUkQOg2
zLdUwqKoxPnBabFeMs9SieSejp5Dhe7G/Eol7nyP7HL0lEQnmVepxDH/tq+a
CT2A+ZRKrKFgz5UnJbrMPEolPs78sPv3CbFeMn9S/Hfcvhkj9E3mTSoxaOO5
C5nHJbJjvqQSe6N3z3IR+jHzJJWwW6Sun3xM7FeYH6lEtxqls7sJnca8SCXu
la90edtRiYKYD6nEI4fNd6oLncU8SCX+/Dd/34wjYr1k/qMStXbs8So+LFEx
8x6V0F5Je+Er9D++oxLWrr/b3U6S6APzHJWIXfTJtq/QU5nfqESzcVsH7z4k
1kvmNYrnkx79qiX0HOYzKlH7edSa+IMSVWAeoxJdT7t+KjkgUQLzF5Uw1gjo
5Cd0DeYtiuthsKrbrf1ivWS+ohJO0V4WvYVuwDxFJdYe/b13xz6JtjI/Ufx9
8ciG1YVuxbxEJX5k/wqYuleifcxHVKJ3X0tt7h6xX2EeohKXfB1cXIU+zvxD
JfrtWPf70m6JejPvUInBfe7Etxf6AvMNlajZNPnBml1iv8I8QyUWDfAu+rlT
7FeYXyiu52GRz1VCj2VeoRKueLb82X8S3WM+oRLunWLrDRPalXmESny73CTq
wA6JnjN/UIm/iSdWWAnty7xBJRbvqzo7brtE75gvqETxFYvh+dskkjFPUFzv
sybedxG6gPmBSixVDmp7YatEUcwLFJ//3W6OrYTWMx9QXF9PO1PCFrFeMg8w
Ar5zqv01bRb7Feb/ReDQyf0rAoX+x/uLQH699MIbmyQqV+v/fL8I1OkVV7Or
0AuZ5xeBHeFKi3UbxXrJ/L4IDHk/ET82SLSKeX0R+O/ETMdwoesyny8CHmf8
d99fL9Fm5vFFYPrO3Ju9hG7G/L0IHPxjOrVpnVgvmbcXIfZPYZo/iRK1Z75e
BNpFl5cihE5inl4Erp49M+LhWol6Mj8vAksMjoG9hT7NvLwI/Li/c8SmNWK9
ZD5eBM48TjD+Wi1RMvPwIjDMOzsqXGgb5t9F4NXyuON3V4n1knl3ERg+tWdy
N6EdmW8XgVnFrzasXSn2K8yzi8CBZWMGfVkhkTfz68Tn99pjX6DQ6cyri0DV
5i/fXFsu1kvm00XgbNzu9DZCZzOPLgI3clfvWrxMrJfMn4vAyMZTepcmSFTG
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
+2Pc3Bb7Zt3TUTz7wf3R++3Cn+tu6Wgh+7/98Sa97ecDKTpaxX5vf+xNfbPi
/FUdbWZ/tz8K4+dcu3FRR7vZz+0P329Fix6e1VES+7f9MPxcdlbqSR2dZr+2
HzZM6X37+VEdXWV/th+6jt7e79khHd1hP7YfTkVmdnq0T0dP2X/th+sRR3bc
3KWj1+y39kNB2flVF7brKIf91X5Yknb468HNOipjP7UfXjbv9nL9ep3ZP+2H
fc/ftJy9Rmf2S/vBvr5LmmKFzuyP9kNgzcYfxy4V3x/7of0Qn/NgQruFOqrP
/mc/VD1R4vJ3js7sd/bDtXlf5qfN1Jn9zX7QOmlrHJ4mvj/2M/thdgYKZkzS
mf3LfliUFlbdNlZn9iuLf3/s7JRaGp3Zn+yHZRtbtX2h0pn9yH5Im/e35vpw
8f2x/1j8+3oHe3uE6sx+Yz+c26JKqB6oM/uL/dC84hKrFB+d2U/sB4cMxxsT
PMT3x/5hPzwZaNjS0kVHK9kv7Ie4SwcS79vrzP5gP0yYvfdg7Bid2Q/sB7cm
NV/WsdGZ/b9+aLeyUr2TQ3Vmv694PUMOhTkO1Jn9vX6YkV3tXHYfndnP6wvN
qkG1JvXQmf27vqi4faiqXBfx/bFf1xfWu+pdXN5eZ/bn+mJ05OU/dVrrzH5c
X5SVtum/vpnO7L/1xQ27wb51G+noF/ttfbH0bG7wino6qsT+Wl8cmP57dPna
OrOf1hdpubLKk6vrzP5ZX6wZkflfTiWd2S/ri0NPh1Z1KqejLuyP9cWlazT8
5K8y6st+WF8sa7x7UJ1vZWb/qy9m32rwOeZjmdnv6ov8Cc4xdwxl5Mb+Vl/Q
5qJtTUrLzH5WX6xQL54ZXVBm9q/6Ys4tVD6fXWb2q/piT7+2g35nlJn9qb5Y
lDWous3rMprFflRfPIybN2328zKz/9QXw52mxl18XGb2m/risVVCTcO9MrO/
1BcJ5dp1bXmrjPawn1S8/mtJj51QRkfYP+qLIocpxkmXy8x+UV9M+fVm2aZz
ZWZ/qPg8Zrbdev5kmdkP6gvvExsaPjtSRqns//SF6oL2d+GBMnrDfk8fbMp5
N/bb7jKzv9MHtXfWLau4o8zs5/RB5bg+RTU2l9Fn9m/6IMAyoJ/VujKzX9MH
NaStj2qtKjP7M33w8lrFw1UTysx+TB/M+731zu8FZdSE/Zc+GNcgsJlhdhm1
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
d8j9Oyfz6TXP+1zQIalfo9h9+VTC8z0X9Exw21Ftcz794nmeC5wWZjpsXJ5P
tXh+54Krulq168/Jp9Y8r3PBRuf6WYsm5lNfns85o15W20PFynyy5XmcMzIr
jw8dHpBP/jx/c0ZsWu8PC5zzScPzNmecWbLP++qIfJrF8zVnPK9UZVphn3xa
zfM0Z9hO3u5YvkM+7eH5mTPGXz6aUrtxPp3leZkzousuelCrRj7d5fmYM2Zt
mx7w908eveF5mDOaSdmhOaY80vH8yxnr0OLR2fw8+sPzLmc4aLYmznidR3V4
vuWMXwdv7e35II/a8jzLGefaNDSlXc2j/jy/csaVzvW1sSfyyJ7nVU5YGeBc
+fvuPArk+ZQTClx8Tk1an0cxPI9yQhW/l6HvF+fRHJ4/OaFH3ziLYTPyKJHn
TU6QPaq4NEGTR/t4vuSECz9GFN0NyaMLPE9yQlOnylZf3fLoPs+PnLD/wchP
DUblUQbPi5ywO023qGO/PDLwfMgJclPdC5065JGF///nQU4o3fZsRpNGeVSP
5z9OWN8vIOVXtTxqz/MeJ7Gf0sc//ZlLg3i+44S9fsW7E/W55MjzHCeE1rjQ
2vZ9LoXw/MYJ6oIsQ0lqLsXyvMYRSq9fP2fdyKX5PJ9xxDqHW0PLn82l9TyP
ccTTkZV2T92fSwd4/uIIle2hFhkbc+kSz1sccbnc6YM9l+bSQ56vOCL3xeie
k2fkUhbPUxzhb9h+6FB0Lkk8P3HEuylNqzwOyqUKyv/PSxxx4PBwynHOpfo8
H3GErsHekQXDc6kTz0Mc0fRWzUpveuTSEJ5/OCJ+qiL+astccuZ5hyMeGo9v
W22VS2E833DEzkGt/TzL5dIEnmc44qVUd2/FDzm0kOcXDqh5sNLkA7k5tJHn
FQ5YNXD/tYEvciiJ5xMOiO5zf9rFmzl0hecRDujmMHV9p7M59ITnDw4YcOt9
taX7ciib5w0OyP+rfpy2Poc+8HzBAfNMB15aL8qhSjxPcMC4s/L6o6bkUEOe
HzjAoeXGRaHKHOrC8wIHrJVPaxrtk0PDeD7ggANJ4x9HjM0hN54HOED2okOi
a/8ckvP5vwNmtYyTdWyfQ5P5vN8Bjz4u6Wm0zqHFfL7vgDX7jn7ZXzGHNvN5
vj3SbRcdc/qUTUf4/N4eUStMTtl52ZTM5/X2MByq/0DxIptS+XzeHjk2wa3S
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
riz1ENKubn9WX2+l5l6wvGP8fem7refDSe+jZDunYz0XFal+amFeYfnHQtIf
Evk4Fu7SdfWo2z5CsqspvNkPLmN5yEJqEx5TkNdSzSWM1QSYCam6uPjpbNiD
5SMLyf5CbGNtCzWnv8rlrPVCIS2zzLeNhu+wvGQhNdQHiizhqJQBvAX+Qlpl
rCjJ/avixrP8ZCH5CJscZ8FaRZ3s4pcJiftVdfp7s4q7xvKUhXRHOdBlM6xQ
qb9dW47jqVVSYQE7snxlIa0OLo7NbVJx9X2rjv9YKaTaA5Yes+AclrcspDdp
RWa1jSpuzYw7y/vyhNTB46pWNGzD8peFNC6l+bcl/CUse8AskZBmhq1vvPJH
9X8es5D6fZpoOAcOykrGEcT+vD/Z6UeDiuvH8pmFtNd8Iy8Wrn6uCWwUktUL
1ZX+8H6W1ywkm7rdPfPVKm6hznL/LxFCOjc/ZON8uBfLbxbSrS4BbepVKu75
iBl9TDcJaXmXDdsT4CSW5yykSz437a3hmUucXk2Lxf5+Yv6uoF7FdWH5zkLK
2550ZDFcpvn4eIKQLkf3lTX+Vv2f94zz/1L+op2wu+b2MlFIwr6hPnawHst/
FlLq7d6+936puFtffnR/m4T9kVnOC4Q3sDxoIe0s2pbSCh6Pq71RqpC+2Ex5
kvpTxbVk+dBCKn/1p88o+MrEG9sn7RfS0Yp98kc/VJyc5UUL6YS946dVsBNf
E1ArJMdPucv04XqWH4311Lb+fbhOxZ3dv73jsUwhOScrE8fBPJYnLaS1madd
X9WqONsS2f2XWULa41rYVgrXsHxpIfUS5zw1go83LYnpkIPrzwz+pezvKi6Y
5U0LqaBa+4QH3H/Q1Mku54R0fVRwzqdvKu4dy5/G8QtKvBUJH5g9XHvtJSFZ
h0fWmMP/8qixH5Md++bVqDizSJOCA3lC6n0jM2Qe/JLlUwsppuvjG/VfsV45
bSIeXxeS08Fzg7fD//KqcX5snnLYBjaq/OqifUtIQypibe99UXEPWH419vMF
yd0gOL69ZkGEdGVEe1FbeBrLs8b1dfV4+/TPKk5/9JXc5SVCOh3Zo6UzfJvl
W2P/b9tU8eKTiosKOiRNeSikV2fi74rhCSzvWkgqg0FFRrDWzi2OxU+FpHvZ
+1nOR+wvln8tpLhKnQZPWHlDgFtq7Ne0CQNrPqj+z8PG+WnSbnk0rK5dcMau
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
YCSUN35y7ckI1f99H/DrLnMWwMHWVvp37CXUyy3jnh48gPV/SCghpfW0C+Eq
7v2cjnf+OODxNFu8DIDTWR+IhNbHthZ1gf02qjYOHiOh8SHpZvnrVVxv1g8i
oczcpgcr4RenX7sudJGQ68GOiSbwbtYXIqFFE8v9itapuDlVt1oluEqo423v
MWLYiPWHSKifZ5hlf/hBh1PX8t0kNLrVnO6PwlTcVtYngp+v86J7OOwxJkn5
cyrWO7ptP1tYn/WLSOjqqUf0SqniioLXjek3XUJVBycExMKbWN+IhLy3+iQ5
wa7sA7wSctyvVf5RgXmF9Y9IaFXLSX13wfk3vS5smiuh3S8sFBPgf30kOF8X
b6v+KVdxY344Ci8twPHO3TYzHf7D+kmwnmbmD73g873Nh3/1k1Cb804LW8B8
1lcioTdnX/7Okqk4ew/dH6bLJOQ1tc1uX/hff4mEhhw/MUUfzpLWnfRcjt+n
80z7klTFhbI+E6zP9nVlQfCgjGcr1q/E7wtPP9Idfs/6TSTUQW9MdKEE88rj
fOvTa7F+i6ZIBPAS1neC/XexiN8X7t366Ke3QgmZeV6SPxSr/u8/weOd021r
OJxiq/kCkoQqDF5m28FzWR+KhLSO6LyuFGG+XCgNcAuTkGhxco8E+DHrR5FQ
F37MQmd4W4y/pTRCQvNMX576JsR8yfpSJLQraVPHvXCHi1OqjkVJqNAiTuoB
32P9KVjfhk91TQKs1/thaRUxEro0P1lwHJ7E+lQkZLspua0v3FYTP5Qgob95
H/brw//6VSRU4rJ+ymU+5kvNxxMTJWTguaRFCEysbwX72zrmmjHcuBLjS5KE
jIzrtxTxMF+y/hVcXxbsD5TCopSHOw+mSKhxVLTHIHgE62ORUNvfWc7P16q4
ujuaL1BLyPmRLkXDp1g/i4QGm+1xc4JXqg4Y6hySkI7xokWf12C9WF+LhG51
9A7fDX/qG1s6KlNC3dz42VPgI6y/RUK+Bte+/lmN9ZrBjwvJwt9/2H74Mfhf
nwt+nv+9qPlwZZjv1NRsCT3dHPVBH05l/S44f5f7e+euwnyZ5apXclZCD73m
3Q2Fe7K+FwnlRod6msJPnw++3fKShPYs2/n6/krV//0vWB/7xzIlPEPHaOOw
PAltG9u/rw3cifXBSKh31cby1yuwXiOaxy+9jv235FdSAvyvHwbXY+PQgLHw
5CWaABgJPZr7hfsRqvq/L0ZCz3mrLA7ANxLuX71VJKGeV34bzoTDWX+MhEKi
ZR3bws55mgBQCQXY/e1+LgTzJeuTwf7VkQ0OhC9/SR1t/RDHe9n3qT1gCeuX
kdCR9DmSO8uxXj03Nvg+xb93O5MthX+xvhkJPejZot4azpm48nzcCwmt1XaY
WBGM9WL9M3j+GTU3PQ4ezJ8luPZaQnP1l+i5wF9YH42E7pRPV9YFYb32E+4w
JRT21+JvOhzA+mnw788ebp4J9y3pX2f5UUJnb/uZt4OrWV8NzteBRTfPB2K+
bNIE2OH6t0CPHwwvYP01Emp/vbdNL7jXIFVoVC1+3kXt+nvLVP/32Ujo/qGr
t5XwztmabwxJyPOj6xFbeCbrt5HQqLeJW6sDsF6Rtz5+VktoQPPxqET4X98N
ju+u6M0T4S05Jw+bNEuoRQ/rXeqlqv/7b6SU9Dbm1FFYu3LX0mla8JKjj33h
QtaHI6X2TRHtOsIb2q+zWNdWSvlG3cbnL1FxLqwfR0p9ey6M4cEtRgdVZutK
af6qua/7wVdYX46URoe3dS73x3oFee19015KbrmLjkbDjqw/R0rnNwWYc3C9
5uvOhlIK9e568LufijvN+nSkpNoUPCwdXq15O7SblPbu9L83E7Zh/TpSmv65
aY02/EVT/2IspewfIywvLcZ8yfp2pKTXW78yFA7SxMOa4fG9lmT0hvuz/h0p
eR0Mkz9YhPVyf+b90kJK41739I2E97M+Hik5tJo4yRFeJMnv3MFKSu/CtOjL
QtX//TxSOnV3sste+NnhzBJnaykdmGsybTqcxPp6pBS2VxjYBvZ5tHXLGhsp
new4K/b8AsyXrL9HShMsL+Quh8u0pO4H7KXUxmu32hT+1+cjpcXt/ziX+WK+
tPHXfewgpTUPH23bAOuxfh8pafUaUOcA3/adcqvdGPy+BXXzvszHerG+H6yf
0dDSvfD4aE2hhZQEuS+8ZsBarP9HSkNLVC/bwlfOG49f7iolnzth/IvzVP/3
AUnpotWa7itgp3ettFLcpHQ/8E5BH1jF+oGkdFp7Y9ijuZgvDb/gGQnHa+NB
100wj/UFSemev4XRGNjO5aG8xXQpbTVtrv0+B/Ml6w/C+jkMKz8AH19x2cnO
R0oyu6tFs+HlrE9IStZx+2/rw/33HFD7z5XSkNInZVdnq7h3rF9ISm+lvu95
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
sn0afO/+fuHA1wp67Pln+BI4mvW5Kihy5ECygic1bh4+/42CEsImen55V8+1
Zf2uClqb4BV0Er4xYO2P2A9Yv5IJm3nwetb3ivN5f98cB5hmzTuV9wX/vupL
dePbeq6J9b8qyGVvUq9r8KWIcStrvyuoaOcg3w2wiPXBYr9cSzvoBo/IHjTY
4heePyPqfxnAP1k/LP6eyUM8yt7Uc6deaQpeFHREOi5rB7yS9cUq6MC64Ubz
4MEGjUcim7C/C7QizeBPrD8Wx/d0RlN1dT13ZJSm8FNJy85ayY/AAaxPVkmz
Rypah8KWgXctP7VRUun+I9ts4UrWL6uk/CWHBv6uquf2Jp6uMtZVkuwj//ZF
2Jf1zSrpbErXVUq45/U9aVPbK2lLTbjpePgp659VUqRb3kNteIcm7r+zkqJ6
FWy9V1nPzWB9tEqqfrRj9laYxQEYKWnCm6H9ZsHFrJ9WSffOxv0xhmM0Hxfo
qaSfl08/ff26npvM+mqVlBqQknsQ1tb8ODMldbGclBkMF7D+WiU1L81JHQqH
H+rrM8FCSatSXib/fFXPubA+WyW9dLqZegH++0BzQVCSeU5gpgK+zPptlSTk
F+SOgyUtf5dmDFLS+l8vnmrDDqzvVkmTDmX+uVdRz/0aUhH3fKiS7P4M7rcN
zmb9t0rqGLh09mx49fyCqQb2Suq0eNpWE3go68NVUtHcTw+qXtZzXzZl6ZGD
kkbcsTc5AmeyflwlZVkOXhEKB57bcXvVaCXVviotsIP7sr5cJfVd06e/6gXm
lTeaBF4l3fHqGZcL72P9ufj5vy42r4cXdF7m+nC8ktY8aimYBPdifbpKCg38
+tMAfkbTWrV1U9LdfjLpg+f13E7Wr6uk1puO6STB3qGaGxolvW0n37sANmR9
u0rK6PVltCVcmmymDPJS0hdnVeXHZ/XcFta/q6RDNXu3nIDdb7Ubs3umkuzT
KsfyYV3Wx6ukWSWXmkfBhb++Ndydo6ShDdb5LeANrJ9XSZQ0LLagHPOKxdPz
zb5KCh5wf2EM3GKU5gUTnA/9/jhOh694XhXY+ClpU/sLxt1hGevvVdJA37Zt
Kp7Wc46KI/Z+AUpyia/8lQ7/Zn2+StrT160mCD5zNL5uW7CSFu92qhkKr2X9
vkrqtercr19P6jmbctHJmyuUdMn8UuvLcA3r+1XSRjtX4/XwsbaaF2SVNMTM
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
E9eyNFX6+WBPOOg39yZzHUvpduppRnBFf+GASTimbpYUPEl5S96D9Swd6NT/
Ws5KRAdHfNer3MBS/dq2Qwnw93FrTtRuxP//amYVBDtM+SDdFID7s6Wr1QZO
sxImbCyVyFikDoZl51Z96reJJccLbas+MhLRmsXOrsqbWTozW8fgKvzI63Gx
5haW8tuete+Bx62fYWoQjPx19ufdxXDYtoLzZlsRP12OxOjCH3dZqNptY2m8
7PkNnaESkW10zm6n7Sy1FxnMewQnnhS+sEd836Uz6STc+4KwIGSJn3VUfR3s
lTXq+ZadLM1R2iwjgu/cirMRh7I0sqbo70B4BFYLBxj0h6t7fv63UyLa+Vw4
UJel8CNXOzLhN+9kDiVzyAc7XH6z8NSvu6Su8BhvAcv7OcMnJX833hHDQS9U
tOFfUttqnuxCftx9Xa99B9proPCBE0sPLvaxK4Kvqvnfrt/DUlRdrk8MrDK6
wbAtDPF+ystwP3jThBWneoSjfRLccszg5xavB8pFsHTCcMYHaVg4PUktEu3/
5ujQ1yFYrzuVfhsdxZLzZXuXNLjZ3d594j6WBl7yPLITnrdK2KCE8fv21at5
cLrw8doBlp6JckaPhOWE4RaNePCiaVPLdqzXIyYO8z7IUkDq3kd34e7yvodY
qrzLjjkCjxPK/R1mqUzrxW5fOEwo/3ME+eFp2FcTuF4oB3CUJfbJkUUDYDvh
eOAYlmaM/X3/1Tas14XjAo+xdO2/m9NS4e7jg47j+v9UXtsBdx8nEIv2Cp9h
Ng++IzxeeAJ/Hz4wXxPWFB43OIn700fPvmWrRBQqbD+MY+lvr5Ov7sJvhe0I
8Sy1RS7fcAQWjfAp7HMa/ffCFpmVcNy4/yYpncH8yeNdiin8y1jYkInxcu34
fGnY1apCSS+BpeCbZ7uqgyWia3OECsO4v1s6U9Ng1cX3v1snsfSu8dSKUHiz
l5Wn4zmW1hoc1JgPYzFY6naepa1TS99owcbbjC1XXWCpaLRrQtsWjK9dGRmb
khFfW/X8i+DvB3RHcBcR/zNmiI7BjicT9u1LQX/2Shm0Gs44r4EZFvqn+sJG
C1g+K2bd+TSWDtfaPZGD/W8pvslKZ2nNnZCs/zajvR5EzLmdgXxT9CPuEjzu
eZ+8kkyWLvzKiuLhve9C9aouIV6tzeJc4IYvP2M/XEb7areFjIVnSAKlW7Iw
/ow2hfzchPW6lLABHf013ph9BPcd6PdJ+grmp8GTI+Jgb7XaxapXMd8r2RC7
Hr6j7VY86hr634VP6VbwyAmVJhOus8SoxhcPgpnuAjEs3dSJqv8QhPW63UOV
WTdY2vkpR+YaTE42u13yWLq0UtU4HI5zv9XueRPj+VKmlxv8y8/Ux/8WS/Of
MzHj4SVBl59ty2cpu2Z3aQ/4eqi+zZ7bmL9+KBhYESgRDYk4l3WogKXLTROc
kuDgo5qjTt9h6ZB8RewW+MWZ2IOpdzG/XHC+YRY8OU1Z6noh5gdPUi3U4UPX
9m28d4+lrsjaQ40BElHL3f41ZUWYn5ye8f02PP+p8MANS01Dqp0PwZdedeV/
LmbJqN/JGz6wwsfNhpIH+Pn2vTqm8PrvzfG9HrE0POxsrDRc0rV6oEIJ2mvq
R8U3GyUivf5CQSyWXqY478uAwwct+6bzBPn14yd5Dv40vMrN+Cnu15/zRxfA
3R/fl7I0pm+U1li4O52XsZQgfyzr5wa0l9WMlCXlGM8GxbNKYO85BUNXViDf
Bah/iIfvLrIID3zGUq/vh3ZthLW8cn6GPkc8zzPQs4E5f8NVkZUYTw0Nz1Vg
4bTKYy8wP9xbuOvTeqzXd42amfSSpaeZ+eZ5cNyBuKuXqliyCKpq2wd3nRAe
MGQptF4h2xNeej766MNqlv4M9wmeDOdelun74jXmZ4bPrfrBQ2/t2vT+Dear
BssVXvljvf7gb13TW8y3xvepS4UrnwkFADH/sbubFwobv2tFi6D9I4/HOsGH
v6ybNLgW423wnh2j4dYf9WdHvmfpniTcp2Md1utSK5TG17FUODPR6RF8We41
a/4B8WtEuU08rKi28LvdR6yHogdN3Qj7a5cud67H/chZaWoDPza0L13WgPZJ
eGymCutbFNLaTyxtCrCx/LxWIoqwE2UEf0Z/MX00+yb8Zf614bu+sNQ60NPt
ACxE5+ivLGnK9gnwgi/4CQ9UY74z80rkFLhv0Jh1FxuR714Hpg6AfUJPv77S
xNLR/6aWvV4jERWGD51ztxn9f43CrwxY++jhG0+/s6R97JsuD/PdBU9ZUgqt
cF8I16aGxTa04vfNCo7qwpbXpKTb21ia+S7nWddqiSj+bsjWnj9Yio3KVC2F
fz/50SAnwXptaeayBNjt1YbFQzsQL1dkp26G8z58vj/mJ0ufb934Mwse9t3b
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
zqxOLVoMj2kMPvTfWZ4ampSlJ8Hiny1SXxN4Yg/OnS8Hv++9LqAjET/PdDlZ
ryMRTVeor+l9DuM5Wf9LAXx6mOd8xfOIt9Vl007CPcYKB5Ig/yXZHN4ML5so
PLCG8esrbnSEb057emrKRYzHnQfm6MHqs2bJW6fwVGLvl94H3r7g7s55qTwF
6ssovxsrEb1aJhQM52k/F7wjFzZbc9XdLx2/n5rx+TB8bLPR46AMXL905tL1
sIRNmcpmYn7wO7h0FuwSNTo16hLa4/2AWdpw9rFTw2Iv4/U1Vtz7M0YiGpSo
FnEuC/NLWda2Cg7IONR5ORvxWsH3QRZcliu3Oj+Hpwt7FebvgycU7al6dAX5
qCr0tR+8r6znrJdXecpbnrXGGv72evu1umvoT8zFPxrwnIb2sd+vI14f9z7S
MVoiSmkVDmDC68nWGFbA0n8/9ZXO42np1BFP0uBV0t6bVW7ydGnv8A1hcPHg
tx+0bvHkuvDtYC94zMjFLob56I+9PfKnwbv0ywstbiP/tZ1cOwSuM5kzeWYB
5tfhsRqt2mgv66KEBXcwP9VZWP4YPutgOcjzLvKr4dPwC3DPJbncukKM3559
ZvDwMp/JLVvv8XSyl6SvB3xrQ7rn7iLE96OJD01hDaxWD97n6auG3MFBcMie
s5aninla12Xo3jhKIqo+qI4MxxMdkdV/AJvHHx1x7SHy6+yzfxLg48kK+wsf
8dTONT/bCUuyw/+UlmD+Hv8j3RVeeFs4cA75Qyo7cjKc82jnm09PkM+UdPzl
YeUXHXN+PEW8NnJy/qwlEQUK21nLMJ8vNJp6Dy4Xvt4q58ndsEjnNDxBmO5W
8ORROVBtO7y/d420zjPkUw0ZuYVwo/zSbZOf88Stzu1tBM8d9vyTZSVPzzTV
e8jCqWPmuc59getPMvz7caREJDPxQbHrS57q3Nt63oFXT7M29a3i6Wj6qv5x
cPHMm+cDXvH0rWufUjA8doGJamg18mm6l6YzvHvZpd0Rr5G/xtYbjYfrVuv9
iHmD9/t0yIwBsM3mJJ/EtzyFSncsq9OUiBLYEc8z/+NpAIlD8mGpKOGATdz/
8ryTsfDyY4OyH9TwZKx/5vYmOD8halRlLfr/pQkNjvDwjH6Hat/zVHN/9SB9
OCSXlWqqw/zshcP0fvDre782/vqA/Gn7Oqh2hERkUbappl89T4+DlVJuwsdf
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

      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
GvnTwpnWCVfdzXSygE++bqj/Aa9NHFT6bEYjhWUxs62wQ7zcgjE89tNI+hv8
ItqtstIU+VeGyawJXhFZcEMLXhP13P8zfByf7sVBzC/n2Ucf4Wx/NVFF+ONT
7qYP8JyX/6/sA1hPF4sZauB9F8typGHBIydkq+Bkp2VeqSY0cuvo/NG38LDd
Hi0heNyHevUNrHU6kjV+P+r1K4WnpXC05YePnLClaGVrCdx5hIsavo9G7FKP
sLyA5Q+aWTPCZjrd2wrhIKPbGy8bI18yO1o9gz/pfRv9a0QjLb0jEbnwei3h
FxfgC32uBU9g950ng/v30sgA25+Ox3C54r29NrCBkf2KTJhPrmd1myHiOatN
5QF8ZqNM6xH4sayJzX24QOL8/Y8GqM91JTfuwiwiT87vhSnRUi+S4SMCo9sr
9tCItcu1Hhr8cLXinDrM6TrMRYH/rfCsKNSnkaSbxrviYUOWF9cU4BWfHtjF
whSG+UOP9fD9t83HRsP9s5rrJOGYPJPX12C1yeCeFF30D6Yp/RFw5MjbbAE4
cXU/bxj8/TerR6wO6vuYnNZVeHOPkcYKeMuY2/kg2K/9xvLQ3Ygf7rzb/nDt
t4a6RW0a0T44VOYLr/vCm+ANJz3dMOQFX6gzPzmuhX5O7qiAB/y6iibtBE/U
helchLnK2/70atLI6PV8Zxf45CuxolNwvWMr1Ql+imreooH4P79YcQ5myHtg
cAjeHCk6YgcfzOrnqlNH/1qlJmRLj68HW77tgVmkD+mfhsfuXkgt24X8nW7v
ehLWTcxzUIOtdbyTLOG4+L8KBWoYL4bQdxbwz2jVma3wjvYbY0dg5UjfNw93
Yr19j1t3CA65+jpyPXx95pbBQbjZn8EsaQfeTzX24n5YyltXiB8+GR+VYgR7
XQzrjlZFflgdVG0Av3N6/5gNfpTjNqEHC9ivdL+ign7F8ZSoDnzu9IFd88pY
b4Z792rBxZZxyzxhMX35S+owh3lT7YgS6s3p1Xd3wscOCsafg9feGXmvAmcZ
WZ74qUgjtrPv/yrCs3p3JK3gG56pYttgY62uoebt6M943I3k4JSdks8Pwp71
uz22wEOK9v412/D9H69M3Qhryj3W14ObHnypkYJvbBzmLFVAP/AmYVICbpdQ
aFaFM+ePiIvDciLud/LkaaT96GpjEThQoNBuCzzyudpDiB5fq2fkHsjRSIez
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
4DKPbJGv4wfCCR8Ti6c/5ZHbiskH/WG9Nwu2TnjCIwPGJw3PwB8r09sFCnlk
Rfg6eR8ar8Jlnj8Ijxz5NeHvCVgxO1e4M59HIr1r6o/TeKWsvdSQxyP3Zkfc
c4UPxNM3MtEf20x5R2GRC5sfPslF+yof53QITgmhJ4R4pPBl3toDsPEpm3fJ
D3kk/ccRGUcaL6xO4x7wyPkVMv17aLxoNsAcHtl/pbh6N7x4+5ews9k8snzO
wds74CrTYzInsnjk97PxwTbwMYP+2wcz8ft4KfZb4SkrTmnvvs8jO44ZrLaA
79Nyyhk8Mnz8nbQZbEXTK9/jkaiYQ9820XjR45Z3Ef8PgxUb4EtiF88sTEd/
1A+8YQhrCcwUl7/DIwqlYn768NsfV69KpvFIxCF2uy7s9VlRfdxtHhlcPGG5
No3X+9uFf1J4xEoqRHwlnFejseW/ZPy+6cNdy2m8nj1obb3FIz+1XYuXwMO5
Om71N/H9/FviF8NX7xYJlt/A9W/f5LUQXpu08UJeEo/EOmdaKsOt0VVz713n
kaKJ0xYpwWfZrVnXE3mktcZTZC6NV0DjukvXMD5k136cDT/z3FMflsAjY3JV
8mfBToc6Hc9c5RHRD2cuzYDH0ddj4zH+zqlynQon08dlV9DegmQ2S9J40eVz
HI98Ft2nNBn+qiOQvDkW4+md5FETYXZJ0Iq1lzFeu3Y1iMJq88eXL43hkbNb
lbKF4Zcy523nR+N62NrxhWCXybTCK8bP0xedR8GTx17xnhTFIx8KSwyGAhGv
wTnjBSN5JGbeD9k/sNV/ybG/LmC+SJ410A//+rhoYVcEj/zZpF/7P47uPC6m
Lg4DeMiSElGkxZKyRKmISKW0oVIphSSEkFIqKaTEnbl3LFFJKiVSlKVISD/K
lpSyhCzRZglFUhLe57zvf9+P3pm55znbnbnnnB9w/P8L9iR0fNDqnG/w9P+P
80J/+COK+wo//397Lwm96Uha0QyH5dv4F+xHf6yaZ/wBVj1T/u/MPgn1WH5b
qRG+fmzhgWN7JcQXP255By+LfTHqkERCA6zflL6B/4qWX9gjSEjysSH9JXxs
e6N5GC8h6Zz325/DswPZAn8JhR5ocnsK1635tnKFCP3boXf6j+BdS7e0uXC4
nsvPZR/CWo5/dtnukVBuV1ljGXzbcpfirN3onzyv0T14zQyZk5OjUR/eZRy5
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
fhjsd3h0/227cb0N6vlgWHV3WqJXpEh1hv1m7oCvhUwydIvA9XGcIL8ddvK/
cXdRuEgbji7I84fbPS0dZkoxHvxdI/jAsa4PqqaIGL/5wJneLC979oIK2uOY
SPkN8JtZxXLDeJHWtBzOWwfvMF0ao8KJ1Od9grCG5TXhvW4PCY7385mZ7vDt
EWsyf4XCqmfl3eAV6l9mfQ/B9Vx1Om85y0tpy+uPwZg/nx0TlsCnZNrWlezC
fL3iwMzF8PT2HT/zd4q0rx8vvwiu+spegMPxVvrk2bC8PkjVLweJtLnEWZgH
jyzpk3I6UKTTdVYzZ8MPUY0f2S6SjNYI+Rksr9vqhZHbRNofIJNnCSteTXAO
3irS/G9v+WlwarJuvU8A5kfx6oypLK9jqTs9/NH/LEU5Y/hbtEGfZX4iRQ12
vD8RjhLYC7Yi/VMbxk9geQVNG2fpg/Hc6NP0/+Dn3vduT9wi0hb/FFl92Hf1
XLtRm3G8L9ffGwkrLy2q0PBGe3XU5XRYXgsctyhtEulX+1vrYbCj1Zuubhsx
fuREy2jCbUbu+1u9MJ+etLyrzvLS/6Rdt14kg7P1YQNhEy32Ar9INk8OWanA
5SrN1s/WiRQ3wKRbP5aXQuCLe2tFUg8po97wkM6/q697iJTfc2toT/hWE9+S
sgbzf4aSZXeWV62icGI15jPJ6X8ycFd59IADqzA+b5mU+29Lm0Vi0cCzgrtI
PqF3gv/AVvePTQ5cKdKgK/PMO+CqLLZACOZvmWedrTDPtot2E+lvwKJbP2Bd
tn2UK+ZDxaKdDfBDtpy0i0gXc+eY1cOebHkpZ8zvh2///gz3ZK+bLhdJP2pC
Tg2cwh4/XSaSUfKJoEp4Pvs6aqlIfh8VplbA9aw8XYLxxWxzxxt4rz1bgAjt
Kft5Vik8frbbxsbFInktmbC9BH5mWv2nygH11sDdxsXwlglee1/bY/5t+9j2
FFbWbdQsXITj/TkpsxC+qr417fZCkeo1+IB8eLHSH/N0O5GeuxVNyoPbZCRF
Sbb493sDW+7AR9p7rDxqI5L5vOVXb8NT6tkCZ6j3mo765sBlH1TCQueLxN0o
MciCg0qO9vefJ9L2M32arsGDH2mdWjdXpDOXrC5fgW/eTjJ0noP+9NZncxrs
dnXMPdvZaP96J8alwv+SrzhYz8L8EPvgWzKccMy42mimSMGjv144w/Laf8tf
b4ZIVNZrYyJcKbAFFHF+F0aPOQFzQQWoADG/JVh9iWN5bbYbKWclUuk1p/NH
4AerSzLbLdAevqzzPASvW+o8+6u5SM7WAaP2wz1sPr5+Pw353wiu3Quft1rn
WWyG67mYT4qE503+9jPPFPV4X3GNFP6q7xeRPRXjWz2nw7O8tNgCrcirbldl
KDxONSTl5BSRZiv4J+6CnyrImx4yxvHOWbsyiOXVGVkonYw8zy/W2gb3/9HP
ZYeRSC/HWLz3g9NrD9d7T8L8XqR7fAvL682QXasmirTskILLJri16FQfJ0Nc
76BPGl7w4fujT8w1EKko7G7ZWtg4my0ALZJHytHY1XDpxUm5E8aj/bVsXLIS
Djx1w27EOIzvK8wGusIaRyw/qP2Heudrj5JlLK/dD7b0Gov66WjRQSfYNXRB
t3/6Ir1bd9DeAe70L97/Qw/j3xKH/gtZXuuXDq8djflqfd9nC2BLt/fpZaNE
Sox/GDUX/mjPFpgXaWXDDptZLK/ZX16Qrkgua8b2ng6PMNuy5toIzLe/Sh9Z
wHkT2lqSdVAPp4dFmMEeujuF+OEiPYocOceE5aUhM3Cftkj3+IfdJ8PnlMLP
SoaJ9DthTZ4hPFdWyXirFvrX205uPMuLbUc/VKSxUw9aj4X3sO3pNFG/Zo/o
pgePZcvVDxHJdVl6ri7Liy1fNxjzm4ZZ8HB4M3udXUOkA513zLTgfuzxdnWM
r91m/B7M8mJfdw9C+xh5N3sQ7MBuf9UwXm8y2z4Abjl2b373gZh/StInK8OH
9s9926GK+dhNt1UJniyyDXJEclI4dLUX/DrIsfODskjvX/z1UYC3b36z92V/
1L/kMUGe5bXGfWh+P5GynuZ/7wbnLP2UltMX/evvqIt/N7dZuNhssrikhHrB
ltvwG+60akaLEWkrlev9hE9g9DvcG/Onw7jPLbDFmH+NEb1Qv/QIPtsEf9Ri
G3ChPn5XsOY7LFHtpezTUyTJy/46X2GdnvtPrVEQ6XK948dP8L3OgROX9sD1
HHk4oRr2+MFOGO0ltNj1I9z90/DFFvIivfmjOOQ9nPzmXLWhHOrbOIvycnju
s3EBI2VFSlm6JfY1/OX+NXkNGZGCphx3egnvzmYb/GE+NHmg+hwem0Yju3UJ
1OD8tfgJ/OTUrOstfwU6mNB7/yPY+8jj2Z87BQqR07d7CPfdwwZUga5ETu9z
H74SWupZ9FugsYbLCgm2D3DruPtLoG+/vCJuwT/WV0dkdgjUXr199g34kJuX
RspPgeY1SuSvw0YObANRgWqGRNy7Cr+avdV0f5tAD712h12Gt5v9KeRbBWot
i7C4CKsbSFy2twi03ovvPA/f0GUFm0Cjh+zIOQs7a0TtWvFDIIOGTYGn4T9K
qkoOTQJxVS7GJ+HjsnEnZjUKpNUxu/UYbP5Ta/zUBoF6TBh/9Sj8oZ5tUCzQ
lHBln8Nw2McxC7W/CXS1249xB2HtV1c+qNYLFHTsSf0+ltcjYx+FrwLtXpqU
sgdek8tuCAWqMwr0jIDlr00/0PAZ13PS3JEiy+tcwfCqTwKFLx5QLYHn4G7h
Va1Aj2LeJYbAdftLpj+qEcjxZ+KKnXCEyDZAF2j8zlWagfCYHR/XXKkSaIm2
1psA+PHmda1nKgUq/PQ61hfetOabEPsRx1O0x2kzy2sZ+8BJoLjSaaob4cs2
HWdDKgRqk/n63BNeaB1i7PdeoATbQ/s8WF5s+8t3Ah3JMbFZBR9k22G8Fejd
3DeKK+BJbHnMNwL5d2zPd2Z5seUyynE8j5TFpfA29vpMmUCRN89Nd4QHscdp
SgXq82xqN3s4m3289lqgCrmC27bwctbdXgnUtdxh53z495tJC2RLBPItLjOZ
Ax97duNt2wuBJm1waZ/B8sqz3PSlWKCZum+uWcEV2Q863z0XKKXL0dccDklb
EPX8mUAunY/Hm7K8ThcPzSsSyH2w5Tdj+O6RpZeyngqUtfxSyiR49R72hZlA
K3I0PA1YXmFrniU8FmjZNInuOPhswJeVBwsFSvpQU6kPz/ba0iQ+Emh60syT
o+BPbm1hQQUCTdyd6DqC5eWwU9k7X6CAAx0a2rD+HJnT7g8F6p1jU6oJF5qF
T3R8gPYsdyJGg+VloHR/Tp5Ahlu+2KvBSiPZF/IC3f1j2E8VTtPQqBl/T6Dk
lG1P+rG8+p4M0LmL6xeYFdkHbpId2V3tjkAbvFpnK8IHfqYeViSBFuwcJ9+D
5fXNYNTf22j/l1bflYVLPl6/3nRLICW5mJAu7zaLra+mzam5KdD3wLtmnbBa
4b3S0hyBdPrXd3TAWbnsgR+BLhX0v94GL7tW1JGbLdC+0xP9m+Ff5xwjr2YJ
lH9ikUEjfOz4G43k62i/ORu+18PTDrinxmUKZNIRlloHvxM/mUZloP0sPeRZ
C4fs2PQ47Br6X9kp3Sp42JZml4CrAjUFXaysgO+sCfzmmY7rY34t4S28ehl7
oBDtffh1lzJYzlZQWnhZoFujM9VfwUnWvRKmXxJIfuGVV8XwTOP9443TcP1i
zx0sgj+NUSP9iwKdljm28DEcPuz4wqEXkMfe3X0KYL0BOh/7pwp0auq2R3lw
Yc/zPvIp+P8KK6R34Y1/x8l0nMPx/rSekQv3aWYPLAtECjrdbsJpn6bqfDgr
0Iup/25lwXZv6eqLJIGsol4HZcCNz2bNeHhGoJ6yF4zT4QN5j1/eOC3QmKM7
W9LgiTfsPdJOCZS6cO6VVPhlWmlrYiLy01P2Pgf7n3YTY06i/eq81k+CB8ZW
D4xIwHhqEfspEb6+h70QIZDRTsczJ+ClbHvd4wLtKldyj2d5se12jiHf5fc1
Y+F4tvxuvEAjfgeUH4LN2HI8cQJJbukc2c/yYq/nHRVoWuIThyg4mD2uF4v+
ftav325Yi318f0Sgp48HPJHCxKbzwwIlql6L4OFVI9kLV7geu2xnhcGyg88u
6Doo0BqFGplg+HTfse+aDwjkcG1bbhDLSy5906f9Ap0M675zG1z70/hvebRA
Nlv2T/GHpd9uRT3dh78fOqh1C8urcrrW3Sj0lyvxVzbBj14VXMrYK9BeucHe
XvCGQjvL83sEur79sP46uBexFzoFslZS+rQavnjN2T06UqBxeWGnV8K25z82
cRECBR5vWuEKNxxfJ9kWLpDuEdchy+H9B74pb5Civ6fnlTrBhlI/JILj/a4X
4wAX7+iYaC8I5LMgctFClteWkPszebSnwto+NvAAD3lHE06gyRstHs2FM5ex
F8Yxf447JM5iedn23zosTCC+f431dLjD+kh31VCBLAYa/rOA44w1j/QIEcjV
bEeOGWw69vSo37sEes/RNhP47TC9rO87cT3qu02aDO8acGlO5Q60t20WjYbw
UIzOJUECZQwPvDCe5fX3xvqCQIHyGtI8x8LuzWxBCsx/7z+M0IO7fX4QeXmb
QP2/K33UZXm9XTD4zFaB7LRMjg+HZzwvTj0SgP7qs2KZFlyTt9Rst79AHTVh
A4awvG68fxzsJ9DaHSefD4JHX1rj6usrkLFhzt4BcMHpL988fATarFg8Vxle
H7sleNkWgfrK1cj3ZXntZQveCKSi1XKnF3whbGeCpbdAwc7/dinANltlJkza
JNCi7O5T5VleXuE0aqNAEVMU27rB0SuUFg3egOtb1jP97ybcry8+9FHJC/NJ
vLz3b7h4joavzHqMB8Gdej9hv2knZdrWCbSTa6ppgVUNRx6sWytQzvmPiU1w
5ki2oJZAHk1PXL/DSwYbXnu2RqDtyzPVv8I/+2bNuL8a16M6ruQTfFTOvOT6
KoFeRu/YXw1P7bjnkeou0HC3pTYf4Tff5radWClQ2QKDnu/hnZVF4oEVAv10
6Z5XDg997agmuqE9RL0OfQ3nsu27XdE+P54xewmvYNt5ueD/O3r/fAZ3y/iU
v9IZ5/N14rUn8Cm23NdygUpPtW5+BE9nr/8uQ/2y4+qYh3ANexx4qUBCwKZP
92CRfT24RKC/0TqnCR7FbhecBKp8UuJ2C36Iu5mBjhiPx/IaN+D1Hvtv9lyM
+SN13KtMWHE5WxBUoEE2Jfuvwqm2x981LhIore92m8uwzXQd7+qFAqU3D+x5
Ef5ufP7vazuMRx1X7p+H940dv6/QViCZYXNDz7K8tDO0cm0EsvV8a3oafj7A
9HL6ArTn4g3tCbCv4h3Ls/NR77m2px9jef2b9fzoPNRTPUO8j8IZzWzBYYGe
vZbRPww7fbb/ETpHoBkPJTUH4Pa3pRL/2QLplf49uQ+Ofe6m4jkL46XiNpc9
sMmD6tPOMwWydPuqFgGX3/CaZDdDoK0vnF8ILK9Ljfetpwuk7pUfJYE1z2x1
nGyN9jbcYF4IfDv2T42eFc73d4z8TpbXXraguUDn29poO9wVptCjvwXau8ri
nQFw4taoI3LmqB8XXjT2ha03qI7+aYbx/LJMszdcvSIu66sp6vUJi9M2wMLi
YXMrpgo09EXiek9Yd+7ZsmITgXIPfx3hwfKaNtbrwRSBnu8w+OAOexqm/8o2
FmipxC/eDe45im2YgP6TcsXJmeU1+PbgRCOBbjd/7b8UXtBvxoVDkwQ67jb8
yWL4m9wjVDBo318Why+CozrsnuwwFCg7lptuC4//XuK62QDz6bq0v/PgZ5XO
31dNQP20tCR7Nuzz+mOw03jk4/XTfwas8nhd33njBFp9Qm2CFXyN2IYsAvk1
G36dBi/O8JtgMBbjyfp5Z6fCbec7aMQYgZq7ubkbw0dOhCwapI//n7NpyCR4
ykH5yl56As09HPh6AstLutv33yj8/QNhB/6Dd+zsL9s8Ev3nsmCjDw/xOXKw
Vlegew2Cwij4lofmiPIRmG8XSu7pwG7L2YZPqC+Kg4KHwf9s9WbeGY56a+tm
E0345PRLJde0BYoxXdmizvKaYrT23DCML8NtLg2Eq8bmtMVroR7Tn+ylAnPa
VtJ9Q1FPOwzW7cfyGvhQjdMUqPbEn4re8AO2XeAQ3N/0Ko/rCa9j2wcMxnhz
9Kpjd5YXW05QA/19TkQ/WTiFLS+gjvsldefCfxvbLOaz1w0GoT/01hP/wF/Z
4wdqGD+HNVt2wHvZxxEDMT85Zv9uhcexwxsg0OwLOzJ/wEWXdo5VUcX9woip
Pg2wzxmZW91VBPK83TKmHlY+Gm7zqz/u/wJTaz/D6XvZhpWod53cEmvgxZJD
3h/7Yn5Z3MelEm7dqvHvpRLy9M8aWAEf3nByX34f1DcZK56/gaesZAWCQKsG
ye4phcsWX7h8qRful46dmlUCB801tDqtiPrJ2rxbMTzYPOv54Z6YL3q+ynkK
3zQ0XxWpgP73Y/3WQth1FNsQF/31T8eEfPjv4HmcT3dc31Hi1/vwyX7PVDzk
MX4EKJ29A1vJO51ZKifQhaoDK2/DHzvYDYhAT/xUBufA3Hf3PAsZgTbpRpdc
h0dUfXKc2A33Vz8Voq/Bea831Y7s4kn/2655V+B1j5txxjzNlm2QS4MV7rAN
t3n6NNUlNwU+n/HvSLdOnuQO5QUmw3NThNGtv3lKVBoz6QzL60Sv7M+/eLqT
suf7SXjPQfYBB0/unl/OHYf/C1crL/rJU9jsGavjWF47j3vda+dJd06c5hF4
i4/O78w2/H2v+tcH4X5rz+9OaeXp28WpB6JZXsvHDznRwpOqirBgL+xgl3Fh
fzNPuUcLu0fCLdNNpwk/ePpipXRHZHlNufNkexNPR3vZ7OBg4//YB6g8PW6T
GoXCpdpPvq9owPHI5jbshAMHOoQ4fOcpx+DH+UBYo1dZ39nfeNoWpr1mK5zz
z+3k1Hqerv9YMNQPdmmpnjDuK087BP/SzSyvz153tL/wdN8k9sBGOAGzx4A6
ng70zVqwHrYs3lqp8Jmn6u4vu69leT1gX9DwdFOrnlbBkhyJbGMNT+rLu4JW
wDqXFQ5VVfP0O6OfkQt8/0zUiNdVPK2ZqNmwFF57VDXjUSVPDsW65x3hHlFx
M29/5Cn/gP5qezhZMgx3/Dzd8x+jacfy2nZ2bVIFru/20a/nw182jG2Pfc+T
3XHt/XPg3SvZF8A8fagaOH8my4ttR/qWp5/zFeSt4adse5I3uJ4lrbfN4c1s
udJynii0Yrspy4stX1LGk49NnuEU+Ap7namUp/OmyfWTYHv2eNNrnjbMF84a
wM3s485XPGXuXLFyHBzDhr8SniKKjDTGwJN/sQdM0P6mK7wcBb/+/m1svxc8
FZW92jsC3l7ld0u2mCeL/YmztWH10g6b9mc8mXl5dhsK33gc8v5LEdrHmjE5
GiyvO/Kb3z/l6XnoF381uDNj97/nT3A8t5PGqcInUvpH5z1GXpqun/vBFglH
hmUX8jTzRL9TfeAPB9kDbGgvluSsCIeFn7Y6WcDTfLmNA3rAw3fpFR/M5+lk
nUqRLMvL59Iq6UP8fOP18K4NbRYea42agx7w1DRoqXUnLO+cw3nn8fR1Vcvv
DjjZzkp11X2e/J7uyWiD5+Buy/Eeroez9uZmuG6KjdHcuzyNVUwf3Qjv/o89
IMuTW7l5ZT08dvgypwnEk+bjh/F18JOBFbU6uTi/igWOtbB3L49tardxPqpP
largvl1fevS6xdMlr/n5FfDlli2xf3OQV+X9sLewQ13b6B83eJq4c6ppGdzy
bmd2TTZPC4wvtJTAMcUy88qyeGpW0Ugrho0esgfwcXzK/Loi+FWO0gbK5KnF
4Muwx/C2y4d+X83gycZvQXk+rJ6ksSf5Gk/Gr1IO5sE5R08Oib/KU/pyeZu7
sEvUyItR6Tzd6nLungv/kVyYJrnCk3N+Wm4OfHyb4dOAyzxFXuncngWbb8xy
W3+Jp3k35xhmwBUr2Qs+PB3/vO/rFVjieD9k4UWeuMkvzqTBOvPmoUJA/0pS
dkuF75s/O2mcylMPY1u1c/CaiU4GY1J4SqoTnp1heY1+e2foeZ5KbmVHJMJn
h6yyVz7HU/zVOusTLK/+nyvlk3G+jwb8iYO/yHv7dSTx9FHWPOMIy+sXe4GQ
p9Vuq7wPwWMaAg99OM1TYLlk1H74cdW/ES9P8aSzPeHDXnhTqZDxMJEnD+Os
o5Gw0pNes3JO8mQy6Im9FL5yZ/+rtAQcn8b7Xjxsn6m27tQJ2Pzr/VC4OeV4
e8xx9Ae+Zdcu+CDb7vgYT15fOyYHwZPY9kfxPP3n/7thK1zClkOO40k6tOOc
H8uLLY90FMf35Yf7FpYXe10ylqdupZ81NsE32OOTR3C8n8pfrIeXs69TDvP0
Rq1gz1r4NyuvYjC/eF2duRo+NsOh98hDPCm/P/p3BTzNpOyY+kGeDvrtvO7C
8vqPLYCA9qjvvGUZHDa85lZXNE8rZSfrOcHD1TbYtuzj6WJn70p7+G6vpvef
otBf1T/E2cGru7ZufrOXp/5LLjksgOVa//x7ugd/PzOo91w4qU4SfXc3T+8m
W+fNZHm9V9DOjORpTJl8sDXrX8VRV85HYH45njfZAo58yBZY4emwJKzBFNa/
GVccLeUpI8Lk3BS48PKw1bzIk3f6t5VG8Maks83bBIz/f46rG7K84sbyG3jM
F57zisex/hWVrrqC42lG24/IMfAibkqSvYSnTUlHpo+Gm7bdNpoVxtPkrVP+
jIAPbJzxwCQU460nyjR4ojtbwImnuJ3em4bCLx0XfhoWzNOUdNmRg1le815t
U93FU0DPmPdq8CALFwWFnehvkuFHVOHsiZWxv4N4yhtywa4/vGy0p15DIE/l
pQYKSvCvId+zK7fztD/zKinC8f398Rt5qsowCOzB8ur+q7xgK0+vX6UayLG8
frEF4nharz78S5dXm0Vog/yfy/44vl2HTnXCw6p37znjx9NGWVnnX/Cd0v6a
sb64/imbVNrhVU+OXNztw1Oj38vCZlj2rqZ5yBaeTrsZ843w2czTT30389Tm
ddjsGzw7VW/FWm/M77FNLXXw54RLDcs28RT6ec7FWjj8EFuAkqesZcc8qmC9
iJx+Vht4iq7/qvkBfrTLKnGSF0+9E41fvYU3+j40GL0e7WNbSFQZrLTO5u5g
T4zH3vdmvYIvOb+w77sO1y9c9l8xbLdwWZXMWp4W37O4XgQ3zqjwa1vD0x+t
7Zsfw/tNPOS+rMb4c+LCqALYcBxb4JYnU/N3FXlwyXAf3efumL/+9Yy9C29V
a8+4vxLjTZXhwlxYrfeuWVkrUB98WqJwE77eJfM61Y2ndUqBlAUvbQ1fl+DK
U5TT4e0ZcAfbTt2Fp+V0aUI6HM+2V3NGfTM/73MaPI0tt74cv+/nq5Op8Hu2
/Noy1GsPq5eeg4PZ69hLeZLP+t4vCdZij2cv4anvo5b8RJjY17VOqOc620JP
wO7s9s2Rp0EOrVPiYbl95jvHL4YfNTQegZO4+711HDDfrqo9dwietX3e8YH2
PClplq3cD9dufPaf4iKeZDseDoqCpe5sgX6eTrWlP4uERzu9tW2yxfUfEBcu
ZXnNW1VRbYP26bTLkmd5WXzeXLoA82O2y89QuM8k767C+eiP06Zc3gVfHN0S
nTsP829VX88g2FYzSPvqXPSn1CqtbXBD/64rZ+egfxy6+toPju4uWsfNxvyZ
ELJvCzzxN9sAhKcfhbNnb4JfNuxfHTaTJwON3v/WwwHVai3+M3jSiHycuRYe
UHac95yO8WpwhPdqOPOJzgAXa54anlqNXAkvuXs+yc4K4+HptncuLK/M8ZOn
W+L445JjlrG8UjMeTLbA+JC+2MYJNjtpukTfnKfk+k45B/jtIbbBEMaLOadv
2sG7ImZv72+G/PNm+C+AhwY/UZA35UlYUzlmLpzr63D0pwlPero7q2ayvNaV
6dVP4WlnD+V4a9a/XFbcqDCGe52xt4DPLKyZ92Iy2r+BoaIZPGPmhjcPjDD+
b795ZwpcY9K04cYkjM8frQONYHEc28AM/WFj3gRDeJRO555EQ9Rvg2Z8Hsfy
wt1gjAHad+3thDHwht4908In8HTkldGS0XDvbqzBYHz+fE5JF77Qqlq0eRzm
s8GDHmjDNl/iVqz+jyeVLdyuofD398MancbydKz2y6TBLK8XZ0PnjcH4E2xb
r8b6Vz7bIBH17ZS006rwi5vpiQZ6mC9UFZ37w35XphjqjuYprf8qZSVY9ezt
u4NGIa8JmQWKcEYcm5Bwf+LTPawHy2vfI8zAPD18YT9FjuXFLfRv1uGpYkl8
Q9f6Nou47a/kPg3nKaWz4mwnbLrJJaZcm6fRecPcfsFv3NkGrOiPaa4D2uGd
Tp6Zd7RQn2YfftwMa87/PitjKI6/ppBrhHMt/F+f0+RpxKTOqd9g90ms4OVp
5Bn9H3WwjF7oz32DeXprtPh8LXyKbeegwdOcusCVVfB0tryjOsaH2/FqH+Bq
ttzDIJ6mZWQ/fQsL7PUPNZzPkxdCGTyaPQ4ykCcFhS9mr+AC9vHQAJ66Vv9p
Loa9WHNRxfX6qJhaBCs+ZTfUyCNswKrHcOpdoz7DlFEvWA9RL4AXXM85rtIf
/3+E1rM8+Huq1bge/VCv6g2V3oWjTz68/UuJp0I7dfNc2CCGbSCPvI70a82B
n0e8qPjYm6et3eQuZMG+wcu2lPTC9d7TvCoDVvGr6MpXRL0xtUI9Hb62jn1g
h/lD4eGzNHiJy1ftywq43+hIkabCPxf6pJ/uwdPtXrvNz8FHZ7ZbH+mO87dY
13oGNpm660WkPI4vxuJCIlw+TnZNsBzuZ/uorj4B79CJaPGRRXs8W60ez/Ia
1FfwkEH/cL/y7AjLq3fMgGXdeHo1LUh6CF7ZjX0hwJG5mYX5frir9eRky38c
rXDpatkLJ34Z+XDiX47MTtxKjYStKy4sGdXJ0atu21ZJ4aoXhp81/nD0n3Ss
Og+L+VnblX7j9417XxQKj7pl3lPmF0d92neLu+D8K/ePtv7kKO6j0bQg2PPs
PP26do4qv71p3gr3jGdfOHJUNzg4xQ9O2ec0/1krR2kbhrhvYXnxb9/ca+Fo
/LtMtU0sr+2rNl5v5mjzFpun6+F9mz7/SfnBkbfuB34tPH6V994TTRyN+eNt
uhp+5tSieaCRo3MtHU0rYJ/5QWlCA0dVSmHnXGBlyy7zwO8cVcyTW7EMzpjE
Hmjg6Og5boAT7KTXe+XKeo6UR/8rtIfb8dscvnJkW7BVYgcfUR4UNvsLR3P3
fJmyAJ7S40R/0zqOuvssb5gDl/3WOTXuM0eSbQ+SZrK8Gs8bDv/EUW7COBdr
llfN+HsDauG6A8oW8O2yDIeeNfh5x+Z8U9jtKXtgiiO5KruQKfC/u3f8Gyvx
9w6cMzKCT16fLV/9kaNFqzu/GsBWF57EvP7A0WAn21PjWF4nHUYWVuD8veKX
jmH9K6Ys8/Z7jjpOViuNhkdGrpid/g55dejljYAfBNe8TnrLUY3vhh3a8Dq2
PewbHI/SeYOhsALbLqaco4+FlZ80WF5s+dgyjnqkDjqhxvJiy8mUctSQOm+x
KvyNvV72mqPjT7cr9of3ssfNXnHUX+U09YHHsY+fSziaF1iwVREuYtPRS47m
dKsf2wPeMii+3ugFR0qpilWyLK8+2rhj5Sh2q+7RLk/0r27sgW+Ovq42s+uE
HdvGnuj3jCMZPzv5X3Drl/RxckU43tNuOW3w4Yopue1POIpoW+/TDBu/vG33
9TFH7V4+oxrhsvwZH94XcjS2W8C7enjHrUdbih9xpJ/tf7AOHpK+sNuDAo6a
DmyZWwvfOvtqf3Y+R8FRnv8qYdd49kIJR69TXTIq4L/7KtNPPsDv/7Jgw1s4
AbPvoTwcz3wT7TLYKvD7C+l9jmKear8ugas2+a/ZcQ/Xx6/73mKYX/Wrxfsu
R8tNPlkXwSOWhAqr7nC0Qfv+z0I4b373gU7E0cwxx9Py4bWWe87OzcX1d/Jd
kwf3MGIvrHHkfma6xl04RS/24YRbHJ1Q6f/sNjx/6NClI25ylHymXMiB65XP
fFbL4WjnkpOmWfCeHvqBvW5wNGTsqqZr8H9/LvX8l8VR5PBhyVfgp41GcT+u
c3RvarlLGrylJke/NpOjR/7RyqmwcrlVTlkG/t4z6/xk+OpT9kIsR5a2TbvO
wA73bN7SVY4ufoufmAi3XH+x8Vo68kyzrjsOx1xY1pl8haPW/TUn4lheiRV7
4y9zVHSYX3yE5RXjMXTfJY623dJSPAQHRX5Nk6Rx9E3+em40PDjEx2LrRY4m
bpkXsBfO8WsvWn8B/edPmX4k7OLJXrjH+JLi8UGEO11kmxamYHwI/BbDsbwW
RYTNOM+R5waf+aEsr1l9laec4+h2cFPXTrhyasypMckcVV/dlBkIS8YPnqh1
lqO3irUbtsI6IxLvKSdxdJpbru0H3x80anH3Mxgvhxa+2gx79LlY3XGKo/Pl
xns2wgoybEEPjj5nnbRaD59vy5L/eBLnnyXf7gHPw93qywSOSsvXXlgFf6m4
PzL/BEd7h953XwHvfjkPMxxHA3hNNRd4bMGz2ZeOcbSll9/jpSwvtv10PPK4
dj/MkeXFtqOK4ygxRNnYHu7Plqc+ytH2jS71tvAVtlxVLEc6O04lzoft2eur
R/DzqdVOc+Bm9jjrYRxf5/DeM1le7OutGI6G+rresWJ5sXL3EEeaCoe2msOl
q0QXi4Mc/ch9MMYUDlzS+5vhAY7ij7Z+MIbVFxzYNXI/R+oxww5Pgm9YDlLS
iObIJ332fAPY2YgtSIbxpMmr6z+Wl96I8d2iODppH5mhz/IampLbsoejHSVJ
XqNgS5UJCz/vxnwVdEtrBPyhR+aHN5EcZVo+fzkMDvtj6lMUwdEgvY8RmvDw
pjvd7oVjPJ34zVwDvlcz+0CmlKNVK1qbB7K8yp8MTxE5srnYcU6F9a8ituAh
+qvmL9d+8Ll7ZdP382jPaW3KfeA5WSte8hxHI1Y1POwJ112oWbNdgvMxrt7Z
HY5M3NC6IYyjY+NKDGRZXoebhBWhHCXMvlv7bx3yitw20CGEo12S1Pg/8OaQ
zrOzgjmaXBG9sAPu688ZT92F/ubqK98GX/ZkC6pyZPzX7sYPeJHrvqXaOzB+
k97mBvjHogF1qkFob2f+6dTDh2bFByoEcpSa8rz0MzzZVFvxzzaOwosT9tbA
r8cnxzVs5Wj6EC/rSnjbiP/GVAWgfUsntL+HB6lfzXnlz9HCAc2pb+DsPiYL
Hvmhfdy/srIUdpZhCzZz9Dxm44ASuLNtxqYrPhy9D9d59Bw+8fVR55ktHBUc
fxX8FDb/sDAqdjNHB18KEwvhipevhu7x5mjqfwafH8KhBS6XQjZxdCe59Nh9
WPt2pYXfRo5Gzdi56A58L93z2doNGB9lhnS/DXskf1+53IujfZXXb9yAux9j
C8JjvK2223wdPhv9K8zKk6NAhWqda/BsIVTZaB1HFrb+pZfhz4HdT49ei/6d
0bXnIhzhvWfiEA+O1ltEWKXAY1cr3++7hqMXX/q0nYWfLIldLLsa42VWVMpp
2HvB0Jo2d45mJfdacRJWsjoT8GUlR/ZZvMpx+JIR23CCI+uvHQ+Pwgv1Lx9+
7ob2ZLlh52GW19DJo/JcOXqYWTrhIMtL5eb1LBeOXO2sa/bBRmx7e2fMNz3P
Hd0Dl7Dt7pZzZFTb0zYC3sqWv1/GUUD1OhkRVmPL4S1Ff5O7mylhebHX45dw
lDRr0IYQlhd7XN4J1z/FS2sn/Id9fe7IkceE7Bfb4ePsdnox+nepbHgAPO2i
z+M5DhxlJ84z84XfJ7a7mNlzNG3v3kZvOOTwrm/jF+H3xz0+s4HltVs2WGch
R80FPZZ5srxCIpTU7JDfYIs+HvAa/74JirZob1G+d9xhufVswyzMbzqnAtzg
JNfB1DQf43X5Ez1neJZ9Iu4IOfqX3vpuCfxp1qiPpXM5yrqofmAxHGnKDpCj
JY9MZi2Cx0yYKEOzUe8pOP2ygR+PyD5wdRba73rvtHnwRnULneSZ6B9fJatm
w32U8q7GzeCoft/BgTPgNBm2IR9Hak4nH1myvNqfvQyzRr1pfj54Gsvrq5NH
gBVHenPSDKfCBz+8bfW05EjF/1LtZHhiCRsAUV/duRA3EX5Z8HngQnPMDwZn
bSfAAbe9k6dP42j+vXiZ/1heV1uMjc04erd1b6Yeyys5KF/flCPnBTu8RsLL
j7ENPznKm+4xVAf+HS3W9TdB/ec6v1gLjhd6B8lP4cgl9j9xCGwWdECxYzLm
79ZeU9Xhd96swOLojH/ttwEsr9UnxnyYxNGFAbcSlVleqA5eTMT4WrrPsS98
d0HKgoeGGE9uufXsDa+ymvDuhgHGy/t6txRg2clsQ2HUa98at8jDZ/TN/iaO
R/swvjZCBp6pdTcqZhxHi8/4lf5di7xU5mhF/MfRG8Pxe37DEQrsBo4jh6pa
i5+wfqeD5ZYx+P8Zcc0t8KOmsmer9TnqmzIvuQneULvCfYkeR47Utvw73PtN
TdO80Rzt/nlC6SucVsQ2LOfosv30u5/ghfeblA1H4no9rQqohpuytp3W1eXo
ycZQvY/w/oudE9VH4N/Hqr97BxueYh8Q4X5EKS26HH5xuKdjlzaun7LFjNew
/+59Nc3D8PenPG5/AQ8MHbD1kxbm31DH1Gdwln989zdD8fvqyt2ewMvWax95
qonxI8BF+RHc4Zo86u4QjrqGl+c9gOPs/8vKGIzx94dD4D3YlG2nqcGRfHXB
WILfse011FHvtJt+uAmHsOU2B+H6jU05mA0PY8tvqKHe4VVnZ8LEXscZyFFI
Z9CvdNidPZ4zAONn7LuLl2AZ2depbqoc/XQ0c78An2bdV4UjXaMjqufhmfWV
j2cqY/ya/P1hEsvrg6erSX+MP8usdpyCw0vYF1w4nxPR4xLg0Y/8g4f15Wij
/NuP8XAB7qZVlThaF6UTEwt7XQ1N6NGHIyeTdXNi4F7nuk/43QvjRffk3/tZ
Xsf20HdF1AutlWlRsN1+5UWVPTFeyA9etRtuFGI/lijg+KfYDQiHo4OG+hb0
QD2/NySfhw02sy/QcbxyF3aEwcWr9Q9elueo89jLccEsr6WXdc7IIc8lHR+D
WF42k68dkcX4MEkjZht83ermjN0yHP02NJ7jDy+ZbF0S3I2jIw4Lf2+Bf+rn
e/h2Sei/wx5pm+CjWrZtHv8kdPvXVncvlpfqS3HZXwnNC+NV17G8FNgDOhJ6
qhf1cDUc3FmRbPlHQotaDgathLV+eEyZ9FtCTz7E/OcK59Z+zR/1S0LTGw5+
WAavfOOzbHCHhDK1og46wd2etdcp/ZSQri8/y4HldX9XkEy7hPbXbu2wY3ll
y/Zqa5VQx06PCwvg2osR8XUtEnIzWrhiLiyeYg8ASuhOX2PlWfCoIzE3n/2Q
kHZvjTxrOH/3YJv7TRLapd+xzQJeH5r47nqjhMq9Xuqbsf4VMMo7tUFCE5+k
vpsCX1x/8e+J7xKKXBQSbQTbuk3cd+CbhD622043hL/bZ2uJ9RIyIo22cfC+
2RaXA79KKCKl8twYeIIZe8BYQu8zzzqPZnlNmP98ZZ2EDGrWKumyvHSfuy/+
LCHRSOeONjxAY8mP2Z8k9Cb5jd9QOEPpncS0VkLjzaJHDoadZFerjK+RkPDD
skwNbm//fHp4NX7+0bfdqiyveu9JA6skZJh32Lw/y+tjy/2elRLa/dG0qQ/8
toS9wCChT1rvTivCux511TRWSGhmaJBTD1gzV9xa/V5CSTKqPeXg21d79yh9
J6HuyedzujzaLFacO3Ck8K2ENmwy9e6Eux0fNDr3jYReORYM+wWfZtv1lkvI
aqXDizZ4Btu+p0xCV/aUCc1wNVvOt1RCI944T2mEBba8z2sJHZ9f/qUeHsle
93slIY33i4/XwQ/Z438lEoo7UGhXC69nXwe8RJ7rzWWq4F6sPHghoYvuF69V
wBcmPzWzK5aQ+c5B697CC8YsfmL9XEIlWSHqZfA3rXLXyc8k5KdWVVgCR6mu
/K5XJKGBsdbBxfCEnuwFTAnR1BMTiuDizg19+z+RkO+/1spC2O9HU4LcY1Sb
tXNj8mGVT9sm/HwkobrvR2fnwdfedNLXApyvem3HHdjxGbeoIl9CoWvHXbgN
tyON4ocSWlri65YDx2bv833wQEJT1l7tlwVPTRsgeyMP56feePca/OYUe8Fb
QirfRwdcgXcc0cYdl4SUalxHpcFD9iRfO3RXQqp/o8pS4Fuh/80MvyOh4SY3
dyezvAKuluxAdTz1cM20MywvL5O1m3PRXwb0ajwJn3LLbVt1G+0jc+yp47C1
w0yp0y0J5QXOWxwHV80uVJt3U0I9V6zpfgTmzdgCEjj+tUFZB2Fdg9dTDG5I
6Nq+PV7RLC9d14IR2RIa/CZuyF6Wl0bVskFZEoqak/Q0Albsu/5Lr+sS6lOa
GirCKbINQf8yJHQ0Is2Qg+f/9O/VfA39z/VidQhcX/8rvvYq2rf9ucM74b0f
Q8eWp0ton1fCnECW1yu2QI2E7M8c+BUAP3+0x+bO/yi687icmigO4JWUSIs2
pIhSpEWKshQSIlsRpYhK2Upan/0+dklR2UKWShIK6SVxKEpFlFS2KCFFJCmi
3t/47/tRPffeM3dm7n1mzsnC+fdymSHwljvqb65dlpKMaJN3EKx+7cjm9EtS
+jpsqepG+Gq6Xk/SRSk11026F8DidSIlNjZTSr8KdEL94I4DY4ZvuyAl9ZJ2
wzUsXjuzssIzpDS5razaG7bl20xff15KEVNO7/GEa4NYAiwp3UvfMnk5zPOd
sWbxOSnpTZz2xQ0euqK4zTEN/cPHvsmL4VsuC7ZNSpWSws3SRQtgrxnPBpmm
SOnwpX2y8+AeG48U/bNSsrk/99ps+DRmL4POSOnTX1l/R3j6cP/7fU9LKXP5
f9rT4XqNlqW/k6W0rSrw4VR4Wz+WYE9KG0O1+XbwqH+/wt+dkFKg9V3TifCD
NqFC1XEcv866N1ZwwEe5I8VJuN+G9YuzgBVZOfBjUnrqeG76OPg8Kw92VEq6
+6f/MIGdWbrwI1LidVWnGMHNLH3YYVzfneuXjYT3se3Eh6QUbtOlMBw2Y8uL
E9GeFbff0IWfsK8bE6RU9Edpw2A4mD1+xCO+avt1tWA17kbm8oNS2jRX+bE6
fCXMfur8A1LyObtbrAK7rr//yD4O56ffazEA/uk9Dz20lGLyt9Yrwoddn341
2o/2LGyIl4cnznEXD4nB/b564SxZuGYKSxCM8cA3t+OfL57XLdeekomW0p+9
Q9P/wEOMmix+7pFSfCV/RSecNyTo7qfdUpoxrUbpJ+yl8nPxq11SUiq1uPUd
7pHj15fvRHuK2rHpK5zc2RtSsENKjc7P9Zphhy875XK3o31NHfnkI/zu3YCE
jG3oD103cu9h6XOWgFxK6/dmj38HjyrVyTnASam0oa3hNfzgzslZOyRSmr3K
IvEF7H9t1PNIMcaX7kCnaljhfIb/RhGu363kX5Vw+gmLX6uEUvI8+TT9CTwX
T/uuAik5nulZ8Qj+vHOKzmy+lJyKTfqXwPv499LteFJap7ro1gPYLJgVOJBS
Ci9kUwH82PfxwxGRuD59D+gRHLTCzUMzAv1jzoXyW7DqghefFcOlJL/znuQG
nD1jNb87VEo5kVWW1+ElEz/0/7YV7TPmff0VuH3sxuMNIVIKKmyNvwwnDm8z
rd6C9jTsl2MmbKMZmV8SLKXTR37/TIer+7ECKuhvrX+npcKR/7a9yd6M+cbP
n+5n4ME/+gWlbpJS9fMvisksXh9je45slBL/xbsbSSxerzTj9m3A+NT7dP0R
+O+TpOGS9VIaPef20ET45P0R2VsDMf+5klZ2ALa/eW76ugApuU2LFu6H314a
V+GxDvdHywazaJg7ywo0SUkuf07dLnjkEdsf0/1w/S+PiNsOF+67s83aF/17
YYcDB/txszRM1kpJ8U/RdyHcN7w0RXeNlDpdE8/w4HPrF1ur+khpQLm3awQ8
Z1X1fbnVON6No/qEsni5ei375Y3+cuyHa8EsXnMaPnz2QntWTvHbBJtOZQXg
pJSr6q21Hn5k2apQ4Ynzt9Eo8oc3G4Udue8hpTWiBxFrYRVWfnAFrv+nUOPV
cBYrR7BcSqdC9WtXsnix9ITuaK8GD/asgH+wdAXLEO8fAXbL4AS2fWEp7ucP
Cs1LYGu2nMEN/fXvM0kL4efs9YarlIot7ebPhyPY6S7B/+991D2HxYvGXFy6
GMff1+viLBava1lT5y6SUtjZT14zYM/zbECX0r81wQPt4e4Tt7wtFkjpsmP7
7cnwiYMzWke6YP40JzRoEjxtV7FYez7mR5u/6VvDdfwFqv3nSenS9YAnlixe
wayALf7e8NcSM9jAz8OybQ76v4sulmPhghVv7zbOxvi18ua70bDvAv8ltU5S
+mA68uAoWH4me2DA8evvnjECTpsYspUccT9MaGobxuJl2il3bSbur41OZ4ew
eA0XJZybgXjcT3bVhvdq9jFMmi6lZdN/ymnAY5VYgWwp6dc5XVOFy/6pOEnt
MZ4nJ/gqw5t+JD4Pm4b5JfdGQwke+GnousCpUuJ2jLrfl8XrFXshIaXfF/zD
5Fi8no7evWiylJLbUwx71+J5/f5FHUc7xHdVXVU3HH/T6vxEWyltbtHc2QVP
uHzDduwkKSUlzbHpgKvO2pfoTZTSj40RH9rgCLQWdRspRa0+c6gVHhwzr1ne
Wkpm4Q+dWuAb3FN+lxXGx0stHZ9gj3D2wlNKIxUHnGuE/6x/ffytpZR8t492
r4ePr1o77pmFlJ4Z2CvUwVPdmvKLzDEfa1iS+xJ+MydoQZ6ZlBwerFlXA0um
/nxzaZyU7Es3a1fBI8bzg86YYjxoCy96Ct8zkulNHIvni8n8iMfw2qG74vaM
kZLXOf7oUriPKvtCBeOvdWR1EZzWJz472FhKKo3Buwrh2V06M3xHS2lCrt/E
u/CnLycr3I0w37+w7GM+vLd+1Np5hji/ezMP34THVGf8mDZKSmW/TWfnwqWl
FtvHj5TSjaXqv67CG+m6hpGBlGorfqRlwco5U1IHj5DS2JCnyy7Cl8+zL2wx
P7S60DcDXnRyzoNePZyPNnc9Df5+8PGy9mHor4e5+p+FD+5y+/hRF+PTrBFa
p2ArwYuIl0Nx/WKb7x+HnwWvViwfgvGwOzvsKBzGypsOxvwnOtTwEKzNyp3o
SGnwFKuqg/B/LP2pNtqnytftsfAKlg5FS0rn+6RO2Af/ZtujNHG9dZe/3w0n
seVSGpivLVNI2AFPYa9PB0lJ88qVmVIWL9adqqP/tfD4IYLFSlrDVqlhvH3y
9wyfxQuzqyWqUtoSf2JJJHz3x4hpTipSWhppKxsGr/l07rHtQPQn4qfZW2C5
12zBmZQepPv5bIZTn15tHT5ASq7tP1U3wE4PbCUa/XE+6DPXwR9v3lFVVJKS
dptSsC+8+/Ks038UpbQoJVbfBzZJKUUPKKWCSNVyL7jkyOJ79X2lFBwUI/Jg
8YqpXvJcHvPZ3X3N3Fm8pF4ND/ugvRfwX7vCl8LZglY83wz/sm8Ri9eGwD7Z
sojXKY8pLvC3Va0JKTLon2cUNs+FD7iFGR7p5WhR3zFJTvD4uX9yons4SmqJ
dp4JV07lnMT/OBr5s6nLnsVrvEJ1yF8Oz2OO56fAWqNj1vl3c/Rh47HltnDu
0EGdK/5wZPSqRcEGXq7KFsxzdHrT5NzxcFcf/cHTuzhaMWKnvzmLV1fK+Qmd
HC3+VaZpyuL1dYyd8S+Odraq3DeGX9dnlQzt4OhPv4Whhixe1TaeKj85ynTa
O9IA1i+71SzbztGJ1LsVejDRDEFHG0flRj+5obBPTvGAz985si8ZZakDy2aw
DTkctcYueqsBp5x8Nu5pK0fvIiJj1eBZ8R63C79ypCY9Pm0g/GHX2wX/feFo
26VbX5TgXQL/ugstHNn8rTmuABtvaQlKbubIZPP3eX1YvPxCeg9+5miVTN8/
vWs67Dd4dMbtbOKo+rpWxl94wELRCN4njuL2j1zxG740k23442jfblPFX/CC
SXtn+HzgqDTFMvcH3GqqWunWyJFLw3j/b3DciENr57zH8TlaaH6BLbV02yc3
cKRTZFLYBFcqndluXs+R30b9rR/g0J7RmiPfcfTTSs2gAdZsv5iq9Zajh8N6
ntTB1z9Z2SjVcVRv0iR+Bbu/ZhuKOZq+vNysFu56au/+/RVHDenZr6vgYw/u
f3z/Esc3NG5fBTw5b15kzQvEJ2v95HL4NSufXMvRpoDpn0thISunVMPR6Bka
R4thPZZeuRrXa1rD7PvwHZZu6TlHW1Ze6rgLr2bbL6s46j0elnoblo1gCQs4
et4zyS0PPsu+nqnkqH17p+x/sCObrlVw5GF6Lfsa3OgmExPwlKN+HRtWZ8M7
5+4atvIJR//e6atcgo2nKV9aWM7RtG/l+Rnww/Hx02Y+5ujBcMHGc/D60YPL
bR5xdGTrqKEpLF66yavGlHF09VPxw1NwpipLiMKRtiQw8gTsIn9BolbCUZFt
39HH4K9dFmryDzm6q5lcdQiO/Xr9dGcRR300JmyPZ/FqmDK+5QFHiRPuj4+D
K6rv3au7z1FwxJJ3++CtZXNcKws5OvTqZeweWOPu44YHBRwp+vpM2wnn5LiF
3ryHz1NuaJHCyzJYwiWOntauThLDnSdXJ54mjoyLX8wVwEfjPxgm3uGorGZR
ZyRst3vj9d23ObrdvyAtDH4paHMS5HP0d7Xl0hBYsCWyOugWR3tqkuSC4GH+
/9atzUN7CpG9sgG+7bG9c9lNjmLM/FYHsHgtVNrjfIOjvsqFA/1gGUeW0I2j
R8r6+T7wmUlaGZa5aF8W4Ru84ZnjjtsZXudodvjDwZ7w+xEGeGLA57/WKXaH
d2ilew64xpFsgG+4Gzy6v1lLzxWO3DUyRy2Gi3uuCn5kc9RT31rhAge22yp/
zEJ7qDTnnGGlpjsnXlzmaOrHDeaz4QuvWcJItB/dlNcz4fkVpbfvXkR8Qmui
HVi8HixemJOJ9vFV0W4qi1dedV36BY72R1t/soUtsryCj2cgPs7eh2xYvFIa
emPPc5QydpujFRxyNPDAtnSOTM1T2szhQftbR0ScQ7yW3j1lCl+Thl1Zn8bR
xBMvFpjASyNYQlqObip86zaEf6E1L07hKDZB5oIBfGS1gu+ssxzlz1RZoQ/b
Lo1pn3QG56M5WEEXfjF30A7T07j/++nn6MD8aUc1h5/C/+uPWKvJ4mWlnzYo
Gb/vrq+mzuI1OtVG4SRH8VcG3xkIr9IdW/T7OEdkrrqpP4uXGkt4zdGMctmh
ivBp+Ymf3h3jSPfA9+I+8AxWnv0o+p+wV+EycAMr13aEoyp+wah/PogXS99+
mKOclLSK37ARS+d2iKOW1h2SX3AR296dyJHAy8esHQ5gy70T0J6+THr1De7H
vv6N5yg1ecDeL3AGexw8iP469NXEz/D85JbuLQc4stqQ3vgB/hIfEuMXx5Fk
e3B8A7x/d+ewFbEYb2jC9LewhVB0af5+9Dd6P7++gp9s6WPvEMOR9GT28Vp4
i//ecqt9iMf09c7PYXVP1dWjozma01e/swK+uvDQtyF7Obr2pTy1HF7qyAp2
4Ph/CVzL4I5JZ9Rkd3N0aqSRzEP48DjjMz93cqQXUnrpPjzJ4NL4ph0c/a7f
uPIeXKs1oeDVdhx/uJLSHZjf/6brk20cFY9Nyc2DdXvt3xdI0R7k7Pz+g/Pb
74fmchwp/StVz4FXNc1DD8NR7hAPyoZ7XrOCQBzdX/F+0yX4FGZ/B0Ucmeet
H3oBnl70+voOIUed074Un4Mb8tbOjhJwNKJxQ3gKvD2rqXojn6O0ix9GnoYN
U4MCVvNwPx/xenoCfnD0Z6drFEfPUp+IjsHr9vP3zI7kiFdlb3oYVtwmM2Ry
BEfc6Au18SxeEazgGEefktR3xcHzNipPNgjj6PL48AkxcMvq+FLNUI5eNFe9
28PitXTwyn5bOfItsozdCZs5swBj/L+/Z8o2uHyaofBbMEfJja+bxHCw1QXl
90GYnxibHRbAasaWJ6s34/djeI5RLF66uWalm/D3NQq+h8FuaqygIfrr2wrJ
IfBP+YKFVzZw9H3vnPlB8KHfc96mrsf9ELWjawM8sfVx8NFA9Ld7b6cFsHg1
sAEE/UH+D1c/mFfz4oBkHfqzQYYya+Chj1YbhPqj/4lecskbvnX3w5V1fhwd
NhJ4esJe1zfO9PTF3284rbgc/pfBCqZy9OteQY4bnJwc6TtjDUd3Ct+tWQw7
JPxrt/bh6MunPyoL4Prd23eYrOZoh7l6vjO8TcgmqByJj4xaPxseFRKXpuqN
8XiklbYjfN9fa2IfL44uPp1a6AD7ex4v+uWJ+cxpxy1TYYVFBsubPdB+E2br
2cHnHVlBZo6E551KbWBnVg5yOUdNb6dHWsHNrDyEO8YHO1tDC3gfSxe5DOP7
ddMKU3gcSx+xlKMzS3XFJvBjtp3EjaNsLUVTIziILS9x5Wjc79YaAxYv9rpp
Cfqr3sod+vAV1vwWc+RjfG28Luz6hhV852jI1rg6Hbi9oiFmzUKOHN4G7NOE
E4sC9ZYtwHwuaKqtOmxzq/XSXBeMZyMGfhgIV2exF2y4vzpeHOwPR6X+KbeY
h/73y1l7RXjIMW71KGd2fwe29IHz9it8157LUcf0MUdl4JXbYrj+czhSP/Vx
1r/VHfZ/Iwap9zhxdHT46bbfcPLGo2faZqF/LliW/At28NG3+uCI8Wa34vx2
+N3S1ILambgfg693foO3ObMX+BzJ81enfoFH2me/p+noH8/1XfIZLrSaGHbN
gaPKjvR/H2A/43z5dHtcj4DZFxpghWEzDyVNw/yx+537Wzhd7aFR7FTMt65E
9nkNz+27MFc6haPz0f2za+HPv5/NDp+M+33nMa/ncHSrR02gHfqLFEOlStj0
PfuCEPP195nXy+HHNf5diyZhfJ9tsbYMDnrUssdxIkfHyy6rPIRV74UMmWTD
0fDQsbfuw1eud2aMtcZ8Z9rZgHvwkguiyfoT0J+O0da8A/9I7lOmboXjtd11
Nw9OSNi7su94ji6t/7HpP9h6j+qXLgvM7257DsmBq4VsAQKOfwI9yIYjQ3QH
vjPjyPXR8K2X4MHrzmBGjp/fLdS/AN/0NDYvNsX19H9eeg72XHTpTt5YjpT9
x0amsHg5Tlh0eQzOZ7dg1Gn4pO3Nt2dM0L4fPXxyArY3c9hyyJijxgmDhMdY
vAweyOwdzVHh7eUmh2FOmy1wwvx5w7GqeNhgQIXBFkPcX7Y1XBxc0Ot+1XcU
R4Zj1c1iWLx+vp65fCRHb6bNebEH7vt57bN5BhyphPF27oTPvWnytR+B6/8o
ffw2eE5l0M/xwzH/n1P5Rgw3Ff3cYaTPUdCHrr0CeO8tvtYQPYxnaboTo1i8
stkCSsxf90xuCIMfpe6aKKPL0YD9y2JD4M3HlIvbh3C0O2fT5CAWr9j45Z8G
cyTqkXzcAGexcrM6eL7ZEBcfAC9m5We0Oar9nWTvB7exdLRamC9knm32geNZ
ehpNjoZJzh32ZvFi29U0OIoIPzfTE37Olq8Nwvgfe7bVHY5gr7PV0T+XJCW5
wTpseFPDfN84bvZi+Ibx3E2RqhxdT5f8cGHxGlb+d4MK4jFvU7Iz3K22dP+q
gZh/qS6bNxs+0felnqsy+rdOu18z4Wl/Vl92GoD+UVb3rANc1/rB3q4/xh/z
rgVTYcl7tgEE/buo4rctPKK2bfWIfhxt+HYuzQa+9yjyu4Yinje3Ry2xgn3v
/eMUFTB/nDz7nzksn7tdvVueo2gNtQxTOO2C0tnWPphvqFYvNYFnn4qzapDj
aKvZURkj+FOCVuFzWcwvgtwvGsB79hx3K5HhyLNCbYU+7PZn5kNer4QGLi/u
owsffr/ws88/CTn28rJ04BePPPvP7ZbQnxKTlZrw0Nx1pha/JWT13zMFddj7
1FYX7U4JfSniXx0In94j3vzvp4RG/9Zb1R+uD2ELGiT0ccFtJUV41MrDWWXf
8f8PVlzvAwfMOvv0aquEmld995GBz5tdbjv2RUKWujuU/61Cf66dN0jaLKHu
3xo3fsNmMkUTApsk5Nx9yvcXvOVzxdJFHyU0dLiJajt8pfJN+MRGCYX4X8z7
Bv+89fmwXoOEXMrHrfsCT0pjCyAldNEjQ/0zHBUr+6LljYQOKI68/QHOixz4
p/KVhP7WHA5sgHt8hujmvcD5lSpqvoUdWHnWGgmtfRdGr2ApS9f6XEKrBtdt
qIUfsO1bzyT0fquj9nNYkb3OrcDvf0u9VwHP/bb07rQnEuLi5DaXw/tq2YYJ
CR1d4jW4DC6/t0lOuUxCdhOvFhbDqplRo9ofSsh3mnzwfdg1ccesl0US0ghw
HXoPPiQ64H/vvoQWXTvx4DZcve7ErvMFEho08v2WPHjw4vPpcXdxfNeMhv0H
e9nlPIy4IyGbAL/ia/DJkXc/e+dLKGHaqa3Z8NsBbIOlhEQTq/UuwaM6akzH
3ZDQjyVKJRmwf917F41cCbXF2Yadg88Vf9v855qEBN99h6fAn7O7Y+uv4HqG
7is9BY9LUsx+mIX2MiQr/AS8ebtGRdYlHE99+YhjcPam4T8OZ0po8KPmskNw
+zJTDXGGhLxfyEXGw9YOLCED2oOSzsg4OMLEcZlLmoRiVxo/3gffVF8UMSEF
n/90QtQeuPuP55GhZyT0K2DqqJ3wtMZ1N2RPSajHYEa5lMXr8dYXTScklNgz
gyeGC3PFf54kSSjvn72hAJY/Ha3731EJbR5u+yQSnsPKAx2W0GVfM34YHM3S
BSUifqX6RiFwGVs+GI94uyk/3QwPZNOJAxKq6u3gb4CXmBfdnRwrIffyV0YB
cLxOZb1BjIQC6fZTX7hKpk5OKVpCA54dF/jAOs2fR33fLaHpShGjvWGPZx2z
anZKSGGtS4UHfDxfdt2d7bh+b/SF7ixeaSzho4RmC76OdoMN4oacj5FIqGDK
jYpF8Nooo5JQkYSe6kuELnDamvHNngIJbTWcaewMN82bNmAmT0JpLrKVTvAY
a+dxYyJx/kfyhTPhjZi9qIVL6KF8mLEDnKWwJqhzq4RuJBpXToG/f9sUV7dF
QlPn1AhtYasXLEG0hJYO225sA4cX7Ki4uElCcpqmlePhG5kHfiRskNAs8ydC
c/h34gkNQaCEdDcGG5vCU8Xnrdeuk1B06YBKY1gSkLPM2Q/xdkkVGsJ3F9+N
sFwrIeM2W2MDuM/kR0d0fCS04kZJhR48e1TtjR5vCQ0/6y4cCu9WZgUlJCS+
/Ha0DlzS8e3PIw8JRbzxq9Bg8WLlqJdLSN7io0ANXsjSUy+T0NgU39ED4QNs
u6ob+ie7N0+V4Gfs66sliE+7q0AB1sbT7OJFEhr/5L5RH3j55kn3Ji1Ae3ps
9bTXu8M+yd2xQX++hOpaT/D/wm8cWAEqCZ2w6mP0G9Yfs9Lw62wJtR/1f9IB
rxkU4FQ1S0KNBvd5P+DU7q3rbs2U0JbH+obf4A+N4t1np0vo2PHw8hbYuDz6
/F57CXnFPIxqgjf+d7hky1QJ3TqlM+oDfPH02eblkyV0/fnax/Vw697LAxxs
JTTP/EJkHTw+lBWslJAk46vBKzjMq2jBQGv0J3PMHtXA153YBEBC+YrrI6rg
3+Z1ca8sJFTUfHpEBTxlcHN2gRmO73tV6WNYKPurIsMUnze4b3gpfKdZtv3A
GPRvvuOHF8OyVQM1o4wlNKzCo6QQdrw9xGa1kYTs14hD78I7z7EC1xKS0Tyl
dxsuiRsfaWYgIZ/Pt4pvwv157IWBhNbUV4Xkwi5rnW92D8PP//2sew2Om7/s
ZcNQCc2w636QBVdYr+kuGSyhkcf6bbkID2Ll0LQllKo7aGgG7M7So2mifd/V
uZ8GH2XLpQdJKGbPkKCz8Av2+KSG+GzVGXwKHlZ44vQCFYwPEvWC4/Dqi+wL
Bgmdy1LcdBQ+cyinQbe/hH7K/tE6BDeI7/bp0w/xjGiig/DowEeGzX0lxFN5
tj4WDlxS61TRR0JXHt7U2AdnTGYdFj4/7cTt3fBX9AanesU0IE0QsAO2GPj3
/K5/YrIsdleXwlt+KZZu7hZT1wDzWyI45y1bkCCmdaGy/nz418PhylM7xRT1
76lKJDzpqqnZqA4xjb9w4kYozD8+aWH/djEd4Pmt3QLf3uEY3PZdTIc3mihv
hns3LzpQ2yqmGVzT9fXw9OUrr9AXMcX/l7p6HbxjekDluWYxxah7K/nCRWNC
2/c3icksVv3aalhRgy1gFFOYWYGXFzz/b7SNVyOO71uQgge8/8Nh3CFi6nmm
k70MLi8/Gzn2nZgcXuV7uMLqNy4fVa8T05i+q/osgpeeybvZ9UpM+Uu6L86H
D0UXvXz7Qky/7ya6z4VrQiu7i2rE9M51rIwTrMvS8T8X0xbF/IwZsDfbnv9M
TBfrnN3s4WT2dX0Fzr/22d/JLF6D5TjfJ2Ia0eFxbhJsKKdyZt5jMa2yfr3I
GvZvGVIwvkxMsw57/rZk8aoyej+4REw1Q5+fNYNbbo+XlykWk3bBfJex8Lj0
aUaf7otJLuZOx2g4+IDz7PICMR2LMjs1Cr7KYxskxfR299G5I+D2tWv2nLgj
psqbvW3DYBuXzRnb88W0VcX3+BCYZ8Mr3ZAnprs7C2Zpw7f0d7YsuYHrMVy/
dRD8V/Ggsl2umAJehx9RZfFqO2E2Igc/f6tkujK87eX5hYpXxVRye0hzP7iw
MCe4NUtM0gb/hL4sXpdYQgUxNY+5PFUOdj786Ep+pphkEn986PHC+CeprUzJ
ENPDERPiuuHHgY3t0elimvk02LYLVnP9rrk1TUwbzp6v/wm7Tvlr45EiJqcj
b6Lb4ATDfsunnxFTxWUV61a4hnUHp8Sk+nnKm2Z4SOfwYyon0R6c/Hd9gj3f
sQRMYjr7INqiEU4umfTq9VExxveLte/gd6z842Ex/RtXKn0DG7B0kIliuqnZ
OPYl7M+2h8SLyXj4n2fVcDp7XXRATPNclEXP4KbloZxPrJiGnxg6+ik8dobk
zJwYtA8VoyeP4KCx+wrMo3E9UkyjSuBsDZawUUx1K80NiuC2v2fl/+0UU/RE
s9IC2ObjZaPG7WL6PMEklODIJ3mzy6S4fkuHD8uHb9woCrgqEVPp4UEPbsB/
z1TuOSYSk8tf2aDrsP2+ugxOIKZdO75qX4UlYc2lATwxRVg8p8twgfevloWR
YtL/dyMwE+47hyV4FpPw61H18/BsSxVzvVAxJcqE56XCe4YMXSQfIia/iQt8
z8CP5EZvaQkS09dYA+VkWOXL+IOVm8Rk3v9HThK86Pm0qzc34Hqdv+N9hMXr
jvOz04Fieh24WyERfp6+7Ofudez6uWQdgLUPrtEK9sP95TpwxX4WLz4rCCEm
N0GpTDR8wpe3fJqPmL4Xbc/YBb9x2RlluEpMc2zsXLfDIyYePDbAS0yeRc1/
JLDv8JN5Pzxwv/OPpgjh1H4Zr14sF9O1xTNdePBHVn5kmZi6nZt+hrN4sXQk
bmgv/tEnt8Kb2PKkJWK6nWoyOxi+dIkVkBLTZIXC1o0sXocbOe8F6I+iPY4E
whO472dmzRfT5vFfHPzhsPV/C0ydxWTYzW9aw+Ll2q9x0BwxHf3U9+Aq+M8U
zb5/Zomp7FeM3Up4itGI0fUzcf+ZqDUsh8Uq4+Y8nI6/J4qLXgrf65wUmGWP
9vKz/4QlcJ96VnBSTCpx214tgGeVLrogmoz2O//X9nksXtdWlvnZiinbdN24
OXDpiYAv8yeiPzKvrHKEB+wKHTjBWkyubpNF01m8giXmQ63ENPt4stE0+OCK
fYtkLcX0t2/vYzu4csaRLU1m6D8SVkZMZPEyTTn4xFRMmY45+hPgFZqsQLWY
0rWVii3gY//ynp00FpO/smfwOPj1R/bAL6aPhuk6Y+DhTyu1No0Sk6nPdzKC
19ysm+hmICabOzaBI+GzbLoxHO3dIVJtOIvXvl9RBnoYLxpybujCJuFySf10
8ffOt/oMhtevUrn1bbCYZOMNlbRYvFi5W2303yfdr6jD31j6W00x7Xy0w0MF
tmTb4QaJ6ZteluwAOJS9HlfD9Yl/nqEI535x9glVQf87pmuJPNz5fJnUU1lM
VQ3af2TgybTm7Iz+YvKg8Wf/reywF53fXGjST0xpd+bO+wPTQV6jqoKYbrxb
+eMXLCPY2bezj5gSjDYmtcOz/A6OrpMVk+3+iJnf4V0L2IICEZ3VETd/gYsn
ZgRe/Cei2vvS+M/wgBHX9yZ0i+h5onTyR3iB0r0L/N8iSt4tamiAY388KlvT
KSKzk+HRb+GKV7Vf5naIaM/z9VavYc0HjQMt20V0ydLzZS287PJ3c502/P7l
2duew0eP/F3U0yoij0UWYyvhVxxbgCiiukGaleWw3gbN+EfNIjL//ZNXBq9y
G3HtWpOIFshVGjyEz04dV5X0UUQTzTNL7sONRrYd0kYRtQi5kHuwkeos7fUN
ItrcumTIHXh916JJi9+J6Pa24ffy4Mz6lSsm1eF87T4H/gd/QW+l/1pEBRpZ
ajmwRQ7bsCAigVrIjWx460nJrS81IpK1tPC5BOewckvPRbR862fFC3AHS7/0
TERRNaeyzsF2bDlmhYg2rXZdngILZmY57H2C8+kv23sKzje95bPlsYju1mSe
O8HipVUsXV4mIoOHrguPwTN7Ks/al4ho6auOjkPw9k9sg6OI3NUPnYyHi542
Nyo/ENGYDZZOcbBS3q++PwtEVP6h+Ms+eF6KnPGruyKatWNl4h44JkZlbsEd
EcU4tUzZCT8NH7o+I19E58ZEvpfCg1aPjj6QJ6JEy95oMew21yoz8gY+33O7
lQA+Mt7+0apcEX081+dlJPxiKEuIICIXbU4aBg+Vd1cxuyqinee7TEJYvL6u
sdDMFlG89+anm+HT1ZsXd18SUZhNXeQGuJ54IQ2ZIjK1nD88ADbM2BlfkiGi
6wtyinzhgPiD17LTRaQVOyTIBz4vOFl1JE1E89r4Wt5ws19GhzgF1yOyNt8D
Nl/IEiiJaNIIKz93eAt7nDklou8tuwe4wVdGPF5hfVJE4pcvri5i8VJ6wdM9
LqL3LcaeLvCk9sYkuWMiGjFiq6wzHMXKex8WkXXkjfNOLF4s3XeiiEa2/Vk0
E+5h23/jRfRhv12nPezAvg48IKJtC8KSp8DbpCzhooh+W2Q62cIPNoxbszlG
hPGj7os1rLDUdtvSaBEFeQ9MHA/PnTYrZcoeEYWct51izuI1evH9kbvQ3rV9
GsbC5apeH5R2iKhP+va9xrDq7wCFNini5Zliacji1RBqXCsRkcx4qhkBHyqT
zCWRiJzG1oj14OoclqBZROtntxgNZfFKPhK9nyeigJ3dj7Rhr90pmWGRIpr5
STFMAz65JevRynARdW1U01WD33nc+jozFO1HQ6tAGR7lWKwyNkRE/95orVeC
/cc9s1APRnzKBqkpwOe03i7u2iSiiFcD/pNj8eppDnm7QUSciuyqXk/ML5tY
QQcRBfr9kP8Lb66Qy7m0TkQWb95mdsFX8lSeJ/qJqCqqxLUDbk8Z+kuwFv3F
pKzfbbD1/tE6vj64nwcfPN0KR0ZY2c5bhfPXC57TAuettvcY7yUiw1nOrZ/g
7rnz+IM9RTQ2dvihRtjeyv1473IRDexum1IPS1l5uWX4vOi7DW/gQpZuzk1E
wmn79r6E5dny8yUiktdwtayB59bsHH5iEeI3QKvmGRx99+D07QtElD+6SvQU
Lss4uWbDfBF98YszfAyrJmRsW+Isot4Hs8tK4CXC6ym2c0TU4fwnpAiO9793
f7iTiB5/zxhcCD9fyApGiig6bxkRPNj2hULrdBGNS//nnw97GHwwfm4vouzc
M8o34RP92+bmTxWR7ucZ167Db9v/rk+ZjHjb13lchQ3e9NsXbYv+NzdCJgte
W6R5MWSiiG4sGZCeCZ/LYjeIiP5TPbHgPNx0dFyrgxV+/rvJz1R4zDZWYFpE
G35eSTrD4rVxFmZsItLTnTQjGc5aunhJhyl+3+/GpyT4+zSvra/HiGhKhU3s
EXiCcWBCobGIUn2yrBPhCLWwnAtGOP9BRq8OwDd+S54fHIX4Nx2W7of/NLAB
WERL3smbRMPT2OuS4SLy6g4q3wVL2OXTE5Gr3fOw7fDd5CwPc10RWSZN0uVY
vPawF/xov3qH7wnh2SHFx/9qiyjz/vcAHryblTfQFNHc2DkqEXApS3cwSERP
+Ek5W+GBbPmDmogcoz97BsMLtdkEX0Sn861lN8EHeuVmcMoYb9SF6YFwVZPK
2oD+6D+iaYE/rF05dPvCfrifjHrb18ArbrEFATje95OTVsHHU60eDJMX0cL7
W6evhN/st//YRw7918NzH5fD+pHzFFt6haTyrTpmKYuXj7tJ5T8hVdr2mbAE
TnVmLxCEtDPN9MUC+INV0IbTv4U02maxZB5sMoy/b3enkP77tMVoDryx766L
QR1Csrm9v8wRvtjKFhAKKfX6uZDpcGvNydapbUKSq7ilMw22upehavhNSEtU
H9+2g8MuXLcc8FVIcVte+k6EryfcW/KjWUh3fr5XmgD/FrIXlEKqO/45ywKe
su5Fwt2PQvrm37JsHCxc9CEnvVFIP1w/d5uweNm2PY9tEFLT2vdnjGC5kWzD
gZCeHHoxZyTsOEBpsHedkNJbyr7qw7t+atrNei2kUL+8BF245M0IT9OXQrKW
SbMbDPcvHicYVIu/d2ffW03YhZXTfC6k/aeDdqqzeLH0ms+EZJy2wFQFrmTb
bSqElPvIpKI/rLHJq/fyEyFN1pGJVISXL2MbFIV0dcezYfLwMfuwGaIyIY3Q
SimQgV8ac2v9SoS0/WFQ4D8PxEs9Zvv8YiG9SZ6o8gf2+XMEERbSuKN/rv2C
z7xPeTCkUEhbcvI82uHGR1kfZe4J6WJ7RO832Dj3lmLTHSHVL7NI+wKvP1Vs
8iRfSMqv3s/7DF/YwxIaCMlie+L3D3AretOTN4TkvHDG4QbYcmXLvh25QvKa
2jzlLRwyq/PixhwhrV8QV/8Kvm7Wp9z1qpA2SS1318Kd2qrf7LKFtKH28bjn
sK2MrprBZSH5ugZUVsCCz6PH97sopKXf/kaWw3cqrVy/ZQhpelasXhnce4sl
QML1jB9WWAzPTJuXeDtNSApHzwXeh3fGul9PTRFSw91xKvfg4si11fvOCClP
Oevabbgfex17CvERmHnkwS6sez4pJO+B53ty4dgJu+xmHBeSSYF+6jX4ybB4
T5NjQvp+7KBzNqyhkCxQPYL4Jcp8uwgvY+VcEoXEv7oxMQM+zNK7xAvJrr3S
7hz8gi33OiCkLveJb8/CwzIf92bGCinnzaEdp2DvxBcjEmKEFLS7bcwJ+LTo
wwx+ND5/qfOTo/D7dW1r1+xBfBxPhh2CjRb/2z53l5CS3L8OiYfX2SmlWezA
/RJjR7EsXiNZgmUh9f8g9dsHfxlg8OmfREgFPkVKe2CzjnH9PoiEJOhVyNrB
4lVnO+aRAPfnPcelUvha8ax513hCak8T/hbBP7MXb0yKFNLlS1eS+fCkJK8Y
abiQNtc2OEbC/O2BlwJDhWQ5Wu1zKHxrU1j5ohD8/mG72C1wzzJWkAHXf+zq
CZvhGXj60N8spB31XO16eLvJ0fF9Nwpp8a1k0Tr4vnqq65dAIY28cWOkL4tX
d1bos3W4fjXlxavheY23EvP80B8Nrd/kBe97XHz9zFohZXPf1D3g8txn1Xt8
hJSo9Cd3Gax++m1n8CohCa/LeLnCrntZASchbdzRR3YRnLi1087eU0g+EXLn
5sO1K/usNFohJM99/+bNhYey8sHuaN+FP7/Ngr1YOmE3IfnpNyXOgE+x7YVL
hBR+osbOHq6XmfD23iIhxUwrrJsMj2y2l8lYgPtNNnP7JBavZ/MMDswX0rOm
WBNr+Hw+K/iI/q896LEl/Dltre+qOegPRszfagaPiwva4eSE498ySmcsHBzF
TxvnKKSi9523RsPZa3YVacwQ0lD+Q59R8I958Z/+2KM9TjjUdwQ80Tq5X8NU
ITWqrrowDI7SuzCmZLKQlquOWjQEzlPInZdtK6Sq8Y3tWvC/b6xAtJBWR545
Ogh2ePE4RmwtpI63ntNUYa7gxSV/KyEd3qjWMIDFK/NDuYulkGYNLdjVD1Y4
1PZtgrmQelqCTfvCc8T/1HTH4XjfDXkqC0cHKFnJjRXSsS4K61nRYf94sZbb
Z2N2vGuHdMMqkw3Cnhqhfzgoc6cTXjzK7NB/o4QUOOj42p9worJdbrKBkMJy
xyu2wdXs657hQooV3c/8Cg9m0z89jD8Bboub4ZUPvYYs1RVSW1jdz4/wySuB
k6cMwf2Z5n/sPVyXFLZypI6Q4ruapr2DR7LyVVpC6g4KbHgN+7F0VoOEFNGv
cdcLOI0tb1XD+d1faVoNNzmkvr2jIqTjqU+eVMKmY9gX+kKam+4Q9gTeNCjf
YH9/9E+PMwc/gi93F88M6yekGi3N2w/hH43PfFcq4P6QRq15AFuXv90xUx7t
We1F3wI4/L+WtDFyQsovsLlwB755urNITUZItUdiF96Cu/f2aer8J6B+B97/
+A+eGqqq9LZbQAsyrY/kwBIvtgBQQOc+S6dcgQucjOdf6hSQ5vyyt5fgPhYT
NiV2COjwE7UdF+DZgx32C9oFZBbpapIO75Wdf3ltm4BezjjwKAUua3Z/4vxN
QMkWpVtOw8pVa79bfhVQ1HQZrZMsXreD1Ae3CCgwzOrmMTj+HN+qt0lAwWU+
3ofhZ3Fsw4CA9jvtk02AdXjxYY8bBVTYcCUtDvZYm3wop0FA6ilVzjFw0vwL
ucffCShiV/vXPfAb69yabXUC+hmjEr8THqFf0LX+tYCic40mboPXKJYPWfJS
QJP72L0Uw6nfX0y2rRWQfOhcsQD+xMqlVwvoU9+lI6PgMSx9epWAGm+tLAqD
N7Dt1BUC6k5cvSGExeuQElU9wfU4uFolCP4u1np367GA+Nkrr26AxwcayKaU
CejdDzf3ABavJWYjo0sE5Ldi7h9f+L/Jdo4hxfj8ettkH7hrlJPfigcCuhtj
NNMbnjJwyU6HQgEdXany0QMW/2IJCQQUu6B9rztMbwOLB5KAzqytMnOD5UrC
mn7mC+hJ0pWKRbDTVU7pdZ6A9H5Fh7vAu4/HjC28IaDdYT5DnOGHO47iCgpI
Q9vqthOLV1DqpoM5Asp72eszE164PHt/1FUBbSsokXeA46bnX16dLaANj+PO
T4Erx7AERgIK6V7iYgtraVR9N7uI9uKi9t0adv/7Vl3rgoDq7pYmjIePfWix
+psuIKcV0knm8OvyTrf3aQJ6PMj61VhY70af8NIUAUV+bxAbwz5nVA9fOSMg
x7b9Iw3hFPZ18ikBWWrZFI2AP7DHy5MCcvCqXa8Hj/ZmCQ9xPEWRA4eyeM12
GLrwmICK3TSuaMMXLeZPsTkiIHv5zKUa8FdWru+QgF7U2HepwpYsfV8Crnd5
+XFlOJQt5z8gIEGTp4MSnFPFp4pYAW03et/QF+68vevdjRgBZe8M2CUHT06P
lz0dLSBZpaYxvcsxvzzAEiTjfLL8HnfDd3gXHIN24f7ivdnSBcv65vot2yGg
Gn9XzQ7Y0aVg59RtAqLwwv/a4B025edGcQIqP2+5shV+qP+yuL8Y7aX3WE8z
3L/fx6Y2gYB8o3rPfILnt7UpveAJ6KPmGqdGOPblv7F3IwWUWHWn6R1cUcgK
KiB+/w2OeQMPuqS1OTZUQAG3gyxewksPG8SGh+D++3i3sho+KjHL8goW0Bsr
1Yhn8MtAu6eOmwW07KzHkKfwMFentrEbBdRlfTr/Ebx6ypJBg9YL6EFzw+oS
+IwhC4iAbhca9CmCGwauX/rOT0BvyetcATy6kxVgwv3zNsGZ4MB33OHLPgJK
Myj+cgvOKIn579AqAc3b/SvuBvzl6tFaoZeAhqqNnHAdtjiR+tvXU0Da+c7V
V+AtO7OHzl8hoOn7NvMuw1eD8qdYuaM9ivYPy4R/sXIRS/H7CRmUDtuy9BGu
AnpUdm9tKswfywo2CuiCcXXfM/BtjS9UvkBAuec+nj8J9/7tfHd9voB+zG2f
nwRPx9PRSWcBeav8bT0Mb3+iOmrHHAF1/pKJT4CLbujO2uiE+1lOzuYArHjW
2N/VUUA3x/fWxMDz9rEJpYAatnfx98L7wxzSRzgIaOrvr3q74HJvVuBZQEUH
397dBqvNWf65dTLuxwWPfSUsXpa+/att0X+O+09BCB8eEmx6eyL6B/OTGVFw
jZzAJdUa19tN4hIO637ZtXmflYDWnvD+FgJ7P4+P3WopIJ1+tvFBcPId9sAq
IJkjKjYb4fr0C0+njxPQMOf6mgDY8GBum/FYAW3Sz+b7wf78gkGqJgJq0xbo
rYHP+5ZP+GUkoPNWM+96wy0uL5e+GYX2F9LX1xM2m/gx/L6BgK4/u993ORzE
lqsMF9BAD+68G4sXe32lJ6AkWdv5i+GfrDnrCsjrcctXF9jmldYfnyECWpp/
/IAzzLtvoDtXB/dj+ZwJs+FbrDyploCa+nx/PhP+y9KVaghop1dilAPswLYv
qQnIo9Zadyq8bf2SU40qAvKPrLhtCxe6et8tU0b87Tb42MAKU9fXX+0voNHD
e+WsYGcj9sJdQK+ND6SZw/tUpKOkCgIqcdObawo/6oyZFSgvoPaz55qNWbzq
j/ovksPxao3bbwi7lrIFfAL6fuGShQGceC07Xa+HTw98TSv14OoT+Q/l//Lp
uUNa2FB4yK6Hn1t+82mkg66ODuwZXNX/WSefzq/Zf1MDPrGCfaHHp/Xp3SvV
4HczvricaYfV1vUowwamXZv3tPEp9cSj00qwn6Z8XPA3Pg11sXBUgNP/qWa7
f+XTU/3YD3Lw54+6FdNa+ESan3f3unfYj31q/MPwM59azaaP/QtvujlBQ/kT
n7w2JDzqgrPOOli3N/JJobQhqANu28cWDPDpu4u5+g94QvjyiHvv+KTTHn6t
FY5Y5XvkfB2fuPyby1rgG3OCb8S95tPojN+dn+A/lmyDIJ+Ub9okNcLThu7+
413LpwlfNk+thyV9EnSdqvmUNPNs3Rv4HiuPgz7ZMb+SewnLs3Q5lXwa69E7
sgaeTWxBEp+WDzF58Azec77gVP1jPhX8dQl4CpceLL/7sIxPwX2ClB7DAwUv
67NK+ORjti+zBF7kxxIK8CmBn7qgCD644Mco8QM+9Wu5+a0ArprYM8u/kE+F
4rKDBGuP6L/O5R6f7tq8mJAPr1DS3j2B+CSn9v75Dfj4D4PzQ2/zadfAz5HX
4TevzEpkb/FpkXnLkKvw8Ad2zU03+LR66+dbl+G1l50GPM3l07UX770z4dQj
LAERnxb4vexNhz9y3guSr/Jp3KDHZ1Jhkw3rg3Zm88n1/S3HM/BGt/C4TZf5
dKfm3IeT8KWp0my3i3za+m3/7iT4m9H+iskX+LRxbMiYI7CV6jEcIZ8u7llc
lgCHdaVqKJ3j08T+4zYfgHPrs62/p+D8s/qo7od/l7KEhWifkTXZe+EpbDnc
KT7tXJvuugsWsdfjJ/lkGRL6cxtMbLg8ziejlCmHJbDcli8vQo/xyb+rd5IQ
nuXR9cfzCNrblrsvouBdrBzzIcRLWSQIh0tYeuYEPr0rs9HbCg9g2zUP8sn5
cvOdIHhBj7GkM5ZPvdeO+2yED3yacLouhk89r+fKBcKVTx3uPYjm07wxP1L8
YM28+Q0X9/Dp/dEjTmvg5SnL+yTu4lOpqd0nb/hYjK+hYAefuuur93jCr8KD
ndZu45Pg1paxy2G91YJ1zhw+/4bCIzfYZ+7u3ZZiPvnWHt28GD47nhVE4FO5
rrHqArhx6KmSHh6uz7Yr2c6wsXxm84dIPsUo27rOhtd/zR3wOJxPDTfz2mfC
mdUF43JC+bQn2u6QA9yK0eh4CJ/E4pyJU2HLjJdB24LR/g6Z1trCW+M/xq3f
zCePp8k8G/i64Aee0Pk03VxF1wru9GMFlPjEy+Llm8N2C/u36wfwqc/Sem9T
WDBJW1PBn091uk69xvCdESNtvq7F/aiYdtoQlulv7l7lg+PVkp1pAM9st4u8
tQrtdY7Hez1452uno2e9cH4nLu0YChc/WHJzryfiodljpAMrZXm/3LKCT4+z
5xVrwC5HWcFFxDs4IVANjmXlwJbyyc+1Vmkg/JSlB3Plk/mKIZlKsAZbLrwY
7V/q7qIAL5t2TPJzAc7/cdxXOfjI6LTTr+bj+KY9iO1d1mH/QvXKvQJnPl1+
+sviLzzsd35Dxhy0v92GFV3wqoaHfQ468anNZ+HWDvh0GSvQjP5qVZjGD/h9
zjun1TP4lCg+nNMKGyV/WTfbgU/rCnKWtcABu7t2m01D/zDmya9P8IUt8hma
U/iknfPhSCP8xUOttNuWT+1rumzrYXPHYS0NE/lkMkHx5Rt4yzgT5VJrPuUa
DxK8hK9pWZtdseLTaYchw2rgjh6HhUct0R74w24/gyc1zQ+WmCP+L3RXPYX5
FcsPrBvHp4iVOr2P4Pw83ysLxvLpoYzq6RK4JyW40tqET6ElcjOK4Bl4etMd
zSfR9R/1BfD2iN2afQzx9+/XbSP4weoEm2YDPp3tLBqVD/djy22Hoz9bkHn/
BjyPff2mxyfb4n3+1+EYNh3X5ZO6X6DCVbhcvvDmriF8cjKckX4ZVm8tf7lZ
h0+1itpzM2E3Vn5eC8en8qkpHT7E0tFr8GmIXc7eVLiWbU9X51PRLtHYM/DQ
hJ5V/VX59KxzZtlJ2EvYn2tTRnuOkd+UBJ/y1z5T2x/tc1aB8hG4fuHIAuqH
4xsuvJQAj7I1f39OAeOrntXCA/A6g8nysfLoTx0aW2Pg8/1nY0Tnk+zO+Li9
cHP7ktleMnzK/jrVchc87o13gGMPjwp5759ug4OL1u8Z+5dHtmN2hUjgK1nh
Gep/eKTy13CQEG4/Ki3t6uTR7B90NQqeuG1/y9sOHr0fsNwtHI7ayBbs86hh
bnN7CJy3NM3schuPZmXwEoPgf9OuLDz0jUfKZn1tNsIOxreDhV95NKkq5nkA
LFUrOeDbwqOiZLUIP7jwd9WVeZ95dDvmgPYaWOH9u8rxn3ikk6z8nzc899GX
9sEfeFRduWO5Jxx9vUtT5j2P/o393ekOP05mG/x4tOfc+qNusOoeteXldTwS
OlXbLoaXhAyLuv6aR1WKDi9c4ERPk2MnXvLo8NcUnjNc7Widt72WR/RLfuhs
eLDZ9Fcbqnm0eNTavJnwSlb+sIpHc0JveTrAJ1k6xEoeXfio1j0Ffsu2Rzzl
Ubho7XFb2KCSJQTgUfqk7Ck2sN8tAddaxiMnrT+vxsPnUnefeV7Co/na04Xm
cNP+hIL8Ypz/5G3DTGHTyFPvUx7w6Ni2u/nG8GafTPl9hTx69/WPlyGc5fyf
0dZ7PDooHP9vBPzDqnC2B/HosrnfST3YetiTgOm3EV/5hGlD4Yi+LIEQj8b9
u/1GG77Z+jFD5SaP4oZ8EGnA3TU/SjtyeeTt0U9fDZ52r6fldQ6PkvKN7yjD
kgv9B96/yiNHR8dVSnBBgrZ5ZjaPPL569vSF5UUjF8Vf5tHbvKBkOXj2OvMt
vIu43pli+96lHfZ7F00+6HOBRxPvRtd1w2W2LOEgj5S64sVd8MCRrs/Mz/Fo
ntsR/Q548YBVP7VSedRdceROGxz/c73WvzM80g1LXNUKV7Hl/Kd4dNFuf08z
rMO+3j/Jo6yR25I/wR7scf84j0ZZhNo3wsePsX886rfap+4d/GZbWh53hEer
rjqL38AjNrEExTwyGWOh/xJey8pvJPBoTaHanWo4laXjOMgjdWmr9zP4k/Fz
e704Ho1f+/DfE3iMev1q+f08erAu+eQjeOOfL1xLNI/KY7dMK4Evv+86U7kH
5/fS/s0D+Psj1sHwaLKzkqgAtspVazy9g0enXz0ZRnDYKVbQgEf8g/H5t+D/
9piMDuZ4VLphidcN+HeI9Rx3MeIfoPw3B56ycnrgNCGPynYXHr8Ci2e57DXk
80hUFjHlMnzXbMWFAVE8SrMa/eoCLKfjV/YjHO3xdgU/HXaSYRMYHnlt5A1N
hXd/Fgy8F8Kjlql6eafhkkpWAIlHbeNve5yElfMTFsVt5lHwPI/fx+CFaae2
RGzkUcCutqOH4QOxmQe91/Oo5sNO2wS4MvK/q7MCeHQvULs2DtZaU/jM1J9H
o1VTImPg5fOe/BzkyyP5F6Y6e+FjE9gDEo9WFmXn7oRfD/s0sX4Vj8xqxrtv
g/UVWMFEHgkGZHWIYZ9vPVFZnuh/fE0OCeCU2v5Jh1egP6g7aR0Ff7infUvk
ziNnkWpVGGzMyr0u5dFOB1FoCLyBpX915ZG90adBQfBFth1sMe5n8wVXN8Ct
69gLGLSPlVlLAmDLxa4+si5o/5kD23zhUDtWYBnteXjgAR/4+sgNZ5/M4ZFN
7h0Lb7hzQERhrhP6yy3qTzzgyR3SxpOO6G8X+QS5w8K6/X13zuDRf4szB7rB
d4qPjd7kgJ8P/3FxESx7JW2O2zQe7btj4+ICOyaxF7w8uj42vGUuvHP77b0G
djzyycuOdoIfbiq50G8Sfn5z05iZcH/352XfrNEfzBpWYg+7ONR/qbbi0Tp7
l8ApcKzJ14F3LHk02CtK0RauUP9tnmaO63Xy9DlrWKNbfnHMOB71yj5wGg8v
a1QLCR2L/jz6Q6MZfPQx+wKJRz9s5HaMhV/mmlybMRr3R1/dUcbwsNPWVSaG
PPrZaVEwCl69d3qH6kgeTVGZsWYEfIZtFxrOI8W5C2X04Pds+ZAej5anLT81
BDZirxN1Ef/R3vbacCDrXobwaHfpqjeD4As6wqQEHR4FxnsJVeEvMuwLah5V
iNx1lWELVm5Ig0d3Ylzy+sEhLP2QOo8mkL1HX/hafqa+pSqPLLTMumThX2n/
OegM5NHVWJ0jPW4d9rZxhT49/fH7pj023TA/6on0Qz8euX15V9UJ317z6uwj
BR4FPaXQn3DvvE+F1+R5pFmbNKgNnmHNFsDwaGafrVe+wtv1evtuk+HR7yVO
i5vhIoUBxut7omjqfc1vH+F+37XnLv4bRYqe7/a/h+e9GLl+0p8o8tY4P+4d
vL/APFq/K4ocvm8sew0/yZyc2fdXFF34brrhBax+aDZGzChK0WzqVw0vFbt+
fdYWRSZep9Mr4cMBbIFdFOY/S2c/gWsXb7A4+zWKqpb1/VAG606OWLy3JYr+
KV7d/hD2HrUtZMvnKLr+xnPkA/iUMtugF0Vd1b1378H1Hceu2X+IorL206vv
wIZv06qM3kfROGv7njx43cMrHcr1UaR7tObEf/D5K7e1f9ZF0dHhm6fkwC1J
bAFvFKWV9rzIhs12PF9R8DKKZh6LiboEB2+u52XURlHQPm2dC/BV969JB6qj
aOyZE9fPwR2svHVVFPFe6i9NgSeydNeVUbRs0skfp+Aotv31aRQ9+E/n4An4
Vvew4WblUVS0MtbiGPyv0WS65qMo8hglW34IdihnGwSiSKSyZVM8vO2/6dsa
iqPIRu9V/zj4/mmXlJIHUSReNDNjH6wQveJ+diHik5Y2Zw/sHMoSAEXRY/2+
H3fA+7y2KEgoiipv+eyQwo+dhMbrbkfRRuGNkWJYzWLP3AW3ouiIj/L/HN15
XExdHMdxFSoplMhaSLbSQkJJQtKGCiVFUmKWZp8RihSSJEsISUWhhBbZ+mUp
pGhDnlSyC0kUEj3fe/98v2SamXPPaZZ7z+dWKOyud3D91KsK8gleuUoOH1Ri
LkBS0OUDGX/F8NPm8+eV8xR08lXrMQE8pOZK2cfLChq11HImD/a5eedLxUUF
WX+S1q6HT5xhNgxUUHPaZVkQ/DKuzvRkpoLMIz4NDIBHb3y/eMc5BfXfbpCz
Cl675ruQl6GgyPQlS1bC6c7d+z3PKOjA17CvXvDHqRq51mkKsvLJiF0KTxo5
+MnoFAVJm8snucN81TEd6skKcj3x9YEbfJE5PfGEgq6LNYOd4Tbm64pjGA/e
uN6O8FTm5ctRBa2PmZU2D5ZnuoeeOayg9LJF9nPgq4f8jsUeUtBWc7+Xs+A/
TF7tgIK+Xw0OmwnbMtutxStIKShkuBW8dUnEP/s4zAdL0bUp8O2Ze/Unxiro
23ihlxncyzDRbkAMxmM2t8MYXqDJBAkU5B4acHACHN1xKaJxB4632mUWRnBZ
483UkkgFGa1wqBgNaz14cDcrQkGbus35+vDiy0/eHtyqIMH9IX2Hw/uPNfXe
HKYg5by/Z/XgJ5FfxgVsVpBFcf0CXXgw/7ejU6iCVH5ffTsA9l7ea4O5QkGi
xfu3a8HH7ZiAkYK2PQwapQE3TBiR2S1WkNkGK1KFDXQmlL8TKijcuKdvTzig
a2pLeQjur3Z5Zw/49Fu7fnk8Bf0btv/IX3e8XnnkYnacg/+/0GNaJzyhwGvJ
9vUK6pnYv6YD5p5aK9qwTkEKrVLhd/jCbsGBJYEKij8T3q8VbhUzwUMFOa8x
z/oMT/Hd9UTfH+Mzp9HpIyx1ONjRe5WCMuZFf3gLXzFNHtyyUkEuHNMdr+BO
vczpT1Yo6GBe5ZhG2Ea5wPuGFx7fGMGtOjjs053Q1GUKGpDXZ1UtfKvm8bHd
ngpy2HCqqwZWYbb3d1fQ6LlTEyvh+czl/osVlDL7jtUjeOe+73iHqaD7q9ye
lMKlG7v1x7koKCH1iege3DdAY46Wk4LUNbz734XdXAavaV+goLEJtVlFcLzl
mO0v5ivo3TxP55tw9UjTtDtzFbRocNmHq7CumnXxuTkK8te025EPe31zeBc/
W0FDx10ckwMn/ueuunEW1ou1w29lwy/u+I1fba2g6OJIv0xYP2vDwgUzsL47
ffyTAfsnyDZMtlLQsbaFR0/DqeERMbqWWP8Kz0xLgd8G783sslDQsgvd1Unw
ePfE8tdmWH9veQqPwRusz7SUTlbQzV+ntY7AmYaX+102xvHn8f38Qfgr/pof
naigikqbhfGw2c8HS7aOV1C9OOJdLCx++US0zkhBh2bc3b4bzn/QdMDNUEG/
RyuP2gn/vvwl13K0gjTMbAq3wzOP/34y3EBBpatFPlvhzczpzyMx//PSfm2G
ifk6dBjmj0n1oY2wkhfeHg3Bev/gr4UMnjtnwoqrgxW0f5dhhQjeMdFyU7Ku
gq5xFvBC4PtMTlJHQftEQX24cB9me8kBChp0Ylt6MOz6zqthaT8FuX06Mi8Q
jnu8tttGU0FTfTOb/OHKAoGBoYaCytquh/nBA1M2z9FQV9DAzHvDfODlMbvW
tPVWUL/oxwXL4SOSg9uf98R6FF291BP+zzc5rUhZQXoXqtsWwyMWZBan91DQ
hI7Hca7wKrOCd3v/yemT/31jJ/jUkLuqsi45rfl244ED/Ea5Yrxvp5z2pGUF
zYWNPtctnPdLTus3JarYwcFP3m+Y1CGnP9LtyTbw+cLvMdo/5GR/MHjWDPhL
enfm729ymvV04X+WsGm8xqOXX+X0xXqc3AIWhQ7+eu+LnDyKeww0hfMCxvTP
/iSnENHTi5PgDhdT84SPcpozN8N1PDx9mrX7lvdyum8lazaEN+kvwF8kOakt
tts5Cr6p5nHQ+bWcumN6G46Eu7/55Vk0yen8p/tFQ2F7vPsd0ign7ZCdvoPh
yLuynz3q5WQ2yL5TBy7JYi7Ix+01/UroD6sf3jvjca2cEh6fn6IJO29NXJH/
VE6NTSsq1OHY9Wc2naiRU9Pg3rzecAWTM6mS0wlhlroKrM1sb1IhJ92vi890
L8HrlbGlDe6P5DR/X6t9F5yg9bR7Rhl+/9I9jb/g5z+bDEaVyql2luHmdnhY
E7OBj5xmOhXotcG+pb/XfC2Wk3eoY14LnJzTK/LpHTlZPqpZ8gl+dXzA6Zu3
5FQ+37flPWy4Y0RJGslpVFPT7jfwupAJ72NuymlK8ppxTfBZL0s18XU5qWxv
vFMPf5rDHNBy2hfttfo/2GSSq9OcK3KqzynvegoLBjIb/snpvdLso9Xw5b9r
9/TLkdNlcaZlBfzjnSCr4yLur/qgqjLYqmLzo/oLcoq4vYn/AN54ddfXu5ly
ijlZ36cEvp5ysH/mOTl5Jlun34b/xSSbH8iQU8PdQ3MJtpMyfzDlNF7zc+N1
OMKvQOyfJqdpG203F8DFC5gNguXUUz1WLw9WNa/IM02W08Ebz3IvwQuZyyuS
5PTuwMglF+AY5nSLY3Lq2uv/5Rz8iPn45aicarKSo9Ph/sxwHJaToLVubBrs
Tho+OYfkVLFM53YyfIjJ5x6Q0/eXDn4n4GfMdrrxcvpvr6zzKDxkExMUkNOu
1SkJCfDKtdaNi2IxP5aWWhyAk1wX9LCKwfMf0vIoDn45zWPUyGiMf6YWZw88
xmCVfa+duP2+k1Sj4UB1TsDnSDmFxc9NjYLT22SR1RFyejzDa3YE/LGOecOP
x9drfV0YbFy8t+RUmJzutUvlm2D+BSZAhPmkHq6jgC8ePqMmCMXzaxeZLYG/
b708YblCToOORzkLYcsNhU62MjnpDdv+ngfLPUo5YyVyen1z8/YN8DWbp3v6
iuSkiBTpr4O7xr7K+h4ip6f8tdcDYNt+zAeKeH43uy9fDW/99fvrLY6cWi/Y
fF8J32ligoVyutBzTJw33OvhAIt96+Q0PazXpGXwgtwRHvJAOcUOe1PiDu8+
MUHiFyCn7BeFaxbBZTssD833l9OxW4f+OcNagjn5xqvktKw0ONERXuLt+kzH
V04vOqymzYcP2DNfWOD5XaBSNQd+MilwyCsvOblfL+XZwnq6TOAY65XHXnVr
2OffZp+LnnJS7ud22go+zuSb3OW0t0V9zlS4gdnOaTHWy2+3XpjBo64lFwa6
yWnwEJnCBA5IzWx0ccH6stZo4ET49J6CHlOd8HxXVWUbwR+kzBeicgoN3OQ8
Bp64qsJe2QHjN8zgvT7MdXwR8HGunMZ0FEUMh7PNP0RWzMHx8sN35BD429Af
eAcnp4GDfl7Vhaf07HEvaRbWQ589S7Vh2ReND1HWcnIrHvFNC776dLA6b4ac
Truf36MBd9KYiZ5WcqpSsRyvBtucZU64kFNl7bU7PeHw/dbc0VPklFZps0oJ
vrVpQay6uZycW651/l2M1yuBHhdaJ+P4mmyZ0Ak7uK16/MxYTkMOnDf/Ce+y
4rQWTpTT7GEjy7/DpQbyAWfGy8n63p7gVlizz3aLWCM5aR7+qfIFXvR9r4fE
UE65u/1OfoTjXzAndOHxptya+Q6uKT5zyN5ATtH1Bk9fwYOZy7dGyinfZrOw
EfZiTucaLqerVN33BZzIfLw7BOt10LiMWrieWe4Hy8nJXD73Cazv+Wpmia6c
nuvfaaiE/ZlcuA7ur4VG6CM4jdk+fICcwoMX6T6E3/VjThiV05HbcRfvweN/
D6A1mvh7aFfmfBfmvBrxcqGGnFa86vm+CM56OEHJXB3rUcaMiJvwV7za0FOV
0874DSOuweZJc+Z298T6mXS4IB+W7HRd+04Z411R5JED5wu8o8p7YP0c+64l
G/7lHXgm95+MTJJUd2fC1nOZE9Jl9G/m2LFn4S3GWz5EdMoo649t0WmYdKPV
N/yS0fSXnj4psHL3wYlLOmSU8iGoIwme9yHZefoPGX0YKI0/Bu+ozOTqt8lI
KzDc+Aj84FpBbO9WGQ18HnXvIKyRdvfCly8y6hDsWhMPu8ZWPK75JKMbxjv/
xsJxMuaCFxn59Y04shuuWvVhQOp7Gb3qt3HKTnjgwh8Wu9/KyNGK+2g7vMyi
h6fwtYz2RPis3wofHdZX6tUko5xvDj23wHU99RJmN+L2Iyef3AiPaBlzxahe
RmestfHOvd129TPTWs06GYkHtdWI4JQi698/amU0RvdRSAj85ixzQZ2M8q3O
9OHC4w54WN+pkdGksNDTwfB6JldXJaOoD052gfB5Zvu6Chndlg2u84e/uDEb
8Mjo7fiXUj9mvKZvp1VlMvr8L62/DywaFffSoVRGtb8Czy+Hc/scU5p8X0bn
Bo1x8IR/fj8zWrdERv5eL14uhqfXMxfsYrxuxm9yhTeVFK59fUtGEQvmDnKC
C7NLo0oJt/+j9aID3OPo0zOXbsrItiTReS5sH8Fs2CcjxXW7d7PhSE7Lh/Cr
MkqsebXVBr7n2am+7oqM0gZsGzYD7mvbe5JbnowOi4blWzLza5y2i2WOjIQ/
Ly22YOZXf2ZDABlZJc/7NBmu/j1hr0q2jN5wq6MmwYNeW2Y3Z8pok6+fwXjY
u2xOReU5GXUL314zZOZXHrPBr4y454KXjoJfJHlrJ5+R0Z3eH76OYObXrsAp
O9Nk1HtnwO6hzPwSCj35KTKaOqnOcDCcumKLdGmyjBZ/dyMdZn4xl4cmycir
sdC7PzO/mNNFj8vI5evEH33hDczXR4kymjzmwF51Zn4xLycP4/kM/Tm+NzO/
PjBBABld7Vh+R5kZr6q71kUHZLQ2Ide3exHmF5NLiJdRl7fmrz/wlbQXW/bG
yShyzpr9v+BfsR+SpLEy+uuSY9wOz5T/oJUxMgrY3OPeN3jL6h5Nc6Nx+48X
+rfAtLCv8qSdMlJaEPenGVaaojdGOwrz7VXFoffwvOFMQEhGq09pmb2Bd/Qy
C3y5Fc9npGPpS/h+i/WOe2E4/mLC1tbDGrUL0i9sltG2/Iv/nsOutzzuHwqV
kahX45GncNy5VR83K2TkoVCfUg1XHeD0WSuT0fh+ZuWP4YFb5JOcJTJqfeC+
rgxeFrTdxUIkowsZQqUH8JFFTHAQ8/P8nmPFcN30Y3t78GWkXJVqeRseMTo9
+z1HRseHX3lcCK/SyKl4tF5GE2NK1l+HU34Ufstbh9sbUaVSAL+pL9U+ESij
cTXPT+TCRveeTokMwPF2od7qErz+4itPjj/GJ7O+Mgs+f7RF6r5KRiseP+ec
g79EMIFirFe6Vb3SYVNu7wIDHxn9CS85mQqLlmo/V/XG8a91ZUYynGs7srNl
mYxCi1Krj8Md4yYOe+qJ+5Owh3cUnsHkOd1lVLdPqJoAb2K261wsI5Vs91P7
4ZuvXcNi3LA+fDO1joN7lHufFLng9perP4mB7fMDi7ydZLSkqYG/C448KWyy
c8T8jbuoFgXf27VFebwDjnf/sJRtcB9R9Jh+8zCfljvahMHOPofmdczBeiTU
ehoKx847FVg/G/+eXREihytMsnbcnSWjDQPi1CWw9uCr6eetcXwcXpgqgD17
FN/fP0NGnnN6zOLBhz9WfNxoJSOHfjlP18PPq1708bfE/FFaIwiCh934MMlx
ioxGDdbsEwD7nf6Bd0hYv5fkpq6CkzG6g0xl1Hlh+ayV8Ct537i/xliPzX4+
9YLH+utdfDNRRmVP9wuWwuucDCsfjpfRleSJfdzhs1PM2i4bySh5b2GqG/xp
uI1OoqGMopPdZjnDk3s7Tt02WkbSp/89XQALvnosDTbA4zELEMyDLzOXn4+U
0aIL79XnwO3M6ejDZWS3ODh1FmzFfD09VEYWg97azIQ3Mm9X9WQ0oYff02nw
jS1xnZ908fi0qkOmwP+Cjg2r1pHRcLt56mawHZOHGQAnXEoxhiNm5Pie6oef
7z/MZgJcPJrCdmliflzY+mQsrNr34ckQDRlZCl7xR8ML258WLVOX0YJldmr6
8J6GV02zVDE/VieeGgY/uteiPLYX5uve1pl6cP9LnWP6quD5eGlfMxD2SOw9
/3sPGZUui+cNgA9t1w7675+UulrremvBz7gjd97qkpJl9ujkPvDQZRMzMjql
JI0PnKEKr5w97UHcLykVHk6rUoGTxts3yzqkpHm7kdMDfjnATcPvh5TW9R/c
668b3g/88Tae3yal0ginpN9w4JtAV+NW3P6QUKsOOL1cyNdpkdL56tMVbXBz
PvMESmnS5fL1X2Hj5OiLTR+llJv7TfkzzI8+VHn/vZQW1g04/gG+JDrVlv1W
Sh/GTrZ8C3/Hq6HDr6V06KDDoybYcv7VqWFNUnIZ57OuAVZMLl4a2Cil/g2c
HnXw9cGVMpd6Kb0sUBx9Bnf1qD88pU5KN69ss6iBbZuZBVpKGf/teFgBb6v+
8VzpmZSSR+1aWw7fudHjz4caKZ3ZE/X3AdyLyRFXSenasPCEEtiR2Z64Qkov
HklM78C7FYZ+SY+kpHUm6D7BZf5m4VFlUlp0ytP/BtzP2SaZW4rbL7LtLICX
THXEiiolpZ5jD+TBB0YwLwClJOKoGl+Gn/ZerTL6rpTaO97evQAPaWU23JPS
rjNFvufhFc/l81tJSsahhzvS4eO3twc9uyll+s5xaXDj+bidhdellBU7Y/wp
eNShYxmnr0ppZ3nPWyfggLD0B3uuSEluXuadCJ9Zl9MszpOS4mpcWwL8YTHz
BlNKcYGLYg7AE2c+NLa/JKV8Sw3DfTBvDLNBr5R+TLhzYw+c3fc1v3+WlBzs
5Uuj4W/tLXE/z+H3h41riYKnNHZebMiQ0sTG6h0RsPx+76riM1K6EbBZPxwu
uKT9PTNNSkF9RxVsgjsTRw48mCIlw+e3FivgWZHMB1hS+v3A76MEDme2t0iS
0tuGn9uE8C3mcpfjUmoeHDuUD/e0cztiliil3tKRORtgB+bjsCNSmtlx3nkd
vIuZHoektOOY5ZsA+OEf4Z+3B6TUsvb65tWwJpPDipcS132Wri+86FH0rNw4
3N7a61necPwV5gNyKRUctXRYBj9JPhUeESOlyO/nG9zhQbuZABD+v3CkfBHs
Jb56a/FOKfF1Yvu5wMdWFr+yipJS7POf6Y5w/fxKFf3tUiq+42c3H9Y3rTfs
vU1Kw6tu1c6B1+h9nP8lTEp7e44S2sJpSu1BNZulNMJns7o1/K6Z+QJOSg+e
VJ+ygifU9D2bopDSAcm4mVNh7k0mGCilzVbyKjM464zhJ4FEShEj72wwgb/G
mfX1Eknp9AQNlYmwxUYbk9kCKX30WnTMCJascXQz4mO+ZcZNGQPnO3uGaHKl
9GhM2UN9+PfU1ft+rJeSgHquHQ5bj2S+4JfSlPAZXXrwFlVF1e1AKekGbDio
Cxe1MoFhKQ3jHDbWhpX/ixsY7y+l2YeL7mrB8+4cs1SswvH+/u1KDXhHZvqy
Vb5SavNRbVeFHxzKkTv4SGnLD8PYnrBGOB0x8ZaSySXbsUqwa/DDqwOXS6k7
3vPmX9d2231LmBOIcLwmBC3thKuY/Lo75muR5EsHPJDZjn0xHp9meNR3eLnm
n1mX3KR0ISxqRCt8tKP3qiMuWN8G7sr7DNc1am8Nd5LSq/Idrh/hkQ9Gngpy
xPw4v+3tW3j15Ym3XR3w/7MUW17BKcemvZ46T0rl1RzdRvhNJHOCopS0R/pk
1cHj+G5jVeyktHWPw/xaeP3yFQ7Ns/Dv+pPra+DzdkHrKq2l9PjJAGkl3DJB
tKtghpRyLn7r+wg20wk7e9JKSpRdnlYKi7qiS3dYYv2oOm1zD857e+gTb4qU
lg4NrbkD/3x0qu9Scyk1RDlxi+AZBcwJ0Di+dAf3vAlvPnXVbYyJlDgPGo9d
hQt3F4f0mSQlyam0KflwD0nlvm/jcbycCHx4Gbb3rb9UayQllcLRAdlwlMPH
KjKU0h7lF53n4Xum7XgHIiV7Tvz+DFh9iJLuXgPM71/2E0/DLsz2OSOlZHG2
9dYpeC9zOd1wKYWEJXonwRXM6XVDpfRcbvctEdZhPm7Xw78ferXrMLyU+fM7
COPzbKvBQfjwPse6XzpSmjBrWME++D8m/zdASq73Li2KhUcErB5xr5+UkqTz
3kfDfi5c2wuaUhrlWB22A07G0XdIQ0pVtn6DtsOvRzIXcEkpz/ttVjg8Vm3f
qQBVzLcjwfM3w+u+Hbvt1EtKfbvev1DA5/5Lf22uIqVt2wMkUvjznZyeQ5Rw
f0zrNETw5Cwa26NbQirdbql8WJjw0OF9l4S0vhfO5MA54c/WPeqUkJvGpKp1
cHvw6115vyRUtODA+rWwlTtzgaiEgjJ+9vCHN1n/Kd3+Q0KzTbyO+MI3DFU/
b2jD/3+aa7oC/qepo+neKqH4VM17y+A5P0dOntEiIfVDa/w84O0vJy4y+Cyh
vHM57Yvg4gfTBKrNEjrypkesC6yWYx/f8l5CF+2dDBfCTsfdLj95K6EexXHX
58N7opgL0CW0k1Ppbg8/5gf9SG2S0Lxp/Zpt4QFeIt2YRgnNGLtwmzXsMSds
mqheQuumh+tNhw9N3L3cu05CD0MuZU+Fn+skKOyeSyj4YaODOTz076mj455J
yM65T4MJvPJd1jWtJxJa9NVMOhE++fhqXXuVhI5e8eg7Dm5i8hMVEhqeJkod
A49JqRxx95GEnufGzjSAg2Lqbc+XSajmY1rlcDhD8nHV/lIJqc4tCB4CN/u2
b914X0KyonvdurDJAqWU1SUSMlhTnaANh5hp3llwV0Jq4+tM+sGXhgx5M/m2
hIy1G+9qwN/xam1QkYRiDRp91Jjx+sxsoCOhSR51bT1hxRObBW+uS6j3uepo
JfhaoSNWLAmNGnvf4J9Lu+3fdM/oy1ckpLhbcKUTnh3PbLAroX67Trv9hLeF
ch9uzZHQm5C9b7/DdwMUn9ddklDnJvHmVri3a6TmomyMf6anzhfYcdq+ydOy
8PM9LM59hHfrMxt0Sahgo8acd3C5Woag51kJVQxqevYK7teWE//pjISMai/z
G+EldXS5Kg3H382tvV7Ah+4yG/JL6Pg9p+O18NOsZz+SkyV0tb3/lCewHrM9
V5KE9ByrH1TCPszluscldKMwfvUj+ARz+m6ihFK8XX6Wwo3M13lHJFSmp7L3
HjyaeXmfICHrrjzDu/DasfrXNQ5K6ItK4PUi+AyTO42X0FvT/u434Q8/mYCP
hEZvvfLhKjypyX7krVgJpf1YEZ4P80rdZmfESIgb26mbA2fnrFgdFy2hUKeE
zGy47XjQNtlOCT2eNHluJjx1B7PBKH7e/PbzDFgWEnZn3nYcbz7ugtPwVa/d
byZtk9DGsw29U+A/cxJ66YTj/g1bdyIJnjWJCf5J6OzlT1OOwVsHXljQFCqh
8zxu6WH49t+rwfcVGC+Xj6sPwj3fF0dnyyS0b/Gan/tgh4rKcwkSCYkUz2Jj
4eir9Q+3iCR04q6j4W74YcrHz2sFEtK2zL+2A9bc067pwsfx/EB/yXZ4sVTJ
dApXQo0RUe/D4f1+TCBYQlar32/ZDNcsGCJUCpbQf/7zB26EB5uP3f8hUEIP
dp48J4W9h5rnPA7A8VnVbieCj6nMqsn3x/2zc3zGhxs+O7afWIX5WZ3A48Cj
nnoOivKV0J7dTSrB8BpabcX1wfoQND5xLZyWwfXy8JbQrUCOmT/8Pl6xceZy
CVVHnyvxhSdsikwctVRCFlVvV66AOWv3XVfzkNAr2xHfl8EXmNzOYgk1PV4c
7QG3Tsv4+9QNPx+1VX8xbGGQO7LQRUJVfpl5LrBUvWj2aScJFa+scV4IX2l7
uHqPI+Zr+K+m+fDvumfbxA44fov1FPawdfHrlBXzJBRpZqk1Gw6/8PXOHHsJ
FZJrmjVcdPjPm/F2EnISr5k5HVbeptq7vy3ms7O4Yio8f4POuJ/WEvJbsDXI
HN7poe/YMAPH57roLhP4gc2k9cVWErqduXf/RLivkdXuTEsJtenuGz8Odus3
9/yBKZjvqbGFY+B9v9zKQs0l5LF0p6cBXN204ou/Ke7fpC3Nw2Hdh0FaC00k
pGEUsnUIvDxXZGo2SUIf5/kOGgQfPRG2ePAErH+7FmRqw/U7dgv/GeF4/Gpi
3w8eKUjY/9YQ69Om/rUa8GrvlJyy0RK6N+krTw1Otb9Qk2MgIZ8epSq94LfM
9n8jJeT4O/moEjyO2Q5gOMZ7kMT0n3O77Qbm8oChWP+85hZ3wpnM6QJ6Ehpb
qOXzE25hPj4YhMfn+LT1O2zO3NxA/PvPoztaYTGTd9bG/y/1Hv4FztujWf+5
H463W7qXP8I/pUP+VWtKaHF9+YJ3sPUqZkGQEGdERP0reLOjuV2KuoReb7MQ
N8KF5rP8o1UldKVPo9oLWGnYwghBLwl9uLIzqRae23Np6nIVCcmjjac+gaO+
rL5rqyShNeHlDyrh+0+5b8d2iynr6IZVj+A+RYremn/FtKxWpb0UdjkbOe5H
p5h8rY/uvgfH7WdecIip+PZEg7tw5abj6293iCmGX5BXBOsEZuw++0NMl23t
nW/CS91yz+9rE9OMKfdfXoWPWhWVyVvFNNrFSZYP/2dQ9sWvRUzro+9r5MDD
+9RqOXwWk+4n+1PZ8Krvr01NmsVkILw6LRM+hdkx8IOYYocZl2XAr4uZNzRi
WtWc6H8aNspWPfDqtZj21/f6eQoOPqKT+6BJTOPbuXuS4HPb9J9cbBTTGPOK
UcfgzxsmdRyuF9O2eNMrh2FTT6vB4XVimjcoxuUgLJw1d3rQczFx6FXTPjjH
aJG36zMx/dozTR7LjFc/n9CpT8T0KWxH393w9N/MByZisj9UdWoHHMrkxSrF
1P14qNV2+ObDsPqPj8Q01nRVWTjcnbv7X0WZmLIvn/TfDM9JStAvKBVTyooX
HQo4cmeK3cn7Yuoy0t0jhUsEF/x3lIipcLDTKBGstuJaBO+umJqNN+XzYae5
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
K6fO/0bQcyQ/PwXPKpWcPJSuLXn5Kby/KzBLp5dIPn4KNjSYu6A/3Vjy8FOw
OSG8YR96neTfp6DvyRob0mhLybtPwc/gC+1S6O2Sb58C71IT9+roTpJnn4LY
O3ZOGnq/5NenwObWsxPxdFfJq0/BxT9z/GNoSD59Cjr5OFyJoL0kj57/f9+d
2FD6tOTPp8Cv+4jHgXSA5M2noFiZOmn+9GXJl0/BqGc7PvnSEZInn4JjbzyG
edF3JD8+BZfqXCnuTqslL56v16ie6kw/kXz4FHg9elHVkTZKHnwKto3utciO
fiv57ym47/6ukS09QPLeU3CnTdrGjvR3yXdPwVrVk/bt6OGS554C2z7R+1rT
xUeb8ttTMOfMWaeW9ATJa09BTjf7k03pCpLPnoKd71f7N6JnSx57CgbmlL1S
n64u+espKLEtNbYOvUjy1lOgPnHqkTltIfnqKZhWvKmxGr1K8tRTMF435GNl
uqXkp6fA/+3ZIRXozZKXnoLHS+sWK0t3kHz0FHTrq5tckt4leegpGGfMMitG
20n+eQqmTHs3/7cz7+8k75yPf6ldgx+0q+Sbp6BC19R1RXS+5JmnYELBqjaf
6O6SX873f8KVXe/oC5JXnoJPmlKq13SY5JOn4Imu49Hn9A3JI0/BlplRvk/o
OMkfT4H7nREXH9CPJG88BdlByyPu0nrJF+ffe3Xw7k36teSJ8/lkFequ0b0l
PzwFXzOevy6kP0teeAoOLPve/yI9VPLBUxB0ofTPc/RvyQNPQW6LKmNP0+Mk
/zsFZdaalztJl5G87xQ08641+yg9TfK9U1CvinmtXLqq5Hmn4PmfyssP0fMk
vzsFM6uXar6frit53SmoFPB1y256heRzp8Cw7Yl1Nt1E8rhTsMjm4oGt9EbJ
307G+vt7XTbTVpK3nYyZOxflr6d3SL52MoI2Dw5YQ3eWPO1kfMgPubKCPiD5
2clIq2AVu5R2lrzsZBwd8OfhQvqY5GMn42uJgpR5tLfkYSej7IFF7zPo85J/
zZ9nqtNn0kGSd52ME3Ob/5lKX5V862T0O/Rk/CQ6WvKsk/GzzOoK4+m7kl+d
DN3Q6Dmjaa3kVSdjezWzOiPoZ5JPnYybF3NXDKF7Sh51Mh7tTmsxiP4o+dPJ
KDhivrUfPVDyppOx9O3BTr3pn5IvnQxfj9iDRnqU5Enz7+V+d0mmS8ww5Ucn
w1+dma+lp0hedDLWtbIMUNMVJR86GffMD12Oo+dIHnQyfrfyjYmmzSX/ORl/
1YUPwunFkvecjKeISg6hG0m+czJ2ed5+24NeI3nOydC+jx7YnbaU/Ga+H7jy
04feKnnNyRi6r/tYT7qj5DMn425hblk3ep/kMSfDqmb7WU60SvKXk5EwcrG5
iobkLfP/Vyy+tAvtKfnKyRgFXRMb+pTkKSej5+ITGzvQAZKfnAy3xY3bt6Uv
SV5yMkpiyB5LOlzykZORVaFA1YK+LXnIyXAf0eBoEzpB8o+TcayG0ach/UTy
jpPR7r9dBfXoFMk3TsakPd9Ca9NvJM84GaeP2N+qQfeX/OJkfHszSF2V/ip5
xcmo6b7jWSV6uOQTJ6PRkSc9y9PF8kx5xMmok1Drc2l6vOQPJ+Nfc8+hJejy
kjecjCvVev/761TkPEPyhZOxuPm8ib/oapInnIyA+H0Vv9MLJT84GZ9yrsz5
QteTvOBkTHZ9X/sjvUrygZNR6XXpFW/p5pIHnIxxOXWav6I3Sf5vMl7vbLXl
Gd1e8n6T4XGhU8fH9C7J901GZlXVvvu0neT5JuO/IU5d79A5kt+bjFJlnY7d
oF0kr9eANjn2vlfpk5LPa4D3/I4X/qN9JY/XgPD5zcMu0Bckf9eAmBzzW2fp
UMnbNSCsbHH1Kfqa5Osa4DX05dPjdJzk6RpgVe1CWh79QPJzDSh3cfvHw7RO
8nINuL1r+uCD9CvJxzVg42Hdn710L8nDNcD4xmH8Lvqz5N8a0MK9YvkddLrk
3Rpw68iNWVn0L8m3NWBy4hrzTfRYybM1oH2rlCXr6FKSX2vARXOrxqvpaZJX
y79v+WL9ctpM8mkNKJG0ps0SOlPyaA3IPBq1cwFdR/JnDWjsU9FuLr1M8mYN
2Pzp4OHZdBPJlzXA+oTOfQa9QfJkDdidU/H0FLq15McaYHtze8BEeofkxRqw
06LH5bF0J8mHNaDdpJdRo5yUPFgDNtUce28Y7ST5rwY0O2euG0znSd6rAcs2
rHs5gPaWfFcDam7q2KcvfVbyXA2YffHAl550D8lv5fvfwGlYKn1F8loNmJBx
5J+ejpJ8VgOKW6kmJtF3JY/VgNEvd1VIpDWSv8r352KrjFj6qeStGjDp1qKa
UXSa5KsaYFapzNIw+p3kqRqwSNuncTA9QPJTDWj18Mr6APqH5KUacHhClzZ+
9AjJR+Xx1GNetjddQvJQDfjk9K6zBz1J8k8NWBDqmePipOSdGuAye4FrVzpD
8k0N+PDhyUl72lzyTHk8DenQvTO9WPJLDTC0TL9kTTeQvFK+3z8PhLenV0s+
qQG/P3+7ZUW3kjxSAwpr2Khb0Vskf9SAvdHGp83ojpI3asCKk8uNjem9ki9q
wLzIgvcWtL3kifL4qfJjYF06V/JDDbxeNP5Zk3aXvFADsj96jq5O50s+qAGX
6utLVaH9JQ+Uzydt7NSK9EXJ/+Tx82ixWTk6XPI+DRg2avvcUvQNyffU46Ir
6hSn4yXPU4/2rc8v/9OV93eS36nHCrurTX/SBsnr1MOi562NX+k3ks+px6b8
220/030lj1MPT5+bO9/TXyR/U48Pbwu7vKGHSd6mHtsOnc55Qf+VfE09hm07
5PqUHi95mnpE5G86+ZAuJ/mZeviUnut3j54ueZl6+BqHXrxFV5N8TD3ii2LD
rtPzJA9Tj/EbVDcvd1XyL/U4PLJmwiV6peRd6lFh+JtH5+mmkm+pR88VSD5D
b5I8Sz0ePJ/15iTdVvIr+fPImH7H6GzJq9TD7G2Tr7l0F8mn1OP4pqfDcuhD
kkepR8a09f/20y6SP6lH/0zNhD30ccmb5N/Lq1t+J+0j+ZJ6jDK/MHMbXSB5
knpsnDWq+hY6SPIj9XjRvs3CDfQ1yYvUw73ocv21dKzkQ+qx7+GQVSvpe5IH
yZ9/qdtiGa2T/Ec9XrXdv3kR/ULyHvXYMj2o/fyuSr6jHhOrPts1h/4keY58
PjmD7WbR6ZLfyNczo/ThafQvyWvUI2/8bNfJ9GjJZ9Sj4uqaJ8fTJSWPUY8B
TxZ2G0NPlfxFPX4G1Lowgq4keYt6LLubETKUzpR8RT0S5pa9PoiuJXmKerj2
GRbbn14i+Yl6uPR7eb833VjyEvl5Lw7TpdHrJB+Rf+95zotk2lLyEPX4Hduo
l47eLvmHegz/OuqjmraWvEM9Gu6/NSie3i/5hnrcX97pZzStkjxDPU5smTQq
gobkF+px/u61EqG0l+QV6vG1S7PJgfRpySfUw2NfWkV/uofkEeqxNzZ7ti9d
KPmDevi1+ljDi46QvEE9StZtv8iNviP5gno87Jhs4UyrJU9Qj2e9l61S0U8l
P1CPqpcLmtvRqZIXqIc6/tcmG/qt5APqcaNyi3Yd6QGSB6jDoCd+O9vSXyX/
TweHhz07t+6q5P3p0LLU9IMt6OJmpnw/HZwD1js1pSdInp8OIw/nHG1IV5D8
Ph2eBl/wqk/Pkrw+/v3Kd8/UpqtLPp8Ond4/DzCnF0kenw61v737ryptIfl7
Oli2+BRemV4teXs6jqc/3ixPt5B8PR3Of34TX4beLHl6OqjnPXlYgu4g+Xk6
NIm9of/nyPGK5OXpUMX39MtftL3k4+nQNnZPr+/0EcnD02HgvGUfv9Cukn+n
w5vPYwZ9pPMl706HzKGaH29pP8m30yG5hfPIV/QFybPToee3WsWf02GSX6fD
mvevJzymb0henQ7lzI6Ue0DHSz6dDitCps24Qz+QPDod9EdCq96kDZI/p0Ni
j7rzrtKvJW9Oh+mlb9cupHtLvpwOLx8tWnqB/iJ5cjoMfxbS6Bw9RPLj+PlU
Lb/2FP1b8uJ0sFfntDxBj5N8OD7etdQteXQZyYPT4WR/8/ZH6GmS/6ZDXOec
nQfpqpL3pkPrhgmd99HzJN9NB6t2fw7soutKnpsO2qRFXXfQyyS/TYfLRzrk
ZTkqeW06DHU57rGJ3ij5bDpEPg85tY62kjw2HXrvvee3ms6W/DUdDm82XFhO
20remg5eJ14FL6EPSL6aDmVKp11dQDtLnpoOxXs+j5rrqOSn6WD3I/HObNpb
8tJ02Lj1SuIMRyUfTYeQSV6PpzgqeWh8fybtMkx0VPLPdIjdWv/VWEcl70yH
Q9/H9BrlqOSb8fmnPfowzFHJM9OhQynXgYMdlfwyHbyPL/42gE6TvDIdlm56
P6yvo5JPxuNvj9vfno5KHpkOxZ7NHpvqqOSP6VDN+VYpg6OSN6ZD0uHGU5Lo
EpIvpsMXtbZioqOSJ6ZDfps1s2IdlfwwLW5Z3K0W5ajkhWnRwdZ8fpijkg+m
xYl+PnWCHZU8MC1WXk1fGuCo5H9pkZO4pqGfo5L3pUWdqmdXezsq+V5aHH72
trmHo5LnpcWax5U3udAdJb9Li4tlrNp0dVTyurRwCXLfbu+o5HNpUYQI6850
ruRxafE+PHmPtaOSv6VFx+oD7do7KnlbWhz6MuKQlaOSr6XFlD9jnVo5Knla
WqxqOz6vmaOSn6XF37FjPBo7KnlZWqz7MzTfwlHJx9Ji3so+3eo6KnlYWlxI
1pyv6ajkX2kRHBEYWJ1+I3lXWlikORSaOSr5VlrYbmgUXtFRybPSYkHZEjfK
Oir5VVp4zn4QU8pRyavSoqtTzt1ijko+lRbjqmWq/6iUPCotqlfSP/6hUvKn
tPjc1tbwla4meVNaNB7478UnlZIvpcXih/lp71VKnpQWSYOmvXutUvKjtBjW
wa/fC5WSF6XFgyplvjyhN0k+lBYLa+WmP1QpeVBarPDo/+OuSsl/0uLLgqYj
bqmUvCf+vOrFv9dUSr4T/3/24LGXVUqekxaP0i1KXVIp+U1ajNYemXRepeQ1
adE7Pab8GbpA8pm02LXj8/STKiWPSQvfKlPNjqmU/CUtbObXm5OrUvKWtOjn
tqlGjkrJV9KitHmnBftpneQpafGm0oE6e1RKfpIWbduqlmarlLwkLY72O9Bg
m0rJR9Ii626nVZtVSh6SFu/6bG66QaXkH/H4srRYv0al5B1pMaTs9FYrVUq+
kRbHKn3dvJSeKnlGWujs49suUin5RVokTMvbPo/OlLwiLXaXaGw9R6XkE/Hz
Wj1890yVkkekRZrhcudpdGPJH9LiUnCrA5NUSt5QEmZpB6vGq5R8oSRsWnr8
8GiVkieUhEY/K7qMUCn5QUn4NCro6BCVkheUhGZWczwGqZR8oCRk/yo42U+l
5AElYdnnMr69VUr+TxKeVut61qhS8n74+BG9/JPpHpLvk4T5R5dc0KqUPJ8k
/A45EaRWKfk9SThR4VVhnErJ60nC6xcVw6NVSj5PEga+bX09XKXk8SQhoY5n
dIhKyd/h60uNud1DpeTtJCHiYc/47vQAyddJQvLo4fd9VEqeThJueEzSeKqU
/By+vvYzH7uqlLycJLx0ydA7qZR8nCRMHTz7uQNdQfJwkjD96rTULiol/yYJ
RdHjXndSKXk3SThWKr1XB5WSb5OEr1f179uolDybJGQUBPezVCn5NUnIfO3w
ublKyatJws8ODQc1oTdLPk0Szi/5+7UB3UHyaJJQqu3tIfXoXZI/k4QNj3f/
rEXbS95MEnYenTKiBp0j+TJJaJ4f/bcK7Sp5Mkko/rHlmEp0vuTHJMHP/UPx
8nQ3yYvh53Nw7/jSKiUfJgn1owaXLqFS8mCSsM6i8+S/DkXO1yX/JQlLy74v
94uOl7yXJPyps37aN/qB5Lvw+QdFVvpC6yXPJQnld5Se9YF+LfktSdhlk13l
Ld1b8lr4+/ci5rykv0g+SxJCs39Uf0YPljyWJHTbtGjeI/q35K/w88u3qXXf
QclbScLEiucW3qZLS75KEs6lJ9S94aDkqSRhfLl3S67QZpKfkoSsvKEW/9Fz
JS8lCV4ri68ooOtKPkoSgtdNbHSWXiZ5KEm4dLH06ny6ieSf8PhtMq7pcQcl
7yQJlkt+rgVtJfkmSSjm0KfFYTpb8kySEPj3/oYDtI3klySh6it/y730Ackr
SYLP772bdzoo+SQaFNnWb7OdPip5JBrUnjdi6xbaR/JHNNhZ91a7jfRZyRvR
4NhJmx1r6UDJF9Gg26KpHVfRVyVPRAO/Obd3LqOjJD+Ev5/d2maxg5IXokH2
1wF75tMayQfRoL72UOdM+pnkgWjwp+j3vll0T8n/0CBmh6P9dPq95H1o0Gl2
+sHJ9EDJ99Bg/PxtqgkOSp6HBiHHHuSMoUdKfocGS2pWdRpJl5S8Dg0SZzvm
DqUnST6HBqs7aF3S6YqSx6GB+uukvP70HMnf0GDZ4w1ufWhzydvQIOLbsWNp
9BLJ19BglvVtjxS6geRpaOCV+f6Ejl4j+RkaDK9bzFtDW0pehgYdT1U6FU9n
ST6GBoalNX1jHJQ8DL4fC+qdiXBQ8i80CN1f3y+UdpC8Cw0q/qtzLpCG5Fvw
8XpV9/en3SXPQoMSJcoV+NKnJL9CA9cjPwK86ADJq9Cg5MrnF9zoS5JPwc9v
43+BznSE5FFoUP3a/ksq+qbkT/D9arMk2I5OkLwJDWw2Dim0cVDyJTSY0S00
tCOdLHkSGhirW11p66DkR2hQUPxPWGsHJS9Cg321z19tQRdJPoQGrcMWRjSl
h0sehAZN9idcb0j/lfwHfj6uTaPqOyh5DxpkfXh4ozZdXvIdNOh6anm0OT1D
8hw0iDwRfqsqXV3yGzT4/bx8bGV6vuQ1aNCm06Hb5el6ks+gweM1hrgyDkoe
gwaWqip3S9DNJH9Bg+/fdsf/s+d4RfIWeHzdCbv3i24r+QoaODz/mPCd3il5
ChpsrzP9/hd7JT9Bgx19G6s/0ockL0EDp/c7H7ylXSQfgcf3PBfNK/q45CFo
UFp95uEzupvkH2jgEhKY9JgukLwDDcqn/ffoPh0s+QYaJG0J1N6hr0megRp+
Vc8+vmGv5BeocWKZq+6qvZJXoMaFwN1P/qN1kk+gRs/WTfUX6BeSR6DGotYz
n56le0n+gBpRQV/0p+yVvAE1ti6PfHacTpd8ATUyq+035NG/JE9Ajcpbqz8/
TI+W/AA1LHoZkw/SpSUvQI3csNzne+mpkg+gRlGSWcouurLkAfD5Lox5sZ3O
lP5/NVp8XpOSZa/0+6vRcNDzFxvppdLfr8aOBpap6+jG0s+vxrU3uper6HXS
v6/G/EfLU5fTraVfX43XfwtfLqZ3SH++GrfdShkX2Cv9+Gpos6xfZdL7pf9e
jQmOscbZtKP026vh8mnMq+l0nvTX8+9fXGOcYq/00/P3L+e9mkCfkf55Nar+
vWUcS/eQfnk17AM/vhppr/THq/Ezv2TaMDpK+uHViNZXf51O35H+dzXCrRqk
DaDV0u+uxruazV/3oZ9KfzvfH8tWaT3pNOlnV+O3uuXrFHulf12NvnlN0vT0
AOlXV2Ocd93XGvqb9KerYfu5UloCPUL60dWYkv/7VYy90n+uxrC8F8ZIeqL0
m6th9vDSq1C6gvSXq+FuudcYRM+SfnI16i6Y/8qfriH942pkWPU3drNX+sXV
yHrq98qLtpD+cDVSTzUyutOrpR9cjbMXP7x0pltI/7cal/4eSXWks6TfW43h
YZNf2tEdpL+bv3/JP9WW3i393GocGWD2siNtL/3bakQ6nU9pZ6/0a/Pzajfp
RWt7pT9bjRGeXVNa0vnSj61GuXHvnjel/aT/Wg2nZ8uSG9EXpd+ar6+fz/P6
dJj0V6uxrOk7Qx36hvRTq3HmZ8Yzczpe+qfVWPWjg6Ea/VD6pdVo1Ojc08q0
Qfqj+X1NS9JXsFf6oXl83yt6Uoa+J/3PiVg+eKKuJP1S+p0Tcdqu2pN/dvw+
Sn9zIlY2XKz9Tf+SfuZENGnb4PF3upT0LyciWL08qYiuJP3KiWibU/fRR7q2
9CcnYn/XTM07urH0Iyfi/ZMyD1/RltJ/nIhruwern9OdpN84ET03P7n/mHaU
/uJE7DgZkPiA9pJ+4kSsK7f73h06QPqHE+HT3zzhJh0h/cKJWFGi/92rtEb6
g/n7B8/FFdJG6QdOROzCJncu0AOk/zcRJ5YOiD1HD5d+30Q8zD966xQ9Qfp7
E7GzTqWYE/Rs6edNhM2ckJt59CLp301Easf5UUfoVdKvm4iwr5evH6S3SH9u
Ij49MovcR++SftxEeH/1uraLPiL9t4kI6jg0fAedL/22iagyZ9OVLPqC9Ncm
YkKdK6Gb6BvST8vnk/+rcB39UPpnEzFvaaOQ1fRr6ZdNRMeFLv8tpz9Lf2wC
JhyMDVpC/5Z+2ARklBh4cQFdVvpfExDef0qPuXRV6XdNwJVyiwtm03WlvzUB
FfPX+8+gm0o/awKKbdl+bgptJf2rCdi+Z7ffRLqz9KsmoOazPWfG0s7Sn5oA
R+ddvqNob+lHTUC9I1mnhtFB0n+agP1Jq70H09HSb5qAGh3mnhxAa6W/NAFt
mo717Ev3lH5SPn7XtOM96YHSP5qAeSOC3VPpUdIvmoBnj22O6unJ0h+agO/9
qrsm0XOkHzQBZ1u+zU2gF0v/ZwLiSpxwiqXXSL9nArJLLTwcSW+T/s4EHG1n
cAyj90k/ZwIWjrQ+FERD+jcT0P7Ld/sA+rT0ayZg0pzD+7vRl6Q/MwFrwkd0
8aZvSz9mAsa52u91p59I/2UCmod8sHGh30i/ZQKmTVu3y5H+Kv2VCdjzMsza
nv4n/ZQJWN+neLYtXV76JxMQY7GlvTVdXfol43H1fY9t7eh60h8Zj9qv3rex
oltIP2Q8GlecuaUl3V76H+PxIaRl62a0nfQ7xmPy0ZyNjWgX6W+Mx/OIgJYW
tK/0M8bDrMbtdXXoUOlfjMe/Il2zmnSc9CvG49C/V6ur0TrpT4yHU8dejc3o
3tKPGI8Zk1+vqECnS/9hPDaUNjQoS4+VfsN4TN1yZ2lJepr0F8ZDlR5Yrxid
Kf2E8diXkrvodxfez0j/IB9/bOvaP+j10i8Yj+rHMuYX0TukPzAeXy2/1PhE
75d+wHhs3Bea+Y7Ok/6/eLRM21H1NX1O+v3iMdC77Ozn9BXp74tHhm9s5Sf0
Xenni8eoflnTH9DPpH8vHg5Hv5W/S7+Tfr14nLJznXKT/iH9efz7VyeUuUaX
kH68eIQtPjmhkK4g/XfxiJxQouRF2lz67eJhtcBx7DnaQvrr4vHfhb7/TtGt
pJ8uDn7t14w8QXeU/rk4LNpz8VcebS/9cnE4qPkx9AjtLv1xcdjeudH3g3R3
6YeLw9CObun76HDpf4tD/ZDEL7u6KP1ucchYMrT/Dtog/W1xuFM+40MW3U/6
2eJQbNWa3pvoYdK/FoefcTvfrKPHS79aHM67HjaupmdIf1oc0rsff7Gcnif9
aHH4MSLfsIReKf1ncQi7evLJAnqT9JvFYWrY0aS5dLb0l/H1/TzwYDZ9SPrJ
4jDu1NaEGfQx6R+Lg1fOsjtT6ALpF4vDk6tTYibS16Q/LA6JtfvdGEvfk36w
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
q0BdvB59TurRwlCy2vThteirUn8WhvYjdhZVp+9JvVkYNpld6VOFfi71ZWHo
e/rTy4r0B6knC8PEzZV15eifUj8Whlc7m98rRZeUerEwLH9oF1WcriT1YaFY
ae9T+KcTr3dSDxaKT/tC/H/SDaX+KxQL4mLyv9KWUu8ViqmtE1w/d1Lqu0Jx
sUHCofe0Suq5QmFwiLF9Q3tI/VYogkaEbH9BB0i9VihmPvO2fEpHSH1WKCyG
2K15SCdKPVYo/nZsbnGPTpH6q1B0qVZ5wS26n9RbheJYnU9VrtPDpb4qFOt8
Lk+9TE+QeqpQ3FqeXfISPVPqp0Khrz9t5Hl6gdRLhcIvL/HbaXqV1EeFYtwM
634n6c1SDxUK8zH/Xh2ld0n9E5/PkjO6XDpH6p1C4XJ39r1D9EmpbwrFde+Q
qP30BalnCsW561ULd9PXpH4pFHUyznXPph9IvVIo0Gfcya30S6lP4utJ7+yy
mf4s9UihaLD+yYH19G+pPwrF1Z+zO62hS0u9USheDbbbuoI2k/qiUMRY3G6x
lK4j9UShaPli2MqFdBOpHwpFyO1adefRVlIvFIKbRdszM2gbqQ8KwVE7j0oz
6a5SDxSCMqsvT5xKe0v9Twi2WKv/TaQDpd4nBDtevhgyjo6S+p4QmJ/p9WkU
rZF6nhDcuPgubTidJvU7Ifj3J+3pYHqg1OuEYFLo04SB9AipzwlB70sxN/rS
k6QeJwQ5A88H96JnS/1NCIyuqnOp9GKptwnBcJt1ngZ6jdTXhOBjQIXcJDpL
6mlCcH52T7tEeo/Uz4Sgwo+z2bF0rtTLhGD71BZWUfQpqY8JwX63EWvD6EtS
DxMCyyYXLYLpm1L/EoK/rRouCKAfSb1LCLpGpFbxo99IfUsIHmRlT/HupNSz
hOCd5ZfiHvRfqV8JQVKBzXAXuqzUq4TAbXGfL450NalPCcHUGRt72dP1pB4l
BPYbbz+zpZtJ/UkIIl5WVFvTbaXeJAS3Q+xvtqM7S30JX+9jdYgV7SL1JMFo
vWziuZa0r9SPBOPz8A2ezehgqRfhz8cfP9KIjpH6kGCc23mniwWtk3qQYNwp
+2lHHbqX1H8EI2ZiydY16XSp9wiGt1W1NdXo0VLfEYw1X+vVN6OnSD1HMHq/
ajyvAp0p9RvB2FS6WeWynZR6jWCE+DaZVJJeJ/UZweizq/6/f9ZFztukHiMY
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
ii6S+XdfPKzhfOo4XVbm231hsfukUx5dT+bXfWE+rNuew3RbmU/3xbmUM1YH
aReZP/eFy2iv1XvpYJkv98WAI0dq76K1Mj/uC0OzTrO20+kyH+6LujvXlMqi
p8j8ty9mGKoM30gvlfluX8BjyMe19DaZ3/bBHt+7yavoPJnP9kHPQc73ltGF
Mn/tgydnloYtpp/KfLUPGnoXnZ1Pf5P5aR80eOXnlkmXl/loHzzYu2z/LNpC
5p99oN/8qt10ur3MN/tgxwnbdZNpN5lf9gHKDq83gQ6V+WQfzOt/JGMMbZD5
Yx+0L/27zEh6iMwX+yADXUYOpafL/LAP9q/u9XkQvVzmg32wMWtVan96h8z/
+iDh7sX7veljMt/rg3tdfoWn0Vdkftebx1fT88n0c5nP9YadxttdR/+Q+Vtv
1OhkOKCmK8l8rTcOWo1rH083lPlZb7TuvmRdNG0t87He0M7dXi+C9pD5V28Y
SyIjhA6X+VZvdF16rkwgnSLzq964E3NlRHd6mMyneqOb+81PPvRMmT/1xrjg
Wyme9EqZL/XGtCnX77nSu2R+1Bua55fCnOgTMh/qjTK988860Ndl/tMbwy0O
uHahX8p8pxdyP63f14n+LfObXrj8YXbbDrSZzGd64WCt9DVt6MYyf+mFvrqo
Opa0jcxXeuH7zS6zmtNeMj/phbDB1Uo1oaNkPtILY7u+GNqANsr8oxfGtc55
X5ceKfONXohwnqavRc+W+UUv/BsWfrs6vUbmE70w/L5FcBV6j8wfeqEg7UF+
RTpf5gu98LXRqq7l6JsyP+iFL79id5WiX8t8oBdO/athWZz+K/N/nhjQ5vTy
P+2LnKvKfJ8nvo4aUuMn3Uzm9zwR9LP51K90Z5nP88S45QV/P9G+Mn/niVkp
/Qe+p2Nkvs4Tg2JrvHpN95T5OU/YpGcnvqBHy3ycJwoOdLv6hJ4j82+ecG92
3+8hvV7m2zwxZ2/fvLv0Pplf80ROn7+db9FnZD7NE8eDp2Rdo2/L/JknNsSa
NblMv5P5Mk+kzMxYcJEulm6aH/NEmedmlc7T1WU+zAMTUqaOPU23kPkvDzyo
VuzbCdpO5rs8UPdx/55HaT+Z3/JA5zsPHx6h42Q+ywPt//hHHqL7yPyVB8p7
7zm/jx4r81UeOLGvtvtuep7MT3kgKXDw/h30BpmP8sD9KpfbbqUPyvyTB9y+
W63ZRJ+T+SYPTCw3uvZ6+q7ML3lgq+vFGavpDzKf5IEDq+qXWEGXGG+aP/LA
Rkvd4CV0LZkv8sCIG5veLKBbyfwQn3/2S81cWiXzQe64sqPl9dm0v8z/uCPm
eqL/DDpR5nvckd9y/tEpdD+Z33FH3RX5XSbS42U+xx2hTl+yxtILZP7GHUNK
NWwyit4k8zXuGPfZY8Ew+rDMz7gjvYKh4mC6QOZj3BHWbcKYAfQDmX9xh0X2
iqI+9CeZb3HHf857jT3p0hmm+RV39C46dT+Fri3zKe74evlamJ5uLfMn7ki7
9fCMhu4q8yXuKCj30jmB7iHzI26ol/hmdwytkfkQN4TffW0ZSQ+Q+Q83jBr/
fHkoPUnmO9ywIPh+9SB6kcxvuGGFz+XJ/nSWzGe4Ya7++G9f+ojMX7hhaNaO
fl70RZmvcEOPuoueudGPZH7CDTV2jIh1pr/IfIQbzveMv6Siy8r8gxsGhai8
7Oi6Mt/ghqrqGods6LYyv+CGlfNftO9IO8t8ghsafT64ti0dJPMHbsgcMrlO
a1or8wWu+NkieGYLepDMD7gi6letEk3pKTIf4Iqs7zfSG9JL5P7fFZ8aLHxd
j94m9/uuaJ8WrK5NQ+7vXaF9UPZqDbpQ7uddMXPkoW5V6Sdy/+6KbPfU3Er0
V7lfd8XZDuY25enycn/uijueORtL0xZyP+6K52MTLErQHeT+2xWvn/3J+Nuu
yNlV7rdd8WrA4tK/6FC5v3bFI0vrYd9ovdxPu+Jq6ZPvPtMf5f7ZBScqhGs/
0OZyv+yCbXYPr7+hVXJ/7IK5M1L9X9IJcj/sgvTy7/Ke0uPk/tcF4dt7d35E
b5b7XRfYDn+9+R5dIPe3LqjSV9fwNv1Z7mdd8HLGzczrdG25f3XG0f/8yl6h
neR+1RlLnQ8Mv0Sr5f7UGQMuN/lwnp4g96PO8M+YrDtDb5X7T2e0GPTyxkn6
ktxvOqPEOJ+AY/QXub90xv19q4/m0nXlftIZeTW+d84xPZ7cPzphzSK/LftN
74/cLzphitfihnvoqXJ/6IT+9Z5kZtPb5H7QCYm125TdZno8uf9zQkjX3sM3
09/lfs8J/lO3vV9PW8j9nRP8/r7QrjF9PnI/1xX+SxvfWGF6PLl/64podZj/
UtPjyf1aVxgDJuQtpHfK/VlXTErKtp1HX5X7sa7YsPLGpgz6h9x/dUVhqT8W
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
pzB6gnzfLFDdsa4umK5b3PT9ssBys4tXA+it8n2qj9EVxvr40W7y/amPA+07
HPSmr8r3pR78ht+08qBT5PtRD7YfRi9zoX/I96Euhs5sataVniHHf13UCz06
2p5uIsd7HVR3i/toS++R47sOkiM/J1nTvnI810atBZOutKPvyvFbG03/1PS2
Mn2f5HithekzVu9vafr+nDYdn7UQ7Nm6dTPT90WOx5oY0HzbkkZ0Wzn+zPGl
bbtKFvRhOd7MURi/eWQdOkiOrxqour/Je3P6qRxPNbDNfoG6Gj1Ejp/qyHpU
prAyXfm36XipjvJ7B3hUMB2/cnxUw5kdd/aUMR2vcjxUw4tCt5YlTZ+PfP5V
YWy4duE/Kx6P8nlXRVBmsfK/6Yfy+VbBgvYxw77TxWD6PM3g+nnH6y+0pdr0
+VVGjwfF4z/SwfJ5VUJeUeCFt/RQ+XwqYrHNEpdX9Cr5PCrg6uIH2c/o0/L+
l8cQy2ZNH9Mf5P0uh3H3ef6h67Yyvb9l8TF3Wak7tJu8n2VwOv/yoBu0Rt6/
Uij3rczzK/RUeb9KYntgl6j/6Gx5f0og95LmTAF9Q96P4ugybKrqrOn1vDO9
/mKo478tK58Oamh6vf9yDd4FFsfp1fL6/uQ2TH05E6bnJ6/nV67bnuL/cmjX
p6bn/yP3YqtafQ/QGfJ8v+WeOd7y4R76kjy/L7mdptiE7KSbbDU9n0+5ZQZ1
Pb6N7iuP/yHXe5qb7RZ6jMb0eG9zv59yX7/B9PvPTH//ZW7t9q611tJHjaa/
9yR3/WGHyStp9XvT/3+Qu25Ah+9L6eIvTL9/M7dqaJPURab366Pp55dy38VU
uTXP9HqLTM7LdZ7+w2+OyfKv7eFiT+7nzKTHPpOfO1vrj7WdZvr5K/n/ztfN
Vi+fROc9kL/v/OHBcLPxJr+Wx3ceeTtk9Gi6cbI8P+eRf1t8GG56PY/k+Tt/
6lakHkI/iJfX53znSN5/A03Hwxt5/c4OMVPc+5mOny3y/jhXaeS/uxddVcan
X5zjK1VqbjQ9Xgt5f50bNj09z0D3eyzvv3OUekxprenxV8vn41zhlG16Iv1f
gnx+zl0inj6LNT0fC/l8nW9VzoyMouvI8V/M5etb1ekw0+fbXY4Plxlf79sH
m45PeT4lXFa2Grs5wHQ8lJfjy6Xt2Ib1/Ex/T55fKRebkgemedNRcj0q47Jv
W8Avd9pazg9lXQ6MuZ/mQpf///Ht0nlErzuOpvdDnn95lw6rvvnb0wfc5fvh
svHNyCO29Bx5PRVdlmuKtbemU2W8Ucmlxr9RK9qZjj85f1Z2KXfyh5mV6fXI
+dbMZcTuvqNb0j/k9VZxGXD28fum9Asn+X67vCwfqm5Eh/3/++9yv1/upfqm
91fyQKq5RJVo6VbH9P3+//nDJSxn6k5zerFcj6q7FC572aQaXe7/5x+XKxu8
MiubPo//n59com7+j6b7jquxf+MAbhSR3dJEtEP27lNZZRVPqFCd0el0UkSS
PSIjI5JRZkIle8+SHUohJJGRmQjZPNf9vV79+X79nh/OqHPu+/u5PteWOg2l
xyeeLz0oulZNqUd2599vqDrh9ryO9HjF86ePesrV//2zo9ePfz9ie88HF3+R
14jn0xDZ3cy7fid/jxK/X6Ea55/6hRzCv3+xLj1Z/xP5wT3x+xkere8tqiC7
8O9vLMlq+PUN+aC4Xm2JEUv6BpWTW/Lvf2ydrrn3jLyMPx8QFb9u4BPyJ/F6
mOBRweljj8gy/nzBtT6PrR6Qr4vXxxRueb8S75J78ucTPJYZ1isgp4nXywzF
E9tH3SI34883fI92Kb9OXsCff0jd5znmCvlNE/H5iJKG467kkH358xOp8fLu
WeQLYeLzFb+cVbvPkJ348xdPDVSGJ8mbxPftVhhtII89Stbiz2/49fOrPkg+
yZ/vqFw5QrWPHMGf/zCsj6J0si1/P0B+msOg3eQS8X5oA+Op+sdTyOv4+wW+
Bf2w2kZ25+8fCF5QnJhMrs3fTzDx8gntjeRj/P0FWp3XTFtHnsjfb+B0VfUy
Xnq9+fsPqhb1HL1Sev1EHrIthoTWu7xMev35+xO6z7zdNZY8kL9f4cyh9akL
yb/F+6stipr76s+TXl/+foZlSUaLZknvD/7+hrtDCz9Pt5P2G4vvdzhptUwR
Sb4r3n/t0MW2753J5KX8/RBD/nvnFia9f/j7I37uXn84hPylUny/xOC2zpYq
8j7+/gmHa2Vr5GQlfz/FvsQFtQOk9xd/f8WNOPOIceTb4n6CNRZlHHs6lryY
v/+i+JOHlze5H38/Rr6sOMtLev+J97MN5D9VHYdL7yf+fo2EM5VbPcjj+fs3
lLsimwwiG/D3cxSe+DrHjXxTvN9t8bxqSoUzeT5/v8faMe/H95Her/z9Hy+f
yW72IL8/I64PULThTp+u5F18/YCwaa57naT3I19fYOesvSbtpfczX39gTkbz
5XbkS3x9gl+1I39Ykefw9QvMFxaqLcmd+PoGz+3bP7CQ3u/i58cBI37HDDYl
b+frIwRUFx03Invz9RMMja2t9cmN+foKU5QRic2knwe+/sL0Bye1GpOj+foM
baf9ntqA7MjXb5jeu+9zbfKLJeL6DlNso0fVkX5e+PoPLXHwwl9b+vzh60Oo
5r5w+kXW4etHBJbrb/9GPsvXl6g93bXpF/I0vv6Ep5Nm7keyHV+fYkiL1RXv
yWXi57UDKswOjn9DTuTrW7h43brxkjyMr3/hnFne+5mt9Pksro/xzul3ein5
FF8/Y2BpY+NH5J58fY3hR02X3ie34OtvaB+x+naH/CFdXJ9jYrGD6jb5Gl+/
I8a+w72b5FS+vofHTscB18lz+fofOQNsjlwm+/H9AVQ0sbDMIXfl+we4Wrv5
mvPkZnx/AaPNa9U6Q34rfj90wnrZu/ATttJ8l7g/gRV5hY+PkFP4/gW6KI8P
O2grzZ+J+xuIt1x/JpPsw/c/kNJgin06uTPfH4HaeMimXeSmfP8EL0da6KSQ
34i8bWe0PPIhaiv5Mt9/Qd1+Z14mkbfx/Rnsqozx3mArzSuK+zf4l+t+MYE8
hu/voEV+g87xttI8pbj/g8e/rmxfQW7E94cgGzm/6TJyufh91AXb8rvNXUy+
yPeXsDHq1fsF5C18/wnDBiWOm0uewfencMYZuTPJ//H9K5QHvOw5ndyB728h
L33JnqnS+4vvfyHCzNpwsq00Hyzuj+HOiexFE8nZfP8MVbPGflbbSvPL4v4a
CtRvZUHk6Xz/DRPnzrgtk96/fH8O189qwZ/cnu/fobztin1+5Pp8fw8XjzQ1
G0t+xvf/IJu4evl/0vub7w8ia7juD09bad5d3D9E2diY4GHkSL6/iIvLv91z
t5Xm8cX9R2jKgwcMJNvz/Unc09w97ErW4vuXqN2yXxtn6eeB72/ic8WO1b3J
Z/j+JzLe1/nbnbyB74/CWj9wYhdbqW9B3D9FiPJUcUfp54Xvr2LK4yYejmRb
vv8Kl3mBJ2xtpX4JcX8WDzz2W1mRS/n+LXr0+57QhnyS7+9ivK9zHQvp55Hv
/2LE1vmTTciT+P4wdBpllRqSh/L9Y6xI+TFMz1bqDxH3l/FQ5nSmqfTzyvef
UeWhsGtELub70yjyW7tBx1bqSxH3rxG77py2Nnkt39+G1rcXU2vbSn0u4v43
hi3UefbH5quzB98fh7K7rddPclu+fw53vQHnq8n/ron76/jdcrzjZ/JDvv+O
eYMnJ1WSj/L9eeRtna/znryK79+jymJl1Gsbqf9H3N/H86uJL16QB/H9f+zZ
lDSqzEbqJxLnA+izLjn7MfmP+DzohZQTGzsUk+/z+QKK667dXEQ+wucPeBm9
pOEd8ko+n8AVwxnR+eQQPr/AjMeq8hvk/ny+gdq3vLyvkS34/APjX3bPuUT+
vl+cj2C1tbHTBfJdPj/BhvhvW86RD/L5Cqa1LdQ9TV7O5y9wfJI24zg5mM9n
cPLirFeHya58fgOzgiGjD5DN+XwH4+obXtxL/iY+f/pgsuqxUxq5kM+HEPhh
+9ZUciafH8FuW2CjHeSlfL6EvGizmVvISj5/wrBZd19tIjvz+RT27F46ej3Z
lM+v8ORnz4tryV/XifMtVE1/6bSaXMDnX3huvmprHHkvn4/hwPvOjZaSY/n8
DONf3JmxiBzI52so14p4NZ/cl8/f4Dmi4eg5ZEM+n8OG7G05M8hV4vOuHy6M
6+QURc7n8z3ktsraMoWczud/ONLIQ3cSeTGfD2K+ZX50KDmAzw/RXjayPJjc
h88Xcf5a/n9KsgGfP6KT75ALgeSPM8X5JJa2uNBhAjmXzy9x8UuXzb7k3Xy+
ief/UhqMIcfw+SfKuzSZPoo8gc9HURg/7cUIci8+P8UOw4cjh5L1+HwVvpd7
Zg0mV4rPV2dUb17nOIB8nc9nMWvL+00u5FQ+v8XbKy71+5Hn8vkuXIzXRPYi
+/H5L+aue1zWjdydz4eR1tPaszO5OZ8f47R26NkO5IpAcb6ME7/22jmQr/L5
M3aYvFlvQx7J59OYJrfUaie9H/j8Gl3vjI1oTXbk8208m7is1MxG6nMW59+Y
1fHEUGNyfT4fRx3TspMGNlLftDg/x8yO9a1b2Ej91eJ8HSUT7RKakG/z+Tuc
7gyupUs+x+fzmCqXh9WX3k98fo/dJjOK65I38vk+cn/FDa5FXsLn/3iinXz0
tzX9fud8AMp77m7zgyzj/ACertu36qu11J8u8gXINT706xO5L+cPkH71oPqD
tdTvLvIJmL01895bshHnFzBga6rbK7I25xvw58rGA8/JVeL7gysOtlxm9tRa
6scX+QiMTpi2rMRa6tsX+QlUdfevfkA+w/kKLKrbX3HPWtoHIPIXaPaj7e0C
8nrOZ2CNUe1+edbSvgKR30CjgOL0XHIE5zswN/+A4VVyAOc/8Fa9IOYieRjn
Q+Dl4Pkxy1ra9yDyIzhoaDzhLNmG8yVo7PDk+kmyAedPIFfv6H7MWtpvIfIp
OJoXsPMQ+aP4vuIGbX+TZvvJTzjfAk/DgtkZ5FzOv2Djt5g3u8mnOB+Dx7W7
jNlJ3s35GVh2K83ZZi3tLxH5GgSvWdxxs7W0D0Xkb5BhaLd5Izmc8zl4d+ma
TqK1tK9F5HfQcbNy2hryEM73YOrm32Uryb04/4OTl+NHLCe343wQ/hq1ORNL
1uP8EDwS9tnEkGtxvgiJPbqvm2ct7eMR+SO80DpTa7a1tN9H5JPQ81efsGjy
Nc4vYbXJqYeR1tL+IZFvQoW886AIcirnn+B5d8/hMHIC56NwIty4lYY8l/NT
sO68JE5lLe1vEvkqJFl8+iYnu3L+CsZdxyoDyB04n4UtU07dHkc24/wW7IuN
+vmQG3C+C9maKene5G/i+rE/AttdNxhJfpEl8mFoWN9s4XByofg+NgDnW4R+
8CBncb4Mswcf9xtEzuT8Gdx3/bniRk7mfBosHF27gLyU82uoXTJ/Wx9yFOfb
8PnoWd2eZAXn3/Dp+JfpXckjOR+H32W2L5zIzpyfg2F3X6/2ZEfO1wFHFp+1
Ixtz/g7Rvvttrcn1OJ+HC7Z31lmSv/wW+T2YtvlSqxW57LDI9yHWrXmYKfk2
5/9QZ6X9QyPyOc4HYnUtl4H65L2cH0TnLSMPNSNv5HwhyuUB5o3JsZw/xP6R
IcsakKdyPhHLQiZ91SYHcn4RszIiZHWk3x+cb8Q8/cm3/lrR5wnnH5G8R9Pr
F9me85G4qZDt+kY25PwkDDy8m38ha3O+EpFj+8/5SK4S1+MD8W5VhzfvyU93
iXwmZlYajH5DvsX5TbSd8SP7JfkM5zvxwuGh4zNyGuc/kVX/2MZSciLnQ3Gs
0UqtR+RFnB/Fpd6yyffJkzlfio9rOpXcIQdw/hQ9WvwdfJs8jPOpSD5z5chN
cm/Or8JsVVyr62Qbzrfi5LJhcZfJBpx/xdT9Db5dINfhfCyG/86RnydXPhP5
WQyaGp13mly6UeRr4a9n3/sEOZfzt1hfcn/XEfIpzueiIm9B84Pk3Zzfheqt
zZxM8jrO96J2x9zXaeQFnP/F2c1q713kSZwPRnKXutk7yOM5P4wtnzc5bCV7
cL4YOSWOG5LIPTh/DN3KM3U2kNtxPhnR9oPDE8h6nF+G7uq8h6vJtTjfjByz
UQNXkD+I+xuDse1OwcGl5EdxIh+N1CPDzRaTr3N+GnlnLy9ZQD7O+Wq0qez1
eQ45lfPX2Dwkw38meQ3ns+Gab5gbRZ7L+W00mjOv21RyGOe7Ucf7xfZJZD/O
f8PSe2CjiWR3zodj4pyU6WpyV86P41n+r2dKclvOl2PR0JEjZORmnD+H18eU
UxPIf1uIfDqGnv/Yzo/8Tnxfd0fEsd7xY8gP5op8O67em/9rFPkq598xpNVF
lSf5KOfj8WtN7cKh5BTOz+NR+7793MmrOF+PiqopaQPIczh/D8eyXXquZA3n
87H1+925/cg+nN8HetV624s8kPP9MNhpM7o7uQvn/2HWfWh2Z3Ibng/A6CqN
Q0dyY54fQM792PUO5N/aYr4A8vKttW3Jr8X1gQd6WByZ2I58X+xjpr9v3sX7
rcmXeH4B8xrcdjMnH+b5Bnw9+2CfMXkbzz9g26bHLQ3JK3k+Agu2lca0IM/i
+Qkk5T360IQczPMVeGd9z1eXPIbnLxCZlnupPtmN5zPQ47+zHbXInXh+A11t
MpJqkS14vgMh7dZp/2lH1/s8/4EHQ2ZO/kH+8V3Mh2Bx0vhHX8mvxPXIEGj0
+gyqIt8VfVxDsOqYwaEP5As8f4KK+e9N35EP8nwKlk/Lin1F3szzK1AkrPr0
nBzH8y2YVew7/ik5mudfUDCkzdUSsornYxD04kWnh+RRPD+DvntSN98ju/J8
DbwSAusXkjvw/A12pbWckkc24/kc9H11sySX3JDnd6DvOWfwVXL1OzHfg05P
7Q5fJL8U1z9DsSKp0CybXCj64oai/dzpS86Ss3l+CM3jWladJGfyfBF6Xzg2
/hg5meePsLu159VD5KU8nwTf9Bed9pOjeH4JXuOiNmeQ5TzfhNXdtervIXvx
/BP0+6yK2EkGz0fhiVq/ZBvZkeen8CVr/aDNZBOer4KXi8GhjeR6PH+FL29W
myaSv5aK+Sy8OFsvdg35mbjeGgbzUzM+riTf5vkubCt97becfJbnvxDe3vty
LDmD58OwZNeZjjHkTTw/hreDWiXNI8fyfBm2NJ+nNZscyfNnSNJ+FB5NDuT5
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
RhpyJu8fw37TupNV5J28nwxxGWV35ORNvL8MGxRnewSQ43m/GYoGJSSPs6jJ
N47HYG/Vv7HkubwfDe/iuim8ydN4fxouVdS66kUO5f1qyJ9xzX44Wc7719DU
acUqD7Iv72fD4mbDqgaSvXh/GzqY6oxxIw/i/W5o5pV9ypncj/e/we5ApHkf
clfeD4fpPa0W9CA78P44/H1X8KIL2ZL3y+H89ZnuTuSWvH8OxwpaZTqSm/J+
Oryqe6GpHbke76/DqED/qVbkP45ivx2+l38rakP+LM7vJuDBhpW9Lchvn4n9
ePgypdVWE3IZ78/DiOh9tY3ID3i/Hp7t6RGkZ1GT55yAI7XPX2tKvsz7+XBx
sYtjI/JZ3t+HFl2zVuuQj/B+P2xt1PuzFjmD9/8htOmhMbXJ23k/IKb3bXf6
j/lX5w28PxAXExLMf5JX8X5BeBn8m19tXpMXnYDWF1QvqsizeT8hnDbkDq4k
T+H9hVi0wX7vO7Ka9xvCJCe2yWtyIO8/RLXhk4gX5LG8HxF667vce0oezvsT
EYVFPR+TB/B+RVjoFSQ/NK/Jo05A4+Ym/+6RO/N+Rrj2CpAXku14fyPOxm2/
nEduxfsdMU+n1PYG2ZD3P2LZAaMVV8mNeT8kSuYPr7xI1uL9kYiePW9UNvln
K7FfEv4p+46dJX8S55P+WFV1v+Up8mveTwmdsL+zjpGf8P5K3Gre5skhchHv
t8TTp3DbT77J+y/hXOy3K4Ocw/sx8fpPhM4e8mnen4knQxeH7iQf4v2asLq0
Lm8beQ/v38Qp1fZOm8lbeT8ntnRJW7eRnMj7O5Fnn/ltHXkF7/fEqGGZfmvM
a/K39OdtTDu3kjyD94PCvcmO1svJk3l/KLL2J8bEkoN5vyiWzogtX0j25/2j
SAmf6jGP7M37SdF81fjMWeShvL8Ud++7No0mu/F+U7wZ2nZKpHlNvtcfo9/W
ujeZ7MT7UWF4pLhHGNma96eiw+6DSSFkc96viqSLC/8EkfV5/yoCdUcGysm6
vJ8Vc+aYXvQn1+b9rfho/MxqHPl7C7HfFeefpi4da16TH/bHiwLFu//I5bwf
FsoKixFe5BLeHwt0KTo4jHyH98ti2s5leh7kXN4/Cy3nXlEDyRd4Py2q6rx8
4Eo+yftr0bdqRR9n8n7eb4sy3U5be5vX5JMDUO5ZUKsHeTPvx4X7+TBFF3IC
78+Fzth6VzqSl/F+XdiZJNs6kufz/l2k1XeMsyVP5/28WNrqVEU7cjjv70Wu
zM2rDTmI9/siNO/qYXPyON7/i0lBHgYm5FG8Hxj3ra9ONyR78P5g7GjhWtyC
7ML7hZFne6JvU/OavHQAAkLstumS2/N+Yoy5u6G2Drkd7y/GwZA6Si2yKe83
xlS7kCu1yC14/zE26d20/WNGn3e8Hxk2tg5xP8h/xXlyAMyDYyu+kqu1xX5l
RN9+7FllVpPHDoCLstPhD+TnvJ8Z4ZYL9N+Ri3l/M+rp3op6RS7g/c7QsTB4
+Jx8jfc/Y9o43z5PyU94PzSGX9y0pYTsx/ujsXZ00b8HZtK+B7FfGq4tmsrv
mdXkvQPh/6P/pQLyTd5PjdcNp1nnkd15fzWeDkpZmku+yPutMXjfjbdXyC68
/xrmzp+GXSSf5v3YkP9ocSCL3J33Z8PoiVPzs+RDvF8bfSuHTD1pVpMnD8Rd
O9m9o+Q03s+NklVTexwit+X93RhjsXDTPvJW3u+NAQ9W/Eonm/D+b6SeTZiw
m5zI+8Ex48b6rBRyM94fjhyt9W22kVfwfnEsUK+JSTaryasH4mj10pcbyDG8
nxz+B2YPXie9fuK8PBDz1k5MjyfP5P3mMNzuo7uS/FWcnwfC6oFL2DLyZN6P
jszeVvmLpdeX96cj46p2p4XkYN6vDqt5z9bONavJw9PzIzvzZSbZn/ezY3FY
/Jjp0uvP+9sxMVV2cip5NO93R4F2R5PJZjX5+UAcXPN91kTyUN4Pjybu5x+r
yVd5fzxe2c5HENmN98vDuavzDhn5PO+fh77mex1/ci/eTw917n6lH/ko769H
39GyK2PMpH0qYr89VjdsZvufWU0+n17vt6eXeZKtD4yflJweiFNfZO+GklPE
eX4g4u20h7uTzRtKC3IDUb40df8AcpI436fXp4VLM1eyftAflfx0IFpfvR/R
j7xanPcHovbu0Du9yLrZt55dzgmE6sCvrt3NavL/gRj1fMn6zuQ6plv97W7Q
n+fa7HsH8hyRBwjEydx1vg7k79PCi1fcCUTXuQZnbMxq5gUC0WP8WrN25Mrb
zmM+PqL/v1J3bmuyRuQF6P25Yf4TM3K5Q9PC/14EYtLXTy7GZjXzBYFYNycg
xcBM2n/zZPiJ94Fwc7petwXZR+QJAjG7ccegJuS7ZQeum3yl599gzZWGZE+R
LwjEysGVNvXJuX2lCyZ6fKkey+qSB4u8gQx5Dtvf/jOl388bvC6UacuQ87hq
6G/TmvkFGfqfdt33nXyyqnW/gU1kGHVhRZOv5K4ijyDDx6o7kz6R9w//dDLN
UAYzT6OCCtOaeQcZHt4b0/kteVfaha6NWslgvWRtQjm5jcgryKClyP3yjLy5
7tqDk2xkmBryd/QTckuRX5AhMqnDiUem0v4hueOdjjLUr/Zr+YDcROQZZHCc
HTPjLjnuVOe07j1leO2YVnzbtGaeQoZuOtf73CLP16/bLslFBqMm5Zuvk/+I
vIMMq53//blMnj5JukEkw5ZN+gE55M8i/yADWllnnyeH5+40lY2UYWZ+lzZn
yG9EHkKG4Rn9Fp4wlfYtRW645CvDsQP9nx8xrZnXkOHUk4EDDpLHzx+gZyuX
wbv3gF2Z5AciLyHDsizneunkUY/0V8dpZBg7qVvwLnK+yE/IkOVhe20H2aP7
y4aVU2S4PMLIbiv5kshTyBA0t87yJFNpX9Sx2FGzZEh58ObtetOaeRAZZk24
NTTBVNovtbjO8RgZqhrty1xNPizyFvR8vlraeAW5w+Axc41XyHDmXWD4UnKG
yF/I0Ni0W/4icrsU6Ya4DH8jtZ0WkLeLPIYMa38UxM8hm/6pnvZ0swyX0pI+
zTCtmTeRYePCgFFRZD2fq5/675KhyZLWR6aQV4q8hgxWxx/rTSLrHNkQtmef
DM+abogMJS8W+Q16/tcNuxdM/tdY/abhcRlc+v/tpiTPFnkOGV6ZZa4PJFer
ewaFn5ehS5sx38aTp4h8B/35Xr/H+ppK+710ygquyHA+fevJ0WS1yHvI8LN9
P+NRptI+sIfju+XLUFZyf8YI05r5FxnCj4cXDyEXz0h/sPG+DDtP1+4zmDxW
5EFkiHkTn9yfXHBXOgCUoWF/s98wrZmXkcH56s7xfU2l/WRDbge8lsEkyuZc
T3J/kReRYYfnHvNuptI+M5NhFz/KcPe/tnM7mdbM19D7aWFyaXvy8Zdvr1r/
oMdf0hT25M4iT0Kvb+D8bdbkTJcz/ZfXlkPetOKfJdlO5Evk+PF6dGAr8s7k
uKyKBnI4V5zONiVbiLyJHJ3NzNq0NJX2sY3rM7KFHEXTZizQN62Z35Gj/c/C
smbkeOn2kAn99+m2bo3JjUQeRY43C2emNCAvyfzduWVbObyXXKtTj6wl5n3k
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
Fe8qyfdEPleFXm9iB78ne3Wu5R3xXIV2e+bsfE2+IfK6KijjJ/97QR688nb+
3XcqfE8NGFdGviDyuyqUvRhy4jG53+vtQ3t+UcHSq7NeMfmUyPOqcLrcYFIR
uWv/iKvJv+n5TfuaW0g+KPK9wfiUWGCdT7bf6tr/n1Yw4venL7xB3i3yvsFY
XjWn9CrZ8kfzLHnjYJTIRvS+RN4i8r/0v/82WZ9NNpZ+/RkEY23O809nyQki
DxyM6iNpw0+Rmx44fNzOIhjHb4ekHyPHiXxwMApb2mgfJtdrGNN5pXUwhq54
GrifvFDkhYPR1mH92QzyH+V/+z92CIbP18Et95CjRX44GO/ffp2601CaN2lr
790jGE91t+dvI4eLPHEwuvgMcthMfmvyZdcJBON1/uvYjWSVyBcH4++UJc/W
kcumXWpj6h6Maa6WzmvIE0TeOBiefU5tWkm+f3vdlrle9HgDh31dRv5P5I+D
4XDokVcsOd8hyPiZTzA6tA/OXEgeIvLIwVh/90P9eYbS/Eq3xIGyYATtmaKY
RXYR+eRgbNhVdX46+WyZdvP0kGA45YebRJJ7irwyud2raZPJh/sWrWg0JRgb
U8cVTCR3FPnlYKi9bjqGkDM27NaZPDMY22x6LQ0iW4k8czBc7VOey8g7qqIW
3VlIz69PffiTTUW+ORjZh9RJfuQNwwfX6hEXjO3dr3wdQ9YTeedgvCtvNfI/
8qo0o9lJCcHYkTMt05PcUPTXBePq9av1h5EX1X397U9yMEb/NlC4k2t1kvLQ
wfD2Czw/gDzb/+RUWSr9fc93G7uSq0U+OhjJG99E9jOU5mmWVl7KDMaraNvb
vcgVIi9N/55FCofu5BB931DbY8G4cSYptjP5pchP0+O3yCvrQA6cZPcq7lww
IjP/9HUwlPpnpTx1ML4G2W20IY/N/SGvvByM8iEjP7clF4p8dTCGjZs2orWh
NI+TWzoqLxjWGxLTzcjXRN6a3g9/D2kZkwfMT/I7XhSMHmtyAwzI2SJ/HYzJ
nk/oe+lX5z6PNEXGT4Jh0eujQRPyCZHHDsaAEX8mNyR36t5n1JxXwShbVe9m
PfI+kc+mf99PXZu6ZLs1unlPK4MRs7bxwn8GX51TRV47GMtG6z7+ZSDN9zzy
GPA9GA0GaPf8Tk4W+e1g1PH/tfYL2XBw5uU9tdSYvrOi4iN5rchzq6HWL3Gv
IDdKme2q20CNwoNXdr4hLxX5bjXORu/7+5KsJR2nNFej9cR432fkeSLvrYZW
3KSjpeRfUlzVWA3lvSFNH5Gnify3GgOGWmrukz8drjjazVKNlPdfL90hh4k8
uBoLTl1udZv8uvF5p032ajw5tGbmTbJS5MPVyL7ne+8auVS9KvN3ZzUsrSyc
LpP9RF5cDe3tpcsvGEjzRf62gX3UCBuU/PIc2Uvkx9UY3dLb5bSBNG/UMfVi
fzUuGjRIPm4g9QtLeXI1jjuf/nqYfHHGv1Y2w9RwTAj2OkCGyJerYavXfO9e
8qm7+cnLvdXIOH9cO43cTeTN1Tia6BOYSj7UcbvRh/H0eDdWn95OdhT5czUm
XIk32GIgzStNThgZpMbfVjaTN5EtRR5dDZtdp3ITyVtfujQ9FqbGw9HuVmvJ
JiKfroZR5zvzVpHXuTSPaxlFz08vv+Ll5OYir65G57DHXZeQ45LL6s2eq4be
zfGrY8j1xb4kNeaMefBmHjmm+tDCJ7FqRDXyGjCb/Ffk2dX4VXFxa7SBNP+0
8K/bajWa/eryI5L8VeTb1TjcZft/EeTJmaNm7t6gxssNOvvDyO9F3l2N3TZh
Ohqyqn7b6gbb1fjx7JZcRX4m8u9qPLpuf05O9pd/jghLU8OrJMYogPxA5OHV
GGvyMGIcefS5ixW3D6rxKcb+5lhyvsjHq2FuHG3tTR7acl1I11NqlD68MN+L
fFXk5dXoeqX+o2Fkt6nKlxsu0H9f6tHNg3xe5OfVSG6zdPVAcq88KUBDjyc+
540r+ajI06vh7/Cjv7OBNH+l/di/UI0dnxy29iZniHw9PX/P/b53N5Dmse75
5BTTv69W7Kgu5BSRt1fjt8e+zI5k8ye77lo9VyP1/O16juRNIn+vxnP/j4G2
ZL3eUV7L3tH72b7RmXbk1SKPr0Y3y3YGbci6iYNuvv+sxuCBPSeZk2NFPl+N
bwnu140NpHkuQ3ev32q4Nhnd1pA8W+T1Q2B/dMKcFuTvQ17RFXUIDi+W329C
jhT5/RA8WKjopEv+QJ9uRo1DsGVvYFx9cqjI84egTi2/l3XJ5dLlm0EI6s/3
RC2yTOT7Q7DfwXXTb/2vzo/H+fQoNQ9BdZ2On7+Tx4q8fwieaBsP/6ovzYfZ
HnG1DkF413+7P5E9Rf6f/r5VZbU+kHOb/+iwq0MIJutn+70lDxLzACF4cznp
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
gufPGbYAntpiYj25Adu763eBM/yb9f0kNKM5OtsRzjTv8iWwSULW3SdqzYQl
rPcnoaE+ZW52sI276opSQsOKuMemwN9Y/09Co0WadRPgS1uerytqldCsWdFj
xsKBrAeI882sIRtHw5Ypt4aqdeB4FaXcGwl/YH1AKT0pGtvdAj7z8tx7G00p
9V18bYk5vIL1AqXEMxx/1hQ21T5welUXKZW1pDYaw5WsHyilOXrDp/SDY8cr
/KN1pfTYJTbUCF7MeoJSWnlL54kh3HvV8oH5BlLqukzaTx9+yvqCUsobUbmq
K8wuN3pKaf9Q+0taMMuV9ZYS1+X0bw1YT5Uv6SulZWf/zezojOtL1h+U0roR
XvvaYDbeZCylbZUXn7fA7OPOJlK6crNt8E9Ys5+60X5TKf17PIfzDb7D+oRS
Wqobde0LvMXpU+ktcymVyp6rfYKnsV6hlFZ17zevFm4Tlxz4boHH/8IruhrO
Yv1CKRU+PvCmEpaevu4yZJSUEr/ft3wJj2M9QymdcPgjfgY3FZ3WW2QjpbS8
4TdL4UusbyilSqG79hOY83dPwc7xUhruonQvhEey3qGUDvgcP54Pf7QU7c6a
LCWjyOy6PPgs6x9K6XrLszG58GrvJU7106W0ObxhQw48mPUQpbTcVeNeFlwV
OrOT8UwprZ7Rw+AqHMf6iFLa42+y+DK8JH3EnQVO2B+ShyWkwH1ZL1FKEy1G
fr0AP3vTI2TLXCndLRk5MRE+xPqJUhJdsNgaD7t1a5t+2UVKTqmDC0/A+qyn
KKUZ73sbHYMfT3nf9s5dSn6O2v6H4b2sryil+PJf5w/Cs3G26uUtpW6H3jRF
wFqstyilkyH3poXDedEZcidfKS0+dm7nbjiE9RelNK1mR3EoTHnHsAdKabbv
8v5b4X+sx4jtoTZx9Wb4xrftPy6sklLVU51LSljB+oxSCix/0SKFJ5hwLr9a
JyWzzmfsRfAP1muUktaqoDAenDbPk9+NI6XejdblgTCf9RultOhCg8k62Eo5
bRQJpHQn8mLAKvgT6zlifz2/Mt0fPp9o/lkgkdKIr73/+sJrWN9RSsOW5zv6
wGZlehfiFVJyV5dEeMLVrPeI/aXYuMINPqn+a23ZJilR0W2zBfBS1n+Ukmbr
So4z3G90pbnWVim1eqhdc4RfsB6klIa8PtphD0cvvfdu4g4pbY8a7WwHu7M+
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
DZmTOsCidk3F54zltOzCrc1KsAXr3crppF5+Uuv3RusfI1/ve2EqpyF3Cj78
hFNZ/1ZOX6LyBvyAN7rnOquZy+lP9M25DbAp6+HKybX08p7PcN3O5K5kIadP
lol3a+BE1seV08PSw38+wD6XDxVsmCin5pjtY9/BQ1gvV05rjqxZ/xp+Xyk8
gRe/P9f59HM4jvVz5TTMYMSrJ/CSnqvsHtvKSZymolUK92c9XTn1CahwegQ/
p5ntO9nL6Z/XpaBCOIr1deU0ZmfQtTzYbb3wgUZOGa9cG2/Dmqy3K6fgFdom
OXDxUV356llyStB5veIavJf1d+XUu/2JY1dgp/zOk47NlVNZf/fSS7Aq6/HK
qWqVVteLcN6PLy33F8ppRuW9KUnwDtbnlVNrhER0Dp6q//TKXw/Mn43DU0/D
SpbCH0zktJR/XBMHZ7vmbDHzlJP6bZHecVjC+r1y6jVuwMKj8ATZWXNPbzn5
Pc8KPwQ3sZ4v5vOFefn74fT/wr8dWCOn4Zc//9sL+7O+r5x2f+HG74bNnm27
cNdXTnYLu/uFwPWs9yuneY3HErbD5zsJf5CVU26O/ms5vJr1f+W0J/uMlgQ2
Mrc3GbZVTimfjZy3wR9YDxjzz+VUUAB8cvmo2kViOXWr6H9tA7yM9YHx++Ij
vq+DB+7TPhsml9PrKGXj1fAL1guW0+Prfp5e8JFr7byzt+P1az07shyez/rB
cnoXY13sAWvV1mBFkFPL/FiVRXAJ6wnLKWDqX5oHh/cpeasXhvm4bMHW2bAL
6wvLKTw5OdkF7irkQ8PlNHpkuyoHuID1huVk9WbmgOlwiPB40YNyOnPzqNtU
2Jb1hzHfyt7uJliZfaEsp3SdIbet4BzWI8b2i1jZMh6WCX+ejJbTkgmxo8xh
K9YnllNRz6c+ZvCvlkVROnFyShzQLdYEvsx6xXL6unBi+VA4YOjUuU6n5RSb
56M+BB7N+sVyuuYdYacHf50rPLFPTrbjMyQD4CTWM5aTxYTyNG147XbN4pQk
OR1d11irBQ9jfWM5rStWG9wTrrrwe+/bi/j9q/QXqsOnWO9YTotMx4arwp6v
3ztpZshJNHRqXid4EOsfy0l1jvNfZfhl1/uqdlcxP1PmjP33DecrrIcsJ8XE
eet+wwsnCBfEyWntb7f4Zrg36yPLqeDTzOff4TLv6OCzt+R0WG16j6/wftZL
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
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{1043.3333333333342`, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.025, 0.009999999999999998}, {0, 0.000028291583694342816`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8116386823031907`*^9, 3.811638688118484*^9}, {
   3.811638761301439*^9, 3.8116389141159487`*^9}, {3.8116389871975*^9, 
   3.811639036546217*^9}, {3.8121489139681377`*^9, 3.812148940359681*^9}, {
   3.8121491083510885`*^9, 3.812149112027954*^9}, 3.8121491937146235`*^9, 
   3.8121492306587863`*^9, {3.8121492784807987`*^9, 3.812149322662549*^9}, {
   3.8121498998825035`*^9, 3.81214991383871*^9}, 3.812149949631363*^9, 
   3.812149989207431*^9, 3.812150049760746*^9, 3.812150161630205*^9, 
   3.812150242907862*^9, 3.8121502794780493`*^9, {3.8121506940063887`*^9, 
   3.8121507840106144`*^9}, {3.8121508162028284`*^9, 3.812150836755519*^9}, 
   3.8121510618793964`*^9, 3.8121511261989164`*^9, 3.8121511836499968`*^9, 
   3.8121575426072235`*^9, {3.8121592772406807`*^9, 3.812159289098442*^9}, {
   3.8121593326449594`*^9, 3.8121593719176006`*^9}, {3.8121595121058197`*^9, 
   3.812159603634881*^9}, 3.812159702742821*^9, {3.812159772511136*^9, 
   3.8121598091664004`*^9}},
 CellLabel->"Out[1743]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
8QNnej9cCdt4aCp4uigfivYjZ/otDL02hf4zZzq2YmZPIkqvIp75pTMdV8mr
Z64idiZ4emffkKL9zpm+jERV0utYuvbMH53p2L/VrVM1Q68mnpEHOuYOKVjt
6+/CNGYR/8g0xrJp6BZQHujOMJiG2crqNPApVNedNUwaNYwdlRnvryMe0uQP
Ew9J8jiWLB6+DDKdgxOfAowXGXVnLZNCLakv5YG+EY5PYQbJ/zKFI9kUdL0j
D3QsPj4F1EX3f+uYFOpIqy4PdBQyPgWcQajb3rHicBSbgi5l8vAB5xQwv+m+
wzhxGE9SGMvkITqiEp+CWQokfQKhjyM9ZHmgz/NI1+ugkP6rsl1LHMnQMR4r
bttt0BexdL1OCukvkPxzlDgczdJ1qygPPSxdr6JCOrafarxF0MeLw0RCP4qp
HzY6+X0b0X2COEwi9PGkjywPtEfL0z9P8v3R4jCZ0CcweeZrTvT18Knus00U
h2MIHeOgx/XlgfZ3eDo+4+s2d7I4TCH0iQz9h050HCPTTxGSPpXQMQ5bSs8a
dNru8vS/JFGdwtAxDvoZpax+6DwOSMFqu56CO365Z+W+/lPFv+DofZtPDXIv
3nmWkoB1u8HZJDrHisPriA7HkJZZHuB588SDPncFEO1gWFAAVMLcFbTZbEux
f7evf5q0WZh7pjhM2t8/TXy2+dT9m2Gg0PyePl0THycOxxO7j2UiK39wPgY7
M+DYUc0MkLbCLqxj4lMw7Md1HLoWhRl0uR/fc6Gy/mxxOMewXvwLJshD7uc7
F1q5ANc8he8jA+qJqUwJkj8ww/iQzO8oG9MluFXJ+bC/o+v5GSr6bzbsP5fY
fxbYv//OtylLTjHsD+fcBSfU20+oFXvhTcwhm4mjJ7ckrxTHuOsWqErZfZqy
ezpj99lo9+Y3/+FXMHjxEW23/PbIxu5B8dgZds3UbIJDENl9d5yOWu5bc8WG
Nac+Xbzino3qdHlxeg7qKGGp/ET8KQ/nEUumgyU/+cLlyhvQPttzBnL7t5yn
fDFFHgpIF39uW9ouUgVccBL51Ot0uOvKDWunCdXEHyu6ztm/9gp57J+2XVxd
Oy0HOgs7xG/55zRiwzmkFJYsG04GG/59e4equc8VgsdJQn5//zn34mbOS2fm
5Scnmp9AYl6nMze0488V26Vi0++di1cvEkmpSCiNj4dzGZZN8l9QA+e/euoz
yoKXQgteKtt1sNT+AmL/ucR++u17mMN1e/nbkP5VpN95hqKfz9DPA/pP7/uA
otGZHvH0JST3vF0cZrD0/Xedp2j0G8vj6TgTY9/d0xX9AnG4kNDPV+X0tN/v
h+GkL7J0Xedreq5s137vEIeLCP0CoI88WK9o+1i6rlGRvgc+/ckX3qny44UC
OJOQ30F8Lg90nSGtt5C+mtAvEtBLCH0GQ/+ok98vJ7lxpjhcSugXAf2Xe7oN
+nonOrYbP/3y+4yS+meEPhMj+rlLDPpTznSaty8G2o/veZdBkz/0+zuAaO1X
dsDQ+D++u0mWf52bw/xW4dE5Hsgz9y87EOY8+UO/8R7vN/crS77/BOKB0d4t
b87C1CXL5W5dUlzu1jn/4PviT1XvQ2iltXPvbxzuN3fpTb7/RKKNy93a5y53
a5+73K296Kf3v4DdlVG7UmvvtoleluCbKvu9YDgXC78bm3zfeKVsUivxDYGe
w0HfqMk37y66aduwjtUjA9w7uhwZL4zqmmT9N8F7Se8tc2S0cIpX5L/OeJe+
w8yRMaXjvXwEVX4+HIFgLBhDRiNP9vLQDuA3Gx7i9ddPWqd6eWgoEgH+Ha8e
1T49nW+1mvAuLR+O68WmoEfGznRIwWxH74dPzBkSfAraR+c4pGC2vF+CT8z5
InwKOMQkbz4/MYWTSC7aCud63DZtzsQMB7rOQ58D7cMR7fq4GST6vcLFDnz9
zb93l+1Sxs8heZeXznfAeTjXI0ib8/IXDnSd6zfBuR43jM5TkrN03+sVw9tJ
DKNMOZPs/V5euIXzgsWU86U/5BWtm0m0okw5h/4jXnreBOf6nQnP/FiEKZFU
P3xLS+Y2Rmz+hJd+a4jNUaaMzZXpTLVDeT18zwg+d8XOcBSZvsGBaH7rCL4p
IbNYLT3lGtCmROrriT9xBlvsPFZRsbc68LQvVxKro7Mw5Xy8di8dcS8xMjfW
ml/c4aUjvi3X89Gjc3ev8tIP35Gosh21Gae4B3O8dMS9WWLnVIsOwzwvHReR
OBOe6OAscOBh972pe1CNysTyujY9ttCBNwfedDb3DKk5tMSHmicqiMVe9sJu
B5X3D1GeiPGSdJ71hIPzkWNn4QvipxyI4hloFlTYV6/dAavhK/MRWJuXJxJP
JjHB1fFkTYlqC/UbXRemjoteZ16MMHW/+zoHpo4NrPim6zdU6y2eFbBOirQE
1Fqol2qiK2jwXV63l5W4LjjMfZaVuhfhwtRWNnLRVVaKahXH5Zxj2wDWtvWU
iLU4D7nPhQVlobFrMIAVngVVnxJr9fttF6b2ILSO1XqdXEU/2bdb5+U3mClR
CP1maaffkK1NZ6rSK567RWsMK2Sq9VrHin6iIsX+SQpLlNtm2KZMBANWXyau
m7sxkfgGEg8Yaa2OrCuDsnCzFwnWKVVHc4mIarDRgaTjiasxySJFnA4bfMaB
pOMJc6Oqw9VQIUyWgVtdrAvLAPRkmRWPsvd4m5efcBVmSxdn3e1eJJg5RFe/
imbns14UGA2urpRIvUpR9mU3WSRo117leQGgfX6+GkuSpQvXa9pr/EuqP7o5
qv8r8G6ffj8wfceLNpilGmaLVJk7LIhjW8/AHYz+7HvbqQfrjbz6VmFrb4uC
bgHDXAPvXqrMtclYod3JaHzI36mn7G5xCtEdVvFWNdvlRnQo7nL19qh2E8Ed
XDBr0G86TtP8sjJT4kUFe7drPh/V7hbm3i1qLgOzuwXqjB3NhmIpeDens2iu
/jGqc3R3i5NGU6tUNuMIzxP3t0C9W3Cf7KIaFaqu9AV0vSifIbdYutMaFkkd
fRi1Eq5kr7Z3tSipVZWfcyDp+MPaaGYfiHvSKfk5as2tfJ64lOOI7tK9Dhw1
ziB3+N12CccRXYetDpxfH3i5SQ29li7mOKI2+UIi543EzzM5imgPv+hA0fkV
5gHRnUyELl9yoOjcA3tq0J1MhC73eVkEo6l0JxOhy5e9LAJKodFGBF9JZ+Rb
e3F8T+YZmGtdUIUh7F/f70DBteCYY96uKaogSMoDDhQzv8AYdsHsQ8kdib6a
SMGVxLNWVbwCO9NU6f4qqCQ6YVGKhKA0Ntj1K0sBrDuvuhp3bjaqhn9y0KFF
je6WgrcBhexPJDouD3pZAu8MaL4XHdOvOVC0RdO5vCY6gQPplHybGgcuffqz
e86O5DY5gllyoDz3wi8acfBuZeksM8KVwhMMJlKmKYsUAt/WFMw9ZmQuGfJi
vJWLkKi4/ShncBEScd7mRXkLFyHR+j+UThEleTDsMZ8eiZDc52a7AyUsyQ1d
JdgBstDWU7IitMOBIktyJc6wX4C1e57c4fXhRMppcB4i8JzW2KIsZqBYe8qJ
Tkqw04sB9hWai7Znd6Uz8mHLIUoQ1HeR/dZ2O1DC+AhloJWt0vsQVeo3F46I
UKPFsfwin6weiVAk5E3EH2/Q/ijp0YBHEzWgDHjyqJRiIMmn98fSGXn8whXh
0/k37YI3GgXTGzKffd2B8uT3RhoqysD7V9qqi5yWzMG9UkOH4lvcAinEOBMv
haG9ArNarJ0rZS37eDojr/SAnAazrAtm7SZz2hMOlDnrdoQ5Dda90fIn6kgX
jngKbrA4kRL4jUTK6cS3U8u03ZAl8JvpDL27bWvvNpjLESmB33KgDD3+QmgP
7AdJ91sTfknm4I6yIQT3pqZ5ThTBJ9Mp+YZKrIVNkyLelSM8ex0oKzfvCWMN
83SsGk6WxqfSKQVRp4TqiO4krk4omP0v6eOnE0lnWJGS+sCaODpyInzswnlg
1/Ohm+H7mZn+3HAi5612zhEcmKtJd8cTfbFvRzgSA/KFu7+m3i5i8xzUcQxR
RXwnUZczI76BXS7pHnsi6M+kcwqb7v92qJPMhbC3Kn2KF0Xr2UQW9uIaQ52Q
BU/21eE70BC3ZOPO4LvpvJyskQEJs6bkWyuBHcC60VzHL2vV7yXysK8q80GX
zoZ0V5xde198LpEyvaJVa4/cYJt57yzroB8kMuB5Ir/45l041CAeiv458X55
mPTaHa/AHZUbDl8NX7vjlb5D/uD4SXDE/wHneR/c\
\>", "ImageResolution" -> \
72.],ExpressionUUID->"55d33e96-9de6-4dc9-934b-6acfa96b8e8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", "15.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Fv\[Gamma]4", "[", "p", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{
   RowBox[{"Fv\[Gamma]3", "[", "p", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"Power", "::", "infy"}], "]"}], ";", 
   RowBox[{"Off", "[", 
    RowBox[{"Infinity", "::", "indet"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "list", ",", "list1", ",", "list3", ",", "list4", ",", "EIT", ",", "ABS", 
     ",", "EIT1", ",", "ABS1", ",", "LL", ",", "LL1", ",", "Midpoints", ",", 
     "Midpoints1", ",", "cluster", ",", "cluster1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"list", "=", 
       RowBox[{"Lev4DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list1", "=", 
       RowBox[{"Lev4DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list3", "=", 
       RowBox[{"Lev3DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list4", "=", 
       RowBox[{"Lev3DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"EIT", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS", "=", 
       RowBox[{
        RowBox[{"list1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list", ",", "EIT"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"EIT1", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS1", "=", 
       RowBox[{
        RowBox[{"list4", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list3", ",", "EIT1"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"LL", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"EIT", "-", "ABS"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Midpoints", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"list", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"EIT", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL", ")"}]}], "-", 
            RowBox[{"LL", "/", "50"}]}], "<", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "<", 
           RowBox[{"EIT", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL", ")"}]}], "+", 
            RowBox[{"LL", "/", "50"}]}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cluster", "=", 
       RowBox[{"Gather", "[", 
        RowBox[{"Midpoints", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "0.0015"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fv\[Gamma]4", "[", "p", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Fv\[Gamma]4", "[", "p", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]", ",", 
           RowBox[{"1000", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}]}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"LL1", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"EIT1", "-", "ABS1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Midpoints1", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"list3", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"EIT1", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL1", ")"}]}], "-", 
            RowBox[{"LL1", "/", "50"}]}], "<", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "<", 
           RowBox[{"EIT1", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL1", ")"}]}], "+", 
            RowBox[{"LL1", "/", "50"}]}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cluster1", "=", 
       RowBox[{"Gather", "[", 
        RowBox[{"Midpoints1", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "0.0015"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fv\[Gamma]3", "[", "p", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Fv\[Gamma]3", "[", "p", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]", ",", 
           RowBox[{"1000", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster1", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster1", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}]}]}], 
          "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0.05", ",", "2.9", ",", ".05"}], "}"}]}], 
    "]"}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.765829089641389*^9, 3.7658292318963723`*^9}, {
   3.7658292853196664`*^9, 3.7658292871639733`*^9}, {3.7658293320655184`*^9, 
   3.7658294847660823`*^9}, {3.765829757651656*^9, 3.7658297653284125`*^9}, {
   3.7658299219744377`*^9, 3.7658299667544694`*^9}, {3.7658300840041547`*^9, 
   3.7658301261594133`*^9}, {3.765830210826744*^9, 3.7658303345335846`*^9}, {
   3.7658304859698343`*^9, 3.7658305295086613`*^9}, {3.765830564361416*^9, 
   3.7658305952136946`*^9}, {3.7658314187015557`*^9, 3.765831433576153*^9}, 
   3.765831528415668*^9, {3.7658330278595476`*^9, 3.765833421555685*^9}, {
   3.765833482366448*^9, 3.765833487516837*^9}, {3.7658335344874315`*^9, 
   3.7658336014185624`*^9}, {3.765833726869643*^9, 3.7658337287345467`*^9}, {
   3.7658337809291964`*^9, 3.7658337844539747`*^9}, {3.7658339867015486`*^9, 
   3.765833987029645*^9}, {3.7658875912324424`*^9, 3.7658875942033095`*^9}, {
   3.7658878566825867`*^9, 3.765887859120116*^9}, {3.7658883209717026`*^9, 
   3.765888321393361*^9}, {3.7658886313160963`*^9, 3.76588863955219*^9}, {
   3.765888683584565*^9, 3.765888717125509*^9}, {3.7658901003241773`*^9, 
   3.7658901056742954`*^9}, {3.7658901775747766`*^9, 
   3.7658902199436054`*^9}, {3.7658902603967047`*^9, 3.765890263600562*^9}, {
   3.7658903271765995`*^9, 3.7658903348457775`*^9}, {3.7658904879414234`*^9, 
   3.765890488140133*^9}, {3.7658905862585063`*^9, 3.765890608764577*^9}, {
   3.765890648187286*^9, 3.765890660073821*^9}, {3.7658906934800196`*^9, 
   3.7658907141689615`*^9}, {3.765890862627528*^9, 3.7658908654726653`*^9}, {
   3.765890902187481*^9, 3.7658909739793215`*^9}, {3.7658910201655784`*^9, 
   3.765891043056666*^9}, {3.7658910835439157`*^9, 3.7658910836376724`*^9}, {
   3.7658911446628666`*^9, 3.765891153082429*^9}, 3.7711726040400977`*^9, {
   3.811638634993547*^9, 3.8116386391385336`*^9}, {3.811638715567935*^9, 
   3.811638716084405*^9}, {3.8121490330673156`*^9, 3.8121490331896296`*^9}, {
   3.812149063784684*^9, 3.8121490693414845`*^9}, {3.812149236142093*^9, 
   3.812149242478409*^9}, {3.8121499960326247`*^9, 3.8121500008259745`*^9}, {
   3.812150076162706*^9, 3.812150079532764*^9}, {3.8121501432775497`*^9, 
   3.812150143964173*^9}, {3.8121502914949546`*^9, 3.812150345317631*^9}, {
   3.8121508867138553`*^9, 3.812150888071087*^9}, {3.812151239973864*^9, 
   3.8121512526773925`*^9}, {3.812151331358039*^9, 3.812151373446846*^9}, {
   3.81215141077579*^9, 3.81215141130427*^9}, {3.8121514853128986`*^9, 
   3.8121514943512554`*^9}, {3.81215155833799*^9, 3.8121515661060395`*^9}, {
   3.8121575491972027`*^9, 3.812157552832502*^9}, {3.8121597235647173`*^9, 
   3.812159758046009*^9}, {3.812159856007909*^9, 3.8121598646487503`*^9}, {
   3.812160096391055*^9, 3.812160098308796*^9}, {3.8121604719857674`*^9, 
   3.812160481366771*^9}, 3.8121610024126062`*^9, {3.812161401340293*^9, 
   3.8121614023637457`*^9}},ExpressionUUID->"cd7f199b-ea1e-4194-8cac-\
951c927f7cf2"],

Cell[BoxData[
 TemplateBox[{
  "General", "ovfl", "\"Overflow occurred in computation.\"", 2, 1794, 340, 
   20755144443664380946, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.812151413473238*^9, 3.812151499212963*^9, 3.812151569251895*^9, 
   3.81215755662094*^9, 3.812159142647538*^9, 3.8121592177406845`*^9, 
   3.812159610825407*^9, {3.8121597146195993`*^9, 3.8121597410135517`*^9}, 
   3.8121598137905965`*^9, 3.812159866401341*^9, 3.812160100535816*^9, 
   3.812160482844678*^9, 3.812161004223505*^9},
 CellLabel->
  "During evaluation of \
In[1791]:=",ExpressionUUID->"cdf51cb0-b698-4658-9b85-4c358ea62031"],

Cell[BoxData[
 TemplateBox[{
  "General", "ovfl", "\"Overflow occurred in computation.\"", 2, 1794, 341, 
   20755144443664380946, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.812151413473238*^9, 3.812151499212963*^9, 3.812151569251895*^9, 
   3.81215755662094*^9, 3.812159142647538*^9, 3.8121592177406845`*^9, 
   3.812159610825407*^9, {3.8121597146195993`*^9, 3.8121597410135517`*^9}, 
   3.8121598137905965`*^9, 3.812159866401341*^9, 3.812160100535816*^9, 
   3.812160482844678*^9, 3.812161006230174*^9},
 CellLabel->
  "During evaluation of \
In[1791]:=",ExpressionUUID->"ce824cbf-baf6-4017-8c29-573e84990b1c"],

Cell[BoxData[
 TemplateBox[{
  "General", "ovfl", "\"Overflow occurred in computation.\"", 2, 1794, 342, 
   20755144443664380946, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.812151413473238*^9, 3.812151499212963*^9, 3.812151569251895*^9, 
   3.81215755662094*^9, 3.812159142647538*^9, 3.8121592177406845`*^9, 
   3.812159610825407*^9, {3.8121597146195993`*^9, 3.8121597410135517`*^9}, 
   3.8121598137905965`*^9, 3.812159866401341*^9, 3.812160100535816*^9, 
   3.812160482844678*^9, 3.8121610094996376`*^9},
 CellLabel->
  "During evaluation of \
In[1791]:=",ExpressionUUID->"50248a53-7f19-4b9d-9b6e-dc1e5767688b"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \
\\\"::\\\", \\\"ovfl\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 1794, 343, 20755144443664380946, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.812151413473238*^9, 3.812151499212963*^9, 3.812151569251895*^9, 
   3.81215755662094*^9, 3.812159142647538*^9, 3.8121592177406845`*^9, 
   3.812159610825407*^9, {3.8121597146195993`*^9, 3.8121597410135517`*^9}, 
   3.8121598137905965`*^9, 3.812159866401341*^9, 3.812160100535816*^9, 
   3.812160482844678*^9, 3.8121610095152645`*^9},
 CellLabel->
  "During evaluation of \
In[1791]:=",ExpressionUUID->"94bdf1d1-0195-45b1-81b0-af04d7837ace"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"816.644251394301`\\\"}], \\\"-\\\", RowBox[{\\\"2252.0436943301115`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\"]\\\"}]\\) is too small to \
represent as a normalized machine number; precision may be lost.\"", 2, 1794, 
   344, 20755144443664380946, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.812151413473238*^9, 3.812151499212963*^9, 3.812151569251895*^9, 
   3.81215755662094*^9, 3.812159142647538*^9, 3.8121592177406845`*^9, 
   3.812159610825407*^9, {3.8121597146195993`*^9, 3.8121597410135517`*^9}, 
   3.8121598137905965`*^9, 3.812159866401341*^9, 3.812160100535816*^9, 
   3.812160482844678*^9, 3.812161012665441*^9},
 CellLabel->
  "During evaluation of \
In[1791]:=",ExpressionUUID->"415e66e6-7cdd-45aa-b055-b8cd9fbc49b2"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"974.6737455357377`\\\"}], \\\"-\\\", RowBox[{\\\"2283.017989445167`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\"]\\\"}]\\) is too small to \
represent as a normalized machine number; precision may be lost.\"", 2, 1794, 
   345, 20755144443664380946, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.812151413473238*^9, 3.812151499212963*^9, 3.812151569251895*^9, 
   3.81215755662094*^9, 3.812159142647538*^9, 3.8121592177406845`*^9, 
   3.812159610825407*^9, {3.8121597146195993`*^9, 3.8121597410135517`*^9}, 
   3.8121598137905965`*^9, 3.812159866401341*^9, 3.812160100535816*^9, 
   3.812160482844678*^9, 3.812161012674449*^9},
 CellLabel->
  "During evaluation of \
In[1791]:=",ExpressionUUID->"e30d0e13-ed55-4433-92c1-e1ef2307d731"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"1143.6203102955453`\\\"}], \\\"-\\\", RowBox[{\\\"2301.41049457781`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\"]\\\"}]\\) is too small to \
represent as a normalized machine number; precision may be lost.\"", 2, 1794, 
   346, 20755144443664380946, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.812151413473238*^9, 3.812151499212963*^9, 3.812151569251895*^9, 
   3.81215755662094*^9, 3.812159142647538*^9, 3.8121592177406845`*^9, 
   3.812159610825407*^9, {3.8121597146195993`*^9, 3.8121597410135517`*^9}, 
   3.8121598137905965`*^9, 3.812159866401341*^9, 3.812160100535816*^9, 
   3.812160482844678*^9, 3.8121610126814556`*^9},
 CellLabel->
  "During evaluation of \
In[1791]:=",ExpressionUUID->"06e02e6b-0f98-40e9-86ea-d651d852ccb5"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \
\\\"::\\\", \\\"munfl\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 1794, 347, 20755144443664380946, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.812151413473238*^9, 3.812151499212963*^9, 3.812151569251895*^9, 
   3.81215755662094*^9, 3.812159142647538*^9, 3.8121592177406845`*^9, 
   3.812159610825407*^9, {3.8121597146195993`*^9, 3.8121597410135517`*^9}, 
   3.8121598137905965`*^9, 3.812159866401341*^9, 3.812160100535816*^9, 
   3.812160482844678*^9, 3.8121610126884623`*^9},
 CellLabel->
  "During evaluation of \
In[1791]:=",ExpressionUUID->"717cb288-6e01-4f12-ae21-f77915bc75c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"nf1", "=", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/", 
        RowBox[{"(", " ", "5.750056", ")"}]}], ",", 
       RowBox[{"x", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "/@", 
   RowBox[{"Fv\[Gamma]4", "[", "p", "]"}]}]}], "\n", 
 RowBox[{"nf2", "=", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/", 
        RowBox[{"(", " ", "5.750056", ")"}]}], ",", 
       RowBox[{"x", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "/@", 
   RowBox[{"Fv\[Gamma]3", "[", "p", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.7766013660086803`*^9, 3.77660136908665*^9}},
 CellLabel->
  "In[1802]:=",ExpressionUUID->"8b455327-b6a2-4d88-a8b6-72b7746d5e9b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "4.5649999999999995`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.008695567486647087`", ",", "5.066`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.017391134973294173`", ",", "5.267`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.026086702459941262`", ",", "5.454000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.03478226994658835`", ",", "5.630999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04347783743323543`", ",", "5.800000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.052173404919882524`", ",", "5.961`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.06086897240652961`", ",", "6.119000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0695645398931767`", ",", "6.272`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07826010737982378`", ",", "6.422000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.08695567486647086`", ",", "6.567000000000002`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.09565124235311796`", ",", "6.712000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10434680983976505`", ",", "6.852`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.11304237732641213`", ",", "6.9910000000000005`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.12173794481305922`", ",", "7.128000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1304335122997063`", ",", "7.263000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1391290797863534`", ",", "7.397000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1478246472730005`", ",", "7.527999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.15652021475964756`", ",", "7.657999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.16521578224629466`", ",", "7.786999999999997`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.17391134973294173`", ",", "7.916999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.18260691721958883`", ",", "8.042999999999997`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.19130248470623593`", ",", "8.169999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.199998052192883`", ",", "8.293999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2086936196795301`", ",", "8.418`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.21738918716617717`", ",", "8.540999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.22608475465282427`", ",", "8.662999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.23478032213947134`", ",", "8.785`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24347588962611844`", ",", "8.905`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.25217145711276556`", ",", "9.026`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2608670245994126`", ",", "9.145999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2695625920860597`", ",", "9.264999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2782581595727068`", ",", "9.383`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.28695372705935385`", ",", "9.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.295649294546001`", ",", "9.616999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.30434486203264804`", ",", "9.734`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3130404295192951`", ",", "9.85`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3217359970059422`", ",", "9.966`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3304315644925893`", ",", "10.081`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3391271319792364`", ",", "10.196999999999997`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.34782269946588346`", ",", "10.310999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3565182669525306`", ",", "10.425`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.36521383443917765`", ",", "10.539`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3739094019258247`", ",", "10.651`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.38260496941247185`", ",", "10.764000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.39130053689911887`", ",", "10.876999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.399996104385766`", ",", "10.988999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.40869167187241306`", ",", "11.1`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4173872393590602`", ",", "11.211`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.42608280684570726`", ",", "11.322`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.43477837433235433`", ",", "11.433`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.44347394181900146`", ",", "11.541999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.45216950930564853`", ",", "11.654000000000002`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.46086507679229566`", ",", "11.761999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4695606442789427`", ",", "11.873000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.47825621176558974`", ",", "11.980999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.48695177925223687`", ",", "12.089999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.49564734673888394`", ",", "12.198`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5043429142255311`", ",", "12.306`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.812161427555188*^9},
 CellLabel->
  "Out[1802]=",ExpressionUUID->"c96caa5d-6e73-4bf2-9a81-3864ce783585"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nf2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.008695567486647087`", ",", "1.7849999999999975`"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"0.017391134973294173`", ",", "1.8549999999999978`"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"0.026086702459941262`", ",", "1.9169999999999976`"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"0.03478226994658835`", ",", "1.9849999999999977`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.04347783743323543`", ",", "2.058999999999998`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.052173404919882524`", ",", "2.136999999999998`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.06086897240652961`", ",", "2.218999999999998`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.0695645398931767`", ",", "2.306999999999998`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.07826010737982378`", ",", "2.3989999999999982`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.08695567486647086`", ",", "2.493999999999998`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.09565124235311796`", ",", "2.5919999999999987`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.10434680983976505`", ",", "2.695999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.11304237732641213`", ",", "2.800999999999998`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.12173794481305922`", ",", "2.910999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.1304335122997063`", ",", "3.022999999999998`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.1391290797863534`", ",", "3.1380000000000003`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.1478246472730005`", ",", "3.2559999999999985`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.15652021475964756`", ",", "3.3759999999999994`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.16521578224629466`", ",", "3.4989999999999997`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.17391134973294173`", ",", "3.623999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.18260691721958883`", ",", "3.7509999999999994`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.19130248470623593`", ",", "3.878999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.199998052192883`", ",", "4.007999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.2086936196795301`", ",", "4.139999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.21738918716617717`", ",", "4.2719999999999985`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.22608475465282427`", ",", "4.404999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.23478032213947134`", ",", "4.54`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.24347588962611844`", ",", "4.675999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.25217145711276556`", ",", "4.810999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.2608670245994126`", ",", "4.947`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.2695625920860597`", ",", "5.084`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.2782581595727068`", ",", "5.218999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.28695372705935385`", ",", "5.356`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.295649294546001`", ",", "5.494`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.30434486203264804`", ",", "5.63`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.3130404295192951`", ",", "5.7669999999999995`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.3217359970059422`", ",", "5.903000000000001`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.3304315644925893`", ",", "6.039000000000001`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.3391271319792364`", ",", "6.175`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.34782269946588346`", ",", "6.311000000000001`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.3565182669525306`", ",", "6.444999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.36521383443917765`", ",", "6.579999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.3739094019258247`", ",", "6.713999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.38260496941247185`", ",", "6.846999999999997`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.39130053689911887`", ",", "6.979999999999998`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.399996104385766`", ",", "7.1119999999999965`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.40869167187241306`", ",", "7.242999999999997`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.4173872393590602`", ",", "7.3729999999999976`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.42608280684570726`", ",", "7.503999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.43477837433235433`", ",", "7.633999999999998`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.44347394181900146`", ",", "7.761999999999997`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.45216950930564853`", ",", "7.889999999999998`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.46086507679229566`", ",", "8.015999999999998`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.4695606442789427`", ",", "8.142999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.47825621176558974`", ",", "8.267999999999997`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.48695177925223687`", ",", "8.391999999999998`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.49564734673888394`", ",", "8.516`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.5043429142255311`", ",", "8.638999999999998`"}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.812161430246192*^9, 3.8121614335991106`*^9}},
 CellLabel->
  "In[1804]:=",ExpressionUUID->"eb0b9487-62c1-4fc8-bb44-0c1639eb0d79"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.008695567486647087`", ",", "1.7849999999999975`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.017391134973294173`", ",", "1.8549999999999978`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.026086702459941262`", ",", "1.9169999999999976`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.03478226994658835`", ",", "1.9849999999999977`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04347783743323543`", ",", "2.058999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.052173404919882524`", ",", "2.136999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.06086897240652961`", ",", "2.218999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0695645398931767`", ",", "2.306999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07826010737982378`", ",", "2.3989999999999982`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.08695567486647086`", ",", "2.493999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.09565124235311796`", ",", "2.5919999999999987`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10434680983976505`", ",", "2.695999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.11304237732641213`", ",", "2.800999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.12173794481305922`", ",", "2.910999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1304335122997063`", ",", "3.022999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1391290797863534`", ",", "3.1380000000000003`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1478246472730005`", ",", "3.2559999999999985`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.15652021475964756`", ",", "3.3759999999999994`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.16521578224629466`", ",", "3.4989999999999997`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.17391134973294173`", ",", "3.623999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.18260691721958883`", ",", "3.7509999999999994`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.19130248470623593`", ",", "3.878999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.199998052192883`", ",", "4.007999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2086936196795301`", ",", "4.139999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.21738918716617717`", ",", "4.2719999999999985`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.22608475465282427`", ",", "4.404999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.23478032213947134`", ",", "4.54`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24347588962611844`", ",", "4.675999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.25217145711276556`", ",", "4.810999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2608670245994126`", ",", "4.947`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2695625920860597`", ",", "5.084`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2782581595727068`", ",", "5.218999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.28695372705935385`", ",", "5.356`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.295649294546001`", ",", "5.494`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.30434486203264804`", ",", "5.63`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3130404295192951`", ",", "5.7669999999999995`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3217359970059422`", ",", "5.903000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3304315644925893`", ",", "6.039000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3391271319792364`", ",", "6.175`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.34782269946588346`", ",", "6.311000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3565182669525306`", ",", "6.444999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.36521383443917765`", ",", "6.579999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3739094019258247`", ",", "6.713999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.38260496941247185`", ",", "6.846999999999997`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.39130053689911887`", ",", "6.979999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.399996104385766`", ",", "7.1119999999999965`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.40869167187241306`", ",", "7.242999999999997`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4173872393590602`", ",", "7.3729999999999976`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.42608280684570726`", ",", "7.503999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.43477837433235433`", ",", "7.633999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.44347394181900146`", ",", "7.761999999999997`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.45216950930564853`", ",", "7.889999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.46086507679229566`", ",", "8.015999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4695606442789427`", ",", "8.142999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.47825621176558974`", ",", "8.267999999999997`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.48695177925223687`", ",", "8.391999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.49564734673888394`", ",", "8.516`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5043429142255311`", ",", "8.638999999999998`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.812161434176635*^9},
 CellLabel->
  "Out[1804]=",ExpressionUUID->"72f66e8d-88dd-4c8d-b68d-735d79b37c05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nf1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.008695567486647087`", ",", "5.066`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.017391134973294173`", ",", "5.267`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.026086702459941262`", ",", "5.454000000000001`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.03478226994658835`", ",", "5.630999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.04347783743323543`", ",", "5.800000000000001`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.052173404919882524`", ",", "5.961`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.06086897240652961`", ",", "6.119000000000001`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.0695645398931767`", ",", "6.272`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.07826010737982378`", ",", "6.422000000000001`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.08695567486647086`", ",", "6.567000000000002`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.09565124235311796`", ",", "6.712000000000001`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.10434680983976505`", ",", "6.852`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.11304237732641213`", ",", "6.9910000000000005`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.12173794481305922`", ",", "7.128000000000001`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.1304335122997063`", ",", "7.263000000000001`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.1391290797863534`", ",", "7.397000000000001`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.1478246472730005`", ",", "7.527999999999998`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.15652021475964756`", ",", "7.657999999999998`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.16521578224629466`", ",", "7.786999999999997`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.17391134973294173`", ",", "7.916999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.18260691721958883`", ",", "8.042999999999997`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.19130248470623593`", ",", "8.169999999999998`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.199998052192883`", ",", "8.293999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.2086936196795301`", ",", "8.418`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.21738918716617717`", ",", "8.540999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.22608475465282427`", ",", "8.662999999999998`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.23478032213947134`", ",", "8.785`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.24347588962611844`", ",", "8.905`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.25217145711276556`", ",", "9.026`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.2608670245994126`", ",", "9.145999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.2695625920860597`", ",", "9.264999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.2782581595727068`", ",", "9.383`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.28695372705935385`", ",", "9.5`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.295649294546001`", ",", "9.616999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.30434486203264804`", ",", "9.734`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.3130404295192951`", ",", "9.85`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.3217359970059422`", ",", "9.966`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.3304315644925893`", ",", "10.081`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.3391271319792364`", ",", "10.196999999999997`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.34782269946588346`", ",", "10.310999999999998`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.3565182669525306`", ",", "10.425`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.36521383443917765`", ",", "10.539`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.3739094019258247`", ",", "10.651`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.38260496941247185`", ",", "10.764000000000001`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.39130053689911887`", ",", "10.876999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.399996104385766`", ",", "10.988999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.40869167187241306`", ",", "11.1`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.4173872393590602`", ",", "11.211`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.42608280684570726`", ",", "11.322`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.43477837433235433`", ",", "11.433`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.44347394181900146`", ",", "11.541999999999998`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.45216950930564853`", ",", "11.654000000000002`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.46086507679229566`", ",", "11.761999999999999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.4695606442789427`", ",", "11.873000000000001`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.47825621176558974`", ",", "11.980999999999998`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.48695177925223687`", ",", "12.089999999999998`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.49564734673888394`", ",", "12.198`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.5043429142255311`", ",", "12.306`"}], "}"}]}], "}"}]}]], \
"Input",
 CellChangeTimes->{{3.8121614109963617`*^9, 3.812161415995384*^9}},
 CellLabel->
  "In[1806]:=",ExpressionUUID->"026bfc98-6fe2-441f-8db9-03a38677af6e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.008695567486647087`", ",", "5.066`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.017391134973294173`", ",", "5.267`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.026086702459941262`", ",", "5.454000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.03478226994658835`", ",", "5.630999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04347783743323543`", ",", "5.800000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.052173404919882524`", ",", "5.961`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.06086897240652961`", ",", "6.119000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.0695645398931767`", ",", "6.272`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07826010737982378`", ",", "6.422000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.08695567486647086`", ",", "6.567000000000002`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.09565124235311796`", ",", "6.712000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10434680983976505`", ",", "6.852`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.11304237732641213`", ",", "6.9910000000000005`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.12173794481305922`", ",", "7.128000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1304335122997063`", ",", "7.263000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1391290797863534`", ",", "7.397000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1478246472730005`", ",", "7.527999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.15652021475964756`", ",", "7.657999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.16521578224629466`", ",", "7.786999999999997`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.17391134973294173`", ",", "7.916999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.18260691721958883`", ",", "8.042999999999997`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.19130248470623593`", ",", "8.169999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.199998052192883`", ",", "8.293999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2086936196795301`", ",", "8.418`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.21738918716617717`", ",", "8.540999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.22608475465282427`", ",", "8.662999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.23478032213947134`", ",", "8.785`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24347588962611844`", ",", "8.905`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.25217145711276556`", ",", "9.026`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2608670245994126`", ",", "9.145999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2695625920860597`", ",", "9.264999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2782581595727068`", ",", "9.383`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.28695372705935385`", ",", "9.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.295649294546001`", ",", "9.616999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.30434486203264804`", ",", "9.734`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3130404295192951`", ",", "9.85`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3217359970059422`", ",", "9.966`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3304315644925893`", ",", "10.081`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3391271319792364`", ",", "10.196999999999997`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.34782269946588346`", ",", "10.310999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3565182669525306`", ",", "10.425`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.36521383443917765`", ",", "10.539`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3739094019258247`", ",", "10.651`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.38260496941247185`", ",", "10.764000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.39130053689911887`", ",", "10.876999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.399996104385766`", ",", "10.988999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.40869167187241306`", ",", "11.1`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4173872393590602`", ",", "11.211`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.42608280684570726`", ",", "11.322`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.43477837433235433`", ",", "11.433`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.44347394181900146`", ",", "11.541999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.45216950930564853`", ",", "11.654000000000002`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.46086507679229566`", ",", "11.761999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4695606442789427`", ",", "11.873000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.47825621176558974`", ",", "11.980999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.48695177925223687`", ",", "12.089999999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.49564734673888394`", ",", "12.198`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5043429142255311`", ",", "12.306`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8121602886385183`*^9, 3.8121603527476974`*^9, 3.8121608348421373`*^9, 
   3.812161371812544*^9, {3.8121614166571865`*^9, 3.812161441717148*^9}},
 CellLabel->
  "Out[1806]=",ExpressionUUID->"c5136b45-906d-4d38-ad1b-0c37c6fb4196"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"nf2", ",", "nf1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.812160909704486*^9, 3.812160937451054*^9}},
 CellLabel->
  "In[1785]:=",ExpressionUUID->"1195ee7f-158c-4b7e-b3aa-4de41394b18b"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwtUn0s1GEcv0O6OuK8v905mbw2U0ma9f26EmYm2tBWeWlttMZGmRRbmcma
SmpCL2ONJeXtupBySZxTuvPuTmjTH3braDLUqHsez2/77bfn+X1fPm9uqZlx
5404HE6w4SXf9MwvMX+HyuBZ+Pc8m1cbIPKUrubKqiBjYU8Ar3ETtv7XQPuK
1+k7Pf/g6KDcvVNSB6Gy5Y3RXA5u1TdA3oWuS+UOXFy9UT8Y5NMEJRUZVoVy
Lm71t8DEeoGhwggThP0dGp4U/ozmGjYY49Y8GXQpa8Jky8YYcKWztPJaO4i1
pMEEhXR+J/SIm7PSyrYhf+xlSuJSF1T0kgtTXKP7uuEqBJ7tjNyOWQ9VVfxW
OfTmvH/q5M9j+z/AawW52IFJx5UmOl0PhJBys50YT/H0wgFyNOJj9O+PGUqP
T0DhbPAZvj4YoGczPFz7bvJ5Uj+r38XwKmCE0OFZoOeJN5KSygGg9HiWTB8l
3O4hAlqi7WZzY9rIIESYGfkW2wnQjPL5DKIiXWz7EwFyGxvsIsyHwNug9oqX
FeP3FaJTLRODpYazX5y83F0FCcFSRc4Ra8ymfFWQT/gPWKPeOOZyIaqBuGES
b8P4q6EvKqgkdM4G5zVRPtlnhsH0+oOjty7aYjLVYxiSf6h2a9dtUdsSMZua
NwIEjqjIjvk1ClRugT2qb4bdj6sYBR2JxyN7ptcYWOxtfbzo6YCKJEmkRDoG
+8nT5sD0G4dTFK8jdh+EzQD1ONC49TsyPSeAbNPFOqHMPKTNTT8BSAE5MX0n
wXpqaPXkOWd8MX8oTcCfggXa4Mz0noLaaoLQBWvfBgq5XhqQkHyuuTD9NaAg
/uULsfLevuGlY1pIpwKJmB9a+FlPFBLh3XT/4rmUaZYPV5a3aSil/rliMfqF
qAq+MX/FzK8ZWCT9kWIssPf+1V09A3o6T8z8m4UUYp9CjNl6j7qm9lkYo/1u
zM856DCkyTfcDf8D72iofQ==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwtUwssVXEY91qz0FLeXO77XhKThGjfl0d5JMWGVfIYG2Y0tDCzxUrWrKTS
xWYULY88J3leIrrqul7X+9GQNcv0IlrWOcf/287O/jvf+X6v78+JTAyIVlNR
UXGmHvodm/jJ/688H/rZ9UkxuvpoLmreTm0pAqfcs+GrCn3c/14GpSa28/y7
Bug+JOW1uVXCSXu6DEl/FfwY9Ys8PGWI21kvhxyt6iBiVcGdTTMi/zeAj7ba
sRwDYwxmDbyd0WyGlYriPna9MZnXAruByxXFHiZol9aWJ8loBR26fdoEWcz8
NijpowmaotZEbUTIZgfohjg3D26Z4h8Grxsu5xUmHMk2w6RniiKtRilcjXJZ
9NdhEfwe8KXxn7Iw7JxMY329F9aEdpo1ZuYYxPDpg/gj2VJZmTn6/XqXIBP0
g1K+HbgssCD83kNom7e2WrUFni7vnHoVNgDtKQVGGgZswncQlM9vnDkYzEbR
pTduuZIP4M3gsYk/Muig+5Vs1N+rr4kZG4Iyz5af//Q4qM3o+Qg7mXEdKYEc
VK2pMvDSkUNAq/md9XwO0TcMD3p/i68NU2frAGkBTwFXGH1cTGb0KoBWL/Xh
4oa6/81sHIHzn9P1Xudwif4RiKMJ9HFxZcbXKjl0FFSY4mE448coPHG/H7/m
wsPZBq/FyPQxoN2X3+KRvMaBibuJhyP3PB8HFI4DhZ5XuMEjfk0ApWY81ZKP
g2Fu3m7NE9BJL0wUn/inhGozinEpH7tPwZ7diBKKJFRN84mfk0DDbR8VYIuO
axNnY3Jfn5+A+DsF7YyhAqxecYrR1ZoGeh0P9AiI39PwLQMcru8KsLzdgaUq
ntnnay8k/s9A2lcq8HghSh6dGN30mIUumt8LIcljFjSCDh1vnBfiw1jbnKWI
ObChxt/WF5F9mwN12pCLIsxBa1dF5jy5DyKS1wJ8odZ9p0uEmYaW37uLFyCL
2ibPLRHJbxFq6UBsxJi8Iaisa12EC47UBYsWkzyXgKZXUyLG/0OCmI8=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.5043429142255311}, {0, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8121609119883347`*^9, 3.8121609378365784`*^9}},
 CellLabel->
  "Out[1785]=",ExpressionUUID->"d8ac193a-8b7c-4a44-b7e3-1c7bd79d27ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pd1", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nf1", ",", "nf2"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", ".5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "14"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", "40", "]"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{"legend", ",", 
       RowBox[{"{", 
        RowBox[{"Right", ",", "0.5"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
         RowBox[{"Darker", "[", "Red", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Blue"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Black", ",", 
         "Dashed"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Decoherence [\[Gamma]]\>\"", ",", "50", ",", "Black"}], 
        "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<FWHM (MHz) \>\"", ",", "50", ",", "Black"}], "]"}]}], 
      "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.776601383274274*^9, 3.7766013928414507`*^9}, {
  3.7766015651804347`*^9, 3.776601565446083*^9}, {3.8116390884043913`*^9, 
  3.811639096891117*^9}, {3.812149095684776*^9, 3.812149095981045*^9}, {
  3.8121516475878487`*^9, 3.8121516478430805`*^9}, {3.812159153873726*^9, 
  3.812159154244063*^9}, {3.812160363772702*^9, 3.8121603640599637`*^9}, {
  3.8121604137000113`*^9, 3.8121604667366953`*^9}, {3.812160955077938*^9, 
  3.81216098778053*^9}, {3.8121614544803324`*^9, 3.8121614872561803`*^9}, {
  3.812161559908299*^9, 3.812161575351951*^9}},
 CellLabel->
  "In[1818]:=",ExpressionUUID->"ebf9520b-5140-481a-a83b-b4f6ce61b9d7"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
       0.009166666666666668], AbsoluteThickness[3], LineBox[CompressedData["
1:eJwtUwsslWEYdptZaNFxv537OSQmidDeL5dySYpNVsllbJjR0MLMhtXJmpUk
uWxG0eLINcn10BFRnONycI6DhqxZphvRsv7v+N7t379v//t/z+19GTEpIXEa
ampq7tSD3wkpn4L/jueCkq2dW+JNQwfnIhiiN6fGGxgha177TkZHObgVnI1a
kxiR79VQZe6oZN81Rt5jIlaXVx2cdMZlQvrr4cdkUMyRORP0J+/FmKtdE0Sv
SZiKTFPyfwsE6GkcExiboTCr4bdynXZYra0Q05vNyH0dsBe6UlvhY46cMrsK
y7I7QR+3z5uT+7ugUowJWiDdmcbo8K0eMAg/3T6ybUHw+uFyYWmyYb4lSn0q
KddtFcG1WI+lYH0rgj8AgRj/iRWKOjeqtbExCOtcJx2hpTXhI4Ykw3zRaLU1
Cvr1LnmUMwSy8Z3QFY4N4fceIrr89TQabJB7Te/cy8hh6E4vNtUyphO+IyB7
dvPMoSt0xLv0xqug7AP4q/DohP8o9OB+GR3R9puF8VNjUO3b8fMfjUH0fITd
nMSe9FAGUhfWG/vpj0NIp/WdjSIG0TcBDwZ/869PUGf7EFExSwJXVfqYRK8E
sHpRABNtagbfykdSOP85i/ZKwCT6pZCICYiZaFUeaJcWMQlqqmIRPyahxPt+
0roHCyla/JZisqYAuz9+m0X8mQZV3G0sJL3n+zikdBoo9MLSTRbxawYoNdMZ
tmw0Eunl79U+A714YGLZxD8ZNFhSjKvYqP8U7DtJZVBeRtU8m/g5Cxhu5ygH
vdb3bGNszh7oC+IQf+egW2UoBzWsusUb6M4DHkftAQ7xex6+ZYPLjT0Oqul2
sVLnyw/4OnOJ/3LI/EoFnsRFZY9OTG75KKAP83vOJXkoQCvs8PFWJRc9THAU
LEcvgANeECMeyWcBNLEhF3lIgOw9JTlKsg88ktcifKHGfbePh7JNbL/3VyxC
HjVNvts8kt8SNOJAHPgobZNT19S5BBdcqQWL45M8lwHTE1by0X9IG5+7
        "]]}, 
      {RGBColor[0, 0, 1], PointSize[0.009166666666666668], AbsoluteThickness[
       3], LineBox[CompressedData["
1:eJwtkn8s1HEYx/1KV0cc5zfnLpOfzVQSs57HSZiZaJO2yo/WRmtslEnYJJM1
ldSEfow1lpRfR+dSrkucUzrc+XEntOkPu4UmQ0Xd5+vz3b777vl8n+fzvJ/X
+xGkZsZfMDIwMAjWv+Sbnvk59s9wEdyQrXqeufMXtuMKeBbxLY/7ahN4HqK1
3K4ayFjY589q3qL/60BM0mX/IGxI6iYRNkBo18qmKtcAt/ObIO9iz+VKe0Nc
v944FOjdAmVVGVbFUkPcrm+DiY1CfYYRJrgMdGtYIvitytV3MMbt+7qgR1EX
3rVijP5XJeXV+WLga0mBCb1fAjJ+a1ZaxQ5kq1+mJC73QFUfOTCl/XrhGgSc
k0TtxKyHyhp2uxT6ct49dfRj0f7voVNODnZh8nGFiU4ngxCSbrab6umDQyQ0
YmPMrw8ZCvePwMjZZFN9/TDIxGYYXP928nnSAM3fQ/XKYYyMw7JAjxOvhWXV
g8CMx7Kk+hVwm+Ftidyt1ua0sSGINDPyKbXl0Hk+Aa9EFyd+wkHD5ibbSPNh
8NLTXvW0ovN9gZhUy8QgkT72jZdWuinhVJBInnPUms6rhAIy/6A1LhrHXinG
ESBumCRw6fwj0B8dWBY6x8V5TbR39tlRMC16EHbrkg3lMQrJ35V7tRs2qG2L
nE3NGwMih1diS/mogMHNscORm+H346tUoCPr8ciO8lKDxf72x0se9ihPEkYJ
RWo4SJ4Oe8pvHE4zeh2w9zBs+Y+MA7NuAw6U5wSQbro4R+w0D+kQLE4AMoIc
Kd9JsJ4aXjt53glfzB9J47CnYIEpcKK8p6C+lih0xvo3AS6GnhoQkv1cd6b8
NSAn/hW4YPW9A6PLx7SQzgDiUT+08KOREOLh3XS/0rmUabofrtSfaShn/HPF
UvQNURZ+pf7yqV8zsETqo/iYb+f1s7d2BhaZ+/jUv1lIIfbJ+Zi96N7QIp4F
NVMvoH7OQbd+m3wiBPgfgnCxfg==
        "]]}}, {{}, {}}}, InsetBox[
     TemplateBox[{
       StyleBox["\"4 Level\"", 
        RGBColor[
         Rational[2, 3], 0, 0], StripOnInput -> False], 
       StyleBox["\"3 Level\"", 
        RGBColor[0, 0, 1], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontSize -> 45, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0", ",", "0"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.33333333333333337`", ",", 
                    "0.33333333333333337`", ",", "0.33333333333333337`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}]}], "]"}]& )], 
     Scaled[{0.99, 0.5}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"FWHM (MHz) \"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Decoherence [\[Gamma]]\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
   FrameTicks->{{True, True}, {True, True}},
   FrameTicksStyle->Directive[40],
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->1020,
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 0.5}, {0, 14}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[3], 
          RGBColor[
           Rational[2, 3], 0, 0]], 
         Line[CompressedData["
1:eJwtUwsslWEYdptZaNFxv537OSQmidDeL5dySYpNVsllbJjR0MLMhtXJmpUk
uWxG0eLINcn10BFRnONycI6DhqxZphvRsv7v+N7t379v//t/z+19GTEpIXEa
ampq7tSD3wkpn4L/jueCkq2dW+JNQwfnIhiiN6fGGxgha177TkZHObgVnI1a
kxiR79VQZe6oZN81Rt5jIlaXVx2cdMZlQvrr4cdkUMyRORP0J+/FmKtdE0Sv
SZiKTFPyfwsE6GkcExiboTCr4bdynXZYra0Q05vNyH0dsBe6UlvhY46cMrsK
y7I7QR+3z5uT+7ugUowJWiDdmcbo8K0eMAg/3T6ybUHw+uFyYWmyYb4lSn0q
KddtFcG1WI+lYH0rgj8AgRj/iRWKOjeqtbExCOtcJx2hpTXhI4Ykw3zRaLU1
Cvr1LnmUMwSy8Z3QFY4N4fceIrr89TQabJB7Te/cy8hh6E4vNtUyphO+IyB7
dvPMoSt0xLv0xqug7AP4q/DohP8o9OB+GR3R9puF8VNjUO3b8fMfjUH0fITd
nMSe9FAGUhfWG/vpj0NIp/WdjSIG0TcBDwZ/869PUGf7EFExSwJXVfqYRK8E
sHpRABNtagbfykdSOP85i/ZKwCT6pZCICYiZaFUeaJcWMQlqqmIRPyahxPt+
0roHCyla/JZisqYAuz9+m0X8mQZV3G0sJL3n+zikdBoo9MLSTRbxawYoNdMZ
tmw0Eunl79U+A714YGLZxD8ZNFhSjKvYqP8U7DtJZVBeRtU8m/g5Cxhu5ygH
vdb3bGNszh7oC+IQf+egW2UoBzWsusUb6M4DHkftAQ7xex6+ZYPLjT0Oqul2
sVLnyw/4OnOJ/3LI/EoFnsRFZY9OTG75KKAP83vOJXkoQCvs8PFWJRc9THAU
LEcvgANeECMeyWcBNLEhF3lIgOw9JTlKsg88ktcifKHGfbePh7JNbL/3VyxC
HjVNvts8kt8SNOJAHPgobZNT19S5BBdcqQWL45M8lwHTE1by0X9IG5+7
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1:eJwtkn8s1HEYx/1KV0cc5zfnLpOfzVQSs57HSZiZaJO2yo/WRmtslEnYJJM1
ldSEfow1lpRfR+dSrkucUzrc+XEntOkPu4UmQ0Xd5+vz3b777vl8n+fzvJ/X
+xGkZsZfMDIwMAjWv+Sbnvk59s9wEdyQrXqeufMXtuMKeBbxLY/7ahN4HqK1
3K4ayFjY589q3qL/60BM0mX/IGxI6iYRNkBo18qmKtcAt/ObIO9iz+VKe0Nc
v944FOjdAmVVGVbFUkPcrm+DiY1CfYYRJrgMdGtYIvitytV3MMbt+7qgR1EX
3rVijP5XJeXV+WLga0mBCb1fAjJ+a1ZaxQ5kq1+mJC73QFUfOTCl/XrhGgSc
k0TtxKyHyhp2uxT6ct49dfRj0f7voVNODnZh8nGFiU4ngxCSbrab6umDQyQ0
YmPMrw8ZCvePwMjZZFN9/TDIxGYYXP928nnSAM3fQ/XKYYyMw7JAjxOvhWXV
g8CMx7Kk+hVwm+Ftidyt1ua0sSGINDPyKbXl0Hk+Aa9EFyd+wkHD5ibbSPNh
8NLTXvW0ovN9gZhUy8QgkT72jZdWuinhVJBInnPUms6rhAIy/6A1LhrHXinG
ESBumCRw6fwj0B8dWBY6x8V5TbR39tlRMC16EHbrkg3lMQrJ35V7tRs2qG2L
nE3NGwMih1diS/mogMHNscORm+H346tUoCPr8ciO8lKDxf72x0se9ihPEkYJ
RWo4SJ4Oe8pvHE4zeh2w9zBs+Y+MA7NuAw6U5wSQbro4R+w0D+kQLE4AMoIc
Kd9JsJ4aXjt53glfzB9J47CnYIEpcKK8p6C+lih0xvo3AS6GnhoQkv1cd6b8
NSAn/hW4YPW9A6PLx7SQzgDiUT+08KOREOLh3XS/0rmUabofrtSfaShn/HPF
UvQNURZ+pf7yqV8zsETqo/iYb+f1s7d2BhaZ+/jUv1lIIfbJ+Zi96N7QIp4F
NVMvoH7OQbd+m3wiBPgfgnCxfg==
          "]]}}}, {{}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {False, False}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["FWHM (MHz) ", 50, 
          GrayLevel[0]], None}, {
         Style["Decoherence [\[Gamma]]", 50, 
          GrayLevel[0]], None}}, FrameTicks -> {{True, True}, {True, True}}, 
      FrameTicksStyle -> Directive[40], GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 0.5}, {0, 14}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[
          Rational[2, 3], 0, 0], 
         AbsoluteThickness[10]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[10]], 
        Directive[{
          RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
          Dashing[{Small, Small}]}, 
         AbsoluteThickness[10]]}, {
        Style["4 Level", 
         RGBColor[
          Rational[2, 3], 0, 0]], 
        Style["3 Level", 
         RGBColor[0, 0, 1]]}, Joined -> {True, True}, 
       LabelStyle -> {FontSize -> 45}, LegendFunction -> "Frame", 
       LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       LegendMarkerSize -> Large]], {Right, 0.5}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.7766014568175898`*^9, 3.7766015656811247`*^9, 3.8116389416779957`*^9, 
   3.8116390502808423`*^9, {3.811639081378996*^9, 3.8116390971553583`*^9}, 
   3.81214900842124*^9, {3.812149087863368*^9, 3.812149096389415*^9}, 
   3.8121492489607344`*^9, 3.8121493147553515`*^9, 3.812150070479548*^9, 
   3.8121501082568445`*^9, 3.8121502648257523`*^9, 3.812150876472562*^9, 
   3.8121509373079453`*^9, {3.8121513798936963`*^9, 3.812151391651435*^9}, 
   3.8121514542076707`*^9, 3.8121515399696074`*^9, 3.8121516058340454`*^9, 
   3.8121516482124157`*^9, 3.8121575924654684`*^9, 3.8121577500014315`*^9, {
   3.8121591791897*^9, 3.8121591934506416`*^9}, 3.8121592532899456`*^9, {
   3.812159653475111*^9, 3.812159663315041*^9}, 3.812160063387104*^9, 
   3.812160289452257*^9, 3.8121603656093693`*^9, {3.8121604150192084`*^9, 
   3.8121604675694513`*^9}, 3.8121608356633863`*^9, 3.812160885567295*^9, {
   3.8121609709509597`*^9, 3.8121609882079177`*^9}, 3.812161372426101*^9, {
   3.8121614188835745`*^9, 3.812161487708711*^9}, {3.8121615605505333`*^9, 
   3.8121615757769175`*^9}},
 CellLabel->
  "Out[1818]=",ExpressionUUID->"a9023385-32c4-40e1-a5db-c77a5c227b57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SetDirectory", "[", 
  "\"\<C:\\\\Users\\\\Saesun Kim\\\\Desktop\\\\Saesun Kim\\\\Files\\\\EIT \
file\\\\Fig\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Figure44U.eps\>\"", ",", "pd1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.811639082816304*^9, 3.8116391042752175`*^9}, 
   3.8121610084702873`*^9},
 CellLabel->
  "In[1819]:=",ExpressionUUID->"93df3a23-1954-4f96-bc2f-c90ec520b6e0"],

Cell[BoxData["\<\"C:\\\\Users\\\\Saesun Kim\\\\Desktop\\\\Saesun Kim\\\\Files\
\\\\EIT file\\\\Fig\"\>"], "Output",
 CellChangeTimes->{3.8116391047786756`*^9, 3.812151663355158*^9, 
  3.8121577552241707`*^9, 3.8121613729674835`*^9, 3.8121615807685227`*^9},
 CellLabel->
  "Out[1819]=",ExpressionUUID->"9c0d0346-afae-49ce-afa8-8f2871202001"],

Cell[BoxData["\<\"Figure44U.eps\"\>"], "Output",
 CellChangeTimes->{3.8116391047786756`*^9, 3.812151663355158*^9, 
  3.8121577552241707`*^9, 3.8121613729674835`*^9, 3.812161581519204*^9},
 CellLabel->
  "Out[1820]=",ExpressionUUID->"835d5da6-afa4-4472-a58d-c4a53373903e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pd1", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Fv\[Gamma]4", "[", "p", "]"}], ",", 
      RowBox[{"Fv\[Gamma]3", "[", "p", "]"}]}], "}"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", "40", "]"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{"legend", ",", 
       RowBox[{"{", 
        RowBox[{"Right", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
         RowBox[{"Darker", "[", "Red", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Blue"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Black", ",", 
         "Dashed"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<Decoherence \[Gamma][MHz]\>\"", ",", "50", ",", "Black"}], "]"}],
        ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<FWHM (MHz) \>\"", ",", "50", ",", "Black"}], "]"}]}], 
      "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "20"}], "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.765829631536768*^9, 3.765829632743741*^9}, {
   3.7658296806517997`*^9, 3.765829681665415*^9}, {3.7658297444089584`*^9, 
   3.7658297536539*^9}, {3.7658301588193398`*^9, 3.76583016469881*^9}, {
   3.7658304774870143`*^9, 3.7658304776901264`*^9}, {3.7658305163681355`*^9, 
   3.7658305187534957`*^9}, {3.7658332233088727`*^9, 
   3.7658332277551217`*^9}, {3.765833658359909*^9, 3.765833667860331*^9}, {
   3.765833948532319*^9, 3.765833948907303*^9}, {3.76583398941004*^9, 
   3.765833989738138*^9}, {3.765888607117876*^9, 3.7658886114194965`*^9}, {
   3.7658886675472775`*^9, 3.7658886677191124`*^9}, {3.765888736628761*^9, 
   3.765888737677676*^9}, 3.7658905802894325`*^9, {3.7658906107905655`*^9, 
   3.7658906124021163`*^9}, {3.765890715669695*^9, 3.7658907176291633`*^9}, {
   3.7658910026837683`*^9, 3.7658910027737293`*^9}, {3.765891110895172*^9, 
   3.7658911175836506`*^9}, {3.7659012198205557`*^9, 3.765901222653262*^9}, 
   3.7711726016269436`*^9, {3.771172719647414*^9, 3.771172725646368*^9}, {
   3.771172779852376*^9, 3.7711727916651664`*^9}, {3.771172860627954*^9, 
   3.7711728607216873`*^9}},ExpressionUUID->"410cf8fb-c405-4575-8ab9-\
478cf061011a"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
       0.011000000000000001`], AbsoluteThickness[3], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQNKra8Dd8wTcpg1EwR22k869FUjhl8Eyj9pf/YM
EPiIOpgYg8Bl+2JbruuLC8Sg8jftwWY1iDtATHtgzwjmS0DVP7avE1nn/rBK
0iE9DQSe2b8P3CHXmi0F1f/SPgTIfR0o7QC258wbe3uQ8bYyUPM+2C8tAFqo
LAtV/9GeGyTNJQc1/7N9JthYOaj+L/Yg5/cfkofa981+AkjAXwFq3g+I+w4o
QM37ab8B6DoRPUWoeb/tZ4PFFaHm/bFvAwaPHKsS1Lx/9mB1xUpQ8xgcHleB
PKgEVc8AoX2UoeYzOtSCpHcpQ/UzOSwB+0cFah+zA1hbjwrUPBaHHyDnf1WB
mscCUZ+sCjWP1eE8WFwVah6bw3eQelM1qHnsDgrg+FSDmsfhwAsOL3UHAKlg
xYU=
        "]]}, 
      {RGBColor[0, 0, 1], PointSize[0.011000000000000001`], AbsoluteThickness[
       3], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQOWxiDw037WTBDYab8QTP+G8k/aTzz0VSOm/5+9
CVjdZft//0GAwQEif9P+deAOudbXTA4Q0x7YfwOqPvSVxQGi/rG9+Dr3h1Ui
7A7paSDwzD4IpDyQE6r/pf3iAluu64u5Hc6eAYE39q/A5vFCzftgPwlkP78A
VP1He7B2C0Go+Z/tb4IMCBeC6v9iXysCslAYat83+9lgfSJQ835A/LFZFGre
T/sjIO8dEoOa99s+Duh6jTviUPP+2L8Du0cCat4/+x9g/0lCzWNwgISlNFQ9
gwPvdZCDZKDmMzpwg/myUP1MDu2gAGOVg9rH7MAI1i8PNY/FAez+X/JQ81gc
doH8W6EANY/VARyc7xSg5rE5LAWFX7Ii1Dx2B0i0KELN43A4BzLGR8kBALjg
yxg=
        "]]}}, {}, {}, {{}, {}}}, InsetBox[
     TemplateBox[{
       StyleBox["\"4 Level\"", 
        RGBColor[
         Rational[2, 3], 0, 0], StripOnInput -> False], 
       StyleBox["\"3 Level\"", 
        RGBColor[0, 0, 1], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontSize -> 45, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[2/3, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.33333333333333337, 0.33333333333333337, \
0.33333333333333337]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}]}], "]"}]& )], 
     Scaled[{0.99, 0.8}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"FWHM (MHz) \"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Decoherence \[Gamma][MHz]\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
   FrameTicks->{{True, True}, {True, True}},
   FrameTicksStyle->Directive[40],
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->1020,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 3}, {0, 20}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[3], 
          RGBColor[
           Rational[2, 3], 0, 0]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQNKra8Dd8wTcpg1EwR22k869FUjhl8Eyj9pf/YM
EPiIOpgYg8Bl+2JbruuLC8Sg8jftwWY1iDtATHtgzwjmS0DVP7avE1nn/rBK
0iE9DQSe2b8P3CHXmi0F1f/SPgTIfR0o7QC258wbe3uQ8bYyUPM+2C8tAFqo
LAtV/9GeGyTNJQc1/7N9JthYOaj+L/Yg5/cfkofa981+AkjAXwFq3g+I+w4o
QM37ab8B6DoRPUWoeb/tZ4PFFaHm/bFvAwaPHKsS1Lx/9mB1xUpQ8xgcHleB
PKgEVc8AoX2UoeYzOtSCpHcpQ/UzOSwB+0cFah+zA1hbjwrUPBaHHyDnf1WB
mscCUZ+sCjWP1eE8WFwVah6bw3eQelM1qHnsDgrg+FSDmsfhwAsOL3UHAKlg
xYU=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQOWxiDw037WTBDYab8QTP+G8k/aTzz0VSOm/5+9
CVjdZft//0GAwQEif9P+deAOudbXTA4Q0x7YfwOqPvSVxQGi/rG9+Dr3h1Ui
7A7paSDwzD4IpDyQE6r/pf3iAluu64u5Hc6eAYE39q/A5vFCzftgPwlkP78A
VP1He7B2C0Go+Z/tb4IMCBeC6v9iXysCslAYat83+9lgfSJQ835A/LFZFGre
T/sjIO8dEoOa99s+Duh6jTviUPP+2L8Du0cCat4/+x9g/0lCzWNwgISlNFQ9
gwPvdZCDZKDmMzpwg/myUP1MDu2gAGOVg9rH7MAI1i8PNY/FAez+X/JQ81gc
doH8W6EANY/VARyc7xSg5rE5LAWFX7Ii1Dx2B0i0KELN43A4BzLGR8kBALjg
yxg=
          "]]}}}, {}, {}, {{}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      AxesOrigin -> {0, 0}, PlotRange -> {{0, 3}, {0, 20}}, PlotRangeClipping -> 
      True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {False, False}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["FWHM (MHz) ", 50, 
          GrayLevel[0]], None}, {
         Style["Decoherence \[Gamma][MHz]", 50, 
          GrayLevel[0]], None}}, FrameTicks -> {{True, True}, {True, True}}, 
      FrameTicksStyle -> Directive[40], GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 3}, {0, 20}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[
          Rational[2, 3], 0, 0], 
         AbsoluteThickness[10]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[10]], 
        Directive[{
          RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
          Dashing[{Small, Small}]}, 
         AbsoluteThickness[10]]}, {
        Style["4 Level", 
         RGBColor[
          Rational[2, 3], 0, 0]], 
        Style["3 Level", 
         RGBColor[0, 0, 1]]}, Joined -> {True, True}, 
       LabelStyle -> {FontSize -> 45}, LegendFunction -> "Frame", 
       LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       LegendMarkerSize -> Large]], {Right, 0.8}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7658291811412697`*^9, 3.765829199257653*^9}, {
   3.765829647521124*^9, 3.7658296819967103`*^9}, {3.7658297451569653`*^9, 
   3.7658297539095774`*^9}, 3.7658298107230415`*^9, 3.765829904553975*^9, 
   3.765830181677425*^9, 3.7658303639720573`*^9, 3.7658304779573884`*^9, 
   3.765830613439003*^9, 3.765833668627305*^9, 3.7658337600003853`*^9, {
   3.765833940910299*^9, 3.765833949126031*^9}, 3.7658876124645996`*^9, 
   3.7658876940451612`*^9, 3.765887939890687*^9, 3.7658884040284977`*^9, {
   3.7658886075554547`*^9, 3.7658886116382346`*^9}, {3.7658886655170193`*^9, 
   3.765888667975294*^9}, 3.7658889032126093`*^9, 3.7658910096913195`*^9, 
   3.765891074802879*^9, {3.7658911147705913`*^9, 3.7658911181790495`*^9}, 
   3.7658932478284607`*^9, {3.7659012144410257`*^9, 3.765901223608595*^9}, 
   3.7711725967467985`*^9, 3.771172677155092*^9, {3.7711727200692654`*^9, 
   3.771172725943204*^9}, {3.7711727803181524`*^9, 3.7711727918682566`*^9}, 
   3.7711728666666517`*^9},ExpressionUUID->"871e49fa-553c-4096-ad93-\
81cb633764ca"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["p=10", "Subchapter",
 CellChangeTimes->{{3.7658297991029167`*^9, 3.7658298012631054`*^9}, 
   3.765829915027057*^9, {3.7658305440638323`*^9, 3.7658305445959687`*^9}, {
   3.76583059158514*^9, 3.7658305925543447`*^9}, {3.7658314166089573`*^9, 
   3.7658314170147433`*^9}, 3.7658921192788177`*^9, {3.7658922267469883`*^9, 
   3.765892226870511*^9}},ExpressionUUID->"d999dbff-38bb-4c07-8965-\
f380a7900a27"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", "65"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Fv\[Gamma]4", "[", "p", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{
   RowBox[{"Fv\[Gamma]3", "[", "p", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"Power", "::", "infy"}], "]"}], ";", 
   RowBox[{"Off", "[", 
    RowBox[{"Infinity", "::", "indet"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "list", ",", "list1", ",", "list3", ",", "list4", ",", "EIT", ",", "ABS", 
     ",", "EIT1", ",", "ABS1", ",", "LL", ",", "LL1", ",", "Midpoints", ",", 
     "Midpoints1", ",", "cluster", ",", "cluster1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"list", "=", 
       RowBox[{"Lev4DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list1", "=", 
       RowBox[{"Lev4DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list3", "=", 
       RowBox[{"Lev3DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list4", "=", 
       RowBox[{"Lev3DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"EIT", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS", "=", 
       RowBox[{
        RowBox[{"list1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list", ",", "EIT"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"EIT1", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS1", "=", 
       RowBox[{
        RowBox[{"list4", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list3", ",", "EIT1"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"LL", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"EIT", "-", "ABS"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Midpoints", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"list", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"EIT", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL", ")"}]}], "-", 
            RowBox[{"LL", "/", "50"}]}], "<", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "<", 
           RowBox[{"EIT", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL", ")"}]}], "+", 
            RowBox[{"LL", "/", "50"}]}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cluster", "=", 
       RowBox[{"Gather", "[", 
        RowBox[{"Midpoints", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "0.005"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fv\[Gamma]4", "[", "p", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Fv\[Gamma]4", "[", "p", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]", ",", 
           RowBox[{"1000", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}]}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"LL1", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"EIT1", "-", "ABS1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Midpoints1", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"list3", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"EIT1", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL1", ")"}]}], "-", 
            RowBox[{"LL1", "/", "50"}]}], "<", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "<", 
           RowBox[{"EIT1", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL1", ")"}]}], "+", 
            RowBox[{"LL1", "/", "50"}]}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cluster1", "=", 
       RowBox[{"Gather", "[", 
        RowBox[{"Midpoints1", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "0.003"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fv\[Gamma]3", "[", "p", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Fv\[Gamma]3", "[", "p", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]", ",", 
           RowBox[{"1000", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster1", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster1", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}]}]}], 
          "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0", ",", "10", ",", "1"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.765829089641389*^9, 3.7658292318963723`*^9}, {
   3.7658292853196664`*^9, 3.7658292871639733`*^9}, {3.7658293320655184`*^9, 
   3.7658294847660823`*^9}, {3.765829757651656*^9, 3.7658297653284125`*^9}, {
   3.7658299219744377`*^9, 3.7658299667544694`*^9}, {3.7658300840041547`*^9, 
   3.7658301261594133`*^9}, {3.765830210826744*^9, 3.7658303345335846`*^9}, {
   3.7658304859698343`*^9, 3.7658305295086613`*^9}, {3.765830564361416*^9, 
   3.7658305952136946`*^9}, {3.7658314187015557`*^9, 3.765831433576153*^9}, 
   3.765831528415668*^9, {3.7658330278595476`*^9, 3.765833421555685*^9}, {
   3.765833482366448*^9, 3.765833487516837*^9}, {3.7658335344874315`*^9, 
   3.7658336014185624`*^9}, {3.765833726869643*^9, 3.7658337287345467`*^9}, {
   3.7658337809291964`*^9, 3.7658337844539747`*^9}, {3.7658339867015486`*^9, 
   3.765833987029645*^9}, {3.7658875912324424`*^9, 3.7658875942033095`*^9}, {
   3.7658878566825867`*^9, 3.765887859120116*^9}, {3.7658883209717026`*^9, 
   3.765888321393361*^9}, {3.7658886313160963`*^9, 3.76588863955219*^9}, {
   3.765888683584565*^9, 3.765888717125509*^9}, {3.7658901003241773`*^9, 
   3.7658901056742954`*^9}, {3.7658901775747766`*^9, 
   3.7658902199436054`*^9}, {3.7658902603967047`*^9, 3.765890263600562*^9}, {
   3.7658903271765995`*^9, 3.7658903348457775`*^9}, {3.7658904879414234`*^9, 
   3.765890488140133*^9}, {3.7658905862585063`*^9, 3.765890608764577*^9}, {
   3.765890648187286*^9, 3.765890660073821*^9}, {3.7658906934800196`*^9, 
   3.7658907141689615`*^9}, {3.765890862627528*^9, 3.7658908654726653`*^9}, {
   3.765890902187481*^9, 3.7658909739793215`*^9}, {3.7658910201655784`*^9, 
   3.765891043056666*^9}, {3.7658910835439157`*^9, 3.7658910836376724`*^9}, {
   3.7658911446628666`*^9, 3.765891153082429*^9}, {3.7658922281256485`*^9, 
   3.7658922296047*^9}, 3.7658929769007473`*^9, {3.765900824713374*^9, 
   3.7659008276926885`*^9}},ExpressionUUID->"765cf0e7-88ec-45eb-8476-\
0ce5b05bf73a"],

Cell[BoxData["."], "Input",
 CellChangeTimes->{
  3.7658909675275736`*^9},ExpressionUUID->"32b7c750-d733-45b7-b146-\
5f419f3cb901"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Fv\[Gamma]4", "[", "p", "]"}], ",", 
     RowBox[{"Fv\[Gamma]3", "[", "p", "]"}]}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "40", "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"legend", ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "0.4"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Blue"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Black", ",", 
        "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Decoherence \[Gamma][MHz]\>\"", ",", "50", ",", "Black"}],
        "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<FWHM (MHz) \>\"", ",", "50", ",", "Black"}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "50"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.765829631536768*^9, 3.765829632743741*^9}, {
   3.7658296806517997`*^9, 3.765829681665415*^9}, {3.7658297444089584`*^9, 
   3.7658297536539*^9}, {3.7658301588193398`*^9, 3.76583016469881*^9}, {
   3.7658304774870143`*^9, 3.7658304776901264`*^9}, {3.7658305163681355`*^9, 
   3.7658305187534957`*^9}, {3.7658332233088727`*^9, 
   3.7658332277551217`*^9}, {3.765833658359909*^9, 3.765833667860331*^9}, {
   3.765833948532319*^9, 3.765833948907303*^9}, {3.76583398941004*^9, 
   3.765833989738138*^9}, {3.765888607117876*^9, 3.7658886114194965`*^9}, {
   3.7658886675472775`*^9, 3.7658886677191124`*^9}, {3.765888736628761*^9, 
   3.765888737677676*^9}, 3.7658905802894325`*^9, {3.7658906107905655`*^9, 
   3.7658906124021163`*^9}, {3.765890715669695*^9, 3.7658907176291633`*^9}, {
   3.7658910026837683`*^9, 3.7658910027737293`*^9}, {3.765891110895172*^9, 
   3.7658911175836506`*^9}, {3.7659008674790187`*^9, 
   3.765900867653597*^9}},ExpressionUUID->"a3b2dcd7-271f-4c88-8138-\
50b55965eedb"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
       0.012833333333333334`], AbsoluteThickness[3], 
       LineBox[{{0., 18.745000000000005`}, {1., 21.785000000000007`}, {2., 
        24.150000000000006`}, {3., 26.270000000000003`}, {4., 
        28.245000000000005`}, {5., 30.125000000000007`}, {6., 
        31.955000000000005`}, {7., 33.72500000000001}, {8., 35.46}, {9., 
        37.17000000000001}, {10., 38.830000000000005`}}]}, 
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       3], LineBox[{{0., 6.385}, {1., 8.130000000000003}, {2., 
        10.415000000000001`}, {3., 12.965000000000002`}, {4., 
        15.530000000000003`}, {5., 18.025000000000002`}, {6., 20.385}, {7., 
        22.6}, {8., 24.685000000000006`}, {9., 26.65500000000001}, {10., 
        28.510000000000005`}}]}}, {}, {}, {{}, {}}}, InsetBox[
     TemplateBox[{
       StyleBox["\"4 Level\"", 
        RGBColor[
         Rational[2, 3], 0, 0], StripOnInput -> False], 
       StyleBox["\"3 Level\"", 
        RGBColor[0, 0, 1], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontSize -> 45, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[2/3, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.33333333333333337, 0.33333333333333337, \
0.33333333333333337]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}]}], "]"}]& )], 
     Scaled[{0.99, 0.4}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"FWHM (MHz) \"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Decoherence \[Gamma][MHz]\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
   FrameTicks->{{True, True}, {True, True}},
   FrameTicksStyle->Directive[40],
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->1020,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 10}, {0, 50}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[
           Rational[2, 3], 0, 0]], 
         Line[{{0., 18.745000000000005`}, {1., 21.785000000000007`}, {2., 
          24.150000000000006`}, {3., 26.270000000000003`}, {4., 
          28.245000000000005`}, {5., 30.125000000000007`}, {6., 
          31.955000000000005`}, {7., 33.72500000000001}, {8., 35.46}, {9., 
          37.17000000000001}, {10., 38.830000000000005`}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 1]], 
         Line[{{0., 6.385}, {1., 8.130000000000003}, {2., 
          10.415000000000001`}, {3., 12.965000000000002`}, {4., 
          15.530000000000003`}, {5., 18.025000000000002`}, {6., 20.385}, {7., 
          22.6}, {8., 24.685000000000006`}, {9., 26.65500000000001}, {10., 
          28.510000000000005`}}]}}}, {}, {}, {{}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      AxesOrigin -> {0, 0}, PlotRange -> {{0, 10}, {0, 50}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {False, False}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["FWHM (MHz) ", 50, 
          GrayLevel[0]], None}, {
         Style["Decoherence \[Gamma][MHz]", 50, 
          GrayLevel[0]], None}}, FrameTicks -> {{True, True}, {True, True}}, 
      FrameTicksStyle -> Directive[40], GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 10}, {0, 50}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[
          Rational[2, 3], 0, 0], 
         AbsoluteThickness[10]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[10]], 
        Directive[{
          RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
          Dashing[{Small, Small}]}, 
         AbsoluteThickness[10]]}, {
        Style["4 Level", 
         RGBColor[
          Rational[2, 3], 0, 0]], 
        Style["3 Level", 
         RGBColor[0, 0, 1]]}, Joined -> {True, True}, 
       LabelStyle -> {FontSize -> 45}, LegendFunction -> "Frame", 
       LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       LegendMarkerSize -> Large]], {Right, 0.4}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7658291811412697`*^9, 3.765829199257653*^9}, {
   3.765829647521124*^9, 3.7658296819967103`*^9}, {3.7658297451569653`*^9, 
   3.7658297539095774`*^9}, 3.7658298107230415`*^9, 3.765829904553975*^9, 
   3.765830181677425*^9, 3.7658303639720573`*^9, 3.7658304779573884`*^9, 
   3.765830613439003*^9, 3.765833668627305*^9, 3.7658337600003853`*^9, {
   3.765833940910299*^9, 3.765833949126031*^9}, 3.7658876124645996`*^9, 
   3.7658876940451612`*^9, 3.765887939890687*^9, 3.7658884040284977`*^9, {
   3.7658886075554547`*^9, 3.7658886116382346`*^9}, {3.7658886655170193`*^9, 
   3.765888667975294*^9}, 3.7658889032126093`*^9, 3.7658910096913195`*^9, 
   3.765891074802879*^9, {3.7658911147705913`*^9, 3.7658911181790495`*^9}, 
   3.765893281460141*^9, {3.7659008627557125`*^9, 
   3.765900867900358*^9}},ExpressionUUID->"b85526c2-e98e-40da-a09c-\
3efe6baa6add"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["p=15", "Subchapter",
 CellChangeTimes->{{3.7658297991029167`*^9, 3.7658298012631054`*^9}, 
   3.765829915027057*^9, {3.7658305440638323`*^9, 3.7658305445959687`*^9}, {
   3.76583059158514*^9, 3.7658305925543447`*^9}, {3.7658314166089573`*^9, 
   3.7658314170147433`*^9}, 3.7658921192788177`*^9, {3.765892189663393*^9, 
   3.765892202759098*^9}, {3.765892238629117*^9, 
   3.765892238973284*^9}},ExpressionUUID->"88bd440e-f092-43df-9cc6-\
0874949e8d01"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", "145.75"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Fv\[Gamma]4", "[", "p", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{
   RowBox[{"Fv\[Gamma]3", "[", "p", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"Power", "::", "infy"}], "]"}], ";", 
   RowBox[{"Off", "[", 
    RowBox[{"Infinity", "::", "indet"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "list", ",", "list1", ",", "list3", ",", "list4", ",", "EIT", ",", "ABS", 
     ",", "EIT1", ",", "ABS1", ",", "LL", ",", "LL1", ",", "Midpoints", ",", 
     "Midpoints1", ",", "cluster", ",", "cluster1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"list", "=", 
       RowBox[{"Lev4DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list1", "=", 
       RowBox[{"Lev4DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list3", "=", 
       RowBox[{"Lev3DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"p", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"list4", "=", 
       RowBox[{"Lev3DoppTestsc1", "[", 
        RowBox[{"50", ",", 
         RowBox[{"0", "/", "1000"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"\[Gamma]", "*", 
          RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"EIT", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS", "=", 
       RowBox[{
        RowBox[{"list1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list", ",", "EIT"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"EIT1", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"list3", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Indeterminate"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ABS1", "=", 
       RowBox[{
        RowBox[{"list4", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list3", ",", "EIT1"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"LL", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"EIT", "-", "ABS"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Midpoints", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"list", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"EIT", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL", ")"}]}], "-", 
            RowBox[{"LL", "/", "50"}]}], "<", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "<", 
           RowBox[{"EIT", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL", ")"}]}], "+", 
            RowBox[{"LL", "/", "50"}]}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cluster", "=", 
       RowBox[{"Gather", "[", 
        RowBox[{"Midpoints", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "0.005"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fv\[Gamma]4", "[", "p", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Fv\[Gamma]4", "[", "p", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]", ",", 
           RowBox[{"1000", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}]}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"LL1", "=", 
       RowBox[{"Abs", "[", 
        RowBox[{"EIT1", "-", "ABS1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Midpoints1", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"list3", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"EIT1", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL1", ")"}]}], "-", 
            RowBox[{"LL1", "/", "50"}]}], "<", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "<", 
           RowBox[{"EIT1", "+", 
            RowBox[{"0.5", 
             RowBox[{"(", "LL1", ")"}]}], "+", 
            RowBox[{"LL1", "/", "50"}]}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cluster1", "=", 
       RowBox[{"Gather", "[", 
        RowBox[{"Midpoints1", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "0.003"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fv\[Gamma]3", "[", "p", "]"}], "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Fv\[Gamma]3", "[", "p", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Gamma]", ",", 
           RowBox[{"1000", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster1", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{"cluster1", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}]}]}], 
          "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0", ",", "10", ",", "1"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.765829089641389*^9, 3.7658292318963723`*^9}, {
   3.7658292853196664`*^9, 3.7658292871639733`*^9}, {3.7658293320655184`*^9, 
   3.7658294847660823`*^9}, {3.765829757651656*^9, 3.7658297653284125`*^9}, {
   3.7658299219744377`*^9, 3.7658299667544694`*^9}, {3.7658300840041547`*^9, 
   3.7658301261594133`*^9}, {3.765830210826744*^9, 3.7658303345335846`*^9}, {
   3.7658304859698343`*^9, 3.7658305295086613`*^9}, {3.765830564361416*^9, 
   3.7658305952136946`*^9}, {3.7658314187015557`*^9, 3.765831433576153*^9}, 
   3.765831528415668*^9, {3.7658330278595476`*^9, 3.765833421555685*^9}, {
   3.765833482366448*^9, 3.765833487516837*^9}, {3.7658335344874315`*^9, 
   3.7658336014185624`*^9}, {3.765833726869643*^9, 3.7658337287345467`*^9}, {
   3.7658337809291964`*^9, 3.7658337844539747`*^9}, {3.7658339867015486`*^9, 
   3.765833987029645*^9}, {3.7658875912324424`*^9, 3.7658875942033095`*^9}, {
   3.7658878566825867`*^9, 3.765887859120116*^9}, {3.7658883209717026`*^9, 
   3.765888321393361*^9}, {3.7658886313160963`*^9, 3.76588863955219*^9}, {
   3.765888683584565*^9, 3.765888717125509*^9}, {3.7658901003241773`*^9, 
   3.7658901056742954`*^9}, {3.7658901775747766`*^9, 
   3.7658902199436054`*^9}, {3.7658902603967047`*^9, 3.765890263600562*^9}, {
   3.7658903271765995`*^9, 3.7658903348457775`*^9}, {3.7658904879414234`*^9, 
   3.765890488140133*^9}, {3.7658905862585063`*^9, 3.765890608764577*^9}, {
   3.765890648187286*^9, 3.765890660073821*^9}, {3.7658906934800196`*^9, 
   3.7658907141689615`*^9}, {3.765890862627528*^9, 3.7658908654726653`*^9}, {
   3.765890902187481*^9, 3.7658909739793215`*^9}, {3.7658910201655784`*^9, 
   3.765891043056666*^9}, {3.7658910835439157`*^9, 3.7658910836376724`*^9}, {
   3.7658911446628666`*^9, 3.765891153082429*^9}, {3.765892190434164*^9, 
   3.7658922062522078`*^9}, {3.765892241305195*^9, 3.7658922432104244`*^9}, 
   3.7658929866048*^9, {3.765900876552063*^9, 3.7659008775997205`*^9}, {
   3.7659009359714174`*^9, 
   3.7659009363932734`*^9}},ExpressionUUID->"86a63db9-9734-4061-8261-\
2f20000dae18"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Fv\[Gamma]4", "[", "p", "]"}], ",", 
     RowBox[{"Fv\[Gamma]3", "[", "p", "]"}]}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "40", "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"legend", ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "0.4"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Blue"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Black", ",", 
        "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Decoherence \[Gamma][MHz]\>\"", ",", "50", ",", "Black"}],
        "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<FWHM (MHz) \>\"", ",", "50", ",", "Black"}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "70"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.765829631536768*^9, 3.765829632743741*^9}, {
   3.7658296806517997`*^9, 3.765829681665415*^9}, {3.7658297444089584`*^9, 
   3.7658297536539*^9}, {3.7658301588193398`*^9, 3.76583016469881*^9}, {
   3.7658304774870143`*^9, 3.7658304776901264`*^9}, {3.7658305163681355`*^9, 
   3.7658305187534957`*^9}, {3.7658332233088727`*^9, 
   3.7658332277551217`*^9}, {3.765833658359909*^9, 3.765833667860331*^9}, {
   3.765833948532319*^9, 3.765833948907303*^9}, {3.76583398941004*^9, 
   3.765833989738138*^9}, {3.765888607117876*^9, 3.7658886114194965`*^9}, {
   3.7658886675472775`*^9, 3.7658886677191124`*^9}, {3.765888736628761*^9, 
   3.765888737677676*^9}, 3.7658905802894325`*^9, {3.7658906107905655`*^9, 
   3.7658906124021163`*^9}, {3.765890715669695*^9, 3.7658907176291633`*^9}, {
   3.7658910026837683`*^9, 3.7658910027737293`*^9}, {3.765891110895172*^9, 
   3.7658911175836506`*^9}, {3.7659008826051865`*^9, 3.765900882738379*^9}, {
   3.765900941348011*^9, 
   3.7659009415232143`*^9}},ExpressionUUID->"598b47ec-e017-4a0e-bfb5-\
a1105e7b373b"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
       0.012833333333333334`], AbsoluteThickness[3], 
       LineBox[{{0., 40.72500000000001}, {1., 43.78500000000001}, {2., 
        46.32000000000001}, {3., 48.56500000000002}, {4., 
        50.625000000000014`}, {5., 52.56000000000001}, {6., 
        54.390000000000015`}, {7., 56.155}, {8., 57.860000000000014`}, {9., 
        59.519999999999996`}, {10., 61.140000000000015`}}]}, 
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       3], LineBox[{{0., 14.205000000000004`}, {1., 15.645000000000007`}, {2.,
         17.41}, {3., 19.405000000000005`}, {4., 21.570000000000007`}, {5., 
        23.845000000000002`}, {6., 26.165000000000003`}, {7., 
        28.479999999999997`}, {8., 30.775000000000002`}, {9., 
        33.02000000000001}, {10., 35.20000000000001}}]}}, {}, {}, {{}, {}}}, 
    InsetBox[
     TemplateBox[{
       StyleBox["\"4 Level\"", 
        RGBColor[
         Rational[2, 3], 0, 0], StripOnInput -> False], 
       StyleBox["\"3 Level\"", 
        RGBColor[0, 0, 1], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {
                    LineBox[{{0, 15}, {30, 15}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[10]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {30, 15}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.52] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
           False], {FontSize -> 45, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[2/3, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.22222222222222227`, 0.22222222222222227`, 
                    0.22222222222222227`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.33333333333333337, 0.33333333333333337, \
0.33333333333333337]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "10", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "45"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "Large"}]}], "]"}]& )], 
     Scaled[{0.99, 0.4}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox["\"FWHM (MHz) \"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox["\"Decoherence \[Gamma][MHz]\"", 50, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
   FrameTicks->{{True, True}, {True, True}},
   FrameTicksStyle->Directive[40],
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->1020,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 10}, {0, 70}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[
           Rational[2, 3], 0, 0]], 
         Line[{{0., 40.72500000000001}, {1., 43.78500000000001}, {2., 
          46.32000000000001}, {3., 48.56500000000002}, {4., 
          50.625000000000014`}, {5., 52.56000000000001}, {6., 
          54.390000000000015`}, {7., 56.155}, {8., 57.860000000000014`}, {9., 
          59.519999999999996`}, {10., 61.140000000000015`}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 1]], 
         Line[{{0., 14.205000000000004`}, {1., 15.645000000000007`}, {2., 
          17.41}, {3., 19.405000000000005`}, {4., 21.570000000000007`}, {5., 
          23.845000000000002`}, {6., 26.165000000000003`}, {7., 
          28.479999999999997`}, {8., 30.775000000000002`}, {9., 
          33.02000000000001}, {10., 
          35.20000000000001}}]}}}, {}, {}, {{}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      AxesOrigin -> {0, 0}, PlotRange -> {{0, 10}, {0, 70}}, 
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {False, False}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style["FWHM (MHz) ", 50, 
          GrayLevel[0]], None}, {
         Style["Decoherence \[Gamma][MHz]", 50, 
          GrayLevel[0]], None}}, FrameTicks -> {{True, True}, {True, True}}, 
      FrameTicksStyle -> Directive[40], GridLines -> {Automatic, Automatic}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 10}, {0, 70}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[
          Rational[2, 3], 0, 0], 
         AbsoluteThickness[10]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[10]], 
        Directive[{
          RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
          Dashing[{Small, Small}]}, 
         AbsoluteThickness[10]]}, {
        Style["4 Level", 
         RGBColor[
          Rational[2, 3], 0, 0]], 
        Style["3 Level", 
         RGBColor[0, 0, 1]]}, Joined -> {True, True}, 
       LabelStyle -> {FontSize -> 45}, LegendFunction -> "Frame", 
       LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       LegendMarkerSize -> Large]], {Right, 0.4}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7658291811412697`*^9, 3.765829199257653*^9}, {
   3.765829647521124*^9, 3.7658296819967103`*^9}, {3.7658297451569653`*^9, 
   3.7658297539095774`*^9}, 3.7658298107230415`*^9, 3.765829904553975*^9, 
   3.765830181677425*^9, 3.7658303639720573`*^9, 3.7658304779573884`*^9, 
   3.765830613439003*^9, 3.765833668627305*^9, 3.7658337600003853`*^9, {
   3.765833940910299*^9, 3.765833949126031*^9}, 3.7658876124645996`*^9, 
   3.7658876940451612`*^9, 3.765887939890687*^9, 3.7658884040284977`*^9, {
   3.7658886075554547`*^9, 3.7658886116382346`*^9}, {3.7658886655170193`*^9, 
   3.765888667975294*^9}, 3.7658889032126093`*^9, 3.7658910096913195`*^9, 
   3.765891074802879*^9, {3.7658911147705913`*^9, 3.7658911181790495`*^9}, 
   3.765893328824827*^9, 3.7659009271950183`*^9, 
   3.765900986238726*^9},ExpressionUUID->"9913885b-c0c7-4f2a-bfc9-\
8af4c6f54e3c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Save", "Title",
 CellChangeTimes->{{3.7658341172601395`*^9, 
  3.7658341176507397`*^9}},ExpressionUUID->"53152a40-bd73-481d-85ff-\
d3601be931d8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SetDirectory", "[", 
  "\"\<D:\\\\Qsync\\\\PersonalFolders\\\\Saesun\\\\Papers\\\\Paper\\\\Final-\
Paper Figure\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Figure4TvP.eps\>\"", ",", "tp1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Figure4TvD.eps\>\"", ",", "td1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Figure4FvP.eps\>\"", ",", "Fp1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Figure4Fvd.eps\>\"", ",", "pd1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7659012774463377`*^9, 3.765901301691519*^9}, {
  3.7659013728430986`*^9, 
  3.765901441081641*^9}},ExpressionUUID->"765b79fc-f831-40a9-a559-\
a320f0745fb4"],

Cell[BoxData["\<\"D:\\\\Qsync\\\\PersonalFolders\\\\Saesun\\\\Papers\\\\Paper\
\\\\Final-Paper Figure\"\>"], "Output",
 CellChangeTimes->{{3.76590143144512*^9, 
  3.765901441409301*^9}},ExpressionUUID->"33e7cf4f-2976-49b2-a6ad-\
7f354a1fc229"],

Cell[BoxData["\<\"Figure4TvP.eps\"\>"], "Output",
 CellChangeTimes->{{3.76590143144512*^9, 
  3.7659014416592827`*^9}},ExpressionUUID->"7c40fd84-508b-4785-b2c9-\
6cc859bf7572"],

Cell[BoxData["\<\"Figure4TvD.eps\"\>"], "Output",
 CellChangeTimes->{{3.76590143144512*^9, 
  3.765901441956248*^9}},ExpressionUUID->"0f488b04-db15-4379-9b99-\
5b2d33a50dcf"],

Cell[BoxData["\<\"Figure4FvP.eps\"\>"], "Output",
 CellChangeTimes->{{3.76590143144512*^9, 
  3.765901442249503*^9}},ExpressionUUID->"1af5a33b-8c1f-4f6c-825e-\
5f831a3bd3a8"],

Cell[BoxData["\<\"Figure4Fvd.eps\"\>"], "Output",
 CellChangeTimes->{{3.76590143144512*^9, 
  3.7659014425508313`*^9}},ExpressionUUID->"4ee724a8-0823-42db-8e73-\
01ce94b34e02"]
}, Open  ]],

Cell[BoxData["pd1"], "Input",
 CellChangeTimes->{3.7659012811797123`*^9, 
  3.7766016503959317`*^9},ExpressionUUID->"2ddf7c7a-ff8c-4937-8b1c-\
30e0080051fe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SetDirectory", "[", 
  "\"\<D:\\\\Qsync\\\\PersonalFolders\\\\Saesun\\\\Papers\\\\Paper\\\\2019-09-\
04 Final-Paper Figure\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Figure4TvD3.eps\>\"", ",", "td1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Figure4Fvd3.eps\>\"", ",", "pd1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7711728753889437`*^9, 3.7711728821653323`*^9}, 
   3.7766016677084355`*^9},ExpressionUUID->"d4d2230f-83fe-47c7-90f1-\
42d6c629dbcb"],

Cell[BoxData["\<\"D:\\\\Qsync\\\\PersonalFolders\\\\Saesun\\\\Papers\\\\Paper\
\\\\2019-09-04 Final-Paper Figure\"\>"], "Output",
 CellChangeTimes->{3.771172882914974*^9, 
  3.7766016685291033`*^9},ExpressionUUID->"b3623c13-a2ed-4187-9d6c-\
ff6817b6d7c7"],

Cell[BoxData["\<\"Figure4TvD3.eps\"\>"], "Output",
 CellChangeTimes->{3.771172882914974*^9, 
  3.776601670102229*^9},ExpressionUUID->"860736fc-0eda-4103-9dcc-\
f0ccc4959cf5"],

Cell[BoxData["\<\"Figure4Fvd3.eps\"\>"], "Output",
 CellChangeTimes->{3.771172882914974*^9, 
  3.7766016704928303`*^9},ExpressionUUID->"994f3644-b135-44b5-9bf5-\
2baf2787bfae"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.765901283244195*^9},ExpressionUUID->"286a84b1-f350-4794-bd6b-\
6ab8179013b4"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.765901371459798*^9},ExpressionUUID->"8b3751fc-3878-43a1-85d0-\
63ebb59975bf"],

Cell[BoxData["tp1"], "Input",ExpressionUUID->"bd945ad6-1089-4c89-97fb-6dda680b78dc"]
}, Open  ]]
},
WindowSize->{1904, 981},
WindowMargins->{{1920, Automatic}, {Automatic, 0}},
Magnification:>0.9 Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"77b7f1b0-f246-4349-a7a4-2fadab944b47"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 205, 4, 87, "Title",ExpressionUUID->"6f4d1403-51d5-4e2d-82ca-75f2c471c456"],
Cell[CellGroupData[{
Cell[810, 30, 209, 4, 62, "Chapter",ExpressionUUID->"0c818532-7921-4ad0-a0cd-b34d0f77d35a"],
Cell[1022, 36, 8938, 190, 516, "Input",ExpressionUUID->"9b00454e-837d-48f7-8a64-2f775e8bc02c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9997, 231, 151, 3, 62, "Chapter",ExpressionUUID->"c69de97c-5914-482b-a3bd-070372a21fd0"],
Cell[10151, 236, 1876, 51, 82, "Input",ExpressionUUID->"10234e3e-bca7-438a-95de-c56c36ac751b"],
Cell[12030, 289, 1794, 56, 137, "Input",ExpressionUUID->"0123124f-0a7d-4060-bf2d-18c7c7866867"],
Cell[13827, 347, 1203, 30, 46, "Input",ExpressionUUID->"ec321cca-b218-4bd7-af6e-dca36bb2347f"],
Cell[15033, 379, 4756, 107, 225, "Input",ExpressionUUID->"a489b2c9-da9d-48a0-8a22-c26608efd51b"]
}, Closed]],
Cell[CellGroupData[{
Cell[19826, 491, 155, 3, 52, "Chapter",ExpressionUUID->"6cd8bea0-690b-4199-85f4-af3b022fea49"],
Cell[19984, 496, 8304, 221, 124, "Input",ExpressionUUID->"2955f96f-c450-4cbe-bfd0-9510916297b2"],
Cell[28291, 719, 3500, 109, 270, "Input",ExpressionUUID->"e9adc3a4-e156-4038-a4c4-6b4f792b6110"],
Cell[31794, 830, 109, 2, 21, "Input",ExpressionUUID->"8d0589ce-473b-4c4e-bf8c-26eff812b156"],
Cell[31906, 834, 1251, 33, 47, "Input",ExpressionUUID->"c1f4f69c-bc94-4054-ad84-340540807521"],
Cell[33160, 869, 7507, 174, 297, "Input",ExpressionUUID->"7090e7ba-dccd-47e7-8f49-a0bfb5250e50"]
}, Closed]],
Cell[CellGroupData[{
Cell[40704, 1048, 164, 3, 52, "Chapter",ExpressionUUID->"af487da2-cb9f-4709-8fe6-eaea443ecbaa"],
Cell[40871, 1053, 3354, 72, 117, "Input",ExpressionUUID->"f4c011de-a350-4da2-aaa0-a98d2a0bdc0a"],
Cell[44228, 1127, 1339, 41, 26, "Input",ExpressionUUID->"d1eea7c5-9f2f-4729-bd95-af06602926ab"],
Cell[CellGroupData[{
Cell[45592, 1172, 703, 19, 81, "Input",ExpressionUUID->"5a1a9c92-8060-40a7-ac96-bfbc4fcfe741"],
Cell[46298, 1193, 1211, 17, 70, "Output",ExpressionUUID->"46fe8076-58af-4e20-aba6-7395e8c5a124"],
Cell[47512, 1212, 1213, 17, 70, "Output",ExpressionUUID->"8d304f62-245e-41bd-b2cd-1112fe6fab88"],
Cell[48728, 1231, 1211, 17, 70, "Output",ExpressionUUID->"84cab7bf-38da-4d38-adb8-7c739b10d58b"],
Cell[49942, 1250, 1212, 17, 70, "Output",ExpressionUUID->"6a25b0a4-46ce-4de0-bca8-3a5f7e2f639a"]
}, Open  ]],
Cell[51169, 1270, 11875, 298, 898, "Input",ExpressionUUID->"3e0bab36-6279-4e99-a536-f834161b70c6"],
Cell[63047, 1570, 16197, 404, 922, "Input",ExpressionUUID->"07374ebf-8d84-49d9-9164-618579a09736"],
Cell[79247, 1976, 21018, 389, 709, "Input",ExpressionUUID->"f8603042-5bfa-4bed-9dd7-5aadcd09d039"],
Cell[100268, 2367, 12861, 287, 745, "Input",ExpressionUUID->"295d6705-47fd-4d0a-b571-a139133ee434"],
Cell[113132, 2656, 15212, 375, 1193, "Input",ExpressionUUID->"759d762d-baf6-4358-bae8-c0b114bbb3e9"],
Cell[128347, 3033, 18310, 402, 987, "Input",ExpressionUUID->"61ac50df-e2d8-46bf-ab70-4991d8a1e4a6"],
Cell[146660, 3437, 19861, 486, 1255, "Input",ExpressionUUID->"c9102371-1ea7-4869-81cd-527a5fab1b6b"],
Cell[166524, 3925, 26532, 502, 1100, "Input",ExpressionUUID->"645cf6b3-91d1-45a7-bdbf-db78225fb175"],
Cell[193059, 4429, 18460, 404, 987, "Input",ExpressionUUID->"d1177512-9431-4473-9348-ef8f85a84772"],
Cell[211522, 4835, 18130, 397, 987, "Input",ExpressionUUID->"226b25ab-e500-4aed-8237-36f703d2d7d2"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[229701, 5238, 153, 3, 87, "Title",ExpressionUUID->"ba1c4da3-73b2-478c-b70b-9a7572ea242a"],
Cell[CellGroupData[{
Cell[229879, 5245, 153, 3, 62, "Chapter",ExpressionUUID->"9c42ca44-aeeb-48e9-8f89-538190a22ec5"],
Cell[CellGroupData[{
Cell[230057, 5252, 221, 4, 57, "Subchapter",ExpressionUUID->"7f498fca-5492-47ac-a2ab-b586b4e0f557"],
Cell[230281, 5258, 20448, 362, 655, "Input",ExpressionUUID->"0614c558-62f4-4a65-92a5-3d0580d5519b"],
Cell[250732, 5622, 20261, 360, 655, "Input",ExpressionUUID->"5c05353f-9f5f-4609-97fc-18b6487a0503"],
Cell[270996, 5984, 18518, 402, 1027, "Input",ExpressionUUID->"f5c39f6e-22f6-4f9d-a41b-f53639bd192d"],
Cell[289517, 6388, 20497, 362, 655, "Input",ExpressionUUID->"31240557-1a7b-4c21-a23d-dffdfd9bf489"],
Cell[310017, 6752, 18922, 407, 1027, "Input",ExpressionUUID->"812217d3-cb39-4eb3-90c5-9345dbc455cb"],
Cell[328942, 7161, 19229, 337, 619, "Input",ExpressionUUID->"47ad5fe9-df61-46e5-9c52-0715036cd717"],
Cell[348174, 7500, 18702, 404, 1027, "Input",ExpressionUUID->"1eb8789f-ea72-45a7-af5a-4b7f6c706648"],
Cell[366879, 7906, 19375, 339, 619, "Input",ExpressionUUID->"a003f62c-0389-42cc-8097-704cb8ca003d"],
Cell[386257, 8247, 18856, 407, 1027, "Input",ExpressionUUID->"aaddf0be-9880-4855-bef3-414d387af565"],
Cell[405116, 8656, 19488, 341, 619, "Input",ExpressionUUID->"304751bf-4a68-4bab-b6ab-bc49683b7c97"],
Cell[424607, 8999, 18955, 408, 1027, "Input",ExpressionUUID->"f1a7c904-8c86-45c9-a491-3918cc07b4c5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[443611, 9413, 245, 4, 62, "Chapter",ExpressionUUID->"ee72d3ce-98a3-4b8e-9d32-35649bd24763"],
Cell[443859, 9419, 1339, 41, 26, "Input",ExpressionUUID->"d9b3add8-62ae-4eb4-9557-1f01e1f4c5e9"],
Cell[CellGroupData[{
Cell[445223, 9464, 902, 25, 103, "Input",ExpressionUUID->"30809b63-a631-496c-94ea-f0788ae064fd"],
Cell[446128, 9491, 1311, 19, 30, "Output",ExpressionUUID->"c79cbb11-01b9-46c1-8ee7-d75933293d06"],
Cell[447442, 9512, 1312, 19, 30, "Output",ExpressionUUID->"229c168b-e544-4f18-962a-84f14593a319"]
}, Open  ]],
Cell[CellGroupData[{
Cell[448791, 9536, 185, 3, 57, "Subchapter",ExpressionUUID->"c135caf2-1b10-48b8-8bf3-ba5f19a948ee"],
Cell[CellGroupData[{
Cell[449001, 9543, 4851, 123, 369, "Input",ExpressionUUID->"352dd104-99f1-41b7-a702-42e1b5a5f577"],
Cell[453855, 9668, 329, 8, 20, "Message",ExpressionUUID->"49262d22-b365-47c7-acfd-f1f89b425d8c"],
Cell[454187, 9678, 327, 8, 20, "Message",ExpressionUUID->"ccbf3626-d13f-49f0-b77a-a41db3f889d5"],
Cell[454517, 9688, 329, 8, 20, "Message",ExpressionUUID->"13ed9950-26a8-48df-8fc3-3211177e8ed8"],
Cell[454849, 9698, 456, 10, 20, "Message",ExpressionUUID->"21466c65-533b-41fb-b3f1-070005d14a76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[455342, 9713, 3367, 88, 81, "Input",ExpressionUUID->"305232fc-ed5d-4b24-b1f4-f7b1a228a899"],
Cell[458712, 9803, 17814, 386, 598, "Output",ExpressionUUID->"30ef59a9-afe5-45f6-9a0e-69fb4fe8ee19"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[476575, 10195, 292, 5, 57, "Subchapter",ExpressionUUID->"c05c4d7f-c6fc-4dc4-9294-3d4fa9938762"],
Cell[CellGroupData[{
Cell[476892, 10204, 4983, 125, 369, "Input",ExpressionUUID->"eb4c932e-2934-4c7b-93ef-b8697b683045"],
Cell[481878, 10331, 585, 12, 20, "Message",ExpressionUUID->"497fd8b5-d92f-4be8-b3b8-9d98526cdafa"],
Cell[482466, 10345, 585, 12, 20, "Message",ExpressionUUID->"560af1ff-fe59-429f-a981-2bb0b373c87f"],
Cell[483054, 10359, 586, 12, 20, "Message",ExpressionUUID->"19e8a4a7-167f-4903-8f0b-0d3199fdab38"],
Cell[483643, 10373, 457, 10, 20, "Message",ExpressionUUID->"7796da71-9790-4e1a-a6d5-0e572e9e3d88"],
Cell[484103, 10385, 186, 3, 30, "Output",ExpressionUUID->"2a7d21c8-39b9-4ec5-80b3-f9a09ab56b25"]
}, Open  ]],
Cell[CellGroupData[{
Cell[484326, 10393, 3394, 88, 81, "Input",ExpressionUUID->"0af0c5be-94d9-40b7-a824-67126934a7bc"],
Cell[487723, 10483, 18306, 391, 618, "Output",ExpressionUUID->"e1ed8b2d-f9a1-48a8-9c8e-3c8bbea52934"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[506078, 10880, 343, 5, 57, "Subchapter",ExpressionUUID->"0a791ea4-b0aa-4d29-8fcd-cdfa4b00aea6"],
Cell[CellGroupData[{
Cell[506446, 10889, 3078, 85, 207, "Input",ExpressionUUID->"ae437aac-d937-43f5-a706-9bd9c5063a48"],
Cell[509527, 10976, 784, 11, 30, "Output",ExpressionUUID->"f5ea470a-055d-4879-a16c-ff37b06f82ba"],
Cell[510314, 10989, 7224, 133, 220, "Output",ExpressionUUID->"ed6b1f50-1dc6-4892-a715-bc8d6512ae77"],
Cell[517541, 11124, 806, 11, 32, "Output",ExpressionUUID->"60371b9a-aecc-4994-b56b-a2565a095af8"],
Cell[518350, 11137, 805, 11, 32, "Output",ExpressionUUID->"8a77dfd7-d543-46cd-82ad-6f960b625ab9"],
Cell[519158, 11150, 806, 11, 30, "Output",ExpressionUUID->"96524bf4-7c0d-44e6-82c7-a6ba990de7d2"],
Cell[519967, 11163, 805, 11, 30, "Output",ExpressionUUID->"a279c752-7212-42f8-a467-4d642163262a"]
}, Open  ]],
Cell[520787, 11177, 129, 3, 26, "Input",ExpressionUUID->"ab548791-7657-495f-852b-c36c883cc65a"],
Cell[CellGroupData[{
Cell[520941, 11184, 154, 3, 26, "Input",ExpressionUUID->"6aebef9c-d636-4096-83ac-8854696b5279"],
Cell[521098, 11189, 2025, 40, 49, "Output",ExpressionUUID->"ff7b70b5-cac0-4505-86b4-42920958177f"]
}, Open  ]],
Cell[523138, 11232, 5367, 130, 369, "Input",ExpressionUUID->"0456a67d-93db-497e-b973-ba312a7a891d"],
Cell[CellGroupData[{
Cell[528530, 11366, 3750, 93, 81, "Input",ExpressionUUID->"79e8331b-e1e3-4e10-95a4-11f9131b1cd1"],
Cell[532283, 11461, 23193, 481, 618, "Output",ExpressionUUID->"35cff87b-6b86-46ca-9454-5a45b07609cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[555513, 11947, 444, 9, 45, "Input",ExpressionUUID->"0d099760-1f0f-4ea4-8d0f-2d3ebdd958e7"],
Cell[555960, 11958, 338, 5, 30, "Output",ExpressionUUID->"5825c13a-378a-4fc2-9ede-07fba619d4e2"],
Cell[556301, 11965, 271, 4, 30, "Output",ExpressionUUID->"65e79225-84b9-4331-9727-1dcf9c93e169"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[556621, 11975, 295, 5, 57, "Subchapter",ExpressionUUID->"b56f99fe-5ec1-40c1-bf56-a8fe6899ce9b"],
Cell[556919, 11982, 4960, 125, 369, "Input",ExpressionUUID->"1b6c0bbf-17cc-4769-9f69-b1b8e7a954db"],
Cell[CellGroupData[{
Cell[561904, 12111, 3502, 91, 99, "Input",ExpressionUUID->"cc44ac75-367e-4c47-a74e-34b7b789e529"],
Cell[565409, 12204, 18216, 384, 618, "Output",ExpressionUUID->"2ea97d13-148c-4ad2-9c16-35ff23c66c97"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[583686, 12595, 166, 3, 62, "Chapter",ExpressionUUID->"ae2e2b1f-10d9-40fe-a7cf-3d8ebd8fc560"],
Cell[CellGroupData[{
Cell[583877, 12602, 288, 5, 57, "Subchapter",ExpressionUUID->"a699c2b3-0219-4b6f-b096-8a9e901f8cf5"],
Cell[584168, 12609, 4966, 124, 369, "Input",ExpressionUUID->"13764439-6678-4116-b8e5-2601f1e9b565"],
Cell[CellGroupData[{
Cell[589159, 12737, 3657, 93, 99, "Input",ExpressionUUID->"2d1757e0-0447-4c5c-8038-56709dfbb191"],
Cell[592819, 12832, 17762, 391, 624, "Output",ExpressionUUID->"19340d2e-2862-403a-8a99-30deb4c9ae00"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[610630, 13229, 294, 5, 57, "Subchapter",ExpressionUUID->"3f00cb6e-c10c-4c0c-bea9-f5031597b1ab"],
Cell[610927, 13236, 5020, 125, 369, "Input",ExpressionUUID->"b21dbb24-6586-4519-96b5-e456ae444b03"],
Cell[CellGroupData[{
Cell[615972, 13365, 3709, 94, 99, "Input",ExpressionUUID->"73f9df7c-6e7b-43c6-941b-0c41fedbb760"],
Cell[619684, 13461, 18750, 407, 624, "Output",ExpressionUUID->"583cd613-636a-4d0d-b1d9-db95393530a8"]
}, Open  ]],
Cell[638449, 13871, 281, 5, 26, "Input",ExpressionUUID->"fbac0e28-45b3-411d-acc9-f3858143d5eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[638767, 13881, 238, 4, 57, "Subchapter",ExpressionUUID->"eb5c2b51-e1b5-4ad5-986a-02b61746c509"],
Cell[639008, 13887, 5288, 128, 369, "Input",ExpressionUUID->"ef4e09e2-db93-4fcf-b511-0f76b5aa037e"],
Cell[CellGroupData[{
Cell[644321, 14019, 1123, 32, 63, "Input",ExpressionUUID->"22f34eee-57ea-4f93-b517-a8ae62c4902d"],
Cell[645447, 14053, 29188, 611, 517, "Output",ExpressionUUID->"044d064c-3610-4460-8ffe-5abdc38100d7"],
Cell[674638, 14666, 29240, 612, 517, "Output",ExpressionUUID->"52a99d17-9b00-44d3-a179-b7ea9086bd98"]
}, Open  ]],
Cell[CellGroupData[{
Cell[703915, 15283, 3503, 90, 99, "Input",ExpressionUUID->"a03f00d6-aef5-43dc-9c08-f9718ce75ebd"],
Cell[707421, 15375, 38603, 733, 621, "Output",ExpressionUUID->"b78795b7-c818-4a54-be1c-ccccacea90bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[746061, 16113, 444, 9, 45, "Input",ExpressionUUID->"cf2893b1-2ae9-485b-8ce4-b5c08ca78033"],
Cell[746508, 16124, 342, 5, 30, "Output",ExpressionUUID->"5b38b04f-4386-4771-af4e-fa6cd3f88189"],
Cell[746853, 16131, 273, 4, 30, "Output",ExpressionUUID->"74e9534f-193b-4ba2-a0d2-2e68682ebc4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[747163, 16140, 3957, 98, 99, "Input",ExpressionUUID->"982badb5-8f00-4fae-bb36-3785b06171c9"],
Cell[751123, 16240, 34875, 662, 621, "Output",ExpressionUUID->"3635ba6d-06f7-4c0c-a66a-b48650b5b550"]
}, Open  ]],
Cell[786013, 16905, 181, 3, 26, "Input",ExpressionUUID->"d0abb309-36a7-47c5-a074-bd0a4a41fd28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[786231, 16913, 291, 5, 57, "Subchapter",ExpressionUUID->"7e95eaed-5241-48e0-aade-9ff4f4f61e8c"],
Cell[786525, 16920, 4993, 125, 369, "Input",ExpressionUUID->"7b339f36-12f4-4d0f-9e6d-2cf2f9cb9d80"],
Cell[CellGroupData[{
Cell[791543, 17049, 3584, 92, 99, "Input",ExpressionUUID->"d20af0b1-2838-474c-a3cd-57d768e4f12b"],
Cell[795130, 17143, 18459, 392, 624, "Output",ExpressionUUID->"11adba35-653f-4e4d-b019-ec9cd6d8b019"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[813638, 17541, 339, 5, 57, "Subchapter",ExpressionUUID->"51c72466-3db1-440e-b2bc-0b6d34321837"],
Cell[813980, 17548, 4997, 125, 369, "Input",ExpressionUUID->"ba0b09d6-5066-42ed-bea6-cd7e2836b25d"],
Cell[CellGroupData[{
Cell[819002, 17677, 3585, 92, 99, "Input",ExpressionUUID->"d4149a23-3769-4b91-9674-c6151a9480da"],
Cell[822590, 17771, 18439, 392, 624, "Output",ExpressionUUID->"38b1be69-217d-4f7f-b163-38c881fadf4b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[841090, 18170, 162, 3, 62, "Chapter",ExpressionUUID->"fa7aa0d8-1807-492a-bbd5-8454472204eb"],
Cell[CellGroupData[{
Cell[841277, 18177, 392, 6, 57, "Subchapter",ExpressionUUID->"8efe0a05-78cc-4a95-8235-a8ef40d985d5"],
Cell[CellGroupData[{
Cell[841694, 18187, 9452, 230, 495, "Input",ExpressionUUID->"fb3389a2-d98d-4d38-89df-1724ce61b338"],
Cell[851149, 18419, 1632, 25, 27, "Message",ExpressionUUID->"53db6d8a-880e-4e85-8030-34f0aa4d01c0"],
Cell[852784, 18446, 1831, 28, 27, "Message",ExpressionUUID->"90bc6463-4717-4965-9474-ea04cd4726ad"],
Cell[854618, 18476, 715, 13, 27, "Message",ExpressionUUID->"ad98c833-d710-47dd-901d-e0b312c0e8dc"],
Cell[855336, 18491, 916, 16, 27, "Message",ExpressionUUID->"dfb6ec90-b14c-45e4-8c7e-62779a055360"]
}, Open  ]],
Cell[CellGroupData[{
Cell[856289, 18512, 2778, 66, 81, "Input",ExpressionUUID->"3124c959-6b6a-44c7-8581-b7d0983e7f12"],
Cell[859070, 18580, 18113, 381, 624, "Output",ExpressionUUID->"85f9b915-b8e9-4648-af8b-530522276b5c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[877232, 18967, 393, 6, 57, "Subchapter",ExpressionUUID->"2d5da7e4-4be3-43a9-952c-53d36a827bb4"],
Cell[CellGroupData[{
Cell[877650, 18977, 9352, 229, 495, "Input",ExpressionUUID->"db75d1ee-74ee-434d-bb5f-5dddfd0bd938"],
Cell[887005, 19208, 3424, 61, 51, "Message",ExpressionUUID->"00e30381-1d4b-4d85-bfe3-9da46e0ed8f4"],
Cell[890432, 19271, 3624, 64, 51, "Message",ExpressionUUID->"6743bbee-48d6-47e4-981f-13265d3ea7d9"],
Cell[894059, 19337, 3283, 60, 51, "Message",ExpressionUUID->"f32558e6-2351-475e-9ffd-e3adeb6ed1f7"],
Cell[897345, 19399, 3484, 63, 51, "Message",ExpressionUUID->"9649adb7-9b37-4048-9e26-e5bdd2125fd6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[900866, 19467, 2778, 66, 81, "Input",ExpressionUUID->"cb1cf7ac-c620-4eef-b127-394ca9381a5e"],
Cell[903647, 19535, 18731, 389, 624, "Output",ExpressionUUID->"86a6b10c-12e0-44c9-baaf-7829600ec2f9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[922427, 19930, 343, 5, 57, "Subchapter",ExpressionUUID->"e276cf7a-3e2b-4aa6-b2df-422c55c9e488"],
Cell[CellGroupData[{
Cell[922795, 19939, 2947, 67, 153, "Input",ExpressionUUID->"4e570119-91aa-4166-b58a-30cf1eca1b95"],
Cell[925745, 20008, 1328, 19, 30, "Output",ExpressionUUID->"41db0ac5-b218-45fc-b7c1-96541c545582"],
Cell[927076, 20029, 139077, 2298, 490, "Output",ExpressionUUID->"d182b965-2b19-423e-9403-194185325906"],
Cell[1066156, 22329, 159674, 2634, 495, "Output",ExpressionUUID->"48989b6c-9031-4dbf-8565-20078ae80bff"]
}, Open  ]],
Cell[1225845, 24966, 20623, 364, 655, "Input",ExpressionUUID->"ada986a8-1117-4311-8a01-7d0d5f83b9f4"],
Cell[1246471, 25332, 13949, 331, 603, "Input",ExpressionUUID->"a2084274-a916-4ff8-8276-e89d0aabaa7f"],
Cell[CellGroupData[{
Cell[1260445, 25667, 2648, 67, 81, "Input",ExpressionUUID->"aa96ddaf-d60c-45eb-a338-df83e20ee2ae"],
Cell[1263096, 25736, 23696, 485, 624, "Output",ExpressionUUID->"969dd323-3797-429e-be29-d5a81f8a09cc"]
}, Open  ]],
Cell[1286807, 26224, 887, 25, 56, "Input",ExpressionUUID->"d1f26d99-e3ea-488a-aa7b-d381855f21b9"],
Cell[CellGroupData[{
Cell[1287719, 26253, 2517, 64, 81, "Input",ExpressionUUID->"8ae8b510-f0fc-4311-b30e-149b3bd96c6a"],
Cell[1290239, 26319, 20945, 434, 624, "Output",ExpressionUUID->"9c49081b-66f7-4352-99c9-d74830128cbf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1311221, 26758, 440, 9, 45, "Input",ExpressionUUID->"b42b8f6d-2bcb-48e7-8b36-d4a1822a7a6c"],
Cell[1311664, 26769, 336, 5, 30, "Output",ExpressionUUID->"d865dc13-7779-45f4-ab4f-bb584a1f8af0"],
Cell[1312003, 26776, 271, 4, 30, "Output",ExpressionUUID->"7eed7592-b352-42ee-8174-34fd3b17c237"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1312323, 26786, 444, 7, 57, "Subchapter",ExpressionUUID->"201a2708-41f8-45ba-bdfd-f33421f60cc0"],
Cell[CellGroupData[{
Cell[1312792, 26797, 17334, 429, 927, "Input",ExpressionUUID->"17276ecc-5a2d-423f-b136-51092b31672e"],
Cell[1330129, 27228, 1803, 34, 20, "Message",ExpressionUUID->"2d1c5735-5bcd-47b5-88ea-7a862cab7fb6"],
Cell[1331935, 27264, 2006, 37, 20, "Message",ExpressionUUID->"4e771856-698a-4d7e-82b7-f2a5b5ffb6e4"],
Cell[1333944, 27303, 159, 3, 30, "Output",ExpressionUUID->"cbf44521-998f-45ee-a8b8-db84b0fc4cd3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1334140, 27311, 2724, 65, 63, "Input",ExpressionUUID->"42d09854-6b54-4c48-9344-38798511d9ef"],
Cell[1336867, 27378, 18560, 393, 624, "Output",ExpressionUUID->"9e4a30bc-7540-46c1-a370-ca5a07c86ef4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1355488, 27778, 256, 4, 62, "Chapter",ExpressionUUID->"b8f27c2a-2665-4699-a9c1-cffa30f0c716"],
Cell[CellGroupData[{
Cell[1355769, 27786, 383, 6, 57, "Subchapter",ExpressionUUID->"2cae0b24-1eeb-425d-bd64-d3df40fd2822"],
Cell[CellGroupData[{
Cell[1356177, 27796, 9767, 234, 495, "Input",ExpressionUUID->"e251eeec-dc07-47b9-aa56-ed4bd660382e"],
Cell[1365947, 28032, 208, 4, 30, "Output",ExpressionUUID->"feab2f9b-b0c1-4fa2-af6e-dc64e65415ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1366192, 28041, 2904, 68, 63, "Input",ExpressionUUID->"eab073cd-2cef-456b-ac61-1ce2af4372ab"],
Cell[1369099, 28111, 16595, 349, 621, "Output",ExpressionUUID->"e8ad7089-b322-42d1-84b0-5fdd705c5d6c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1385743, 28466, 409, 6, 57, "Subchapter",ExpressionUUID->"727e75ef-27b0-41d5-bf9f-72b8284048d2"],
Cell[CellGroupData[{
Cell[1386177, 28476, 9952, 236, 495, "Input",ExpressionUUID->"0aae4ecd-c99a-468d-94c2-17eb7ecca55c"],
Cell[1396132, 28714, 3791, 56, 64, "Message",ExpressionUUID->"3fa46f9b-2004-4bc8-ba51-b3ba0e387607"],
Cell[1399926, 28772, 3988, 59, 64, "Message",ExpressionUUID->"fef451b8-1ac3-40e4-9be3-ba4581029d87"],
Cell[1403917, 28833, 2546, 39, 43, "Message",ExpressionUUID->"b0d1e29b-8f3d-44e7-9bcc-d2eb5ca8e52e"],
Cell[1406466, 28874, 2744, 42, 58, "Message",ExpressionUUID->"621676c1-2704-41ed-ac7d-3b44841e4cce"],
Cell[1409213, 28918, 4075, 68, 51, "Message",ExpressionUUID->"191c7d36-f6ee-4de3-8a58-923ee09d96c8"],
Cell[1413291, 28988, 501, 10, 20, "Message",ExpressionUUID->"e58168d3-05b2-4630-81d7-6fb337db7eca"],
Cell[1413795, 29000, 4274, 71, 51, "Message",ExpressionUUID->"7a41b0a8-80db-4d0a-b9b4-d3955385eb04"],
Cell[1418072, 29073, 503, 10, 20, "Message",ExpressionUUID->"fc6936b3-5ffe-4048-9abf-e21c8bc77696"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1418612, 29088, 2904, 68, 63, "Input",ExpressionUUID->"3c348dfe-93b1-4ad5-97c6-97db5d01698a"],
Cell[1421519, 29158, 18318, 384, 630, "Output",ExpressionUUID->"94c84974-2dd7-49f8-af59-464ff0f40739"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1439886, 29548, 383, 6, 57, "Subchapter",ExpressionUUID->"22039cbd-f1f7-46f8-9dac-7ed28edb9f3e"],
Cell[1440272, 29556, 20262, 351, 619, "Input",ExpressionUUID->"1caa6406-17a4-4d00-9731-2a42f10ff1ca"],
Cell[1460537, 29909, 19327, 413, 1027, "Input",ExpressionUUID->"4174c0b4-eb18-4918-b93c-6eeb5d7cbe64"],
Cell[CellGroupData[{
Cell[1479889, 30326, 2650, 63, 135, "Input",ExpressionUUID->"a38de60b-004c-425d-9468-918cb60ac4cb"],
Cell[1482542, 30391, 356, 8, 20, "Message",ExpressionUUID->"9c5d10a2-5df0-4640-9b7a-f1b8420b0b2d"],
Cell[1482901, 30401, 356, 8, 20, "Message",ExpressionUUID->"1af83d33-5d69-4a43-9068-6389bf1e1ab2"],
Cell[1483260, 30411, 356, 8, 20, "Message",ExpressionUUID->"f100e752-1a0c-443d-8fe7-0519350fdbf1"],
Cell[1483619, 30421, 358, 8, 20, "Message",ExpressionUUID->"f31a4fe8-6fe9-4eaa-9d24-86d9d70a1415"],
Cell[1483980, 30431, 621808, 10211, 600, 609444, 10010, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"ebd56770-2b69-49ed-97d2-be177c6b8c62"],
Cell[2105791, 40644, 616192, 10119, 600, 604621, 9931, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"55d33e96-9de6-4dc9-934b-6acfa96b8e8d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2722020, 50768, 10807, 247, 495, "Input",ExpressionUUID->"cd7f199b-ea1e-4194-8cac-951c927f7cf2"],
Cell[2732830, 51017, 644, 13, 20, "Message",ExpressionUUID->"cdf51cb0-b698-4658-9b85-4c358ea62031"],
Cell[2733477, 51032, 644, 13, 20, "Message",ExpressionUUID->"ce824cbf-baf6-4017-8c29-573e84990b1c"],
Cell[2734124, 51047, 646, 13, 20, "Message",ExpressionUUID->"50248a53-7f19-4b9d-9b6e-dc1e5767688b"],
Cell[2734773, 51062, 773, 15, 20, "Message",ExpressionUUID->"94bdf1d1-0195-45b1-81b0-af04d7837ace"],
Cell[2735549, 51079, 900, 17, 20, "Message",ExpressionUUID->"415e66e6-7cdd-45aa-b055-b8cd9fbc49b2"],
Cell[2736452, 51098, 900, 17, 20, "Message",ExpressionUUID->"e30d0e13-ed55-4433-92c1-e1ef2307d731"],
Cell[2737355, 51117, 902, 17, 20, "Message",ExpressionUUID->"06e02e6b-0f98-40e9-86ea-d651d852ccb5"],
Cell[2738260, 51136, 774, 15, 20, "Message",ExpressionUUID->"717cb288-6e01-4f12-ae21-f77915bc75c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2739071, 51156, 993, 29, 45, "Input",ExpressionUUID->"8b455327-b6a2-4d88-a8b6-72b7746d5e9b"],
Cell[2740067, 51187, 5478, 123, 103, "Output",ExpressionUUID->"c96caa5d-6e73-4bf2-9a81-3864ce783585"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2745582, 51315, 5773, 126, 207, InheritFromParent,ExpressionUUID->"eb0b9487-62c1-4fc8-bb44-0c1639eb0d79"],
Cell[2751358, 51443, 5590, 122, 103, "Output",ExpressionUUID->"72f66e8d-88dd-4c8d-b68d-735d79b37c05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2756985, 51570, 5568, 123, 207, InheritFromParent,ExpressionUUID->"026bfc98-6fe2-441f-8db9-03a38677af6e"],
Cell[2762556, 51695, 5526, 123, 103, "Output",ExpressionUUID->"c5136b45-906d-4d38-ad1b-0c37c6fb4196"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2768119, 51823, 377, 10, 26, "Input",ExpressionUUID->"1195ee7f-158c-4b7e-b3aa-4de41394b18b"],
Cell[2768499, 51835, 3452, 72, 233, "Output",ExpressionUUID->"d8ac193a-8b7c-4a44-b7e3-1c7bd79d27ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2771988, 51912, 2586, 63, 45, "Input",ExpressionUUID->"ebf9520b-5140-481a-a83b-b4f6ce61b9d7"],
Cell[2774577, 51977, 22006, 460, 627, "Output",ExpressionUUID->"a9023385-32c4-40e1-a5db-c77a5c227b57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2796620, 52442, 442, 9, 45, "Input",ExpressionUUID->"93df3a23-1954-4f96-bc2f-c90ec520b6e0"],
Cell[2797065, 52453, 340, 5, 30, "Output",ExpressionUUID->"9c0d0346-afae-49ce-afa8-8f2871202001"],
Cell[2797408, 52460, 271, 4, 78, "Output",ExpressionUUID->"835d5da6-afa4-4472-a58d-c4a53373903e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2797716, 52469, 3215, 73, 63, "Input",ExpressionUUID->"410cf8fb-c405-4575-8ab9-478cf061011a"],
Cell[2800934, 52544, 19353, 407, 627, "Output",ExpressionUUID->"871e49fa-553c-4096-ad93-81cb633764ca"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2820336, 52957, 410, 6, 57, "Subchapter",ExpressionUUID->"d999dbff-38bb-4c07-8965-f380a7900a27"],
Cell[2820749, 52965, 9814, 234, 495, "Input",ExpressionUUID->"765cf0e7-88ec-45eb-8476-0ce5b05bf73a"],
Cell[2830566, 53201, 131, 3, 26, "Input",ExpressionUUID->"32b7c750-d733-45b7-b146-5f419f3cb901"],
Cell[CellGroupData[{
Cell[2830722, 53208, 2956, 69, 63, "Input",ExpressionUUID->"a3b2dcd7-271f-4c88-8138-50b55965eedb"],
Cell[2833681, 53279, 18562, 386, 630, "Output",ExpressionUUID->"b85526c2-e98e-40da-a09c-3efe6baa6add"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2852292, 53671, 458, 7, 57, "Subchapter",ExpressionUUID->"88bd440e-f092-43df-9cc6-0874949e8d01"],
Cell[2852753, 53680, 9922, 236, 495, "Input",ExpressionUUID->"86a63db9-9734-4061-8261-2f20000dae18"],
Cell[CellGroupData[{
Cell[2862700, 53920, 3008, 70, 63, "Input",ExpressionUUID->"598b47ec-e017-4a0e-bfb5-a1105e7b373b"],
Cell[2865711, 53992, 18622, 388, 630, "Output",ExpressionUUID->"9913885b-c0c7-4f2a-bfc9-8af4c6f54e3c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2884406, 54388, 151, 3, 87, "Title",ExpressionUUID->"53152a40-bd73-481d-85ff-d3601be931d8"],
Cell[CellGroupData[{
Cell[2884582, 54395, 772, 18, 99, "Input",ExpressionUUID->"765b79fc-f831-40a9-a559-a320f0745fb4"],
Cell[2885357, 54415, 243, 4, 30, "Output",ExpressionUUID->"33e7cf4f-2976-49b2-a6ad-7f354a1fc229"],
Cell[2885603, 54421, 176, 3, 30, "Output",ExpressionUUID->"7c40fd84-508b-4785-b2c9-6cc859bf7572"],
Cell[2885782, 54426, 174, 3, 30, "Output",ExpressionUUID->"0f488b04-db15-4379-9b99-5b2d33a50dcf"],
Cell[2885959, 54431, 174, 3, 30, "Output",ExpressionUUID->"1af5a33b-8c1f-4f6c-825e-5f831a3bd3a8"],
Cell[2886136, 54436, 176, 3, 30, "Output",ExpressionUUID->"4ee724a8-0823-42db-8e73-01ce94b34e02"]
}, Open  ]],
Cell[2886327, 54442, 157, 3, 26, "Input",ExpressionUUID->"2ddf7c7a-ff8c-4937-8b1c-30e0080051fe"],
Cell[CellGroupData[{
Cell[2886509, 54449, 543, 11, 63, "Input",ExpressionUUID->"d4d2230f-83fe-47c7-90f1-42d6c629dbcb"],
Cell[2887055, 54462, 255, 4, 30, "Output",ExpressionUUID->"b3623c13-a2ed-4187-9d6c-ff6817b6d7c7"],
Cell[2887313, 54468, 174, 3, 30, "Output",ExpressionUUID->"860736fc-0eda-4103-9dcc-f0ccc4959cf5"],
Cell[2887490, 54473, 176, 3, 30, "Output",ExpressionUUID->"994f3644-b135-44b5-9bf5-2baf2787bfae"]
}, Open  ]],
Cell[2887681, 54479, 128, 3, 26, "Input",ExpressionUUID->"286a84b1-f350-4794-bd6b-6ab8179013b4"],
Cell[2887812, 54484, 128, 3, 26, "Input",ExpressionUUID->"8b3751fc-3878-43a1-85d0-63ebb59975bf"],
Cell[2887943, 54489, 84, 0, 26, "Input",ExpressionUUID->"bd945ad6-1089-4c89-97fb-6dda680b78dc"]
}, Open  ]]
}
]
*)

