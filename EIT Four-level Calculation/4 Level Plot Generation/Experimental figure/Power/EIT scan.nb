(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1490983,      27654]
NotebookOptionsPosition[   1482457,      27395]
NotebookOutlinePosition[   1482830,      27411]
CellTagsIndexPosition[   1482787,      27408]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Temperature", "Chapter",
 CellChangeTimes->{{3.693575698823017*^9, 3.6935757057729406`*^9}, {
  3.704024738452235*^9, 3.7040247393162847`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rbpress", "[", "T_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Calculates", " ", "the", " ", "vapor", " ", "pressure", " ", "of", " ", 
     "Na", " ", "depending", " ", "on", " ", "the", " ", "temprerature", " ", 
     "of", " ", "the", " ", 
     RowBox[{"cell", "."}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Input", " ", 
     RowBox[{"variable", ":", " ", "T", ":", 
      RowBox[{"temperature", "[", "C", "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Output", " ", 
      RowBox[{"variable", ":", " ", "p"}]}], "=", 
     RowBox[{"Na", " ", 
      RowBox[{"pressure", "[", "torr", "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
    "Formulas", " ", "obtained", " ", "from", " ", 
     "\"\<Sodium D Line Data\>\"", " ", "by", " ", "Daniel", " ", 
     RowBox[{"A", ".", "Steck"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"http", ":"}], "//", 
     RowBox[{
      RowBox[{"steck", ".", "us"}], "/", "alkalidata"}]}]}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "T1", ",", "p", ",", "k", ",", "c", ",", "MRb", ",", "w0", ",", "Nat", 
      ",", "dopp"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"T1", "=", 
      RowBox[{"T", "+", "273.15"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"T1", "<", 
          RowBox[{"39.31", "+", "273.15"}]}], ",", 
         RowBox[{"p", "=", 
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "94.04826"}], "-", 
             RowBox[{"1961.258", "/", "T1"}], "-", 
             RowBox[{"0.03771687", "*", "T1"}], "+", 
             RowBox[{"42.57526", "*", 
              RowBox[{"Log", "[", 
               RowBox[{"10", ",", "T1"}], "]"}]}]}], ")"}]}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"p", "=", 
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{"15.88253", "-", 
             RowBox[{"4529.635", "/", "T1"}], "+", 
             RowBox[{"0.00058663", "*", "T1"}], "-", 
             RowBox[{"2.99138", "*", 
              RowBox[{"Log", "[", 
               RowBox[{"10", ",", "T1"}], "]"}]}]}], ")"}]}]}]}], 
        "\[IndentingNewLine]", "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"p", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"T1", "<", "312.5"}], ",", 
        SuperscriptBox["10", 
         RowBox[{"9.863`", "\[VeryThinSpace]", "-", 
          FractionBox["4215", "T1"]}]], ",", 
        SuperscriptBox["10", 
         RowBox[{"9.318`", "\[VeryThinSpace]", "-", 
          FractionBox["4040", "T1"]}]]}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Unit", " ", "is", " ", "in", " ", "Pa"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"k", "=", 
      RowBox[{"1.3806503", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "23"}]}]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Boltzman", "'"}], "s", " ", 
       RowBox[{"contstant", "[", 
        RowBox[{"J", "/", "K"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.99792458", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Speed", " ", "of", " ", 
       RowBox[{"light", "[", 
        RowBox[{"m", "/", "s"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"MRb", "=", 
      RowBox[{"1.409993119", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "25"}]}]}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Rb", " ", "85", " ", "atomic", " ", 
       RowBox[{"mass", "[", "kg", "]"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"w0", "=", 
        RowBox[{"2", "Pi", " ", "377.107385", "*", 
         RowBox[{"10", "^", "12"}]}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "Transition", " ", "frequency", " ", "for", " ", "85", "Rb", " ", 
         "D1", " ", "line"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dopp", "=", 
        RowBox[{
         RowBox[{"w0", "/", "c"}], "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"2", " ", "k", "*", 
           RowBox[{"T1", "/", "MRb"}]}], "]"}]}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"w0", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dopp", "=", 
      RowBox[{"2", " ", 
       RowBox[{"w0", "/", "c"}], "*", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", " ", 
          RowBox[{"Log", "[", "2", " ", "]"}], "k", "*", 
          RowBox[{"T1", "/", "MRb"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "Pi"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{"p", "/", 
       RowBox[{"(", 
        RowBox[{"k", "*", "T1"}], ")"}]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"units", " ", "in", " ", 
       RowBox[{"m", "^", 
        RowBox[{"-", "3"}]}]}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Nat", ",", "dopp", ",", "p", ",", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"3", "k", "*", 
         RowBox[{"T1", "/", "MRb"}]}], "]"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.681039404758666*^9, 3.6810394343823605`*^9}, {
   3.6810394643990774`*^9, 3.6810394650551147`*^9}, {3.6810395072395277`*^9, 
   3.6810395110397453`*^9}, 3.681039649351656*^9, 3.681039895849755*^9, 
   3.6810401403037367`*^9, {3.6810430987069483`*^9, 3.6810431002340355`*^9}, {
   3.6810437119620237`*^9, 3.6810437272178965`*^9}, {3.6810437603307905`*^9, 
   3.6810437628349338`*^9}, {3.681059128246785*^9, 3.681059128550802*^9}, {
   3.6810591724623137`*^9, 3.6810592020060043`*^9}, {3.6810623820738935`*^9, 
   3.681062440354227*^9}, {3.681062478505409*^9, 3.68106249775351*^9}, {
   3.681062599082306*^9, 3.6810625998653507`*^9}, {3.6810631141627665`*^9, 
   3.681063117297946*^9}, {3.6810675349026184`*^9, 3.681067541332986*^9}, {
   3.681067581494283*^9, 3.68106758371041*^9}, {3.681067938878724*^9, 
   3.681067975053794*^9}, {3.6810680228865294`*^9, 3.6810680470779133`*^9}, 
   3.6810680775586567`*^9, {3.681068107958395*^9, 3.681068172774102*^9}, {
   3.6810682391428986`*^9, 3.6810683083418565`*^9}, {3.6811580752732315`*^9, 
   3.681158078453413*^9}, 3.681216527301496*^9, 3.681216878845603*^9, {
   3.6812177573118486`*^9, 3.6812177602370157`*^9}, {3.681217918918092*^9, 
   3.681217919079101*^9}, 3.6812179741502514`*^9, {3.681230348999052*^9, 
   3.681230377335673*^9}, 3.681230670088417*^9, {3.681232633041692*^9, 
   3.681232658809166*^9}, {3.6812328064106083`*^9, 3.6812328141940527`*^9}, {
   3.6812328576585393`*^9, 3.681232871362323*^9}, 3.6812329877779818`*^9, {
   3.681233105473713*^9, 3.681233137249531*^9}, {3.6812334111771984`*^9, 
   3.6812335054095883`*^9}, {3.681233551722237*^9, 3.681233554674406*^9}, {
   3.681234028226492*^9, 3.681234028426503*^9}, {3.6812341034827957`*^9, 
   3.681234103753812*^9}, {3.6812344490835633`*^9, 3.6812344496505957`*^9}, {
   3.6812346872501855`*^9, 3.6812347018670216`*^9}, {3.681235886139758*^9, 
   3.6812358967793665`*^9}, {3.6812370169804387`*^9, 3.681237026604989*^9}, {
   3.681304522130512*^9, 3.6813045549453893`*^9}, 3.681494237898312*^9, {
   3.681494330591614*^9, 3.6814943766232467`*^9}, {3.681494426559103*^9, 
   3.681494504598566*^9}, {3.681494537583453*^9, 3.681494565000021*^9}, {
   3.6814949764485545`*^9, 3.6814949810718193`*^9}, {3.6814951668564453`*^9, 
   3.681495218528401*^9}, {3.6814952729855156`*^9, 3.6814952907125297`*^9}, {
   3.6814955220017586`*^9, 3.6814955518244643`*^9}, {3.6814956126569433`*^9, 
   3.681495649296039*^9}, {3.6814957159438515`*^9, 3.681495820959858*^9}, {
   3.6814958574879475`*^9, 3.681495861175158*^9}, {3.681496087877125*^9, 
   3.6814961045120764`*^9}, 3.6815570281497087`*^9, 3.681557658187745*^9, {
   3.6815577131248875`*^9, 3.681557764113804*^9}, 3.681730757923006*^9, 
   3.68216531889776*^9, {3.71606227675443*^9, 3.716062280932643*^9}, {
   3.7160623753296556`*^9, 3.716062376315129*^9}, {3.7160624074282074`*^9, 
   3.7160624085074787`*^9}, {3.716062580185358*^9, 3.716062668709097*^9}, {
   3.7160627108460875`*^9, 3.716062719726573*^9}, {3.7160628189885054`*^9, 
   3.716062916898604*^9}, {3.716062995634471*^9, 3.716062995806348*^9}, {
   3.7160630724762983`*^9, 3.7160630795522137`*^9}, {3.7160631354364004`*^9, 
   3.7160632564938755`*^9}, {3.7160634921941037`*^9, 
   3.7160634971035423`*^9}, {3.716063566779537*^9, 3.716063567510667*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["3Level", "Chapter",
 CellChangeTimes->{{3.693574681554854*^9, 3.693574685768452*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Chi]3a", "=", 
    FractionBox[
     RowBox[{"4", " ", 
      SuperscriptBox["d32", "2"], " ", "Nat", " ", 
      RowBox[{"(", 
       RowBox[{"\[Gamma]21", "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}]}], 
     RowBox[{"e0", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]21", "+", 
           RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Gamma]32"}], "+", 
           "\[Delta]", "+", "\[CapitalDelta]"}], ")"}]}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         SuperscriptBox["\[CapitalOmega]c", "2"]}]}], ")"}], " ", 
      "\[HBar]"}]]}], ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]3e", "=", 
   FractionBox[
    RowBox[{"4", " ", 
     SuperscriptBox["d32", "2"], " ", "Nat", " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]21", "-", 
       RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}]}], 
    RowBox[{"e0", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]21", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Gamma]32"}], "+", "\[Delta]", "+", 
          "\[CapitalDelta]"}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[CapitalOmega]c", "2"]}]}], ")"}], " ", 
     "\[HBar]"}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6935747021016245`*^9, 3.6935747144273205`*^9}, {
  3.693574862978109*^9, 3.693574865057724*^9}, {3.693579704943139*^9, 
  3.6935797100443077`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"s3a", "=", 
   RowBox[{
    RowBox[{"\[Chi]3a", "/.", 
     RowBox[{"\[CapitalDelta]", "\[Rule]", 
      RowBox[{"\[CapitalDelta]", "+", 
       RowBox[{"wc", " ", 
        FractionBox["v", "c"]}]}]}]}], "/.", 
    RowBox[{"\[Delta]", "\[Rule]", "\[Delta]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s3a", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"s3a", "/.", 
      RowBox[{"Nat", "->", " ", 
       RowBox[{
        FractionBox["Nat", 
         RowBox[{"u", " ", 
          RowBox[{"Sqrt", "[", "Pi", "]"}]}]], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["v", "2"]}], "/", 
          RowBox[{"u", "^", "2"}]}], "]"}]}]}]}], "//", "ExpandAll"}], "//", 
    "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s3e", "=", 
   RowBox[{
    RowBox[{"\[Chi]3e", "/.", 
     RowBox[{"\[CapitalDelta]", "\[Rule]", 
      RowBox[{"\[CapitalDelta]", "+", 
       RowBox[{"wc", " ", 
        FractionBox["v", "c"]}]}]}]}], "/.", 
    RowBox[{"\[Delta]", "\[Rule]", "\[Delta]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s3e", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"s3e", "/.", 
      RowBox[{"Nat", "->", " ", 
       RowBox[{
        FractionBox["Nat", 
         RowBox[{"u", " ", 
          RowBox[{"Sqrt", "[", "Pi", "]"}]}]], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["v", "2"]}], "/", 
          RowBox[{"u", "^", "2"}]}], "]"}]}]}]}], "//", "ExpandAll"}], "//", 
    "FullSimplify"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6935998039888706`*^9, 3.6935998219644804`*^9}, 
   3.7039472803708863`*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"u", ">", " ", "0"}], "&&", 
      RowBox[{"u", "\[Element]", "Reals"}], "&&", 
      RowBox[{"\[Alpha]1", "\[NotElement]", "Reals"}], "&&", 
      RowBox[{"\[Alpha]1", "\[NotElement]", "Reals"}]}], ",", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       FractionBox[
        RowBox[{" ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox["v", "2"], 
            SuperscriptBox["u", "2"]]}]], " "}], 
        RowBox[{" ", 
         RowBox[{"v", "+", "\[Alpha]1", " "}]}]], ",", 
       RowBox[{"{", 
        RowBox[{"v", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}]}],
     "]"}], "//", "FullSimplify"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6934111764363914`*^9, 3.6934112041629286`*^9}, {
   3.693412267266409*^9, 3.6934122685225754`*^9}, 3.6934134369552298`*^9, 
   3.693574926013784*^9, {3.6935750492736893`*^9, 3.6935750754070396`*^9}, {
   3.6935997742889204`*^9, 3.6935997750545974`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Dopp3", "[", "\[Chi]_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "num", ",", "den", ",", "A", ",", "ans", ",", "\[Alpha]1", ",", 
      "\[Alpha]2", ",", "Z\[Alpha]", ",", "Int"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"num", "=", 
      RowBox[{"Numerator", "[", "\[Chi]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"den", "=", 
      RowBox[{
       RowBox[{"Denominator", "[", "\[Chi]", "]"}], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["v", "2"], 
          SuperscriptBox["u", "2"]]}]]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"A", "=", 
      RowBox[{
       RowBox[{"num", "/", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"den", ",", "v"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "//", "FullSimplify"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[Alpha]1", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"den", ",", "v"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"den", ",", "v"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "//", "FullSimplify"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Int", "=", 
      RowBox[{"A", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["\[Alpha]1", "2"], 
          SuperscriptBox["u", "2"]]}]], " ", 
       RowBox[{"(", 
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
         RowBox[{"Erfc", "[", 
          RowBox[{"I", 
           FractionBox["\[Alpha]1", "u"]}], "]"}]}], ")"}]}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Int", "=", 
     RowBox[{
      RowBox[{"A", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Pi]", " ", 
          RowBox[{"2", " ", "/", 
           RowBox[{"Sqrt", "[", "\[Pi]", "]"}]}], " ", 
          RowBox[{"DawsonF", "[", 
           FractionBox["\[Alpha]1", "u"], "]"}]}], "-", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"-", 
            FractionBox["1", "\[Alpha]1"]}], "]"}], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox[
             SuperscriptBox["\[Alpha]1", "2"], 
             SuperscriptBox["u", "2"]]}]]}], "-", 
         RowBox[{
          RowBox[{"Log", "[", "\[Alpha]1", "]"}], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox[
             SuperscriptBox["\[Alpha]1", "2"], 
             SuperscriptBox["u", "2"]]}]]}]}], ")"}]}], "//", "Simplify"}]}], 
    "*)"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.693410635062954*^9, 3.6934107612525296`*^9}, {
   3.693410850685958*^9, 3.693410868017716*^9}, {3.693410917471369*^9, 
   3.693411005447361*^9}, {3.693411067842992*^9, 3.6934110716111383`*^9}, {
   3.6934111321979103`*^9, 3.693411167685486*^9}, {3.693411236922698*^9, 
   3.6934112993285546`*^9}, {3.693411342363721*^9, 3.693411346311943*^9}, {
   3.693411387949933*^9, 3.6934114515270176`*^9}, {3.6934128121784973`*^9, 
   3.6934128152636333`*^9}, {3.693412857761577*^9, 3.693412858182993*^9}, {
   3.693413023662094*^9, 3.6934130574590507`*^9}, 3.6934134468392897`*^9, 
   3.693413514356469*^9, {3.693413617354062*^9, 3.6934136194374466`*^9}, {
   3.693414559373456*^9, 3.693414623219356*^9}, {3.693414680459721*^9, 
   3.693414686088599*^9}, {3.6934147526765566`*^9, 3.6934147543598003`*^9}, {
   3.693414881518735*^9, 3.6934149193564444`*^9}, 3.693421556448985*^9, 
   3.6935720796973133`*^9, {3.6935722588072743`*^9, 3.6935722591913137`*^9}, {
   3.693574589056698*^9, 3.6935745906250353`*^9}, {3.6935749724380255`*^9, 
   3.6935749775900364`*^9}, {3.69357503940621*^9, 3.6935750483886547`*^9}, {
   3.6935750831129885`*^9, 3.6935751553817177`*^9}, {3.693575267354227*^9, 
   3.6935752888028684`*^9}, {3.6935753286282606`*^9, 3.693575329122348*^9}, 
   3.69357541760789*^9, 3.693575473693761*^9, {3.6935933749579816`*^9, 
   3.693593400205755*^9}, {3.703882114416607*^9, 3.7038821549639263`*^9}, {
   3.703882204899782*^9, 3.703882207819949*^9}, {3.703882291300724*^9, 
   3.70388229717206*^9}, {3.7039365827850194`*^9, 3.703936588752361*^9}, {
   3.703947286327227*^9, 3.7039472904414625`*^9}, {3.7039477160258045`*^9, 
   3.7039477350908947`*^9}, {3.7039483596986203`*^9, 3.703948359841628*^9}, 
   3.7039492332105827`*^9, 3.7658281648837614`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["4Level", "Chapter",
 CellChangeTimes->{{3.6935746750394545`*^9, 3.6935746767395306`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Chi]42", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["d42", "2"], " ", "Nat", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", 
            SqrtBox["5"]}], "-", 
           RowBox[{"5", " ", 
            SqrtBox["14"]}]}], ")"}], " ", 
         SuperscriptBox["omegac1", "2"]}], "+", 
        RowBox[{"16", " ", 
         SqrtBox["5"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]21", "+", 
           RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]32", "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"\[Delta]", "+", "\[CapitalDelta]"}], ")"}]}]}], 
          ")"}]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", 
      SqrtBox["5"], " ", "e0", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["omegac1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "w43"}], "-", 
           RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Gamma]32"}], "-", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Gamma]42"}], "+", 
           RowBox[{"9", " ", "\[Delta]"}], "+", 
           RowBox[{"9", " ", "\[CapitalDelta]"}]}], ")"}]}], "+", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]21", "+", 
           RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"w43", "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", "+",
            "\[CapitalDelta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]32", "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"\[Delta]", "+", "\[CapitalDelta]"}], ")"}]}]}], 
          ")"}]}]}], ")"}], " ", "\[HBar]"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]32", "=", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["d32", "2"], " ", "Nat", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "35"}], "+", 
             RowBox[{"2", " ", 
              SqrtBox["70"]}]}], ")"}], " ", 
           SuperscriptBox["omegac1", "2"]}], "+", 
          RowBox[{"40", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Gamma]21"}], "+", 
             "\[Delta]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"w43", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", 
             "+", "\[CapitalDelta]"}], ")"}]}]}], ")"}]}], " ", ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"5", " ", "e0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["omegac1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "w43"}], "-", 
             RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Gamma]32"}], "-", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Gamma]42"}], "+", 
             RowBox[{"9", " ", "\[Delta]"}], "+", 
             RowBox[{"9", " ", "\[CapitalDelta]"}]}], ")"}]}], "+", 
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]21", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"w43", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", 
             "+", "\[CapitalDelta]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]32", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"\[Delta]", "+", "\[CapitalDelta]"}], ")"}]}]}], 
            ")"}]}]}], ")"}], " ", "\[HBar]"}], ")"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]24", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["d42", "2"], " ", "Nat", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", 
            SqrtBox["5"]}], "-", 
           RowBox[{"5", " ", 
            SqrtBox["14"]}]}], ")"}], " ", 
         SuperscriptBox["omegac1", "2"]}], "+", 
        RowBox[{"16", " ", 
         SqrtBox["5"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]21", "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Gamma]32"}], "+", "\[Delta]", "+",
            "\[CapitalDelta]"}], ")"}]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", 
      SqrtBox["5"], " ", "e0", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]21", "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "\[Gamma]32"}], "+", "\[Delta]", "+",
            "\[CapitalDelta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"w43", "+", 
           RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", "+",
            "\[CapitalDelta]"}], ")"}]}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         SuperscriptBox["omegac1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "w43"}], "+", 
           RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Gamma]32"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Gamma]42"}], "+", 
           RowBox[{"9", " ", "\[Delta]"}], "+", 
           RowBox[{"9", " ", "\[CapitalDelta]"}]}], ")"}]}]}], ")"}], " ", 
      "\[HBar]"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]23", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["d32", "2"], " ", "Nat", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"35", " ", 
            SqrtBox["2"]}], "-", 
           RowBox[{"4", " ", 
            SqrtBox["35"]}]}], ")"}], " ", 
         SuperscriptBox["omegac1", "2"]}], "-", 
        RowBox[{"40", " ", "\[ImaginaryI]", " ", 
         SqrtBox["2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]21", "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"w43", "+", 
           RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", "+",
            "\[CapitalDelta]"}], ")"}]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"5", " ", 
      SqrtBox["2"], " ", "e0", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["omegac1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "w43"}], "+", 
           RowBox[{"7", " ", "\[ImaginaryI]", " ", "\[Gamma]32"}], "+", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Gamma]42"}], "+", 
           RowBox[{"9", " ", "\[Delta]"}], "+", 
           RowBox[{"9", " ", "\[CapitalDelta]"}]}], ")"}]}], "+", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]21", "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"w43", "+", 
           RowBox[{"\[ImaginaryI]", " ", "\[Gamma]42"}], "+", "\[Delta]", "+",
            "\[CapitalDelta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]32", "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"\[Delta]", "+", "\[CapitalDelta]"}], ")"}]}]}], 
          ")"}]}]}], ")"}], " ", "\[HBar]"}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6934122490560164`*^9, 3.693412250477366*^9}, {
   3.693574620595289*^9, 3.6935746272600627`*^9}, {3.693593318770997*^9, 
   3.6935933200991735`*^9}, {3.6935991434117503`*^9, 3.693599172615*^9}, {
   3.6935992032618856`*^9, 3.693599289761167*^9}, {3.693601524020036*^9, 
   3.693601554300127*^9}, {3.693601943360248*^9, 3.693601954716146*^9}, 
   3.693660896307003*^9, 3.69366187879226*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"s42", "=", 
   RowBox[{
    RowBox[{"\[Chi]42", "/.", 
     RowBox[{"\[CapitalDelta]", "\[Rule]", 
      RowBox[{"\[CapitalDelta]", "+", 
       RowBox[{"wc", " ", 
        FractionBox["v", "c"]}]}]}]}], "/.", 
    RowBox[{"\[Delta]", "\[Rule]", "\[Delta]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s42", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"s42", "/.", 
      RowBox[{"Nat", "->", " ", 
       RowBox[{
        FractionBox["Nat", 
         RowBox[{"u", " ", 
          RowBox[{"Sqrt", "[", "Pi", "]"}]}]], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["v", "2"]}], "/", 
          RowBox[{"u", "^", "2"}]}], "]"}]}]}]}], "//", "ExpandAll"}], "//", 
    "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s32", "=", 
   RowBox[{
    RowBox[{"\[Chi]32", "/.", 
     RowBox[{"\[CapitalDelta]", "\[Rule]", 
      RowBox[{"\[CapitalDelta]", "+", 
       RowBox[{"wc", " ", 
        FractionBox["v", "c"]}]}]}]}], "/.", 
    RowBox[{"\[Delta]", "\[Rule]", "\[Delta]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s32", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"s32", "/.", 
      RowBox[{"Nat", "->", " ", 
       RowBox[{
        FractionBox["Nat", 
         RowBox[{"u", " ", 
          RowBox[{"Sqrt", "[", "Pi", "]"}]}]], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["v", "2"]}], "/", 
          RowBox[{"u", "^", "2"}]}], "]"}]}]}]}], "//", "ExpandAll"}], "//", 
    "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s23", "=", 
   RowBox[{
    RowBox[{"\[Chi]23", "/.", 
     RowBox[{"\[CapitalDelta]", "\[Rule]", 
      RowBox[{"\[CapitalDelta]", "+", 
       RowBox[{"wc", " ", 
        FractionBox["v", "c"]}]}]}]}], "/.", 
    RowBox[{"\[Delta]", "\[Rule]", "\[Delta]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s23", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"s23", "/.", 
      RowBox[{"Nat", "->", " ", 
       RowBox[{
        FractionBox["Nat", 
         RowBox[{"u", " ", 
          RowBox[{"Sqrt", "[", "Pi", "]"}]}]], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["v", "2"]}], "/", 
          RowBox[{"u", "^", "2"}]}], "]"}]}]}]}], "//", "ExpandAll"}], "//", 
    "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s24", "=", 
   RowBox[{
    RowBox[{"\[Chi]24", "/.", 
     RowBox[{"\[CapitalDelta]", "\[Rule]", 
      RowBox[{"\[CapitalDelta]", "+", 
       RowBox[{"wc", " ", 
        FractionBox["v", "c"]}]}]}]}], "/.", 
    RowBox[{"\[Delta]", "\[Rule]", "\[Delta]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s24", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"s24", "/.", 
      RowBox[{"Nat", "->", " ", 
       RowBox[{
        FractionBox["Nat", 
         RowBox[{"u", " ", 
          RowBox[{"Sqrt", "[", "Pi", "]"}]}]], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["v", "2"]}], "/", 
          RowBox[{"u", "^", "2"}]}], "]"}]}]}]}], "//", "ExpandAll"}], "//", 
    "FullSimplify"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.693411881573679*^9, 3.693411889209609*^9}, {
   3.693574814574998*^9, 3.693574818653281*^9}, {3.6935778825003195`*^9, 
   3.6935779021785192`*^9}, 3.693578102705635*^9}],

Cell[BoxData[""], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"u", ">", " ", "0"}], "&&", 
     RowBox[{"u", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Alpha]1", "\[NotElement]", "Reals"}], "&&", 
     RowBox[{"\[Alpha]2", "\[NotElement]", "Reals"}]}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"v", " ", "+", "Z\[Alpha]"}], ")"}], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["v", "2"], 
           SuperscriptBox["u", "2"]]}]]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"v", "-", "\[Alpha]1"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"v", "-", "\[Alpha]2"}], ")"}]}]], ",", 
      RowBox[{"{", 
       RowBox[{"v", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
   "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6934111764363914`*^9, 3.6934112041629286`*^9}, {
   3.693412267266409*^9, 3.6934122685225754`*^9}, 3.6934134369552298`*^9, 
   3.693596680990158*^9, {3.6935997687080836`*^9, 3.6935997694893384`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Dopp", "[", "\[Chi]_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "num", ",", "den", ",", "A", ",", "ans", ",", "\[Alpha]1", ",", 
      "\[Alpha]2", ",", "Z\[Alpha]", ",", "Int"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"num", "=", 
      RowBox[{"Numerator", "[", "\[Chi]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"den", "=", 
      RowBox[{
       RowBox[{"Denominator", "[", "\[Chi]", "]"}], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["v", "2"], 
          SuperscriptBox["u", "2"]]}]]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"A", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"CoefficientList", "[", 
         RowBox[{"num", ",", "v"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "/", 
       RowBox[{
        RowBox[{"CoefficientList", "[", 
         RowBox[{"den", ",", "v"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ans", "=", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"den", "/", 
          RowBox[{
           RowBox[{"CoefficientList", "[", 
            RowBox[{"den", ",", "v"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "\[Equal]", "0"}], ",", "v"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Alpha]1", "=", 
      RowBox[{
       RowBox[{"ans", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "//", 
       "FullSimplify"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Alpha]2", "=", 
      RowBox[{
       RowBox[{"ans", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1", ",", "2"}], "]"}], "]"}], "//", 
       "FullSimplify"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Z\[Alpha]", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"num", ",", "v"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"num", ",", "v"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "//", "FullSimplify"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Int", "=", 
      RowBox[{"A", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox[
              SuperscriptBox["\[Alpha]1", "2"], 
              SuperscriptBox["u", "2"]]}]]}], " ", 
          RowBox[{"(", 
           RowBox[{"Z\[Alpha]", "+", "\[Alpha]1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "I"}], " ", "\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{"Erfc", "[", 
              RowBox[{
               RowBox[{"-", "I"}], " ", 
               FractionBox["\[Alpha]1", "u"]}], "]"}], ")"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox[
             SuperscriptBox["\[Alpha]2", "2"], 
             SuperscriptBox["u", "2"]]}]], " ", 
          RowBox[{"(", 
           RowBox[{"Z\[Alpha]", "+", "\[Alpha]2"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "I"}], " ", "\[Pi]", " ", 
            RowBox[{"(", 
             RowBox[{"Erfc", "[", 
              RowBox[{
               RowBox[{"-", "I"}], " ", 
               FractionBox["\[Alpha]2", "u"]}], "]"}], ")"}]}], ")"}]}]}], 
        RowBox[{"\[Alpha]1", "-", "\[Alpha]2"}]]}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Int", "=", 
     RowBox[{"A", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", " ", 
          RowBox[{"(", 
           RowBox[{"Z\[Alpha]", "+", "\[Alpha]1"}], ")"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Pi]", " ", 
            RowBox[{"2", " ", "/", 
             RowBox[{"Sqrt", "[", "\[Pi]", "]"}]}], " ", 
            RowBox[{"DawsonF", "[", 
             FractionBox["\[Alpha]1", "u"], "]"}]}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              FractionBox[
               SuperscriptBox["\[Alpha]1", "2"], 
               SuperscriptBox["u", "2"]]}]]}]}], ")"}]}], "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Z\[Alpha]", "+", "\[Alpha]2"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Pi]", " ", 
            RowBox[{"2", " ", "/", 
             RowBox[{"Sqrt", "[", "\[Pi]", "]"}]}], " ", 
            RowBox[{"DawsonF", "[", 
             FractionBox["\[Alpha]2", "u"], "]"}]}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              FractionBox[
               SuperscriptBox["\[Alpha]2", "2"], 
               SuperscriptBox["u", "2"]]}]]}]}], ")"}]}]}], 
       RowBox[{"\[Alpha]1", "-", "\[Alpha]2"}]]}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.693410635062954*^9, 3.6934107612525296`*^9}, {
   3.693410850685958*^9, 3.693410868017716*^9}, {3.693410917471369*^9, 
   3.693411005447361*^9}, {3.693411067842992*^9, 3.6934110716111383`*^9}, {
   3.6934111321979103`*^9, 3.693411167685486*^9}, {3.693411236922698*^9, 
   3.6934112993285546`*^9}, {3.693411342363721*^9, 3.693411346311943*^9}, {
   3.693411387949933*^9, 3.6934114515270176`*^9}, {3.6934128121784973`*^9, 
   3.6934128152636333`*^9}, {3.693412857761577*^9, 3.693412858182993*^9}, {
   3.693413023662094*^9, 3.6934130574590507`*^9}, 3.6934134468392897`*^9, 
   3.693413514356469*^9, {3.693413617354062*^9, 3.6934136194374466`*^9}, {
   3.693414559373456*^9, 3.693414623219356*^9}, {3.693414680459721*^9, 
   3.693414686088599*^9}, {3.6934147526765566`*^9, 3.6934147543598003`*^9}, {
   3.693414881518735*^9, 3.6934149193564444`*^9}, 3.693421556448985*^9, 
   3.6935720796973133`*^9, {3.6935722588072743`*^9, 3.6935722591913137`*^9}, {
   3.693574589056698*^9, 3.6935745906250353`*^9}, {3.6935753418284845`*^9, 
   3.69357535124059*^9}, {3.6937474597313843`*^9, 3.6937474699594526`*^9}, {
   3.6942658974780607`*^9, 3.6942659278005514`*^9}, {3.6942668335245533`*^9, 
   3.6942668819585543`*^9}, {3.70387452138231*^9, 3.703874551118011*^9}, 
   3.703874596046581*^9, {3.703874708943038*^9, 3.7038747242859154`*^9}, {
   3.703874934830958*^9, 3.703874941110317*^9}, {3.7038797037787266`*^9, 
   3.703879706449879*^9}, {3.703881956020547*^9, 3.703881958915713*^9}, {
   3.703881999468032*^9, 3.703882003148243*^9}, {3.703882097124618*^9, 
   3.703882109348317*^9}, {3.703882161276287*^9, 3.70388216761265*^9}, {
   3.7038822131082516`*^9, 3.703882215508389*^9}, {3.703882262692088*^9, 
   3.703882287444504*^9}, {3.703936560169726*^9, 3.7039365755816073`*^9}, {
   3.7039472987349367`*^9, 3.7039473025121527`*^9}, {3.7039477206430683`*^9, 
   3.7039477309216566`*^9}, {3.703948884355629*^9, 3.7039488855706987`*^9}, {
   3.7039492365147715`*^9, 3.7039492368587914`*^9}, {3.7132688936731896`*^9, 
   3.7132689357101*^9}, {3.7132691112555146`*^9, 3.7132691119197235`*^9}, {
   3.71337342805688*^9, 3.713373456234132*^9}, 3.7658281929916463`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Define function", "Chapter",
 CellChangeTimes->{{3.6935934505677414`*^9, 3.6935934521458817`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sd32", "[", 
     RowBox[{
     "wc_", ",", "\[Gamma]21_", ",", "\[Gamma]42_", ",", "\[Gamma]32_", ",", 
      "\[Delta]_", ",", "\[CapitalDelta]_", ",", "omegac1_", ",", "c_", ",", 
      "\[HBar]_", ",", "e0_", ",", "u_", ",", "Nat_", ",", "w43_", ",", 
      "d32_"}], "]"}], ":=", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"Dopp", "[", "s32", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"sd23", "[", 
      RowBox[{
      "wc_", ",", "\[Gamma]21_", ",", "\[Gamma]42_", ",", "\[Gamma]32_", ",", 
       "\[Delta]_", ",", "\[CapitalDelta]_", ",", "omegac1_", ",", "c_", ",", 
       "\[HBar]_", ",", "e0_", ",", "u_", ",", "Nat_", ",", "w43_", ",", 
       "d32_"}], "]"}], ":=", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Dopp", "[", "s23", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sd24", "[", 
      RowBox[{
      "wc_", ",", "\[Gamma]21_", ",", "\[Gamma]42_", ",", "\[Gamma]32_", ",", 
       "\[Delta]_", ",", "\[CapitalDelta]_", ",", "omegac1_", ",", "c_", ",", 
       "\[HBar]_", ",", "e0_", ",", "u_", ",", "Nat_", ",", "w43_", ",", 
       "d42_"}], "]"}], ":=", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Dopp", "[", "s24", "]"}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sd42", "[", 
    RowBox[{
    "wc_", ",", "\[Gamma]21_", ",", "\[Gamma]42_", ",", "\[Gamma]32_", ",", 
     "\[Delta]_", ",", "\[CapitalDelta]_", ",", "omegac1_", ",", "c_", ",", 
     "\[HBar]_", ",", "e0_", ",", "u_", ",", "Nat_", ",", "w43_", ",", 
     "d42_"}], "]"}], ":=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"Dopp", "[", "s42", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sd3a", "[", 
    RowBox[{
    "wc_", ",", "\[Gamma]21_", ",", "\[Gamma]32_", ",", "\[Delta]_", ",", 
     "\[CapitalDelta]_", ",", "\[CapitalOmega]c_", ",", "c_", ",", "\[HBar]_",
      ",", "e0_", ",", "u_", ",", "Nat_", ",", "d32_"}], "]"}], ":=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"Dopp3", "[", "s3a", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sd3e", "[", 
    RowBox[{
    "wc_", ",", "\[Gamma]21_", ",", "\[Gamma]32_", ",", "\[Delta]_", ",", 
     "\[CapitalDelta]_", ",", "\[CapitalOmega]c_", ",", "c_", ",", "\[HBar]_",
      ",", "e0_", ",", "u_", ",", "Nat_", ",", "d32_"}], "]"}], ":=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"Dopp3", "[", "s3e", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.693593354489865*^9, 3.6935933546461315`*^9}, {
  3.693593418471567*^9, 3.6935934456458035`*^9}, {3.693593479486393*^9, 
  3.6935935511316085`*^9}, {3.693593582017177*^9, 3.693593587844395*^9}, {
  3.693593643580376*^9, 3.693593744510585*^9}, {3.6935938146739435`*^9, 
  3.6935939659257603`*^9}, {3.693594114583386*^9, 3.693594148537552*^9}, {
  3.693594214415166*^9, 3.6935942336025977`*^9}, {3.693594321171434*^9, 
  3.6935944012186537`*^9}, {3.6935945067624645`*^9, 3.693594541734193*^9}, {
  3.693594578106447*^9, 3.6935946268544655`*^9}, {3.693594699755022*^9, 
  3.6935947180989337`*^9}, {3.6936006525147204`*^9, 3.6936006719970465`*^9}, {
  3.7039491400272527`*^9, 3.7039491418813586`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev4DoppTestsc", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_", ",", 
    "w_"}], "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", 
      "\[CapitalDelta]2", ",", "d31", ",", "d41"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "0.003"}], ",", "0.003", ",", "0.00004"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{"2", "Pi", 
       RowBox[{"(", 
        RowBox[{"w", "*", 
         RowBox[{"10", "^", "6"}]}], ")"}]}]}], "  ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"omegac2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Im", "[", 
        RowBox[{"sd42", "[", 
         RowBox[{
         "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", ",", 
          "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", "c", ",", 
          "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43", ",", 
          "d42"}], "]"}], "]"}], "+", 
       RowBox[{"Im", "[", 
        RowBox[{"sd32", "[", 
         RowBox[{
         "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", ",", 
          "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", "c", ",", 
          "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43", ",", 
          "d32"}], "]"}], "]"}]}], ")"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6820777509929857`*^9, 3.682078072258361*^9}, {
   3.6820781686988773`*^9, 3.6820781844017754`*^9}, {3.6820782371557927`*^9, 
   3.6820782387708855`*^9}, {3.6820783386755996`*^9, 
   3.6820783600278206`*^9}, {3.682078390802581*^9, 3.682078409651659*^9}, {
   3.6820785556990128`*^9, 3.6820785577631307`*^9}, {3.682078604887826*^9, 
   3.682078606954944*^9}, 3.682078646275193*^9, 3.6820786817442217`*^9, {
   3.6820787244836664`*^9, 3.6820787256587334`*^9}, {3.682078761002755*^9, 
   3.6820787873862643`*^9}, {3.682078849739831*^9, 3.682078868395898*^9}, {
   3.6820789209479036`*^9, 3.682079036674523*^9}, {3.6820797161803885`*^9, 
   3.6820797163083954`*^9}, {3.6820940847423997`*^9, 3.682094176264634*^9}, {
   3.682100534108282*^9, 3.682100724544174*^9}, {3.682100812826224*^9, 
   3.6821008239058576`*^9}, {3.682100946929894*^9, 3.6821009474969263`*^9}, {
   3.6821010023450637`*^9, 3.6821010049532127`*^9}, {3.682101044296463*^9, 
   3.6821010535839944`*^9}, {3.6821012584737134`*^9, 3.682101261144866*^9}, {
   3.682101316585037*^9, 3.6821013732572784`*^9}, {3.682101414754652*^9, 
   3.6821014312095933`*^9}, {3.6821027458817883`*^9, 
   3.6821029190776944`*^9}, {3.682102981621272*^9, 3.682103063142935*^9}, {
   3.682103152077021*^9, 3.6821031759093847`*^9}, {3.682103228078368*^9, 
   3.682103275783097*^9}, {3.6821033867274427`*^9, 3.6821035279885225`*^9}, {
   3.682103596235426*^9, 3.6821036073870635`*^9}, {3.6821036960071325`*^9, 
   3.6821037775187945`*^9}, {3.6821038740493155`*^9, 
   3.6821038957665577`*^9}, {3.6821039323166485`*^9, 3.68210399843143*^9}, {
   3.6821041484310093`*^9, 3.6821041622938023`*^9}, {3.68210423166377*^9, 
   3.68210423550299*^9}, {3.6821042817676363`*^9, 3.682104281975648*^9}, {
   3.6821044114720545`*^9, 3.6821044835001745`*^9}, {3.6821045457187333`*^9, 
   3.6821045762404785`*^9}, {3.6821046797604*^9, 3.6821047083920374`*^9}, {
   3.682104777109968*^9, 3.682104849645117*^9}, {3.6821057340817037`*^9, 
   3.6821059374293346`*^9}, {3.6821060904780884`*^9, 
   3.6821060922611904`*^9}, {3.6821063118057475`*^9, 3.682106405406101*^9}, 
   3.682106470391818*^9, {3.682106886234603*^9, 3.6821069287290335`*^9}, {
   3.6821069697263784`*^9, 3.6821069703174124`*^9}, {3.6821070483648767`*^9, 
   3.6821070518040733`*^9}, {3.682107090122265*^9, 3.682107090965313*^9}, {
   3.6821071649115424`*^9, 3.6821073019513807`*^9}, {3.68210735596247*^9, 
   3.6821073587036266`*^9}, 3.6821621740358844`*^9, 3.6821627337889004`*^9, {
   3.6821628756690154`*^9, 3.682162909995979*^9}, {3.682163006508499*^9, 
   3.6821630839339275`*^9}, {3.682164960571265*^9, 3.6821650124032297`*^9}, {
   3.6821651296039333`*^9, 3.6821651308580046`*^9}, {3.682165214019761*^9, 
   3.682165249474789*^9}, {3.6821653768800764`*^9, 3.6821654049336815`*^9}, {
   3.6821654393766513`*^9, 3.68216545387048*^9}, 3.6821655581664457`*^9, {
   3.682165620292999*^9, 3.6821656220580997`*^9}, {3.6821656556360207`*^9, 
   3.6821656577791433`*^9}, {3.682165701413639*^9, 3.682165727750145*^9}, {
   3.6821665708493676`*^9, 3.682166634060983*^9}, {3.6821666960175266`*^9, 
   3.6821667514896994`*^9}, 3.682166802514618*^9, {3.6821669432116656`*^9, 
   3.682167060590379*^9}, {3.6821671413930006`*^9, 3.682167202085472*^9}, {
   3.6821673969946203`*^9, 3.6821673999857917`*^9}, {3.6821674579621077`*^9, 
   3.682167471208865*^9}, {3.682167501232582*^9, 3.682167549741357*^9}, {
   3.682167594844937*^9, 3.6821675971000657`*^9}, {3.6821676294889183`*^9, 
   3.6821676371443563`*^9}, {3.6821676871182146`*^9, 
   3.6821676926285295`*^9}, {3.6821678111603093`*^9, 3.682167849935527*^9}, {
   3.682167892151942*^9, 3.6821679025275354`*^9}, {3.6821680476398354`*^9, 
   3.682168050832018*^9}, {3.6821681112514734`*^9, 3.6821681135776067`*^9}, {
   3.6821681662336187`*^9, 3.6821681808154526`*^9}, {3.6821682156534452`*^9, 
   3.682168310363862*^9}, {3.682178802064953*^9, 3.6821788574731226`*^9}, {
   3.6821797845176063`*^9, 3.6821798678863745`*^9}, {3.682179924646621*^9, 
   3.682179933998156*^9}, 3.6821800382591195`*^9, {3.682180103785867*^9, 
   3.6821801191557465`*^9}, {3.6821803064124565`*^9, 3.682180320525264*^9}, {
   3.682180376454463*^9, 3.6821803814617496`*^9}, {3.6821832402242613`*^9, 
   3.682183284751808*^9}, {3.682183418403453*^9, 3.6821834209866004`*^9}, {
   3.682340380078147*^9, 3.682340410220871*^9}, {3.682340522181275*^9, 
   3.682340537612157*^9}, {3.6823406550578747`*^9, 3.682340655896923*^9}, {
   3.682340692157997*^9, 3.68234069326906*^9}, {3.682345730917197*^9, 
   3.682345731045205*^9}, {3.6823458690981007`*^9, 3.682345919492983*^9}, {
   3.682345967318719*^9, 3.6823459676457376`*^9}, {3.6823463858226557`*^9, 
   3.682346387093728*^9}, 3.6823468661441727`*^9, {3.6823507930227776`*^9, 
   3.6823507938398237`*^9}, {3.6823508346331573`*^9, 3.68235083747932*^9}, 
   3.682354138591133*^9, 3.6823566711479864`*^9, {3.682360931208648*^9, 
   3.682360932023695*^9}, {3.6823611770847116`*^9, 3.682361178779808*^9}, {
   3.682361844153866*^9, 3.682361845208926*^9}, {3.682362187881526*^9, 
   3.682362192368782*^9}, {3.6823622281698303`*^9, 3.6823622290728817`*^9}, {
   3.6824245168725133`*^9, 3.682424594002925*^9}, {3.6824260544974604`*^9, 
   3.682426058127668*^9}, {3.6824261036362705`*^9, 3.682426116397001*^9}, {
   3.682426190238224*^9, 3.682426191247282*^9}, {3.6824263261569986`*^9, 
   3.6824263271250534`*^9}, {3.682426566115723*^9, 3.682426577725387*^9}, {
   3.6824266458332825`*^9, 3.6824266595680685`*^9}, {3.682426696979208*^9, 
   3.6824267107099934`*^9}, {3.682427781573243*^9, 3.6824278113079443`*^9}, {
   3.6824355677005672`*^9, 3.682435631502217*^9}, {3.6824362666165433`*^9, 
   3.682436273352928*^9}, {3.6824396749253745`*^9, 3.6824396816717634`*^9}, {
   3.6824466180411763`*^9, 3.682446638837542*^9}, {3.6824477837793245`*^9, 
   3.682447784026745*^9}, {3.6824486976287394`*^9, 3.6824486988314676`*^9}, {
   3.682448741291876*^9, 3.682448758877056*^9}, {3.682528592516034*^9, 
   3.682528601669776*^9}, {3.6825290670606318`*^9, 3.6825290697308183`*^9}, {
   3.682529366905645*^9, 3.6825294632815933`*^9}, {3.6825295212782946`*^9, 
   3.6825295218262405`*^9}, {3.6825326611473746`*^9, 
   3.6825327653305593`*^9}, {3.68253282920498*^9, 3.6825328354504523`*^9}, {
   3.6825337172886257`*^9, 3.6825337966552057`*^9}, {3.682767727311578*^9, 
   3.6827677341416397`*^9}, {3.6827677784039173`*^9, 
   3.6827677817925434`*^9}, {3.6932553797640305`*^9, 
   3.6932554299337807`*^9}, {3.6932554605179*^9, 3.6932559069187527`*^9}, {
   3.6932561402287693`*^9, 3.6932561722799435`*^9}, {3.6933163942079906`*^9, 
   3.693316415693305*^9}, {3.693316580499305*^9, 3.6933166304990816`*^9}, {
   3.693316760505435*^9, 3.6933167713506746`*^9}, {3.693316885693319*^9, 
   3.693316923395423*^9}, {3.6933172128656282`*^9, 3.693317263746234*^9}, {
   3.693325258387647*^9, 3.693325258903158*^9}, {3.693325769156588*^9, 
   3.6933257999974604`*^9}, {3.693335215842825*^9, 3.6933352602877464`*^9}, {
   3.693335513566686*^9, 3.693335518882057*^9}, 3.6933383532074747`*^9, {
   3.69333844096763*^9, 3.6933384435674295`*^9}, {3.6933998013026257`*^9, 
   3.693399826867744*^9}, {3.693399878173236*^9, 3.6933998820731897`*^9}, {
   3.6933999851766276`*^9, 3.693400021978489*^9}, {3.6934001039998937`*^9, 
   3.693400106015895*^9}, {3.6934016718519135`*^9, 3.6934016749356365`*^9}, {
   3.693401768182933*^9, 3.6934017860664177`*^9}, {3.6934045049723034`*^9, 
   3.693404507408079*^9}, {3.6934045480219707`*^9, 3.693404569296521*^9}, {
   3.693404654068478*^9, 3.6934046767251215`*^9}, 3.6934047114649863`*^9, {
   3.693411486854925*^9, 3.6934115557606277`*^9}, {3.693411611637782*^9, 
   3.69341163689961*^9}, {3.6934117443930483`*^9, 3.6934117581565638`*^9}, {
   3.693412031427684*^9, 3.693412061254629*^9}, {3.6934121007632923`*^9, 
   3.6934121063459177`*^9}, {3.6934121673784485`*^9, 
   3.6934121732938156`*^9}, {3.6934126870207553`*^9, 3.693412687851843*^9}, {
   3.6934127270569134`*^9, 3.693412748633364*^9}, {3.693412788765423*^9, 
   3.6934127889652367`*^9}, {3.693413093699652*^9, 3.6934131049158497`*^9}, {
   3.693413158927167*^9, 3.693413165655781*^9}, {3.6934132892354*^9, 
   3.6934132907125025`*^9}, {3.693413694311676*^9, 3.6934138525544806`*^9}, {
   3.6934139623245473`*^9, 3.6934139741439466`*^9}, {3.6934151889872465`*^9, 
   3.6934151913460665`*^9}, {3.693421812342548*^9, 3.693421814260598*^9}, 
   3.693571210634773*^9, {3.6935730363523593`*^9, 3.693573037920248*^9}, {
   3.6935730980366774`*^9, 3.693573098636371*^9}, {3.6935733964485483`*^9, 
   3.693573406451894*^9}, {3.693573469980172*^9, 3.693573501220932*^9}, {
   3.6935735525801334`*^9, 3.6935736322071934`*^9}, {3.693574441972418*^9, 
   3.693574507219281*^9}, {3.693574541832406*^9, 3.6935745742488327`*^9}, {
   3.693575621329663*^9, 3.693575673978572*^9}, {3.69357673871231*^9, 
   3.6935767415254836`*^9}, {3.6935771676067867`*^9, 
   3.6935771693901434`*^9}, {3.6935774277045565`*^9, 3.693577443913048*^9}, {
   3.6935774788521423`*^9, 3.69357748131384*^9}, {3.6935801882381463`*^9, 
   3.693580202383541*^9}, {3.6935809873145914`*^9, 3.69358098944536*^9}, {
   3.6935872517340436`*^9, 3.6935872545426507`*^9}, {3.693587372831433*^9, 
   3.6935873796980495`*^9}, {3.693587562863904*^9, 3.693587616021948*^9}, {
   3.6935876893495855`*^9, 3.6935876903867693`*^9}, {3.6935878379546204`*^9, 
   3.6935878413010764`*^9}, {3.693588112787511*^9, 3.69358811449063*^9}, {
   3.6935881694755335`*^9, 3.693588171288027*^9}, {3.6935935389237742`*^9, 
   3.693593540345663*^9}, 3.6935935945632477`*^9, {3.6935936258290606`*^9, 
   3.693593626766575*^9}, {3.6935941806328535`*^9, 3.693594207086978*^9}, 
   3.6935946950674806`*^9, {3.6935947327149076`*^9, 3.693594734652423*^9}, {
   3.693594941365797*^9, 3.693594955856461*^9}, {3.6935949870952897`*^9, 
   3.693595006821137*^9}, {3.693595054598051*^9, 3.693595087587389*^9}, {
   3.693595156350831*^9, 3.693595162100931*^9}, {3.693595205375044*^9, 
   3.693595214270155*^9}, {3.6935955401391487`*^9, 3.69359554954937*^9}, {
   3.6935957894002223`*^9, 3.693595793535714*^9}, {3.6935975519334*^9, 
   3.6935975545739965`*^9}, 3.6935978494473696`*^9, 3.6935978853782554`*^9, {
   3.693600107714938*^9, 3.6936001086524925`*^9}, {3.6936001461743183`*^9, 
   3.6936001463930244`*^9}, {3.6936004005973363`*^9, 
   3.6936004140829015`*^9}, {3.693600548133373*^9, 3.69360056949905*^9}, 
   3.6936006120421934`*^9, {3.693600743312659*^9, 3.6936007668870306`*^9}, 
   3.6936593079963093`*^9, {3.6936600641823077`*^9, 3.6936600934684105`*^9}, {
   3.6936606802085075`*^9, 3.6936607260416718`*^9}, 3.693661925629023*^9, {
   3.6936700240275917`*^9, 3.6936700241431427`*^9}, {3.693670312478878*^9, 
   3.693670390281993*^9}, 3.693671577434743*^9, {3.693671658053399*^9, 
   3.69367166553496*^9}, {3.6936857949048443`*^9, 3.693685796574098*^9}, {
   3.6938634331019464`*^9, 3.6938634424293127`*^9}, {3.7021506788025312`*^9, 
   3.7021506844738555`*^9}, {3.7037037148134384`*^9, 
   3.7037037294210167`*^9}, {3.703703915278076*^9, 3.7037039469256473`*^9}, {
   3.703704848274563*^9, 3.7037048678076663`*^9}, {3.7037053637935624`*^9, 
   3.703705368753002*^9}, {3.703847775816551*^9, 3.703847820609113*^9}, {
   3.703849676834283*^9, 3.7038496905620685`*^9}, {3.7040282611457214`*^9, 
   3.7040282642328987`*^9}, {3.704028356338166*^9, 3.7040283566171827`*^9}, {
   3.704028398569582*^9, 3.704028399184617*^9}, {3.704471208248934*^9, 
   3.7044712099760327`*^9}, {3.704471241696847*^9, 3.7044712418798575`*^9}, {
   3.7044719290331607`*^9, 3.7044719302572308`*^9}, {3.7046591737739472`*^9, 
   3.7046591911339397`*^9}, {3.705148359139801*^9, 3.7051483678022966`*^9}, 
   3.7051484133559017`*^9, {3.73756766773046*^9, 3.7375676678554573`*^9}, {
   3.7391166690149665`*^9, 3.7391166877889643`*^9}, 3.7658282742121916`*^9, {
   3.765828806839615*^9, 3.765828816995103*^9}, {3.7658298628464932`*^9, 
   3.765829872598856*^9}, {3.765910665593157*^9, 3.7659107190994034`*^9}, {
   3.7659114241171794`*^9, 3.7659114256356053`*^9}, {3.7659119786146164`*^9, 
   3.765911980299055*^9}, {3.766236218976536*^9, 3.766236223414791*^9}, {
   3.7662444040162497`*^9, 3.766244404690921*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Im", "[", 
      RowBox[{"sd42", "[", 
       RowBox[{
       "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", ",", 
        "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", "c", ",", 
        "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43", ",", "d42"}], 
       "]"}], "]"}], "+", 
     RowBox[{"Im", "[", 
      RowBox[{"sd32", "[", 
       RowBox[{
       "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", ",", 
        "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", "c", ",", 
        "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43", ",", "d32"}], 
       "]"}], "]"}]}], ")"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6820777509929857`*^9, 3.682078072258361*^9}, {
   3.6820781686988773`*^9, 3.6820781844017754`*^9}, {3.6820782371557927`*^9, 
   3.6820782387708855`*^9}, {3.6820783386755996`*^9, 
   3.6820783600278206`*^9}, {3.682078390802581*^9, 3.682078409651659*^9}, {
   3.6820785556990128`*^9, 3.6820785577631307`*^9}, {3.682078604887826*^9, 
   3.682078606954944*^9}, 3.682078646275193*^9, 3.6820786817442217`*^9, {
   3.6820787244836664`*^9, 3.6820787256587334`*^9}, {3.682078761002755*^9, 
   3.6820787873862643`*^9}, {3.682078849739831*^9, 3.682078868395898*^9}, {
   3.6820789209479036`*^9, 3.682079036674523*^9}, {3.6820797161803885`*^9, 
   3.6820797163083954`*^9}, {3.6820940847423997`*^9, 3.682094176264634*^9}, {
   3.682100534108282*^9, 3.682100724544174*^9}, {3.682100812826224*^9, 
   3.6821008239058576`*^9}, {3.682100946929894*^9, 3.6821009474969263`*^9}, {
   3.6821010023450637`*^9, 3.6821010049532127`*^9}, {3.682101044296463*^9, 
   3.6821010535839944`*^9}, {3.6821012584737134`*^9, 3.682101261144866*^9}, {
   3.682101316585037*^9, 3.6821013732572784`*^9}, {3.682101414754652*^9, 
   3.6821014312095933`*^9}, {3.6821027458817883`*^9, 
   3.6821029190776944`*^9}, {3.682102981621272*^9, 3.682103063142935*^9}, {
   3.682103152077021*^9, 3.6821031759093847`*^9}, {3.682103228078368*^9, 
   3.682103275783097*^9}, {3.6821033867274427`*^9, 3.6821035279885225`*^9}, {
   3.682103596235426*^9, 3.6821036073870635`*^9}, {3.6821036960071325`*^9, 
   3.6821037775187945`*^9}, {3.6821038740493155`*^9, 
   3.6821038957665577`*^9}, {3.6821039323166485`*^9, 3.68210399843143*^9}, {
   3.6821041484310093`*^9, 3.6821041622938023`*^9}, {3.68210423166377*^9, 
   3.68210423550299*^9}, {3.6821042817676363`*^9, 3.682104281975648*^9}, {
   3.6821044114720545`*^9, 3.6821044835001745`*^9}, {3.6821045457187333`*^9, 
   3.6821045762404785`*^9}, {3.6821046797604*^9, 3.6821047083920374`*^9}, {
   3.682104777109968*^9, 3.682104849645117*^9}, {3.6821057340817037`*^9, 
   3.6821059374293346`*^9}, {3.6821060904780884`*^9, 
   3.6821060922611904`*^9}, {3.6821063118057475`*^9, 3.682106405406101*^9}, 
   3.682106470391818*^9, {3.682106886234603*^9, 3.6821069287290335`*^9}, {
   3.6821069697263784`*^9, 3.6821069703174124`*^9}, {3.6821070483648767`*^9, 
   3.6821070518040733`*^9}, {3.682107090122265*^9, 3.682107090965313*^9}, {
   3.6821071649115424`*^9, 3.6821073019513807`*^9}, {3.68210735596247*^9, 
   3.6821073587036266`*^9}, 3.6821621740358844`*^9, 3.6821627337889004`*^9, {
   3.6821628756690154`*^9, 3.682162909995979*^9}, {3.682163006508499*^9, 
   3.6821630839339275`*^9}, {3.682164960571265*^9, 3.6821650124032297`*^9}, {
   3.6821651296039333`*^9, 3.6821651308580046`*^9}, {3.682165214019761*^9, 
   3.682165249474789*^9}, {3.6821653768800764`*^9, 3.6821654049336815`*^9}, {
   3.6821654393766513`*^9, 3.68216545387048*^9}, 3.6821655581664457`*^9, {
   3.682165620292999*^9, 3.6821656220580997`*^9}, {3.6821656556360207`*^9, 
   3.6821656577791433`*^9}, {3.682165701413639*^9, 3.682165727750145*^9}, {
   3.6821665708493676`*^9, 3.682166634060983*^9}, {3.6821666960175266`*^9, 
   3.6821667514896994`*^9}, 3.682166802514618*^9, {3.6821669432116656`*^9, 
   3.682167060590379*^9}, {3.6821671413930006`*^9, 3.682167202085472*^9}, {
   3.6821673969946203`*^9, 3.6821673999857917`*^9}, {3.6821674579621077`*^9, 
   3.682167471208865*^9}, {3.682167501232582*^9, 3.682167549741357*^9}, {
   3.682167594844937*^9, 3.6821675971000657`*^9}, {3.6821676294889183`*^9, 
   3.6821676371443563`*^9}, {3.6821676871182146`*^9, 
   3.6821676926285295`*^9}, {3.6821678111603093`*^9, 3.682167849935527*^9}, {
   3.682167892151942*^9, 3.6821679025275354`*^9}, {3.6821680476398354`*^9, 
   3.682168050832018*^9}, {3.6821681112514734`*^9, 3.6821681135776067`*^9}, {
   3.6821681662336187`*^9, 3.6821681808154526`*^9}, {3.6821682156534452`*^9, 
   3.682168310363862*^9}, {3.682178802064953*^9, 3.6821788574731226`*^9}, {
   3.6821797845176063`*^9, 3.6821798678863745`*^9}, {3.682179924646621*^9, 
   3.682179933998156*^9}, 3.6821800382591195`*^9, {3.682180103785867*^9, 
   3.6821801191557465`*^9}, {3.6821803064124565`*^9, 3.682180320525264*^9}, {
   3.682180376454463*^9, 3.6821803814617496`*^9}, {3.6821832402242613`*^9, 
   3.682183284751808*^9}, {3.682183418403453*^9, 3.6821834209866004`*^9}, {
   3.682340380078147*^9, 3.682340410220871*^9}, {3.682340522181275*^9, 
   3.682340537612157*^9}, {3.6823406550578747`*^9, 3.682340655896923*^9}, {
   3.682340692157997*^9, 3.68234069326906*^9}, {3.682345730917197*^9, 
   3.682345731045205*^9}, {3.6823458690981007`*^9, 3.682345919492983*^9}, {
   3.682345967318719*^9, 3.6823459676457376`*^9}, {3.6823463858226557`*^9, 
   3.682346387093728*^9}, 3.6823468661441727`*^9, {3.6823507930227776`*^9, 
   3.6823507938398237`*^9}, {3.6823508346331573`*^9, 3.68235083747932*^9}, 
   3.682354138591133*^9, 3.6823566711479864`*^9, {3.682360931208648*^9, 
   3.682360932023695*^9}, {3.6823611770847116`*^9, 3.682361178779808*^9}, {
   3.682361844153866*^9, 3.682361845208926*^9}, {3.682362187881526*^9, 
   3.682362192368782*^9}, {3.6823622281698303`*^9, 3.6823622290728817`*^9}, {
   3.6824245168725133`*^9, 3.682424594002925*^9}, {3.6824260544974604`*^9, 
   3.682426058127668*^9}, {3.6824261036362705`*^9, 3.682426116397001*^9}, {
   3.682426190238224*^9, 3.682426191247282*^9}, {3.6824263261569986`*^9, 
   3.6824263271250534`*^9}, {3.682426566115723*^9, 3.682426577725387*^9}, {
   3.6824266458332825`*^9, 3.6824266595680685`*^9}, {3.682426696979208*^9, 
   3.6824267107099934`*^9}, {3.682427781573243*^9, 3.6824278113079443`*^9}, {
   3.6824355677005672`*^9, 3.682435631502217*^9}, {3.6824362666165433`*^9, 
   3.682436273352928*^9}, {3.6824396749253745`*^9, 3.6824396816717634`*^9}, {
   3.6824466180411763`*^9, 3.682446638837542*^9}, {3.6824477837793245`*^9, 
   3.682447784026745*^9}, {3.6824486976287394`*^9, 3.6824486988314676`*^9}, {
   3.682448741291876*^9, 3.682448758877056*^9}, {3.682528592516034*^9, 
   3.682528601669776*^9}, {3.6825290670606318`*^9, 3.6825290697308183`*^9}, {
   3.682529366905645*^9, 3.6825294632815933`*^9}, {3.6825295212782946`*^9, 
   3.6825295218262405`*^9}, {3.6825326611473746`*^9, 
   3.6825327653305593`*^9}, {3.68253282920498*^9, 3.6825328354504523`*^9}, {
   3.6825337172886257`*^9, 3.6825337966552057`*^9}, {3.682767727311578*^9, 
   3.6827677341416397`*^9}, {3.6827677784039173`*^9, 
   3.6827677817925434`*^9}, {3.6932553797640305`*^9, 
   3.6932554299337807`*^9}, {3.6932554605179*^9, 3.6932559069187527`*^9}, {
   3.6932561402287693`*^9, 3.6932561722799435`*^9}, {3.6933163942079906`*^9, 
   3.693316415693305*^9}, {3.693316580499305*^9, 3.6933166304990816`*^9}, {
   3.693316760505435*^9, 3.6933167713506746`*^9}, {3.693316885693319*^9, 
   3.693316923395423*^9}, {3.6933172128656282`*^9, 3.693317263746234*^9}, {
   3.693325258387647*^9, 3.693325258903158*^9}, {3.693325769156588*^9, 
   3.6933257999974604`*^9}, {3.693335215842825*^9, 3.6933352602877464`*^9}, {
   3.693335513566686*^9, 3.693335518882057*^9}, 3.6933383532074747`*^9, {
   3.69333844096763*^9, 3.6933384435674295`*^9}, {3.6933998013026257`*^9, 
   3.693399826867744*^9}, {3.693399878173236*^9, 3.6933998820731897`*^9}, {
   3.6933999851766276`*^9, 3.693400021978489*^9}, {3.6934001039998937`*^9, 
   3.693400106015895*^9}, {3.6934016718519135`*^9, 3.6934016749356365`*^9}, {
   3.693401768182933*^9, 3.6934017860664177`*^9}, {3.6934045049723034`*^9, 
   3.693404507408079*^9}, {3.6934045480219707`*^9, 3.693404569296521*^9}, {
   3.693404654068478*^9, 3.6934046767251215`*^9}, 3.6934047114649863`*^9, {
   3.693411486854925*^9, 3.6934115557606277`*^9}, {3.693411611637782*^9, 
   3.69341163689961*^9}, {3.6934117443930483`*^9, 3.6934117581565638`*^9}, {
   3.693412031427684*^9, 3.693412061254629*^9}, {3.6934121007632923`*^9, 
   3.6934121063459177`*^9}, {3.6934121673784485`*^9, 
   3.6934121732938156`*^9}, {3.6934126870207553`*^9, 3.693412687851843*^9}, {
   3.6934127270569134`*^9, 3.693412748633364*^9}, {3.693412788765423*^9, 
   3.6934127889652367`*^9}, {3.693413093699652*^9, 3.6934131049158497`*^9}, {
   3.693413158927167*^9, 3.693413165655781*^9}, {3.6934132892354*^9, 
   3.6934132907125025`*^9}, {3.693413694311676*^9, 3.6934138525544806`*^9}, {
   3.6934139623245473`*^9, 3.6934139741439466`*^9}, {3.6934151889872465`*^9, 
   3.6934151913460665`*^9}, {3.693421812342548*^9, 3.693421814260598*^9}, 
   3.693571210634773*^9, {3.6935730363523593`*^9, 3.693573037920248*^9}, {
   3.6935730980366774`*^9, 3.693573098636371*^9}, {3.6935733964485483`*^9, 
   3.693573406451894*^9}, {3.693573469980172*^9, 3.693573501220932*^9}, {
   3.6935735525801334`*^9, 3.6935736322071934`*^9}, {3.693574441972418*^9, 
   3.693574507219281*^9}, {3.693574541832406*^9, 3.6935745742488327`*^9}, {
   3.693575621329663*^9, 3.693575673978572*^9}, {3.69357673871231*^9, 
   3.6935767415254836`*^9}, {3.6935771676067867`*^9, 
   3.6935771693901434`*^9}, {3.6935774277045565`*^9, 3.693577443913048*^9}, {
   3.6935774788521423`*^9, 3.69357748131384*^9}, {3.6935801882381463`*^9, 
   3.693580202383541*^9}, {3.6935809873145914`*^9, 3.69358098944536*^9}, {
   3.6935872517340436`*^9, 3.6935872545426507`*^9}, {3.693587372831433*^9, 
   3.6935873796980495`*^9}, {3.693587562863904*^9, 3.693587616021948*^9}, {
   3.6935876893495855`*^9, 3.6935876903867693`*^9}, {3.6935878379546204`*^9, 
   3.6935878413010764`*^9}, {3.693588112787511*^9, 3.69358811449063*^9}, {
   3.6935881694755335`*^9, 3.693588171288027*^9}, {3.6935935389237742`*^9, 
   3.693593540345663*^9}, 3.6935935945632477`*^9, {3.6935936258290606`*^9, 
   3.693593626766575*^9}, {3.6935941806328535`*^9, 3.693594207086978*^9}, 
   3.6935946950674806`*^9, {3.6935947327149076`*^9, 3.693594734652423*^9}, {
   3.693594941365797*^9, 3.693594955856461*^9}, {3.6935949870952897`*^9, 
   3.693595006821137*^9}, {3.693595054598051*^9, 3.693595087587389*^9}, {
   3.693595156350831*^9, 3.693595162100931*^9}, {3.693595205375044*^9, 
   3.693595214270155*^9}, {3.6935955401391487`*^9, 3.69359554954937*^9}, {
   3.6935957894002223`*^9, 3.693595793535714*^9}, {3.6935975519334*^9, 
   3.6935975545739965`*^9}, 3.6935978494473696`*^9, 3.6935978853782554`*^9, {
   3.693600107714938*^9, 3.6936001086524925`*^9}, {3.6936001461743183`*^9, 
   3.6936001463930244`*^9}, {3.6936004005973363`*^9, 
   3.6936004140829015`*^9}, {3.693600548133373*^9, 3.69360056949905*^9}, 
   3.6936006120421934`*^9, {3.693600743312659*^9, 3.6936007668870306`*^9}, 
   3.6936593079963093`*^9, {3.6936600641823077`*^9, 3.6936600934684105`*^9}, {
   3.6936606802085075`*^9, 3.6936607260416718`*^9}, 3.693661925629023*^9, {
   3.6936700240275917`*^9, 3.6936700241431427`*^9}, {3.693670312478878*^9, 
   3.693670390281993*^9}, 3.693671577434743*^9, {3.693671658053399*^9, 
   3.69367166553496*^9}, {3.6936857949048443`*^9, 3.693685796574098*^9}, {
   3.6938634331019464`*^9, 3.6938634424293127`*^9}, {3.7021506788025312`*^9, 
   3.7021506844738555`*^9}, {3.7037037148134384`*^9, 
   3.7037037294210167`*^9}, {3.703703915278076*^9, 3.7037039469256473`*^9}, {
   3.703704848274563*^9, 3.7037048678076663`*^9}, {3.7037053637935624`*^9, 
   3.703705368753002*^9}, {3.703847775816551*^9, 3.703847820609113*^9}, {
   3.703849676834283*^9, 3.7038496905620685`*^9}, {3.7040282611457214`*^9, 
   3.7040282642328987`*^9}, {3.704028356338166*^9, 3.7040283566171827`*^9}, {
   3.704028398569582*^9, 3.704028399184617*^9}, {3.704471208248934*^9, 
   3.7044712099760327`*^9}, {3.704471241696847*^9, 3.7044712418798575`*^9}, {
   3.7044719290331607`*^9, 3.7044719302572308`*^9}, {3.7046591737739472`*^9, 
   3.7046591911339397`*^9}, {3.705148359139801*^9, 3.7051483678022966`*^9}, 
   3.7051484133559017`*^9, {3.73756766773046*^9, 3.7375676678554573`*^9}, {
   3.7391166690149665`*^9, 3.7391166877889643`*^9}, 3.7658282742121916`*^9, {
   3.765828806839615*^9, 3.765828816995103*^9}, {3.7658298628464932`*^9, 
   3.765829872598856*^9}, {3.765910665593157*^9, 3.7659107190994034`*^9}, {
   3.7659114241171794`*^9, 3.7659114256356053`*^9}, {3.7659119786146164`*^9, 
   3.765911980299055*^9}, {3.766236218976536*^9, 3.766236223414791*^9}, {
   3.7662444040162497`*^9, 3.766244404690921*^9}, {3.809982251792001*^9, 
   3.8099822518719597`*^9}, {3.809982314686241*^9, 3.809982336250956*^9}, {
   3.8099824544720173`*^9, 3.809982467303647*^9}, 3.8100791056364374`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Rubidum 85", "Chapter",
 CellChangeTimes->{{3.809195378070843*^9, 3.8091953783377056`*^9}, {
  3.809889932619795*^9, 3.8098899338791904`*^9}, {3.8099788035864067`*^9, 
  3.8099788064978743`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\<D:\\\\Qsync\\\\QOLab\\\\Data\\\\On Resonance Project\\\\Lab Book 2 \
(18 Mar 29 -)\\\\20-09-28\\\\Power\\\\85F11\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Import", "[", "#", "]"}], "&"}], "/@", 
    RowBox[{"FileNames", "[", "\"\<*csv\>\"", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"17", ",", 
         RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.809103770975025*^9, 3.80910377485117*^9}, {
   3.8091939903849115`*^9, 3.809193992943684*^9}, 3.8093506243255796`*^9, {
   3.8093713334657145`*^9, 3.8093713481032495`*^9}, 3.8097202460140977`*^9, {
   3.8097203695676227`*^9, 3.809720369658579*^9}, {3.8097204005117846`*^9, 
   3.809720442844616*^9}, {3.8097205344000287`*^9, 3.8097205535628405`*^9}, {
   3.809722037372512*^9, 3.809722178348056*^9}, {3.8097222456281185`*^9, 
   3.809722249868085*^9}, {3.809723116027855*^9, 3.809723116242752*^9}, 
   3.809824396744284*^9, {3.809824643096903*^9, 3.809824866474016*^9}, {
   3.8098249810156403`*^9, 3.809825141917141*^9}, {3.80982520872534*^9, 
   3.8098252092941556`*^9}, {3.8098252834309735`*^9, 3.809825288675255*^9}, {
   3.809825347359105*^9, 3.8098253910688553`*^9}, {3.809825577979856*^9, 
   3.80982557824377*^9}, {3.8098283806763535`*^9, 3.809828382611725*^9}, {
   3.8098285622930927`*^9, 3.8098285659309177`*^9}, 3.809889925103687*^9, {
   3.8098950039762125`*^9, 3.8098950455083117`*^9}, {3.809978755873782*^9, 
   3.809978774044366*^9}, 3.8104036727510996`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ll", ",", "max", ",", "min", ",", "yaxis1", ",", "yaxis2", ",", "wcn", 
      ",", "ff", ",", "gg", ",", "loc", ",", "kk"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ll", "=", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"max", ",", "min"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", "ll", "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"Max", ",", "Min"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"yaxis1", "=", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "4"}], "]"}], "]"}], ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"ll", ",", "max"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"ll", ",", "min"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], "&"}], "@", 
          "Position"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"yaxis2", "=", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "8"}], "]"}], "]"}], ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"ll", ",", "max"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"ll", ",", "min"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], "&"}], "@", 
          "Position"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ff", "[", "x_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
       "Fit", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"o", ",", 
                 RowBox[{"yaxis1", "[", 
                  RowBox[{"[", "o", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"o", ",", "1", ",", "100"}], "}"}]}], "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"o", ",", 
                 RowBox[{"yaxis1", "[", 
                  RowBox[{"[", "o", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"o", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "yaxis1", "]"}], "-", "500"}], ",", 
                 RowBox[{"Length", "[", "yaxis1", "]"}]}], "}"}]}], "]"}]}], 
            "}"}], ",", "1"}], "]"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"gg", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ff", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "1", ",", 
          RowBox[{"Length", "[", "yaxis1", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"loc", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"FindPeaks", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"GaussianFilter", "[", 
           RowBox[{"yaxis2", ",", "10"}], "]"}], "\[IndentingNewLine]", ",", 
          "16", ",", "0.00002"}], "]"}], ",", 
        RowBox[{
         RowBox[{"1500", "<", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<", "4500"}], "&"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kk", "[", "x_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Fit", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"loc", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"loc", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], ",", "0.361"}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "12.531885282826405`"}], " ", "wcn", " ", 
        RowBox[{"Log", "[", 
         RowBox[{"yaxis1", "/", "gg"}], "]"}]}], ",", 
       RowBox[{"GaussianFilter", "[", 
        RowBox[{
         RowBox[{"yaxis1", "/", "gg"}], ",", "10"}], "]"}], ",", "yaxis2", 
       ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"kk", "[", "x", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "1", ",", 
           RowBox[{"Length", "[", "yaxis1", "]"}]}], "}"}]}], "]"}]}], 
      "}"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8099788377211666`*^9, 3.8099788378441014`*^9}, {
   3.8099789946282687`*^9, 3.8099790879855456`*^9}, {3.8099791963659678`*^9, 
   3.809979204304804*^9}, {3.8099794101242065`*^9, 3.8099794138287516`*^9}, {
   3.8099795264923563`*^9, 3.8099795310800915`*^9}, {3.8100801849232626`*^9, 
   3.810080185041199*^9}, {3.810080215389497*^9, 3.8100802728709717`*^9}, {
   3.810080306118044*^9, 3.8100803125859375`*^9}, {3.8100803942887754`*^9, 
   3.810080426763013*^9}, 3.8100804876349096`*^9, {3.810080628820184*^9, 
   3.8100806359192796`*^9}, {3.8100806806444583`*^9, 3.8100806814860497`*^9}, 
   3.810080731921192*^9, {3.8100807700375853`*^9, 3.81008079515454*^9}, {
   3.810087512068198*^9, 3.810087571493558*^9}, {3.810087615042101*^9, 
   3.810087615878707*^9}, 3.8100881296162853`*^9, {3.8103364951745987`*^9, 
   3.81033649834208*^9}, {3.8103365948071713`*^9, 3.8103366441972413`*^9}, {
   3.810336697493435*^9, 3.8103367255961676`*^9}, {3.8103367883241854`*^9, 
   3.8103367924462433`*^9}, {3.8103368357491093`*^9, 
   3.8103368536115537`*^9}, {3.8103368993636007`*^9, 3.810337074370467*^9}, {
   3.810337197291786*^9, 3.8103372145269156`*^9}, {3.8103372520563383`*^9, 
   3.81033727660972*^9}, {3.8103373098126955`*^9, 3.8103375032132945`*^9}, {
   3.8103375796957498`*^9, 3.8103376652034626`*^9}, {3.8103377656495733`*^9, 
   3.8103377681182036`*^9}, 3.8103378563511314`*^9, {3.8103380848318224`*^9, 
   3.8103380916365395`*^9}, {3.810338674148591*^9, 3.8103386768203144`*^9}, {
   3.8103866913455563`*^9, 3.8103867041494646`*^9}, {3.810403938576663*^9, 
   3.8104039464097776`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"GaussianFilter", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"data2", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "8"}], "]"}], "]"}], ",", "10"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"FindPeaks", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"GaussianFilter", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"data2", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "8"}], "]"}], "]"}], ",", "10"}], "]"}], 
           "\[IndentingNewLine]", ",", "16", ",", "0.00002"}], "]"}], ",", 
         RowBox[{
          RowBox[{"1500", "<", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "<", "4500"}], "&"}]}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"AbsolutePointSize", "[", "5", "]"}]}], "}"}]}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "62"}], "}"}], ",", "1", ",", 
     RowBox[{"Length", "[", "data2", "]"}], ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.810403707238961*^9, 3.810403846054008*^9}, {
  3.810403876906393*^9, 3.8104038962935524`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 84, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 62}, 1, 84, 1}}, Typeset`size$$ = {
    396., {124., 131.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i$63032$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 62}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$63032$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[{
         GaussianFilter[
          Part[
           Part[$CellContext`data2, $CellContext`i$$], All, 8], 10], 
         Select[
          FindPeaks[
           GaussianFilter[
            Part[
             Part[$CellContext`data2, $CellContext`i$$], All, 8], 10], 16, 
           0.00002], 1500 < Part[#, 1] < 4500& ]}, PlotStyle -> {Black, {Red, 
           AbsolutePointSize[5]}}], 
      "Specifications" :> {{{$CellContext`i$$, 62}, 1, 84, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{451., {189., 196.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8104038177975583`*^9, 3.810403846463811*^9}, {
  3.810403878904373*^9, 3.8104039166492505`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"data2", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1.2"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "2"}], "}"}], ",", "1", ",", 
     RowBox[{"Length", "[", "data2", "]"}], ",", "1"}], "}"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 2}, 1, 84, 1}}, Typeset`size$$ = {
    64., {2., 10.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i$68500$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$68500$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        Transpose[
         Part[
          $CellContext`f[
           Part[$CellContext`data2, $CellContext`i$$]], {4, 2}]], 
        PlotRange -> {{-1, 2}, {0, 1.2}}, Joined -> True], 
      "Specifications" :> {{{$CellContext`i$$, 2}, 1, 84, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{282., {56., 63.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.810403977244238*^9}],

Cell[BoxData[
 TemplateBox[{
  "Take","take",
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"6164\\\"}]\\) through \\!\\(\
\\*RowBox[{\\\"310\\\"}]\\) in \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"0.0624`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\
\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0632`\\\", \
\\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \
\\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0616`\\\", \\\",\\\", \\\"0.0632`\\\", \
\\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \
\\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \
\\\"0.0632`\\\", \\\",\\\", \\\"0.064`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\
\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0616`\\\", \
\\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0616`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0616`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"6199\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}]\\).\"",2,50,75,21797598327428708818,"Hello"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8104039775098486`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Take","take",
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"6164\\\"}]\\) through \\!\\(\
\\*RowBox[{\\\"310\\\"}]\\) in \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"5.58`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\
\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.58`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.58`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.58`\\\", \\\",\\\", \\\"5.58`\\\", \
\\\",\\\", \\\"5.58`\\\", \\\",\\\", \\\"5.58`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.58`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.58`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.58`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"6199\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}]\\).\"",2,50,76,21797598327428708818,"Hello"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.810403977603591*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"3\\\"}]\\) of \\!\\(\\*RowBox[{\\\"Take\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0.0624`\\\", \\\",\\\", \
\\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \
\\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0616`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \
\\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.064`\
\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \
\\\",\\\", \\\"0.0616`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0616`\\\", \
\\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0616`\\\", \\\",\\\", \
\\\"0.0632`\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6199\\\", \\\
\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"6164\\\", \\\",\\\", \\\"310\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
does not exist.\"",2,50,77,21797598327428708818,"Hello"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8104039777129707`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"4\\\"}]\\) of \\!\\(\\*RowBox[{\\\"Take\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0.0624`\\\", \\\",\\\", \
\\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \
\\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0616`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \
\\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.064`\
\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \
\\\",\\\", \\\"0.0616`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0616`\\\", \
\\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0616`\\\", \\\",\\\", \
\\\"0.0632`\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6199\\\", \\\
\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"6164\\\", \\\",\\\", \\\"310\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
does not exist.\"",2,50,78,21797598327428708818,"Hello"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8104039778067064`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"5\\\"}]\\) of \\!\\(\\*RowBox[{\\\"Take\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0.0624`\\\", \\\",\\\", \
\\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \
\\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0616`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \
\\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.064`\
\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \
\\\",\\\", \\\"0.0616`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0616`\\\", \
\\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0616`\\\", \\\",\\\", \
\\\"0.0632`\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6199\\\", \\\
\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"6164\\\", \\\",\\\", \\\"310\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
does not exist.\"",2,50,79,21797598327428708818,"Hello"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8104039779004526`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,50,80,21797598327428708818,"Hello"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8104039779785695`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Fit","fitd",
   "\"First argument \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.0624`\\\", \
\\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \
\\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \
\\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0616`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \
\\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0632`\\\", \
\\\",\\\", \\\"0.064`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \\\"0.0624`\
\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0632`\\\", \\\",\\\", \
\\\"0.0632`\\\", \\\",\\\", \\\"0.0616`\\\", \\\",\\\", \\\"0.0632`\\\", \
\\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0616`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \
\\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \
\\\"0.0624`\\\", \\\",\\\", \\\"0.0624`\\\", \\\",\\\", \\\"0.0616`\\\", \
\\\",\\\", \\\"0.0632`\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"6199\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}], \\\",\
\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"6164\\\", \\\",\\\", \\\"310\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"48\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"551\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) in Fit is not a \
list or a rectangular array.\"",2,50,81,21797598327428708818,"Hello"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8104039797887945`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","ivar",
   "\"\\!\\(\\*RowBox[{\\\"1\\\"}]\\) is not a valid variable.\"",2,50,82,
   21797598327428708818,"Hello"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.810403979903741*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","ivar",
   "\"\\!\\(\\*RowBox[{\\\"2\\\"}]\\) is not a valid variable.\"",2,50,83,
   21797598327428708818,"Hello"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8104039800186853`*^9}],

Cell[BoxData[
 TemplateBox[{
  "GaussianFilter","arg1",
   "\"The first argument \\!\\(\\*RowBox[{\\\"Take\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"5.58`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.58`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.58`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.58`\\\", \
\\\",\\\", \\\"5.58`\\\", \\\",\\\", \\\"5.58`\\\", \\\",\\\", \\\"5.58`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.58`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.58`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.58`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6199\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"6164\\\", \\\",\\\", \\\"310\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
is neither a rectangular array nor an image.\"",2,50,84,21797598327428708818,
   "Hello"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8104039801396275`*^9}],

Cell[BoxData[
 TemplateBox[{
  "FindPeaks","arg",
   "\"The argument \\!\\(\\*RowBox[{\\\"GaussianFilter\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Take\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"5.58`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\
\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.58`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.58`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.58`\\\", \\\",\\\", \\\"5.58`\\\", \
\\\",\\\", \\\"5.58`\\\", \\\",\\\", \\\"5.58`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.58`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.58`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.58`\\\", \\\",\\\", \\\"5.54`\\\", \
\\\",\\\", \\\"5.54`\\\", \\\",\\\", \\\"5.54`\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"6199\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6164\\\", \\\",\\\", \\\"310\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", \\\"10\\\"}], \\\"]\\\"}]\\) at \
position 1 is not a consistent list of real values.\"",2,50,85,
   21797598327428708818,"Hello"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8104039802715626`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"16\\\", \
\\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) \
is longer than depth of object.\"",2,50,86,21797598327428708818,"Hello"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.810403980380512*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"0.00002`\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,50,87,21797598327428708818,"Hello"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.810403980471469*^9}],

Cell[BoxData[
 TemplateBox[{
  "FindPeaks","argb",
   "\"\\!\\(\\*RowBox[{\\\"FindPeaks\\\"}]\\) called with \\!\\(\\*RowBox[{\\\
\"0\\\"}]\\) arguments; between \\!\\(\\*RowBox[{\\\"1\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"4\\\"}]\\) arguments are expected.\"",2,50,88,
   21797598327428708818,"Hello"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8104039805664234`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Fit","fitm",
   "\"Unable to solve for the fit parameters; the design matrix is \
nonrectangular, non-numerical, or could not be inverted.\"",2,50,89,
   21797598327428708818,"Hello"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8104039806603785`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"EITmax85", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"data2", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"{", 
            RowBox[{"4", ",", "2"}], "}"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"0.96", "<", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<", "1.02"}], "&"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "//", "Max"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{
       RowBox[{"Length", "[", "data", "]"}], "-", "1"}], ",", "1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"EITmin85", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"data2", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"{", 
            RowBox[{"4", ",", "2"}], "}"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"0.96", "<", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<", "1.02"}], "&"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "//", "Min"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{
       RowBox[{"Length", "[", "data", "]"}], "-", "1"}], ",", "1"}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.809979671950946*^9, 3.809979757681548*^9}, {
  3.8099798081079626`*^9, 3.8099798118566246`*^9}, {3.809980026994522*^9, 
  3.809980029056878*^9}, {3.809981793593901*^9, 3.809981799419631*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.6367254817454137`", ",", "0.639900523844604`", ",", 
   "0.6673103891785602`", ",", "0.674329455232626`", ",", 
   "0.6678079948953101`", ",", "0.69452101672786`", ",", 
   "0.7075803334659773`", ",", "0.6967522913327147`", ",", 
   "0.6799448873093973`", ",", "0.7094291751415712`", ",", 
   "0.6936837572811632`", ",", "0.7124374545545591`", ",", 
   "0.7090736710374216`", ",", "0.7168637238714025`", ",", 
   "0.7430212059301561`", ",", "0.7105008742715024`", ",", 
   "0.7292265413149976`", ",", "0.72204493907352`", ",", 
   "0.7211963510437565`", ",", "0.734418914264547`", ",", 
   "0.7331358390256413`", ",", "0.7184314748546315`", ",", 
   "0.7511833112190385`", ",", "0.7542881504511272`", ",", 
   "0.743229134372618`", ",", "0.7469805720052087`", ",", 
   "0.7516562387289197`", ",", "0.7512510290670992`", ",", 
   "0.7501297911133737`", ",", "0.7456243903937467`", ",", 
   "0.750274708345696`", ",", "0.7444269375512721`", ",", 
   "0.7439760686104608`", ",", "0.7494963994171628`", ",", 
   "0.7652883071593232`", ",", "0.7574429162278922`", ",", 
   "0.7662018691080729`", ",", "0.7657515158202806`", ",", 
   "0.7602049398691918`", ",", "0.7471478358252112`", ",", 
   "0.7599324048462106`", ",", "0.7590528577057426`", ",", 
   "0.7618585925297318`", ",", "0.7522580806456293`", ",", 
   "0.7542611185961872`", ",", "0.7600509846346342`", ",", 
   "0.7487338508300837`", ",", "0.7674229013505185`", ",", 
   "0.7533119194642428`", ",", "0.7544699484731002`", ",", 
   "0.762397699120628`", ",", "0.7673705470910046`"}], "}"}]], "Output",
 CellChangeTimes->{{3.809979675897056*^9, 3.8099797638494387`*^9}, 
   3.8099798189632177`*^9, 3.8099800448335686`*^9, {3.809981802122393*^9, 
   3.809981815481393*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.514774593037577`", ",", "0.5080468480960981`", ",", 
   "0.5051675534066794`", ",", "0.5023715890361434`", ",", 
   "0.49116446135896513`", ",", "0.4808343462215752`", ",", 
   "0.4949019786511078`", ",", "0.48585257924285447`", ",", 
   "0.49222016103414945`", ",", "0.4819651326760721`", ",", 
   "0.4794421131403186`", ",", "0.4945519364178632`", ",", 
   "0.489504587193947`", ",", "0.48134966004136204`", ",", 
   "0.4768661967563177`", ",", "0.47720373278449074`", ",", 
   "0.48670622553499715`", ",", "0.49123482500621596`", ",", 
   "0.48708286529539435`", ",", "0.47810225414540675`", ",", 
   "0.4815936531461673`", ",", "0.49111083479937057`", ",", 
   "0.48870067492721714`", ",", "0.482922809963048`", ",", 
   "0.4926100555391967`", ",", "0.49471884187228476`", ",", 
   "0.49791721060575667`", ",", "0.47398906850785694`", ",", 
   "0.48713265548068746`", ",", "0.47182279880871925`", ",", 
   "0.46281018450092193`", ",", "0.4639072535976384`", ",", 
   "0.4881270848672548`", ",", "0.4781731158364046`", ",", 
   "0.47684927366921187`", ",", "0.4747354283468014`", ",", 
   "0.47033502399845256`", ",", "0.4958767062406923`", ",", 
   "0.48669310900336`", ",", "0.47380760392194554`", ",", 
   "0.4852302528716809`", ",", "0.47194112027836177`", ",", 
   "0.46905129993904615`", ",", "0.48970032042079825`", ",", 
   "0.48160974234416365`", ",", "0.48728889566924044`", ",", 
   "0.4583972654805506`", ",", "0.49883494980883736`", ",", 
   "0.4997023260804172`", ",", "0.47462282499581887`", ",", 
   "0.5182316483779061`", ",", "0.5016002537709181`"}], "}"}]], "Output",
 CellChangeTimes->{{3.809979675897056*^9, 3.8099797638494387`*^9}, 
   3.8099798189632177`*^9, 3.8099800448335686`*^9, {3.809981802122393*^9, 
   3.8099818212103434`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8099837884410853`*^9, 3.8099838317255545`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwV0n0w1Vkcx/E7Fe2qCGGVhzxEiVhCLd1Pq9geqLYiKw+7bpSITZPNyHOZ
0mJSSeneiiL2SjZERZuYpNzKhiR0f7+IbfzOaZO9amnP/nHmzHte3zNzzswx
C43ZHDZFJBJtYOv/ffeOqumz6wSoeZ/Y3lulROdSr39C7ggokXoaaVcr4aH2
fLCiWUB2vFXfatZlHRGdnx8KeGxERtMLOegXf2re2C7g3Pi+MDnzpLis6vPP
BVhUHxqizP/yMr1M+gTYXn9WJrXlsNmg8iQGBPwZYNfWzrrhjcehnLcCulJE
650TlLCqfbav/52AhfmyvtYiDrlHwiX2KgFOZbJSm7+V+Oiv2pw8KSD1uIXS
9RKH8EWZHo+nESx8kik7wVwxPs/RdAaBe0XR0CXm37SWm8VoE9h2ne73WsKh
8Cy07xgQlK6WiO5HcNCMfCrSMiFoDQs1PfmKQ5ybhAZbEhx1idw5yOa5GR/6
r9oQRK81OKt4r8S6lxmPJx0IXH1+NZ46qkSN/Ks7G1wJVPfMy8yLOZgnll2V
rSC41H3E7pY9h0wfd5mwiiAV2i05zMeMFVnidQRyzzDV/kgOwUJIYvYmgg07
eEWAA4fWhndRfX4Ew+KaRiVzx5z0wCVBBFdkAzq7SzjIQvS8kyQE0nyHhI9s
Xt2hxE0RQdATvSchPYpDrGj5YpOfCUQ3TZ7PusLhxZPWudFxBBF7Nh0/w3Pw
uhio0XCQwCYlbWYC86t7hfFZ6QR15td/n+bIYa5HynDQUYIlna89h5in6eh0
l+cQvE02OK4w5SFwRS0Tpwgadb0O+ZZy8LvuXOtzjqDdt/uIeD6PxvT7JdJC
giZYlRgNcLDZ+sPpkSvsfakHVFtY51m+zVhRwe5bb3L320Aek6MH2Y8hqC/U
rwkv47C7WTO89xZBHlEfHWfznacu+No1EixN6MnONuMhDnf0TGwh0E1LqpfH
cChzaVrapiDIh1HBJHOd6X6Wxh0ETv4LfbsGOSR1vdHd00Nw40KiPNqcx2BJ
/NR6JYF37VHJwG/sPx6Y8X7mEEG56nNjH/Oba6RcoECgsJPXZTtzsDK0b5eP
EnS+cc6tDOaRPfzH3X8/EpyfHSpkWPCYCCz1LxZR7BoeJAFDHL72jN2kmErx
ZN+yrbmsd9q5rRlTp/DLUdQ9YF2gN22liQbFRFTtlrYQHk8nHrl6zaLoeniw
P6qAh9rgKfvo2RS3gwX1i7Ec3BTB1nm6FBoJGSlaC3jE1FibNuhTZK4yEBue
43FZRvUHDSnmTOmsTmbek1GnqWlMIfkysv0Ga62YNHWX+RStyl2PAn7i4blt
/WSQBcU1/U8Wn9n5eMwZO2xFUerfcGGZlEeFde9I+SIKI6nzMrVQHrxW8UCH
LYW1VN3JsJuHoSq6d8KeglQO5H9hzcPnlWvHAieKsbH4hpWs01tEbT4uFOqx
2wYOsL5x7UHT/uUU1XvdtptJeIzk596WulN81zRuVa73Gmap26uaQXFvXtaP
cS94bIuwlI94UHzK6xOLz/M49v1IkZ4XRdBkW8svrO8urylYsZYi6qXm1krW
H8yST4R5U9yycF8d0sNjscaaY1kbKapKElPOsP4PfO6NzQ==
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.9591635977337112, 0.5422222614349457},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.9600906515580736, 1.0194220963172806`}, {0.5462900605089328, 
   0.6276460419886768}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.809983790526207*^9, 3.809983827566062*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"abs85", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"data2", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"4", ",", "2"}], "}"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"0.96", "<", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "<", "1.02"}], "&"}]}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "//", "Mean"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.8099798167426443`*^9, {3.8099800389769225`*^9, 3.809980039317211*^9}, {
   3.809983599666744*^9, 3.8099836096161623`*^9}, {3.809983744431137*^9, 
   3.809983746873885*^9}, {3.8099837825147867`*^9, 3.8099837826567173`*^9}, {
   3.809983833527687*^9, 3.8099838538641024`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"power", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "2", ",", "2", ",", "3", ",", "3", ",", "4", ",", "4",
      ",", "5", ",", "5", ",", "6", ",", "6", ",", "7", ",", "7", ",", "8", 
     ",", "8", ",", "9", ",", "9", ",", "10", ",", "10", ",", "12", ",", "12",
      ",", "14", ",", "14", ",", "16", ",", "16", ",", "18", ",", "18", ",", 
     "20", ",", "20", ",", "22.5", ",", "22.5", ",", "25", ",", "25", ",", 
     "27.5", ",", "27.5", ",", "30", ",", "30", ",", "35", ",", "35", ",", 
     "40", ",", "40", ",", "45", ",", "45", ",", "50", ",", "50", ",", "60", 
     ",", "60", ",", "70", ",", "70", ",", "80", ",", "80"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8099799104561543`*^9, 3.8099799918962603`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"rb85", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"power", ",", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"12.531885282826405`", " ", "794.76728224", "*", 
          RowBox[{"10", "^", 
           RowBox[{"-", "9"}]}], " ", 
          RowBox[{"Log", "[", "EITmax85", "]"}]}], 
         RowBox[{"12.531885282826405`", " ", "794.76728224", "*", 
          RowBox[{"10", "^", 
           RowBox[{"-", "9"}]}], " ", 
          RowBox[{"Log", "[", "abs85", "]"}]}]]}]}], "}"}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Rb85\>\"", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"rb85min", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"power", ",", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"12.531885282826405`", " ", "794.76728224", "*", 
          RowBox[{"10", "^", 
           RowBox[{"-", "9"}]}], " ", 
          RowBox[{"Log", "[", "EITmax85", "]"}]}], 
         RowBox[{"12.531885282826405`", " ", "794.76728224", "*", 
          RowBox[{"10", "^", 
           RowBox[{"-", "9"}]}], " ", 
          RowBox[{"Log", "[", "EITmin85", "]"}]}]]}]}], "}"}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Rb85\>\"", "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8099798309393563`*^9, 3.809979940038619*^9}, {
  3.809980043314198*^9, 3.8099800445054607`*^9}, {3.8099805820744896`*^9, 
  3.8099805839154196`*^9}, {3.8099810129051514`*^9, 3.8099810213190255`*^9}, {
  3.8099818129965005`*^9, 3.8099818258890066`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEf7GPyfgjUmB+2h/GXRP5NjMg6AuUzOFQsu37t
Wus5OJ/t6qTKNa0XoHwOh5qXc6Qubz4H57OcXLd3t/AVKF/AYR/Xrd7IoGtw
Ph9fIMOaMpi8iMO8a9XbK1svwvk269aWXF8EUy/hcCr7w+y2d5fh/CWd4iqx
qtehfBkHrX2TchMnX4PzN2VuV858ApNXcAhbdc/7kekdON9ObZ93+kWYeiWH
S52KF658vgnnqwTN2tZz6AaUr+LQFXPthts8BP/Ni75V68/dgvI1HIS8bd/v
n4Hgv2rlnn5aHaZex2GZuVnzg7a7cP43/rxeabZ7UL6Bw4F9zw82292B8/2+
1n26cBPGN3LYxfA+1WvWXTjfbePr0BWdML6Jg5aDN9+0aAT/U7ZNzuGFUP0N
Zg58whdzuxPvwvkiwidX6RfAzLd0qPIxXVQfi+BPa41Z0O4IU2/tINA3P2fT
kftwvojRW7+bbTD32zn80OS1qX95H86XU69uibkOU+/o0Oe4dLr893tw/pFP
U9/teACzz8UhKfSQjsCbe3C+x5mmsvATMPVuDqtk5L6rWt2H8z9wP6v7tQnm
X0+HM8IJfQys9+D8plt+9g8+wPh+DtNebm1TVLoL51eETZvlx/sAal6gg9CF
D1817t2F85nmMHd08cL0hzh0rT+09bv/fThf8M8jW0eeB/YATaH3FQ==
         "]]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 80.}, {0, 1}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 80.}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Rb85\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.809979842286559*^9, 3.809979863618368*^9}, 
   3.809979902591506*^9, 3.8099799405313745`*^9, 3.809979995231926*^9, 
   3.8099800460657396`*^9, 3.8099805844287195`*^9, {3.809981016423252*^9, 
   3.809981021709629*^9}, 3.809981705413524*^9, {3.809981821772812*^9, 
   3.809981826403755*^9}, 3.8099834821957064`*^9, 3.8099836298355613`*^9, 
   3.8099837537113953`*^9, {3.8099838435475273`*^9, 3.8099838561256*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEf7J+c9Pa7V3vFHsYPmWS+ZPq5q1A+g8O2/se+
l8RuwflR6f/uisfdhvI5HKa4FT7atRzB56r9em+b4AMoX8DhzbyvSyqdEXwb
uSS2V9/uQ/kiDl1PTzTc1r4L56dsWCv07RNMvYQDw5q0W9EiCP4SwX/TZafD
+DIOXt+S/tXORPD3qH1ZXZ/3EMpXcPi/NGSKhNZjOL+9UsY1yRwmr+TgJlzX
v/k7gq+3/1bbtTAYX8XhxaqCtbtLEXyNXzlB3nMfQfkaDnbbbq6YkI7gPynL
NYqXg6nXcRBSWdwz3ewxnG9YqzajfhaMb+AwSXbi6WnTHsH5hrf/vIjaA+Mb
OZjd3b/G/RmC3+P2YenMvTD9Jg493T1LrU0R/JiYjE/766D8BjOHC177lf4L
PIHzD1+SmCW/Babe0sGENSnyytlHcH5Y6Vp/B7h+awfnl5PinhQ8gfNZLtWJ
WQtC+Qx2DpOe61ue34zgRz1bxv/0Eky/o4PA4SXXZC4i+L+EdtxTaYbZ7+Kw
6Pn3lRy3EPyI7I28mQ4w+9wczPZmdu9pQPC55rWfWmALU+/poJO/yO7NUgS/
5Fiobf1JGN/P4f3mOV/fKjyB85ff0fr+Cu6eQIdkZn3Jb+8ewfkzFv/69+MZ
TH+Ig0/L6njx04/g/IIS/gvyOx7bAwDSzv76
         "]]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 80.}, {0, 1}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 80.}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Rb85\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.809979842286559*^9, 3.809979863618368*^9}, 
   3.809979902591506*^9, 3.8099799405313745`*^9, 3.809979995231926*^9, 
   3.8099800460657396`*^9, 3.8099805844287195`*^9, {3.809981016423252*^9, 
   3.809981021709629*^9}, 3.809981705413524*^9, {3.809981821772812*^9, 
   3.809981826403755*^9}, 3.8099834821957064`*^9, 3.8099836298355613`*^9, 
   3.8099837537113953`*^9, {3.8099838435475273`*^9, 3.80998385622855*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"rb85sub", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"power", ",", 
       RowBox[{"EITmax85", "-", "abs85"}]}], "}"}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Rb85\>\"", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"rb85submin", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"power", ",", 
       RowBox[{"EITmax85", "-", "EITmin85"}]}], "}"}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Rb85\>\"", "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8099834625061493`*^9, 3.8099834890518417`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEf7BmypqRu+bPCHsb/8LhT8e6cVVA+g0ND+vfT
h4O2wPkWv2T1j8htg/I5HA6w2NskFG+B8xk+psRzee2G8gUcFvhvjHy6cB+c
37H35ieXOzB5EYcN8bYNx/u2w/kK3ZZH+KX3Q/kSDhZXi2u1hXfD+Rw7Xwea
PYDJyzgI+O9MPcyM4Acs/JCq2ngAyldwuCH53snt1mE4PyLxwxPvRJh6JYcQ
DzsrB7FDcP6R/3emvNE6COWrOJRwfZKW40fweXTsmVIPwNRrOPS8VTsdOQ3B
n5DctbRlC8x+HYcnVpO/7Xp6BM5XceKzq/A+CuUbOEwwv1sr9vAwnM+jc+0K
cwxMvZHDjtDVWlZfEfwTz7tZPz+H8U0czognpJoeRvBNpjJET9aH8hvMHGwk
DvN8PY7gJ0yelRLGAVNv6aAj8NZqws/DcP6XhQLyJetg6q0dVrhss3uz+Ric
n1L7M/TGJpj77Rw2fOA7dPviMTjfZs2e15KHYeodHT4kT7kXyYvgv1it/rEu
EWa/i8MWFuF12SzH4HyFrz8aZj6Hmt/g5lCwZsG2TudjcH6CWMSJTxww+z0d
fG5Mq57qheCryFqn+XHAzPNz6GguTCufegTOj9G+2nLvJ8y8QIeU1p+s1dpH
4fwZp0LdcgNh5oU4/AkyFzQJPQbnr5n3Kkz9xzF7APsr6os=
         "]]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 80.}, {0, 1}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 80.}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Rb85\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.809983469961383*^9, 3.809983489747504*^9}, 
   3.809983631887576*^9, 3.809983755472703*^9, 3.8099838580432034`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEf7BUebU/TsdhvD+P32M08M+XBASifweHDg9IN
EgePwPktXmcVtzMdg/I5HMKCT0c7zkHwhYy3bhONOg3lCzgwzbGP5LZE8Hdt
EWE+/O8UlC/icCWSQSWW/QScz/Jg8/ou2bNQvoRDQVSztmvOaTj/xtJQ4zWP
YXwZBy5mzZ/XpM7A+T5fPmkEq56D8hUclsWysK7nuAjnz3tf7rLuDsx8JQcv
pqI7z7nOw/kKyw9M1O+Gyas4xOzPdsr7juBz5Gr8q02/AOVrOMisrkp1kUTw
GeTj916XgKnXcWDgWvmj+cwFOD+0adVunjiYewwcrny7OkuF6wKcv4TJNolP
FcY3cvhS/2Ceky2C/2ib4+cV+2D6TRye/5L78PHKBTif60qMzPdWqHyDmcMz
Ke1ZF1MvwfkZR2SvcnyB6bd0+C1SmXUl/gKcr3krPTQmFqbf2sF327u/J0ov
wfltaptUH4pD+Qx2Dpm339ZWv0fwr6p6/VvgCtPv6GB5SeOIeSOC76Chy55R
B7PfxaH06PbQHVMQfAaJxS84E2D2uTnEueSeidqL4E9pjBPYfxbmXk+HFX28
h+SKL8L5rNVv5N6XwPh+DudUdz27P+USnJ+g/q+l2wDmnkCHC85Ju5WtL8D5
33affcH8EqY/xMHhUaznVYfzcP6T7c3piUwX7QHOZOu8
         "]]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 80.}, {0, 1}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 80.}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Rb85\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.809983469961383*^9, 3.809983489747504*^9}, 
   3.809983631887576*^9, 3.809983755472703*^9, 3.8099838581501513`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rubidum 87", "Chapter",
 CellChangeTimes->{{3.809195378070843*^9, 3.8091953783377056`*^9}, {
  3.809889932619795*^9, 3.8098899338791904`*^9}, {3.809896144437242*^9, 
  3.8098961484706573`*^9}, {3.8098961877733793`*^9, 3.8098961879333057`*^9}, {
  3.809896219606682*^9, 3.8098962198254457`*^9}, {3.8098962535869656`*^9, 
  3.8098963116202736`*^9}, {3.809896350245954*^9, 3.809896350620923*^9}, {
  3.8098964331812973`*^9, 3.809896433835808*^9}, {3.809896475999924*^9, 
  3.8098964768885927`*^9}, {3.8098966247654924`*^9, 3.809896625424595*^9}, {
  3.809896656020813*^9, 3.8098967383184404`*^9}, {3.8099800171117487`*^9, 
  3.809980018718978*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\<D:\\\\Qsync\\\\QOLab\\\\Data\\\\On Resonance Project\\\\Lab Book 2 \
(18 Mar 29 -)\\\\20-09-24\\\\87power\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Import", "[", "#", "]"}], "&"}], "/@", 
    RowBox[{"FileNames", "[", "\"\<*csv\>\"", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"17", ",", 
         RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.809103770975025*^9, 3.80910377485117*^9}, {
   3.8091939903849115`*^9, 3.809193992943684*^9}, 3.8093506243255796`*^9, {
   3.8093713334657145`*^9, 3.8093713481032495`*^9}, 3.8097202460140977`*^9, {
   3.8097203695676227`*^9, 3.809720369658579*^9}, {3.8097204005117846`*^9, 
   3.809720442844616*^9}, {3.8097205344000287`*^9, 3.8097205535628405`*^9}, {
   3.809722037372512*^9, 3.809722178348056*^9}, {3.8097222456281185`*^9, 
   3.809722249868085*^9}, {3.809723116027855*^9, 3.809723116242752*^9}, 
   3.809824396744284*^9, {3.809824643096903*^9, 3.809824866474016*^9}, {
   3.8098249810156403`*^9, 3.809825141917141*^9}, {3.80982520872534*^9, 
   3.8098252092941556`*^9}, {3.8098252834309735`*^9, 3.809825288675255*^9}, {
   3.809825347359105*^9, 3.8098253910688553`*^9}, {3.809825577979856*^9, 
   3.80982557824377*^9}, {3.8098283806763535`*^9, 3.809828382611725*^9}, {
   3.8098285622930927`*^9, 3.8098285659309177`*^9}, 3.809889925103687*^9, {
   3.8098950039762125`*^9, 3.8098950455083117`*^9}, {3.809978755873782*^9, 
   3.809978774044366*^9}, {3.80998002125735*^9, 3.8099800216571627`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ll", ",", "max", ",", "min", ",", "yaxis1", ",", "yaxis2", ",", "wcn", 
      ",", "ff", ",", "gg", ",", "loc", ",", "kk"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ll", "=", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"max", ",", "min"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", "ll", "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"Max", ",", "Min"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"yaxis1", "=", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "4"}], "]"}], "]"}], ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"ll", ",", "max"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"ll", ",", "min"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], "&"}], "@", 
          "Position"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"yaxis2", "=", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "8"}], "]"}], "]"}], ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"ll", ",", "max"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"ll", ",", "min"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], "&"}], "@", 
          "Position"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ff", "[", "x_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
       "Fit", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"o", ",", 
                 RowBox[{"yaxis1", "[", 
                  RowBox[{"[", "o", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"o", ",", "1", ",", "200"}], "}"}]}], "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"o", ",", 
                 RowBox[{"yaxis1", "[", 
                  RowBox[{"[", "o", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"o", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "yaxis1", "]"}], "-", "500"}], ",", 
                 RowBox[{"Length", "[", "yaxis1", "]"}]}], "}"}]}], "]"}]}], 
            "}"}], ",", "1"}], "]"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"gg", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ff", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "1", ",", 
          RowBox[{"Length", "[", "yaxis1", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"loc", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"FindPeaks", "[", 
         RowBox[{"yaxis2", ",", "9", ",", "0.00005"}], "]"}], ",", 
        RowBox[{
         RowBox[{"1200", "<", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<", "3500"}], "&"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kk", "[", "x_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Fit", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"loc", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"-", ".816"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"loc", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], ",", "0"}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "12.531885282826405`"}], " ", "wcn", " ", 
        RowBox[{"Log", "[", 
         RowBox[{"yaxis1", "/", "gg"}], "]"}]}], ",", 
       RowBox[{"yaxis1", "/", "gg"}], ",", "yaxis2", ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"kk", "[", "x", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "1", ",", 
           RowBox[{"Length", "[", "yaxis1", "]"}]}], "}"}]}], "]"}]}], 
      "}"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8099788377211666`*^9, 3.8099788378441014`*^9}, {
  3.8099789946282687`*^9, 3.8099790879855456`*^9}, {3.8099791963659678`*^9, 
  3.809979204304804*^9}, {3.8099794101242065`*^9, 3.8099794138287516`*^9}, {
  3.8099795264923563`*^9, 3.8099795310800915`*^9}, {3.8099801209228864`*^9, 
  3.8099801223317633`*^9}, {3.8099801541830935`*^9, 3.8099803564318805`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rb87p1", "=", 
  RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"data2", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"data2", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], "\[IndentingNewLine]",
     ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.5"}], ",", "1.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.4", ",", "1.1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Rubidum 87: P=1mW\>\"", "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.809983037664729*^9, 3.809983061458257*^9}, {
  3.809983128078476*^9, 3.8099831390118065`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJwcnHk4lW3XxgkZSqUkIlOK0EASkduQMpYkIiQyRBSPSpGSNCAhkUIikpSS
MpW1NYok0iCSUCHcO3uev/V+f73H7zjPda51Xfva+1k9w6sVeNA9eIaYmFjY
fDGx//3v0I9wk48bxCgporju3gckwfeam7zNXIxyXPWz91/kRR8edbWvF6Nc
vL75Jx/ZyGGXpoOpGOXnybawOQ9JwoXCj3ppIkZZ6XV5pDSaSoSY3XxmvVaM
0nF4dpwR6kkP7Gc/MxKjxH2dqK3fRxLX9cZ9zNeIUTYIr5/zQP1Jccadx6vE
KEc4jIN9qH9QXss2WilG0XQpurJ5GZX4m/ll830DMYoazdlAiLqUbMIVfX0x
SvvHta+XCUlCM0lzpFxPjKLvslnqtjOV2MB5abxUV4zioLHbwBH1ndH7k24s
E6P4xQ6U2AWTxMEx+Q+qOmKUh08/ZB5APXVvjfpVbTFKdISqYjvW3+r1jFTU
EqNY7WX0StSQBGznNWVqiFFCx+3ZuThP79sbcvLqYpTARt7vG8h0m03eF9TE
KMR/HXNfYd6cxtHbUqpilDSxlJcPUV9hfJGZpCJGkXY/ayDuQiXsKo3shYvE
KGGd60peoO6v/fnycSUxip3ckqx3yHHXjg8xFcUoYpRHmUtEJHF5vobRfwvE
KFq6sgcHUL+X+uIkqSBGGb8ztPYRztc6I+x9xDycJ8n52UvkoeOzl4zOEaPE
yknvPBdDJQTTDyL2yYtRBCFeH/6gvihiZ+PgLLy/8qQ35zDfeJgj4ycnRnnw
98Gw3CP8PHcXefXKiFFmtB2PVEMO/WhbvlNajJIpYT+6bDmVSHL+Q++SEqPk
7d549T3WF7xIs9sqiZ/vF+br9ag/sViT3TZDjKKS6//EGrnrUc/gZnExir/V
JY1YzPviNe1/ViSCI5c67qQgz3aw4CfyRdDa6ucoHUoSNmZn8o9yRHDmwJnm
CtSP6HWYHmKK4KpxXfJjvL+7yko9YTQRrJk6/7Ed9UGZPdF7qSK4d8fR7iT2
W8i5PcdnUgRm0nUfCTEq4TRGves+LoLMLTf/E6sliZO95o7Of0Sws3Lk/HbU
a9+e/m03IgLjsdALS1Efa2hPtvwpAtmT5lZBqKtXKmqtGxDBe3XdoVrM33HN
r3llnwh6Ux7TYlE/n1q+e/lXERz+WPf+C87/7DjJVv8kAh3C0CYe86bDzXIX
dYugePYrjzBVktDdnbR2XqcIOmfBv1lhJOHr3PZB5p0IXGelDVejP8tiQZT4
WxGw2xUXVmL+awPfWdxXyFOJn+xdqQRPtaxi+rkIyv/WjP/MpxJrZk/Z/wUR
5Bj42M3RpRLBfNPh4aciWDtK/RWA/msTJ0/1N4jgitMcHU3UO/tbl3x6IgI7
o6OKK5AlOxSaOh7hPPwxSWNk82c+u14/EEFQZAOlAeeLulfKaL4nAmvHhrcc
nOdW4UR2XaUIJKVUymaI4/fh4ro1D27j+TNOn5qFPCcxsaPilggKvnU5iLDe
LupN+M2bIvidFl4Rivlx/vNkrhXhfObOGk04372t3mXZ10WQ8nVveetjfL9W
JbZpV0Ugtsdk7TfkRav//ki+IoJf+iKmZiyVcNEwOZGQLYLozmDfHMxLmnti
8eFLIph7WvPbnCf4eyJ6VReZLgLFdlurctT/knN2hlwQwZPQWLoR6pqD//8A
Qerndu17+/H34UPxJa9kEbRYEZ6zt1KJVMqYodspEcx57lORiOeBB8ZtDidE
cDHL9cw5ZHpxfKjNcREcdHoz0of5K7JeSm44KoIuSbHPI8j+SfIlxrEikP4a
oFyC/svRnoRBtAhmGHUENGP/1r03+pdGiaCsqejDI9QF20ePqUWIYNmk/XUZ
PSphbGu0aGGYCGT6JC68Qj3U+HitfLAIXLTsg98jF2i/2D4zUATJlvzlSnUk
0TV/Nin0F4HcRv29hlg/U2JnOms3vr9OO+4o+i1ohSuou0Qwr1q82wn9h4Z/
vx7dKYLgg4J1W9Bf9nH1vp/uItijr0BGov7tRZz4t20i6JlcEPWoa4qYW9tS
1O2C5wmJmp2F+qZbcpbtjiJIny7tqcP7Opazo/fFZtSDVPRrUb9/puDIUzsR
vB0YqjWIIInh2F8LHlvje7m+vclsBpVQDl718N5GEWwTu/QyA/u77jy6tXyD
CIbkvsc6oX7anvK3aL0I5OflM2bVk0TdOtkLeSYiaA5srDqNeRPL3JdnGmFe
+9FZwejXUrr+4vwqEcRavnaU0yAJz5kjAUkGIrBf4bfWHevTmYbCY3oieNBu
o6O6jUpQfh++HrNMBA0/HrkfRp35udksQlsEfcEJQ2eRDd5Ifw7SwN+H8LYN
pugPqHP7z1dNBN1Sw0ql2O/K7fx5O1VE4FvmlN2E/ra8oXuuSiI4mpSsILGC
SojOGThvXiCCETkJydnIJnGxo1bz8Pfq7xtbKvr3hz1LWS+PvyefNcaWoF60
a+bSNXI4b3+T1MvDVOKjwzaKnrQIXm2g03QaSELG/KqflqQI8i1OnjFF3rji
J1dFHH8PjPsjKg+QRIyK/tX5QiG8O938lIfz3Zb9b90snhAO7os360C9n9PU
LcEWwteWyDcJWK8wLnmITxfCWn+Nk8HYf/M3V3nGPyHsCvRdqyFBJeLbcisn
p4Sw3Hm0/jWe/0Hjjy2//woh1UCjpRP5V6Xer4FRIVTmdxT0YN7i69Gnv/wS
QqNPXqUt1m9La9T4MCQEBQvC6Drmn4mXeNb6QwjLMqluso0k0RDh4tPSL4Rr
F1Ut4yNJYmr3FVZDrxBmHjqoHYL1S10Gcmo+CyG95LmUFfp3Weoa3/0ohLaQ
3IGjqF80PNRZ+kEIjrM39VKw/rlaw4GCDiEkBOp+7cV+rNkz5K60CaHuVU77
ELKhwOn2xTdCeJrr9uMK5u2dvLzp7EshaFaXrruFebnf+38mtgihZc1diQbU
2zuWnTzaLIRXyz2mH6Mu1hyldqhJCMnqTR+akdfdr2sIqxfCFyfGKWV9KhFe
JOa197EQ7ndvPukXRRI3Mhzp3jVCyC+J+hOF3JOYneVeLQRbpYwY7SaSkD3Y
t8q5Sghi27av+It5Vnt03tndEUJ0i7dmKfr/2xa537JcCD9oRb/5qFcQT2au
K0V/sscrKUkqMbBaVLqyWAiZ+6e9v6B/vqaDzfJCIZQU7L/V6EYlHOZlDahf
EwKU3b/3AvmE2Lf4RXlCCN52R64a+9dQtVXm5Qih002yiIL8ZzDiiUwWnqez
4e0A+tW6aneIZwhBL8iwkzhIEttbBFROqhD62IX9VNTPPtycMX1OCG5Dbyi3
8fxNNy8Z/D0jhMCmDrlY9FOzvrYOJ2F9U+ydBtSXndYK6U8Ugj09c8G0Nkn4
xIRLfIoXQlil2pYK9F8KfFTcESeEjroNSrrbqcRLd/7G14eFEHPEPv471nNs
7fuaY7BfTPfB38ir1mbE1R0UwqT3/n0kctDSLwsfHBBCluUlzbKnJHF1geaj
iv1C6DJU8biP99Uhsd/tZogQNv475tiK+gz6w8n8ICGsMFu0gIL6+hFuanaA
ECJrqAZqBlTiQI+dXpqfEB5dsezuQv3my/RXyT5CqFF/0hN6iCQ+134KTPDC
+9h0OjkV551Vpi522EMIT5LkXxs9IwnrK6GFkduFYLX4EN0B8w6nPNgQshXn
140d245ceZjzxd8Zv383I6ruY/2PYNvDXg5CWKPv6fEB8xU90+a72Qvheaha
CwV1x8091Q62Qojf6/xAS4pKJJoucbUhhGDkYp+pj/xoeci4uaUQBgd8K85h
/qhS9TljcyFY6jHHR7B+iTRbx8BUCIwvnOx81N1Z1s+XrsX+SzXEWKif+3Nh
j9oaIRimNJ+4i/rTL918xZVC2NTo56fUTBL/3qhek9cXgvGhQJou8vL6fetn
6goht+T4BXPk3RX3eoRLhaAkbN7RifWZV5nRLE0h2J349dgX9dfnibnUJUJ4
38a1+ok6N+581ehivA/noqGTqK/Z3+X4cxH+PuTZz/oTTRL7vBf/6VUUwjP5
srmlqF9zDDrTrSCEsUr78lrkTvMqrfY5eJ5VInZ9HO4v+ozmF7PwPfu1fPyC
uvliK9+nMkJ4+19B+BhylNw5Tq2UEAql08R5yKXcztx7M/D7rlt8/DvWfx1X
NikXCaA56VjvBkMqId+3t6uIL4BTde2vVwNJ2LZXRuVxBFA7sKORifd9tIk2
K5MpgAcX3zTtRH/VXcs752kC2Lu65U+tO5X4eT1lcxJVAPxBY50jWK+U/n74
2KQACr8st1o8k0o4JyxKihkXQETU7h35qJ86EKAe8UcAF+WuFa8+RiUe+95p
ChoRQJ1eu+3c/0hi3GV6l+9PAbgkVC5+j36NjRZMjwHMY7SXbsY8j5VnLrv2
CSAqSS5lG/KFJR1rNn8VQPLm7burcb5meaX3Vp8EEHS+87gihSRoAv+I9d0C
+CfLDVXeQSX0pm7LrOkUgOEDbaIN/X4D1DK9dwJ4/rBr3Ufk7PfmdlpvBXD0
iFvHGcx/03x6UOW1AGQCW9Ke4Xz8++0n5r8QwDn3xYun0G90Q1F1FgXvbzs7
+gb6Qy751Us8E4CwosXqJva/frJ8J79BAB4P8r7UIH84SE7Tnwjgh6XWoxY8
v1SAWebkIwFk2SbKfkZ9g1vSyt8PBLDnxslv7Zh30LqtbeAe3sf850KHWJK4
tWZB2JdKAZzsW1n0HfVeTV+pD7cF4HTYrj8C9TkKZSWtt/DzmbSkbFmJf/4S
nyJabgrgr9zROjfkuH+m3xuKBFCu3HTfG/nez5PHa64LoLFZXkZOmkoMdbUu
untVAAX9OuPzkZWfKzwuvSKAiuHnObHod6nxcS/IxvfwfGL/Z7zP0yWlZM4l
ASTE3Eo+i/qT7In0i+kCmP3+VprNcSoxcXqd/tkLAqDoGu4kME/rv8Q3iWcF
YL3TJvwm+j2D3uw7miwAHdrdUrKFJNJ2zJtx6BTOW0bfKP6cJCh23jfCTghg
33Ub2p7DJMFYW2K597gAim6vaInAPH2dv73eRwWw0ane+j3m7VE0OeoeK4Bv
V77d3oL1OZInFJ2j8b7vBKwZRP0t/dVDuygBSK0rXlqHecKROdssIzDPbNN8
Fw8qsfaT14RJmAC8Ek9o7EQOe1V8YWWwAJTU/927gXmFj8eWLw8UwBIu3+Eh
cneZ8Uv1PQJ4khK85RD6pXPj9y7yFcDpYOmClzifJf7Fd663AKx8JhM7kKOP
yBfIeOJ9/Lh9MA395SGe5uI78PPr/rzpB+p9njc+c7bhfZbZ99quohLztoz+
N+0igAuP/sj9Q91+vZHCX0cBvP4rnOQgH9c9fn94swDkrQ98zz9CEtWLXjj3
2wlgKNuipQXzR6Rnj/VYC0Ck9Wh8WTyVUGF7nO3YKACW5kmj9+jfOlq49PUG
AfimnVud+4Ikkr/+pjSvF8BO/o+CVOxf37rav85EAFfmW5+dcZQkJuvjeNVG
AvCz3XJtB+Zp32m5WrFKACW872fL0O+VL2d600AAbSpSne4yVCL9wo6P+Xr4
3h53XlreSiVajhUcyl6G97tWKXcf6sz9v+TTtAXAPX/vWCSygc+qu8kaAqA2
bPU7ghzgdNQhQU0AS6dVXDa/JIkrGyi/YlUEIK1l97gA+7fpyyZHKgkgLDpS
Jgv9YqrumiELBKA2xNCOR7/JrOvP/OcJwKBVRrMe/eG8YR8veQE0baq1a0Eu
+mvI3iaHv3e7dhorrKYSPX2HrzhI4/vQ8ek7spNKyLxrNraRFEB4i9JdlTiS
sHoq/cFcXAD1ms+6RzD/vyq3SGMhHyo6MrpbB6aIioJ8OQMeH/4t+ycv84ok
vqcP3V7K5oOxt77cFsyff8LAXo3Bh7tFWeOHMG9LZOyQ4jQfxrL31PNw/gS/
ZyflST7MNrnO3Iv+h64zl8yc4EPuXH1qOPLvjdsahaN8yHzrHNWF86muuurF
+sWHS0yJRWYJVMJN/SedHOLDH5/531PQnzJHP3v0Bx/ymDrXJ9DfKIxZ/bOf
D+fiLmyox/nIqaZ3vb18WGIg2fsWWeeHZHj3Zz7MeK338g7We3e6Srd/5IPU
GhOlSdQzIPfWiw98+O8JWdeE+ovqHzZPO/gQH3OnfccxkmDf0PtR28aHK60Z
01qvSWJlZnTCvTd80FV0Xx8nSyUCTzWqlL/kwyrH93rn0Z93SKKuqIUPGk5z
r41i3rsAF4+8Zj4EEwW2bp5UQnz7lX+XmvjALdybwUXd1GYg43w9Hy7U5Z+X
WEMlIox0DZMe86HxkvmhH5hXrHXo7bEaPvA3VZ+KxfpPCg0hMdU433LXzBPI
cjNmSEZU8YGuyLhxFpmYdroZdIcPG+0U2odx3tihy1a+5Xw4/ud8g+lxkrjT
3d/nUcqHr1bme22x38DzZcdci/mw/H1xpfIbkljwKEppcyEfhjhdz+h4PofS
ukdW1/hAXqkbt0D9xGWx7evz+JDlOpjqilyT7Di1OocPC/z5ypo/p4g//2Wn
6WXxYdxGYB2H+Wr7+vS0Mviwi7kkYMYqknD30HmtksaHxA+71PXlcB/dFBk0
/zwfTsr2bP+F8z01eSI2K4UPqn/nHOTjeag6okKJ03yw6tScasV+yxf+/99w
Am5ER60r1u+WyvpKj+dDvb7ukjrsl8noPTwZxwe3YfaPn6W4j/7SXvD7MB+K
k2eHhKGf+yniwUAMvkf6D+do5NWva12/HOTD0cxtktHxuL88EYx3HuDDs3cd
/zZ5UYn88s3nW/fj57nywb/LqL/PvbSsJYQPkwuG5nuhLnHu6/OGID6w/TaZ
H2slCbOjWgE1AXwQ2/jzn7QRlYgMDRdU+vGhb+WmyXnIJV6PrpX68OH9RhX1
++j/soW/vsCLD8Lb/QDIs83sP+V48GHDVhuHNpzPRi8j5uJ2PpR7Ja36iHxE
+cvcs1v58Obqcx/xRCpxV0bzXqIz3p9B9Z0KnGeQHYa/MHwIWvlxbNFbklg4
9vDPQXs+SDQUtzei7tTLPRNmywdmkJTY0QSSOPnWTnsvgf3t6j+4oL+2IR28
Lfkg76z07D+cd+zOJ193cz54h1wPvYt+9WvqXCdTPvyWSXRYOotK7EgNzbNb
ywe7cp7PZaw/f/yBieUaPng4zyhZvIYknoVzukxW4vdZ+gx/I/qnfWwPrtTn
Q1PMpuHNyLrOabOX6+J9vOw2UzxBEr4WPXfUdfjgn6N5QX0XlcgyWLJlkRYf
npd+WrEe9deqISNz1fkAnKHOOW0kwZtVnSSjygebtKKszzjvGj5LXVwZ34fq
+k5brA+esH7KUeRD/qRZ6ijq1/oveE8r8CEl5O7iDOz/4V03c3wOH2wbXorn
IUs+U80ZnsWHOZpvb8Vh/oZ7+4z6ZfjgNGPhhwrUowrvve+R4kMt27nuIfKt
i8yIjhn4/fqQXtSI/PUEIftaxAO1QMIEsH5O1PnyZj4PvHQMI9+hbuvfZVfH
4cGl4lSPT8hxWxf/rGbyYPRmmSYd/VVWQYkVNB5c/mZdVo3zD62qUr1J5cHy
PT/lqOhX0mDU50/ywCQwdJqN7DLXyjN7nAen51nXbGgniSTRWVrqHx7w5LNa
5Gbj/kJ2ZiaPIB947NpuRBJ/fyivSvjJg2aboUw11DU/7G2PHcD8tfSrdYkk
sZNSGRbZx4O7yxucLxtTidQHNKmQrzxIlzN0CjlJJaDYstT/Ew+EUUz7MtTp
mSnWXt08iDf/tsgR81Ykvf++rRPPP/+FaDuyf/SieId3PLDpePzHB/ny3gBl
m7c8uFA/uuEt1rduv/PY/DUP5mT7RtqdJAmBzbS78Qse7Nv69sZh9BsbW1D1
KTwYGDvZYPSOJEK1z1xc+owHw0+lD51DvWB+h75aIw8SFdkrmZjXNUOpVbEO
/QknDUTIM2n+wfK1PEg5X61Xgn6L4dszZj7kgd5G3ry7yIc+Um8I7/FgV+52
ncVrqUTZC/ONrEoe9IyJaS9F/vbo9DfyNg9szRo1DJHn3mo/OnqLB7/I9Jr3
WL8pR3Hhz5s8CH+TvW4I5zt2xq+mt4gHn6S0Vbag/35s+bbu6zxIk9U+MIb+
4X3kRNtVHmxT1PwE3riP7jRLfXGFB99/NnfqdZCEq32S7tNsHkh9GpoXgfWn
17W9rL3EA1fB3zmxyHXLFgTeS+eBlSCVtVAe99GFvqKyCzwoStSJOIj12jPL
CorO8uCim7cjE/M9mZPmeck82BQtX7MG/em/Tb9cOsWDwTPVUjcxj/L5ZOz5
EzxQWfs32RZ15utWhaTjPMgrtJvxCHX9OoXqY0d5MJFC3emBesBtH5eYWLxf
qRmEH3JOXulYeDQPrMOX6IUgt52bOBsUxYOotDO/rXyohPDoOh3fCB6YiTtx
q09RCZOwxBaPMB7UTlcOn0L//l1v/F2DefAl7gzrH/YrcpjHtw/E9yY52zQI
6z+aeedb7eHBooXSTgeQZVaUmK735cGS9Q9CbyeRxEaVvx9Xe/Ng6C535MJ7
koiRNYnW8+SB4/SMf+omVOI2J2GO1g4enI3bZg/Yr3/s1V0VNx7MqPmyqhVZ
4dscx/muPNA+fnnSHP2b27x+yznx4I/z6Qlb5PjG4mSJLTy49rz+Cw3zH1SO
afLteFCXvvvTX6z/dc24mW6N39fq1DE/9C9Oi989uZEHt759rRCgvi3+JfvX
Bh6wvMuzZ86hEmci5HMH1vNgzzrf7UN4nobdnmu/mPAgcNejjtTTJDHlfOND
pxEPVsQG/ErFvKWWo5Gtq3jgIrfgkgD9uwyNZrUY8GDrCG+4APWLascrGvR4
8PXqruEy5OezX9jXLOOBhjMM3Udm8WcNV2rzwJi3eqgO2XDS41SpBg/KGiXt
pZJJYu/3wiUFajy4Ss+cZbKbSuR2/G7MUeFBppLMzTCct/3Z6l0XlXjwqtxz
sA/rxe7HMVIW8OBl7lElzQ8ksa6oJTtxHg88RYtafDEvPENuzVF5HgSn7Yvd
i3k3End0HJTDeU9QTK5gXk9UQXiYNA80PcqJLPTL7vklvVcS541+OqCwjkpY
bVtV5i2On/+81gWpmB9LHLV1F3KhQPrjQD3WV6ym/HDicSEs4tDbFuQBDdkT
dmwuHOiNGViH9fPnuS+2ZHBhyWhr0UfUHcSu15lMc4EmlTqwBfUE6rDHSpIL
VWvFHJ/ifDWDhtPLJrhwZktHs1QXSfz+cPiS+hgX2uqojiysV2tpNlz0mwvy
UR9NxObiPvpQum3uMBdqwhZTNqD/7E23UJlB1LOeyM1HvSkrX1L8OxdipA+3
TWM+NWnoJqeXC4fcWwaXor4sxoCY/syF6oxP7YbIPoGx/eMfuWB2b+fPmzjf
Jfdnx4Y/cEEuY6f9uzMk8dJ25qL+Di5E1bhe3IJ+jvG22p42Ltip7HRd4Usl
Vi29ur3jDRcmIh2CjJGDFvycevWSC1yNRbF/cb6rEvrpzS1cqHtRZ/7wNJXo
oMWsqGvmwmaOf5kr+meMNL2ubuKC6X+OCicwf32P5L6KesynUPgpyAdeuorf
fMwFYNiMZiDfrM0tyq/hwsnfvid2dpPE51s/LLKrudBp/XVM3pRKzLqi15ta
xQXf1JDPcahbp0QfSb7DhYa+Z1+rU0ji8OHGBQnlXFB70ry6APXKYImHsaXY
jzjffw/5x06XrZHFXGj6/sO7A/spbr7yN7gQ+5t5mnah7mg6cN7/GhdYy8L+
uWC/xOW6y73yuDCv7tb0TuRHSodebMvhgrmNn+w/rB+d2RDgkIXn+zzvr8VZ
kljCEhdaZ3CBsd/r54x5VML9j9N18zQukKF59hYfSeLcl8tmxue5kPJ8Q0PH
HSrx9E3/J/0ULmwSXC1bgv5/dcv+W3qaCzva9vFzsN/yiqh5aie54L2JeWI1
6ruv1t1TTOACdTHcuYx5mefFnOWP4f2P/aoaN8f9Jc5xVOoIF9Ir06TqUOeG
ZacIY7hgOPGnd40f7i/efdqsg1wgqOmqvpi3z1GHQh7gwsCSuTI92O+aeaTf
6H4ufBY7TI9E/f2KJ9zBEC6UvPukZHSOJCQXi/J6g7jwTKFMnkS/mZzDuu4A
Lpg8vTKXjRzFzexu8/vf+81UEF+P++h478EXPlwIqQq5fA3zvn7Tln/qxYXd
uqqnSpHl2yMqaz248CG990AVsm1T7ZZ727lQkaz2LQfnPXpXMFK2lQsbM+p/
FvTg/nJ98+kiZzz/zHWyt1H/mXZJI8+BC2IeZsQgzqeU8PXpJXsuKNAOmzWg
7nxAy+e8LReC2BuKhrH+lG846xTBhWyHH6HtqD92eZRzzJILxQum+TM/kcS4
Jd8oxhy/ryZ+hpE4v8ZK+85wUy7cfcvarY+6x5KMA0FruSDbFWB0EvUL8l9k
fddw4VXpv7XnkZsFGrc9VnLhquGsI5oKVII2GbbJVR/vx3zO3Fn+VEJv4OFP
e10u3Fk1aFGKfr/33EQrHS7Mn5NvVYWc3Wyntl4L7+8rU78c+725n96wWh3P
U9Cv7Ip5/KJPnnqqON8zebk/50nC6JI6XVOZC04b+mn+qIecDM1SWYj3XdTu
0ot51w8+WDV/PhdeZ1O2DSF/2MNpl5vLhcFUcP+LLOVmu19iNv6+zOwot7qA
+6h12ky+DM7n8sbQDfngmp5SuhQXMta+TcnB/FuaS2wmZ3Bh7MDl/wqRe+eF
DPwScSA7O3RvOfIc8er4AT4HZJ90xV/G89r9Yyl/4XBgfunKjfWox/20ftLJ
5EBqr8aBtWa4v3Rd2NFK40BOsKpKG+pDLd1UCpUDSUWee/qxv3KNakbDJAd8
LR2PbEW/S8k+g5pxDpiHUI55IZ/Ovtda+YcDFTk2JwKQn5xmBpeOcEAzaLXE
thTcX2IIiYKfHLA/fu6+yheS0Aw6X5wzwIHozVsDDJA9d3RtvNjHgbATlWln
sD7VbnFfylcOZObXxi2ej/vL2qC4xE8cSIjQBtk9uI8urVp4tJsDyktX6cVg
vb4io+ZgJwecnx39p4r6Hkkrt7B3HBBTzEm/gnoO/exkwFu8n+AhC0oqSbwd
6Uz1fs2BOzUO/+pRF/Yo67m/4MAyK7/Kd9h/7au9r5woHKDeC7j/CTnscWWg
3TMOdOZP+8xMI4nCMprIopEDuwSFTSKs775iWWhSxwHTxH1RCl9JQvpsyoaV
tRyIuGultRTZ8sj7L8seYn7ehngXrI8OWXRY/T4HxoIOpuTh+co9A+YvusuB
J95Z7YrmVKJv853quRUcmGG6UTEJ/fPWT7vIlHHgcXBjQTayva7FuFgJB3x2
77Bpwvrji86c4xRxQGgYvOYlcrV0h870dQ4smDyl0YE8wlr4fPwqB46V7Il6
jvOojPrvGb7Cget698Z3YL+tX2/z+7I5cObfZtIXObmVmt9ziQO/KOO0YOT6
evP1Hekc8K8obudg3mTF6Z5XFziw9T83wVHUtfPbo5vPcuDQFu/KWQuohNcF
xbl1yRzY8lrhZ+xZ3EeP+VVVn+LATKPaWZfR37K/3LHiBL4H1sCMx2VTBNOb
/F18nAOhOY3PFwdQCQOn//8XTOBb1dzvS5EDNiRpZcdyYMrskEYd1l/Rb2tO
jeZAu7/yeifs17Z4gW9yFAcC7891aOwlCbFZvpz4CA6s7UxW8kXdhHcrNzaM
A+47zz/8jnr438m1kcE47zDfbATzivpMu4IDOVCgut5qErmn/WSU/x4OZDHc
Psz/RhIyT1tnefni/bZq/edHmyKsqhTubPPmgFp8xgZT1GMKfDY7eHLgFD/d
LNKaJCrSS4etd3AgJqFO/cBFkuhPmDhl7saBIBbX9BqeZ37kOnVjVw7EFavt
uon+LX6JTfpOHFjp0dlcjP4E1ze7lm7hgEOeRnwx5j/cOI+puokD4tLda2qQ
f6/0vqxow4FH7e9Me/F8quola+St8Lzc6IJPqLvN+dshZYHzJncfZmNeinBt
hHA9B/YPG84dxv6NUwkyLBMOLH8YoD+BTA68KiONOGC8tihWrY8kdDrn2I2u
4sCb8Yuq22xIwhu8BgcNsL/7jNJLG6hERnXxiV49DtjoZ+RtR/+LG2OLu5dx
wDtQ7O4KRSrBvmRc36bNgd1Dco8r0b/yVPzOFxocuByyuuks+gMPvZxuUuPA
km8qJzahPy9APrNWhQMhI4ORrsjv3DxX3lPigE5bScd7rBe3udFWtoADo+/S
t+1B3dRoNLRoHgdevDjk+gPzIrSMpPLkObAoPsAoGvViheMll+TwvVt6ax9H
/iT+gjgvjfdN7l6QjCw3Pev7KUkOUL5v0F/eTxLEkMfxY+IcaH6YISF2nkrE
dhcuihGyob3mxu9C9N95/rs2nMeGV9tvuu1G/0DNavcgNhtWmVrLRCIvKMVk
Bhs4TMvGevQ7XG5J95hmg+KWlLstyCeS5fRdSTa4X/hS0IZc89+ON/YTbJBd
fa2Gcokk/gQV7LMaY0NgRcxqTwvcRz1+ia//zYZ4gWz0L/S7b1p1Y/UwG74y
dDeGoX7W5Kil3iAbrF/w33Cx/1MdSq/mdzbMlHQ9Nfs7SVAVZY+qfGPDsm8r
18suxP1Fyl1x/hfsP/kw0yKTJHwY1x7K9bAhWDNa3RU589fwVokuzFtrNFsH
/S8/GU7wOtgQ2u4fdRv7cV8dvkBvY4PV4NLWJPSvetK8fPING5gLM35aoX9f
ufTLXy/ZcEPcfeQW6vm5bnsHWtjQr7TjlRvq78/mCz83s8HN9FF2D+ZJHB26
3tnEhrcJlPiPeN9moQbmrfU4r5n99Qj0R3rFfqY8ZoOkTODwNJ6nZMuz/xpq
2HBr/PTP/wKpxJf1MxVqqtngnO/zViOLJGbrbbtfWcWGR9/fztUbIAkb5avO
pXfYEKXO2HkV847I/By9Xs6GQe2B92qWVOIue8XZnFI2nBi99S5qE0kMjsYs
vVjMhqoHz5hRWL+wt4mSUsiGhn+rr2Sh7vRW0j/xGhvyq0YmrbH+ZIMr70ge
G4wL50m+x/zaO7lXD+awYUJqcuAx1o/l/1gXlsUG+fmKYz9QV0/V+xiQge9D
In5HL+o7jkcf8k5jw1Mv4v0/1M+HN8q7n2eDJefPHMlsknjmI3HXKYUNL6Ky
H0koUYlpJxcHu9NseDfH77FUEJXQtbjyy+Ikfp7L1rONfpCEr8HAaZMEzG/s
TVNHf5aqrubKY2wICXIf2I15r2cderbsCN6f0sGoSGQer95H/T826Nw8vs8c
/WsmxNlKh9iwNiFyD+D5QvqdrsyNZIPhe8sUe+x37d1lY5lwNqTv3XyoC/UP
T/s7xULZkLHzfnWbPe6j95ZFcoLY0GxbujQE8zYURslNB7DB2/at0kHkqIt1
t8f92GC0niMbh3zrhJj9sA8bfLTWCk4hf410HOrzYsP6GK/jyoMkMcc/+2SP
Bxu+f3o5nI267dY+tY7t+H1K5v6zQD3OSqfx1VY8X0Bi2y3Uq1ZFejU7s2Ek
aWL/HtSH1J/QnziwIWeF2lQNzq80V5RVbc+Gm4E/bgH6XURbVlfYsmHngU79
V6ifIjPfFRP4Hs7y07pQf/Kjd3++JRvuftZeVI95453a0tnmbLBXK/j4FlmT
EnEr1RTf67/pkAn0ezyotUlei78P8utHyMskkVosGIhfg+/JrmpIYgtJNGdu
TohdyYb3qtIyC3JIgn7qkkqkPhv++hhrzNlHJVZEf30SrMuG8xdEK1QWUQn/
vVoe/jps2Nc8sUQb+fL28H+eWmzg/06MX4H+VptHGdvU2cAzVXd7tJFKCIz4
Bg6qbLgvsaHBAnVjbfu31spsOGj2RjoD+4XOzwgxX4jfZ/rW6qKfJFEw44uE
8Xw2NH1uPfAAuWta46b+XDY4GJxqC8B+M4fDrJbOxvv+zPrzEXWLjw/7VGXx
+8Pw/y8G8w+94MYpzmTDus7DQSzUyx7ZKclL4Pn3u2vJDpHEt9L0R1JibPhY
41u0+ApJzM355CbkswCGAxuVrKjEpjPqU0wOC3R+8OJuYL9jsaFpJJMFVx1T
Vdyw/v6+B3qjNOQbb7/sRR724LwapLJge+dNz0b0K9vbBvVOsmA8yNb5BbLr
ujSx7nEWPH3YWtWB851e1lPY9ocFHrE3TT6hXr9wicWLERYsXFPYUY/zTEiF
fG36yQJlv5Gt7zBfm3n/cO0AC7Sm78kPIHv+Zs2/18eC9C1p70jk9M/WD8q+
smDv9RNLRFhPeX3BtegT9h++909OmUown3SP53azYPR4ssMVPJ/+bdXzlzpZ
sOwrw70IOSBv37Lz71ggfNj4YRn6c87de37qLQuO/Ol+tQq57Shzz7HXLHi3
IT8vLBf30VBCEP2CBf/IpSeeY73JrvPXwikseF8+RklDPcyha33QMxb8jcm7
5o71RWaLP+1uZMHHB8ukHg3jPqoXFONRx4LWuYdPUtAvo1I117WWBesuXT4e
iX5LWUaV/UMWKCylbBpFfwxno5PVfRY8SYwMPol6+djZP6Z3WXB5w4+Xs0Zw
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
830XsN+5//3jMjMapFp7dw3ETxFP/7c+r6OBlcm5JSZvp4h/eebLthnT4FHw
7X6xhCli+fnTz7espkH0PC2160oksTuufY+1IQ2yr9iMaqOeGaYoMFtBAzn+
y8YtD3F/2eV3zWg5DZQC+z6JsB/XoXy9/lIalPy3nrsT/WvMyR5tTRosmE+L
rcJ++1aYxaguoUGM0Xbd2zmTxDWVpLmKi/G9Gk7b2K2eIt7LtlXNXkQDVzcb
2UH0S3LnO0kp0mA8JYq9D3Wz8d1/BPPwfabraD7F/Khvt84w5WmQm2t7sXgf
7qNtk1qkHA0i8p/ERCzC/aXRFP5I08AsdkrctG2KmH33pO+gJA3O5I5tEDsx
Rdheb+V8FafB0V2TwbtQP5KmkNclnIYo02YHbdSr4n1M2njTsEbmu8+toUli
MKK06zl7Gs6NDXhuQl3JdyKqiTENm6PyRCPYz8ll3eza6Wloe+AcHIL6KcvE
O1XkNP71+sllwPxawzebyyamQer6cy3rNVPEuNq8kcKxaVivXn5KZniS0JD3
Tsr9PQ1W4W0JZ4JxfxHcVL80PA01SRWpTZh3YXK86dzgNOjf2JS1sH2KaP6+
1vvU92kIytO49h11WkcCM+7bNFAC613KMF+v+dXl6C+YR3XRd0S/3/05RuE9
0/DjjvPMN6hnF3m9D+yahpz0mswI1N9kFEfsfj8NhJM+ZRR1fuKYjEf7NCxy
UD9UjfMZHfw/js48Hqr/C+MqEUlKixQhoUgUkuRKiBJZooWSCkmyk2yJsqUs
CVFZIpEoJKojaVGi7PsymH3GzCRJlt/5/v58v57nPOfcez/zmXtfNdeOfLMv
PPhVdK/FJpRNOJ++ut/oIw+Gj507VYr19y3qh/bW8aAso0FDRZ1N/CCWhWoB
D3pjSz+2oL5YzXb99jc8mBkOnUjDeh2Zh1WKr3mwyEBpthD5shj1qEwlD/6d
TH16Gevz+NR/SbzkQV++dnQ4cjfnyp0VpTyQ35O5cDqVRYgO120TfsaDhIBB
Z9tRFrH/59JvC5/y4FpipFCzKYsI/O9/j+fz4LB+6PwHrC8py1o8kcuDVBjY
IxvGJkjZ5BzmI/RLJdWMoS6RtF1/LIsHhUeq0ieRzSIC+/szeLAsS7Lq0j0W
EeH9PqjjHp6PALsz57G+0klYojmFB/mBqtkfGvH+xcq64nMiD7ZsvFvGxHlk
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
K1qaSvxwviTW7Ilwo0BTfmunMOrEV0qvTDxOgamjFvqVGC/ZndSVeYICzjnG
mbuQr59bulF2mgK1R2619yJvxnvCriGMApo+5xr7UW9McUCsM4ICh30Xt+Zg
P6Fm+799ukyBBpPMm9yT6Ef9HhVPoM9XPi3+eSPigmtbTtBu4PXjaV5fjPq6
ZSk7OLDvNX+gceUJ9C+vfjMEsvF6OV2beoW81/TJRqkCfA7t2R4duhfnC/dQ
pEopBa6F6T0axno35c1M9Kso8JnrFGkSsdz+Bl7zOlw/NVrW7g7up5fce8en
FPCxOhUuY4rzJfbWbd9WCpi32+5twX5mizmcz3bgnM7+cyIB4y+2B26O68a6
99b0jCEv8mNkMu0DXg/SYrMH9lfOeaiyCN8rVI3Fj3JP4T7INp6uxeekavjz
3I2I+/cqaLfhvqvni9F2bcLnhcedpd5ZCmx6ZK5ogDzH5ZVto2Q859VuXubI
ZxYEx5GYFODetVNlUzrOl7bv5stLFFi7+t2AK/JjlG08cRxU2Jd8e70P4qq/
o/5JK7GPHXeuZqDe2XV33qWtosLRqYmeCsTGmy3Uc3ip8Cxpv3ALYn61lWlF
/HhdpjsV4QCeN8MmVsU6fM49PFgwhnyRVbBjLb5Htd0w5jiOfOAxxean6Ave
Fo7xP8N+dAO/S7XhfdQmD9veI+aKTI9+LUGF9UaWzdun8VzesPzRK02Fk9HG
nAaIs/O4TL9socKTWYnl08Z4Pz5oLh+Vo8Kbawrd/di/+rMza6YUqCA1nz9w
BuOXerYHkpSo8ECg33AG+VcjYx8YqlSg7Nh9nor4Jilj57I6FVS/NT6owHjX
X1bpnFpUCNq+jcyJfWzjX/WTdxcVdkp4K8ZmUIAu8cxlPb5Xeb8tM05H3KIc
2ir2zwcdVFt7wh+fp/rKW2Twvpps0RThnsFze2jiisI+nDOuW103IpZ2yZre
YUoF2vyM5W7Un/W3OahzkAovglReU1Gv/sLqqj0WVNifRxznzKRAZGKrwH5r
Kji5P7nojvnm2WHB/35PU7rcQO8/zBepVOm3O4J1H9EvFv7E50zjDx0XRypE
vX9ieQjzK99kZ3m6UOF6SfbdCsw/+9X214ljVOi9t1s+FvON5v7/N3YuEG9d
3taE/uvn8xfhXlS4InU+Jx35Lzzn5KJxrn4LVX5JwvUVie24dg3/zascpD1B
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
/3+GSXSW
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0.4035}, PlotRange -> {{-0.5, 1.5}, {0.4, 1.1}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0.4035}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{-0.5, 1.5}, {0.4, 1.1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Rubidum 87: P=1mW\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8099830422735176`*^9, 3.8099830621749105`*^9}, {
   3.8099831290270133`*^9, 3.809983139559537*^9}, 3.8099837638774133`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rb87p10", "=", 
  RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"data2", "[", 
          RowBox[{"[", "20", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"data2", "[", 
          RowBox[{"[", "20", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], "\[IndentingNewLine]",
     ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.5"}], ",", "1.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.4", ",", "1.1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Rubidum 87: P=1mW\>\"", "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8099831830439224`*^9, 3.8099832492430515`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
n+ayzB/3//WqlkIx95fi71ELejoBsRn3j+ay/cb2m376SsGP+0Nz2Z/R1q4F
Jk3+z1zW6vPn8ovIb8P9nbns+tyPzy7+k0A492/mMuk19XZ2flIw4P7M12zJ
nO51RnOlUM79l69ZySJZikaNVPBXvmYhL5zbTc2UCfe7X7PAn1njJiNdl/sj
X7Op5u7nexyWQS73P75m4g4HMotH4Prn/sbXLKdi2+SlSCf/4mvWa3NvLbMu
csGf+JqpJ4S83X5FConcf/ia7dpz8Ub7LBm4cn/haxb+6PaSVrVSMOf+wVcs
rPe2lidHory5P/AVm+XjOdt5nlTw/71ihyKm9UhCuiv3971iK3RiNne+KgUT
7t97xSIvaY/6hXQl9+e9Yi+SMyfrj8L1xP13r1iSzsfalv9JBX8d8r9cOFGO
z6f7ra9Yc5OOP7XqUF7cH/eKBeXrxAxEHMD9bzksSS3pWDtXlBf3t+Ww1lpv
Tl3C+ci/lsN+Lzef3/maVPCn5bDLp+dFXsHxntx/lsPcZu3e/QSxFfeX5bAZ
w/WSxpvKQJf7x3LYLs+Di2KaSSGX+8NyWIPRp/eOSCf/Vw5bHX94v818HM/9
Xci/199kpkgKaty/hfjYrnhPpCdyf1Y2y3+fUP4AsSv3X2Wz8etHDG45Wib4
q7JZzvE2RjVIp/t92eyFwvW28VNcT9wflc10epnb97RCeXH/UzZzPLh5uzOO
N+H+pmw2NGzls8VIJ/9SNotX/tjx3l8q+JOymfL124ofiG25/yibmSxULu58
HeXF/UVZbKTTtMyRiMu5fyiLzch+9EEzRgIB3B+UxRZ6xs17ul0i+H+yWPO4
9YndFkiFfuxZ7ECHj7VjEOdy/04Wk+zwbrsIsSf352SxyM4e7+dIUF7cf5PF
1FI3xfRoIRX8NVlMN0j32F3VeO6fyWKXxmkPqsHnu3J/TBYbfdU9/yPSzbn/
JZPZGY7rcRbHq3F/SyZzy/FNH/tMIvhXMlnYh8Vpd25IBX9KJrNeG/thJ9JN
uP8kkx0LvW3VdYcElNxfksmW2S1O9ViI8uL+kUzmffmqWxLy23N/SCb722l7
1ySkk/8jk+34/fVKI9LLub8jk/3OVTt2C+cL4P6NDBZ+1jRq+HOUF/dnZLBp
Q9c1D7qJ8uL+iwz2N3vsqtKWUsFfkcEyM9u46OyUCPc7Mtgqz3edOrRCeXF/
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
uMvk723CFYL/thyGO5i2fPUH5UX1cWFjy9NHFYjJn1sOQ2bmfcrB+V2pvi7M
K+x2xxPHk3+3HL7aDv+x6C+uV6rPC/PeDvqdj3RHqt8LJr67U9qk10My1feF
Y8H/Le4UoQA9qv8L9ze01Lu0XgEbqD4wvLA4FbYU6dFUPxgGZOm8d0KsSfWF
oVdgUshX5Cf/cAVYp1jK1vxT6cO8PjFYpom3uyEmf3EFXHtfmrVvnhL1Y17f
GLZfOtzzwAaUF9U/hvTiZb+uIJZRfWSY/OXguzcDlTCR6ifDz9IPT98h/SzV
VwbrPZFjB6gpoYzqL8OX9qOikiMVYEz1mcFhVkDK5S4Kwd9cAd3GuOi1ilLp
17y+M/QYNXWH7n9Kwf9cATtt3+2bHaXSt3l9aJgsXp1wCucnf3QF3AxI7rDL
ENcX1ZeGHc57tB8i/waqPw2iyneTXyGOpvrU4GH5ZemMTQrQoPrV4L7z3qtY
fQVYU31rqDLoFvIS5yP/dQWInX90DcX3aaT62OCQ2rY8HceTP7sCurhWT8lG
uh/V14bA0HZL3iMm/3YFGCyy6zJVXYn6PK/PDSm/3EsXIj5L9buhvYWP/ngj
lBfV90Z9oe9aR6QbU/1vuH0rqL87YheqDw5n2g3583qzArKpfjh4LOvS8+Zj
XF9UXxwu/fNalIiY/OMV0HGc9ekKxIlUnxxqW65IavZEIfjLK6Bm693Gfoht
qb453PrU3u0nPi+a6p9Da8nDGW2aKUHjGq+PDsesB0/dl1MP1lQ/HQabHevQ
uEUBd6i+Ohhe1zboPEgJX6j+OqwzMrSU4vwWVJ8dJn7pl7F8q0Lwt1eCt14L
iQXyi6i+O3x18brij3Tyv1eC74HDuy7i8z2oPjxEZ098fBD5yR9fCXtj7IMi
n+L6ovrysPNfvNd1pLtQ/XmwzItye4Q4m+rTQ8qWpCWdYxTQg+rXw3CRlm0u
0u2ovj1cqexQG7hNIfjvKyE4+uW7bCsl2iu8Pj68cMgxMempEPz5lTA/JOZY
XIzKfuH19WF129jE94jJv4+/J+nOYYvtuL6oPj+enz71Mwcr4Q7V74ei4RsO
THmmgC9U3x9apORNu4/806n+P+zP0ko8gPze1B8ARi5wNQ1C/mrqHwCHkqJu
XUO6GfUXgFsnWozJba4U4gOVMC3pwN9yxMXUnwBqAzNHDH6uEOIFlXAmIetC
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
56nac95zjP8Pp+fZ7A==
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0.4035}, PlotRange -> {{-0.5, 1.5}, {0.4, 1.1}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0.4035}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{-0.5, 1.5}, {0.4, 1.1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Rubidum 87: P=1mW\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8099832014856405`*^9, 3.8099832038766694`*^9}, {
  3.809983237938257*^9, 3.809983250308693*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rb87p80", "=", 
  RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"data2", "[", 
          RowBox[{"[", 
           RowBox[{"-", "2"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"data2", "[", 
          RowBox[{"[", 
           RowBox[{"-", "2"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], "\[IndentingNewLine]",
     ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.5"}], ",", "1.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.4", ",", "1.1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Rubidum 87: P=1mW\>\"", "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.809983210098381*^9, 3.809983282283591*^9}, {
  3.8099833162371693`*^9, 3.8099833163051353`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
JlJb/flpqA+d2C2o5Uh4wf3oOb6nHfzLn34L098N/fFyjZHwGEnwQzLyNHcx
UUqHp6ICYGeNrVjFlYkWWPgTU6C/9e3vkPQOJvo43DHABsy4fFdE1IGJWk9s
PydkSifs7Dx1BeyYSODPR7V/v9f6jyq2i7WNiZ5emcqJB7+pxy9O07fC8/Tp
zZlcwFuPhhUPmzPRmy+XFONl6ES2+qqm3s1MFJBaYnmwmCR+ff0y0WHCRKMW
O+z//V5rU0bKsmYjJvK+oic9AfHp24iNSJ+JBhYHb7sH8YPcKe9qPSa6W7Ys
c9lemIeqbsaXrWUimlhxi+Yvkkg89G9AZaJF2gdH3oK+d/nCD9mrmajR21Ym
AfzXfnr2J3UlE8X/5XF+AH8u9Zh8vBr046F0XRvw+wi7fdRyJtKZpvFvgV6D
1eUfrMhEMzr7N9wF/1OVF1L85eB+LHjsfRD07/yNH3pKM1HwD6PhV6Bfrjjx
yVmCiUwrFBS04+lEWOd1rvUSJjop75mSCPrXic5qhCgTReW+qbcAXs5M0EZf
BPa/5wco14EP+vv4qOZ8Jgosjqm7CxiXH7qsIshEkfqZc26ycJ7fp1gnTYPr
uTPjLr4J5iHZf1+gYqDupcwAhZsk8eT9OUEBDgPxNqnmRYB+UYK+JovBQDKG
jStiAXubjjrR/zDQcXkLmV/g/3A6L2J4moGEQ9/+fPubJATubs/vJRkovdp5
QTz4uftQGjrGGYhp0e5aBvGlko9GmsYY6OLR/64vGod5qPXAYjTMQIM6ZUEY
eKdzMuurBxlIKYV3Yo0vzENGre5lAwzk3fhqz3mo9+9k9JmiPgY6u61/616I
t7217mb2VwYS5RzXCQecv2ewOfUTA/mkHbS6BXpyyVUyrouByi7HV/PB36LJ
WjKqnYF8db6YL5SjE1fOsI2D3zHQjrdJuq9AP7rh3l7/VgZyP+r58T1gk997
EzybGMiEYhr5FXDav5//vGKgKpOC11egvu+7XrdbNzBQ7VFWbCHgDaKRc5sR
AzULzaXYgP+Fl5qK+s8YSMLt5Kj/eZiHor5ZaNYyUHzg1DrmLZLQ1s0IVKlh
IPV3r1YHT5DE2ZEtadKPwM+7/4/6ZpiHCv4+WlzJQP6ndPLWAl7pevfLvAqI
H6H9vgf6yIWefOZdBrop7dDdCLgNi66glzAQKVonR/WDeejEC9vhG7A+Qze6
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
v8D8Y+fKh+86q4Knmzb07t9Pyr7PiVy8OVoFwXY9D81WStkIvam7fKNUkDT9
yKdErD+QKYtfeQKfv3/6m06+UvY56OabhcdU8KD44KXDmG81ZBl/1mEV9DR8
tqoR83d/79DVMVwFdce7F73/I2Yfol+Ms9unArfla551eSBlA2ZvXmkdpgK9
8hPGX7E+9M/AAwN2qcC8KcOvBPeTm/b5do/tKrhx2GLmXMzvveloYadQFaSE
bWuvw3jAwNY/mCp4/copYqhKyl59FfbUBaig5vXn0mOYbxJ1dYpkowoeG76Y
sRDjvtMXrW1Yr4K9PYaMfozxzCb9iO9rVTA8JkFvN8Y7Pn6SXOKtgikBl8dM
m4LnIT//z+9W4ev7ed0rEeY/7tev6eUKFXy7Ne3V3PVSpv/5Y/+0ZSpIdmr8
pyqTsGXHw2ckuqtg+9zN2Vsxnug0btO1hSq4eLN8shL7/1Y3no6dr4KO6/d8
4ZhLmduDuIzIOSrgjAhs6quWshtr5/0In62C85VSoz3JUqbu3fJv5wwVdNvE
Kd70VcJcilOsNjuroNNI/1wh9r/careaqoI1+fOuPcF8Sev4lYMKGgdPzjf1
kzLn1v8cO0kFDwcUvB+K+lzrz/N4FSRs2VbogJrbihsci/lmNRMv9peyyT3q
OtiNUkFl797F6zAeVXhupPVwFUy7vqAyG+M14bOXDLBWgftIc830h1I2dlLz
7h5WKvip0I4e9U3CjkgeXOs0WAVx27a4nzgtYeW3vHP1Bqqgz4HCXcswbuvZ
Tajtp4KCiWE/f2D/fSatA6gqmBPWLmcvxkvzdk5o6KmCy6/nrI9BPWSfzarv
piowaLxneBv1znGV4SXGKjCsLJwTOkDKCgSn774zwt8Tg5VPmnA/5gnTil52
VMHLi7sUcRgP8VArUturYL/xkCtKrH9jdK93ooEK1H96qcI2SFnPtyunXtPD
z/vn3xyzcgnz32PkG/tXCe31jCNHon45Go5H/lJCWlEH12PREtaVG/ooXKeE
Q55yofFAKVsbb1m2U60E74hIGII6g+7vUEJ6qVPsJNQd6L4OJQw/PqxLh41S
5kn3cyhh6rf5F3nY7yHdx6GEnSubTLdhvt6I1vs3lHCnV0/+MdRL6L4NJfy7
7+JVjfu5S/drKCFBEH/2Ecab6T4NJbz8ftEmylXC5tP9GUooDJ8x4hyud53u
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
97x/HJ95E19QCmczIt1nGvJZW+IJSiHlSAfH/lsELIn4gVKIHxA0fSXWLyJe
oBQsbJaleWO9lviAUjjXvofPHozHEw9QCktfPA/xwfrpxP+TQnq73M3RmM8n
3p8U3MNufThfy2enie8nhe7rGyffRT2eeH5SuKmntsnB/B/E78P9xH73L0Ud
Trw+KazfWGj8J4fHhhKfTwo7euepeFhfRDw+fL4enYe2ucRnW4m/J4VdP22n
6tkIWB/i7UmhfKp5R9vFfJZNfD0pbL4rPzT3NY+tJ54e9nshsp6L8U7Ez5PC
kbJOvu7YL4V4efh6WHw8vwfzPYiPJ4Vh/aavDMP8P8TDw9fT/kvKmY58dpP4
d1IwLGrccxnjrsS7k8A5tfR5fB2fSYlvJ4GKeRPq07F/LPHsJHCpwmtwLmoH
4tdJILHq0roy1LXEq5PAjWBlkRD7HSM+nQR8Fi9tUGPclnh0EuhcFLHQPIzH
Sok/J4GRa4deGdSJz3YSb04CAR273LG6zGfmxJeTwLsTK7ydMf6GeHISeNK7
m/Mi1P7Ej5NAwo1qCx/UXYkXJ4FHw14bbEGdQXw4CXztckmwE/t5Eg9OAt2e
z9hz0p3P9Ja38t8ksPQ29/51zL9LvDcJcKyexz/A+Hziu0mA/+Tco5eolcRz
k4DLsa51n9/wWBzx23C9bU7jarDeiXhtElhbfJMjwnwO8dkk0G+Jo6YJ148k
Hhvu16/bpI5X+GwM8dckIG0f2s98CZ99I96aBI7sz00Y1ZnP9hJfTQJj654e
dkI9mHhqEjg76FDYorc89p74aRLgyruM8kEdTLw0CVS2WXAh9D8e60F8NAk8
fbb3+qFxPPaCeGgSMH2RrjqF/XyIfyaB7N1TU+Nx/fbEO5OAaoZe6iPsl0x8
Mwlozhv6ZaN2J56ZBF7apVaXiLisifhlEkg+kOVXhf2uEa9MAusOJiskuN5M
4pNJQBA3osffBj4TEo9MAmFZkmNdOHwWQ/wxfN6efWb2u81lE4k3JgH32Z+/
jzDis0rii0nA//GueIfxPHaIeGJimB/anDUvl8esiR8mhnz7Vy4rMV5MvDAx
fD7x9/HmpXy2nfhgYigqW6LahfG+xAMTw42D7QadwfVziP8lBjfROrN4XG8D
8b7EsGiI8+/72N+I+F5iaA5pu//pXh5LI54X5hf99SvAuAfxu8SwxqpF9wX7
/yFelxjk/611a0B9k/hcYnD47/au39jflXhcYlAvqf7RIuYyKfG3xJBl2c69
2wQeiyXelhg2rAq1ttzHYw7E1xJDj3mH/o3GeC3xtMSw23WNB0N9jPhZYtik
mBMz+w6XjSBelhj+mWybvg7rPxMfSww+opBVmzF/N/GwxHCnn7Pk6DseG0D8
KzFshJtbLnfhs1ziXYmhcsfCJY+X8VkA8a3EcNzg5rMkrDchnpUYVvpUBQL2
zyR+lRhSIGNjAca9iFclBrsRNg9kWK8/vZVPJYZp9+61kWJ+IvGoxLB+SI8T
f1G7EX9KDC4pXp7d83hMTbwpMQRH5Q3oNZHHLhNfSgzlT0v/6+bNZc7EkxKD
zUxN8XiMc4kfJYaw/VVsZVc+iyJelBiuTHR76rmfx+yIDyWGuwe+lK/D/Ari
QeF6w2aP2Yp6P/GfxHBpBK8yDustifckhon2RsUJuJ9C4juJwdS/+WgK6i3E
cxLDQZ/fU3NQ9yJ+kxgexB/ZkCnlsiziNYmg99ZP0e9QryM+kwja1ydcrcL1
DInHJIKJ+3I7aXF/j4i/JIKXelPLu+bz2FLiLYlA/Phl9ADUv4ivJIK79d53
LA/wWALxlESw5X3ZKttJPDab+EmonRc+mYxaTLwkERzd7nl7ozGfnSU+kgjO
DOvcwU3GZfbEQxKBk5c/Zy/2ryT+kQhWL8+uPIj9DxHvSARd3COO/of51sQ3
EoG5T7lxMuYXE89IBFNDDu9JwfztxC8SQVz0DIMc1H2JV4TPXyYUcnH9HOIT
4fqreSvzsd8G4hGJ4OaY4rP1uF8j4g+J4NnvDY8bMZ5GvCERzOz7IYh/j8tW
EF9IBJ2rtrH+4TzWQjwhEfz3w3FMdzmX3SZ+kAg23YPlo+15bC7xgkSwcOa5
NCfUcuIDieBgyJpfVj5cdoF4QCKwXfBJFYD9HIn/IwKBOuJtEObXE+9HBP5e
SzpGYvw48X1EkDN5XOwl1KOI5yOCxyHjvl7G/DLi94ggsKQ58wruJ4x4PSLY
sKhz1HOMDyI+jwgSZ4TnlGN9HvF4RJAcOn5GBcaDiL8jgp+fkjdUYL0p8XZE
8Lbs0S8txp8RX0cEVdN7SXse5DFv4ung85p3s9Qmcllb4ueIICZ/f1eryTyW
RLwcEey3MJlpqeCyRcTHEUHm0ty8GRjXEg9HCDzRwt5297ksnvg3Qpg24lvB
YsyfTrwbITxx3dBtEcb5xLcRgmzKpiFbMH6aeDZCuPDha2wM9htP/BohtGQk
+6Xi/n4Qr0YI55Xh7aOwPpz4NEJYubune30BnoeIRyOEywvdWy6u5bIi4s8I
wbjdxkuxZly2lXgzQhicJ3stxv59iC8jBNFGf/9czM8mnowQ1uf7vGjC/awn
fowQ2g38y+ug5DJD4sUIofZx4J5Fhfj9Ij6MEK72jLvxD+uXEg9GCPduzg2d
gPm/iP8iBM2CSddnok4g3osQqgudJSyJy2YT30UIsVudbK9jPzHxXISQcqDQ
/5gDj50lfosQls99sGfFOvx+Ea9FCNMFBsdisF818VmEUBnUnhuJ/Y4Qj0UI
Lr6vuEcw35b4K/h8K59e/ov9S4m3IoSHbY5crcf+O4mvIoSu3w4sTcV8c+Kp
4PPOi7kqwv5viJ8iBD0X1TOTKTzmT7wUIXwoWvO7o4rLuhIfRQidSxbsHI3x
DOKh4H72pS9adpjHPIl/IoQz33vadfLlMr26Vt4JPq9A9nQ21t8lvokQ/vqf
r3R6wGXziWeCr3+3Hov3Yj8l8UuEcClyVspJ1HHEK8H3e9VJ4yuonYhPIoRc
G/87Z7Efh3gkQujfdmnxc4xHEn9ECNsqv40sQD2GeCMCmMa7cTga9/ON+CIC
KDlvJuFhfC/xRASgMqtsa3KExwYTP0QAQ1IfJrd3xPMQ8UIEENB2yxTXIjwP
ER9EAGmjzwVZYbwH8UAEcH777aLxqF8Q/0MAOaaFI2ai9iHehwCinkPmZDWX
tSe+hwC8hy5Q7cX1konnIYDoQwZ9VmDcnfgdAqgxXdUwPxnPQ8TrEMDSgKdd
z2C/a8TnEMDI5gNJRzF/JvE4BKDz2PszFrWQ+BsCsL7zZQxg/mnibQhAuznl
TDHq8cTXEMC1MzeUVah/EE8DX4+0PPETXC+c+BkCGHdiVuf767lsKPEyBOAx
UNbTaCqPFREfQwDqsZv+LPnIY1uJhyGAFfHHK2wx3of4FwII46gmO6DOJt6F
APqE1uqMH+L3i/gWAig63uHvCox3Ip6FABY0Pvb2R51C/AoBWBhvW+Op4TIP
4lUIID996uAIjP8hPoUAklzPzcw4iuch4lEIYJitQhOB+a7En8DX22K46xPM
lxJvQgDvjyia6zE/lvgSApCfOWJUhnEH4kkIYM23kuAG1LXEjxBA/+kdU7od
w/MQ8SIE8MHPYboF6hHEhxCA7cTDZl/weT4TD0IAox7dNq9HvZv4DwIoCJ/T
vBDzBxDvQQDz+348uQZ1LvEdBBB0J7VfdDGPBRDPgQ/Gw0xT92PchPgNfCgr
6Mjb7ITnIeI18MG59OIrLy2XeRGfgQ8n8w0Ugaj1i1p5DHw49u6kSTzmJxJ/
gQ/Vl+5FF2E/N+ItYP95ruUvMK4mvgIfDvD3QiLWXyaeAh8MBqyZ8xvznYmf
wIe8i/7z7zziMi7xEvgQYzZ81TfMjyI+Ah/u7cxIi1nDZ3bEQ+BD1zGH2niV
4HmI+Ad8uBBU5H26N5/tJ94BH5p+/8peEcFjlsQ34MPnoVXu/qgLiWfAh85R
MYFdH3PZFuIX8OHSvWdfkrBfL+IV8GF/4L+uFzH/BfEJ+HDVbPytu6h9iEfA
B63/vkmZqNsTf4APE1y7xO/TcVky8Qb4kKbffK8Z+7kTX4APSl56w8g+fNZE
PAE+jGg3tb6E4feL+AF8aFCP3vIC62cSL4AP43Ksk6UYFxIfgA/iGTkuQ47z
WAzxAPD1c9JNX1HKYxPJ/4/rO9/6ae6M5yHy+/Mh3rWgvTvmHyJ/Px+E0Zor
a1Fbk58f38+Mix4Xsb6Y/PvYz3B9qCfWbye/Ph8Mx3co34S6L/nzcX/Lh9/N
w/wc8uPzwXHpscBvqDeQ/54P70wDDeMw34j89nyQ+W5OK8b10shfz4c2g875
RDfheYj89HzYMeztwZ6f8DxE/nk+/EuS9F1gxme3yS/Pg7rEYoNXmD+X/PE8
mFXonmB+As9D5IfnwUV7t0tLsf4C+d95kJlYUTQF447kd+eBNNrBdx7qevK3
88CN80l0GPOPk5+dB1YLHWMCMD6K/Os8cBnsWliE65eRX50Hxle7sXTMDyN/
Og9e/brT7i3qQeRH58FS8cBOB6bheYj85zyIbW976Bn2CyK/OQ/6FUdfNu/L
Z6bkL+dBWNX8lHKMPyM/OQ9M53U57ohxb/KP88ChY/kji8881vZpq1+cBw2p
f3eMRZ1E/nAeLBjMDwrC/EXkB+fB/fSWwV+S+ExL/m8ejLb+uKcBdTz5vXlg
6Lnp3BasdyZ/Nw+mPK6ek4z1XPJz86DH5fjBMRiPIv82D25WV9gXYdyO/No8
mDjt07jDkfj9In82D1J3BRyZ9QC/X+TH5sG1pr/TSrDekvzXPKiN7dSpBnUh
+a3x+SKyjM378dkW8lfzYPPzITtW+vJZL/JT4/v3fe+7WuyfRf5pHqwM6/Zu
D8bXkV+aB1d3WktOoDYkfzQPTpul8gOx3yPyQ/MgY59F3X+ol5L/mQfdw//b
31vNZ7/I74yflzDP04VYn0D+Zh7098m/2TGZz2aTn5kH3XIe2O12FDAx+Zd5
0C49ZYktxs+SX5kHuwL7OyR/4TF78ifzICBR3nYexqvJj8yDgoJ7h4av57Mj
5D/mQp7bx4TO5nxmS35jLlgYbTPei/ml5C/mgtW+5s9ZuL+d5CfmwtO6iqgp
mG9O/mEuOPlyOVUYf0N+YYw7Ko/aluF5iPzBXBCqw27F43pdyQ/MBYVpcLix
hs8yyP/LhRejXmuzMO5Jfl8u5E6v+t6C6+sFtvp7ubDbMGqc8UM+u0t+Xi50
e7/s7mKsn0/+XS78jrXljca4kvy6XBhn8fH5VozHkT+XC3qP7s84jNqJ/Lhc
MJQ4aHwwn0P+Wy4sbLRzcfLjs0jy23IhsPxNXQbmjyF/LRe2Leza9izmfyM/
LRcmT5qm/YrxveSfxf1c6vA8DeODyS/LhfCiE/rDnQTsPfljudD+V2eX69g/
iPywXFjHO10cfkzATMn/yoW9br/Hrsb8Z+R35UKChXJ/20f4/SJ/KxfaSkxP
p2N+W/KzYn193wlWGE8i/yoXtuQvjJmAehH5VbkgjR9QkYL9tORP5cKrK79m
e2A8nvyoXIiPdf81tUTAppP/lAubbP783YlxPvlNcb3zkiGLN/DZafKXcmH+
4qDwtkzAxpOflAuTPE/crdby2Q/yj3LBdafB5mdYH05+US48e+yUPhHzh5I/
lAtXrdrF7o8QsCLyg3IhJmHEQQHmbyX/Jxfkd+fJy3E/fcjvyYVl+fOk03R8
lk3+zkbwvGywJhL7rSc/ZyNszuK298V4J/JvNsK/9c/7cbB/Cvk1G+G/0O8D
j2Dcg/yZjfAj57Ch12M++0N+zEao5g2ZfAfjN8l/2QjSj3EFUuzvSn7LRrgy
tuG5/XEBk5K/shHmzDh/dw7qWPJTNsLFuOShsaUC5kD+yUYY+9QxPBDjteSX
bAShu/sSeR8hO0b+yEbwSl7Vw6yJz0aQH7IRjMf6uFzD/M/kf8T9/eOkbncW
sN3kd2yEyau7R0wwE7IB5G9shPsLveeuwvpc8jM2QubrEOFdzA8g/2IjvB/m
JVRiPxPyKzbCan6j33uMZ5I/sRE6yF/VrE3hMy/yIzaCw/eMOgHG9T1a/YeN
MNOzz51HuF4i+Q0bgU09Ee1yQsDcyF/YCFV+N/etQK0kP2EjvHPku8pxP3Hk
H2yE9iZ9PMMw7kR+wUYQndnuehI1h/yBjeAUwZsYjzqS/ICN0Hn6np3CTwI2
hvx/jeCnN+Rc+DQB+0Z+v0ZYcPtyutFnAdtL/r5G+Lxuwef+qAeTn68R9NaV
l6Rh/nvy7zXCt5H7Fu3vK2TB5NdrBIVeD7cyjPcgf14juLgslCZg/AX58Rrh
zWlO/PhIAfMh/10jHEnwjDqC/duT364RTi5IfnAedTL56xrhnp9IuP6BkLmT
n64RjCYHh+mwXxP55ziQFSYuMOwnZNfIL8eBmNSDZn1RzyR/HAcWR4nyRSoh
E5IfjgML/8mfOWI8hvxvHIjr9cHQDfVE8rtx4NmQrBVrUFeSv40Dvysnb1Ti
+ofIz8aBT5NH9m6bLGTW5F/j4O+1fX5P1MXkV+OArZWPIddXyLaTP40D4m6x
wyZjvC/50ThQs3x74NEvApZD/jMOrE3vG3UB9Qbym3Fg7/gDPwW4vhH5yzjg
KHUa8Rt1GvnJOLDU9nznheuFbAX5xzgwc1pIlA/qFvKLceBttE+Xrahvkz+M
g+ebR8l5uP5c8oPh63Hu5eoK1HLyf3HAuxBi7mL+BfJ7cWDRdk4HyUkBcyR/
FwcaLEJCuzwUsnryc3Eg5J+sx0/MP07+LQ58Lz98QYx6FPm1OHBIlKU6phGy
MvJncSDS+6j3sTIBCyM/Fge6q54fkU0VsQHkv+LAPeHuC22cRCyX/FYc2BX0
duBMPyELIH8VB+ySPP5dxvVNyE/FgWxDM8uNGM8k/xQHPux6NVyC/b3IL8UB
QYlJr1LM15/W6o/igH94t9PL+uP3i/xQHKi8ZPN+slbI3Mj/xIFBp4+mZGM/
NfmdOHBmpcu4UtSXyd/EgfoffbaEYL4z+Zk4ILcuDDKOEDEu+Zc4YM1tapr3
SMiiyK/EgUvJVX3uYL4d+ZMa4GRp0JthG4SsgvxIDXC+dkTNe4zvJ/9RA7g2
WsJgJmKW5DdqgFvml+d7YX4h+Ysa4NijZSdaMH8L+YkaYELUluYVmN+L/EMN
ULeuZ+x3XD+L/EINsGB46KqbWL+O/EENkPZ0ZJ/ZOiEzJD9QA/wZ7O/7DuOP
yP/TAPduTwg8NUDIlpLfpwG6H9fvY/dYyH6Rv6cBWriG8mbMTyA/TwMYLWl7
SYDrzyb/TgN8yF738DdqMfl1GsBx3mXBbqw/S/6cBqiYsdjhK65vT36cBsgY
onKPx3g1+W8a4Pi5fINmjB8hvw32b7qfBRi3JX9NA7zqd8bG31nESslP0wBR
gx+kjWoSsp3kn2mAdlvFP9WYb05+mQboLOi6zx3jb8gf0wCDzjvsT8F6f/LD
NIA8QP+PTYqQdSX/SwMcHbrH/IWZmGWQ36UB7LerTC9jvSf5WxrgWYf1ZU1Y
r6dp9bM0gE/mhTZ3PonYbfKvNEBx1uxu/IH4/SK/SgP4DfrXc/Q0EZOTP6UB
arak558+IWIXyI/SAInfzu5s1yxkjuQ/wdc/fPLaAtxPPflNGuB18pgZNhg/
Tv6SBlhsOOnoCew3ivwkDRAX/OrKFdRl5B9pgDa+M6aYpApZGPlFGmDVNNMC
wPgg8oc0wPhHtTWfUOeRH6QBrvbP1zagDiL/Rz3kRb/rokVtSn6PeqhtW2lp
OF3EnpG/ox5C1Ed7B0SKmDf5Oerh0+FC772o25J/ox58PYbdPY06ifwa9bBu
0Yncaf3EbBH5M+pBNoW1dPslZFryY9RD3YsZrr2+iFg8+S/qIfiyWcExXG86
+S3qwfjut0lTMM4nf0U9PHgaeHUl1p8mPwX2X9do8grzx5N/oh5ept7Xft8k
ZD/IL1GPr9+jEeNOilg4+SPq4blNy/ZZqIeSHwKfr/inYRL2LyL/Qz1cygmO
7D1DxLaS36Eeuu1vd8sGdR/yN9TD3WkZL6egziY/Qz34L9wuUmH9evIv1IO4
qMI6Hft3Ir9CPUjTFrXfivkp5E+ohy8xawYeQe1BfoR60Isyv3LGXMz+kP+g
HiyfOngs/S1kN8lvUA8Wp5MudI0SMVfyF+B+PfrXDkItJT9BPVwOc3oSUSZi
seQfqAeb8HChFPs5kF+gHgav6fBqOebXkj+gHlacmiTqMVPEjpEfoB4eTd0S
/wnrR9D8fz04TT5ygvNQzEpp3h/fn1Q+JwHrd9J8fz2MbZ7zJsNPzMxpnr8e
UlJGeLxNx+8Xze/Xg3dy6dtyzPenef162F/VN8z5q4h1pfn8eqgvf6p2R51B
8/j1YJ/1+/OmR2LmSfP39TDTqaXOaoOY6dW2ztvXQ5sukyePOyVid2m+vg7a
3WPWUtz/fJqnr4N3HZxLlmNcSfPzddCvd8BZswFiFkfz8nXw5neuzRHs50Tz
8XXQNVUv9TTmc2gevg6OiaJcm3E/kTT/XgcebgNzO38TsTE0714HQU+GxpVg
/Teab6+Do/B3Wz3qvTTPXgc/bzUOODNLxAbT/HodrLqZJHuE67+nefU6iAkK
HO2P/YJpPr0Oqp8rXcow3oPm0etgm1vJsFMYf0Hz53Uw2OBaQjPGfWjevA5C
CwbezXksZu1pvrwOdNP6X83F/GSaJ6+DtxPUdlEbxcyd5sfrwGrsgCUzB4pZ
E82L10GnAbFDb5wWsWs0H14HZ3O3cwemiNlMmgevA4urpXfLsV5I8991MEe3
vUsF5sfQvHcdtLdctvYvxifSfHcdtDmbtzYD+1fSPHcduC6dbnMA+x2i+e06
cGwyTp07TcKsaV67DoxqI8td/cWsmOaz66C0WRt2s1zEttM8dh0U9Pr7rtsg
MetL89d1MObM8eBq7JdD89Z1IBYGlD/AfhtovroORMGyyLapYmZE89S43w15
Q3c0i1kazU/XQZzPHL/jqD1oXhqfT9R46wrqPzQfje/3p6n3lLifmzQPXQeP
UgMt3mDcleaf62DQqLT1fTaJmZTmnesgo/vj80W4v1iab66DfyWRg50w7kDz
zHXwZd0t4xTcTy3NL9dC55JHN9taiNkxmleuBdP3nXN2Yv4Imk+uBf1ZjT9d
f4nZZ5pHrgVh/5r98RjfTfPHtfD962cv4zQxG0DzxrWwN7uX0xuM59J8cS3M
q/HdOwHjATRPXAs3fNyjXFGb0PxwLVzps7Ni30kJy6R54VpoLptxpQTX86L5
4Fp44v97P+D+9D+0zgPXgvWW3vvHBYhZIs3/1sIQl/1eHX+LmRvN+9bCOodJ
8/fPkDA1zffWQt/j+q/OoL5M87y18HN3F70DWO9M87sYf1xQewY1l+Z1a+Eo
f/uBUVESFkXzubWw9fOdur3Y347mcWtB/in2cCHmV9D8bS1s+R6y3jldzPbT
vG0thPzO2bEEtSXN19bCgZbl+dcHi1khzdPWQmPEQ8NegWK2heZna0G0rY/t
O4z3onlZ3H+9ftZ1rM+i+dhaKM/4/DEN9Tqah60Fx3vLo9divSHNv9ZCC985
dDvqRzTviu+PhaHfk5kStpTmW2shrl+O1vePmP2iedZa2OZ4rvdDzE+g+VV8
npyk/yIxPpvmVWshrIPLAvsMMRPTfGotTN2Un92I+WdpHrUW5lT+62E7S8Ls
af60FiSi14fuDBGzapo3rYWBc54UCLHfIZovxedZMufBRexnTfOktbD0xrrs
JNTFND+K74eurJfylIRtp3nRWuhpMd84/if+faT50BpY2dHO2+y0hIXTPGgN
yC4pHr/D9Yto/rMG8gJXD+z0RMz60LxnDTyY7v7n5TcJW0/znTVgNsHVJu6v
mKXQPGcNOA4d6/ozCL9fNL9ZA8X2L4M9sN6V5jVrYIjJ50ObUMfSfGYNcNyF
kxuxvpbmMWtgR+7MiqGb8ftB85c1kJz1CG5i/m6at6yBgthMh+OzJSyX5itr
oP+9HP57jJvQPGUN9EhY/83QCj/fND9ZA3pt7U1lGE+keckamPWnpm9Qi5ip
aT6yBp6V/l5zALUzzUPWQNT0sXfOoo6i+Ud8PYZb/V44SMoqaN6xBhRp4zhD
XCTMkuYba+D61ZTBXSokbAvNM9aAn4kl50m0hGXR/GI1NG3YPMsb8w1pXrEa
wjuteRmKeinNJ1bDfzn7eQ8z8fNC84jVEPgpcW/bGAkT0/xhNdwPcbE+gv3t
ad6wGozEEQXDMX6E5gur4bbBza8PMF5K84TVID9S0msJxs1pfrAalnsY2J36
J2b+NC9YDaZLICovGM+zNB9YDdIA50uzn+LfV0HrPGA11Ad4e41v9c/S/F81
nLrRZcEPrI+jeb9qeJp9suoA5nNovq8aRkSN+KmnJ2FjaJ6vGrzHnu18F+N7
aX6vGmb+Sd00DOPvaV6vGnzNok+pLaTMhObzqiFIdbVpAca9aB6vGkLM7vQu
xfUTaf6uGq7u9w5v9wzfL5q3qwJZ3J4OOow703xdFdzovGCh4Dv+ntA8XRV4
/M0f9hd1Bc3PVcGtfb9Cxs7B94vm5arAZMpK/kzUW2g+rgqeTVxoz8f1s2ge
rgoyxKaOIwOlzJDm36rATjCloGsbfL9o3q0K/z6VF57F+gSab6uCJSOiPSdg
XEzzbFXg4p2a9Rzj9jS/VgWWK99N+Ij6CM2rVYH+ZNWjWtSlNJ9WBc5njD77
ncX3i+bRquByYvyNDnMlzJ/mz6rgQwdnq1MYz6B5syoQuC7t2P2nhOmVtc6X
VeH3eVXDUNTzaZ6sCgrnDz2+DOvjaH6sCjbs6Ki/CTWH5sWqIGpup10y7DeG
5sMqITWsvzYa43tpHqwSwn48+NDrHL5fNP9VCVzPrmtm6EtYD5r3qgRhXvWS
S0FS5kPzXZVQ5nVBtQnjyTTPVQkTK8UWHV/geYPmtyrh7o6OFnuw30ya16oE
x6PnFvaZJ2ExNJ9VCSHsR/+nWF9J81iV8NfrgX8hamuav6qEtYFxd/2x33aa
t6oEzaTBmYsqJSyH5qsqwTq7JdhsK/79p3mqSti+olOpfqyEraD5qcr/Sbry
uJybIP64EuoVQo54cubOnaspV4koZ84eFLlz5+xxh5ArIYRSCNEhVNtdUnq6
T4TS05079zu/mf77fmZ2dp/2t7uzM7Mzol+eWXHfRtXgQ/FSRWLQjUt9grH/
OoqPKhJ2AYO32yB9LMVDFYmJ15X2NdifK8U/4e+f1PxpIfaXRfFORWJZ2fwF
x5FfTvFNRaLRoqWPez/D9UXxTIUieMOwzNGIgyl+qVBkuv0oCsLxyIQUr1Qo
Csd3bi69v51G8UmFwvvm55xKlOdJ8UiFYqGDXfd/iEso/qhQaGeWbGjdGOeL
4o0KRUWPF7+vYPvdFF9UKORBY5uNQnoSxRMVioR+ipBM7F+X4ocKxaZJv27Y
IV1B8UKFYt1xo0/253G+KD6oUCi0s1poh+N8UTwQth+SZyhHPJHifwrFK4vl
q3pZ4XxRvE+h6J/1avWA1zhfFN9TKNSjrm3KRPmGFM9TKJbpQdQHxFsofqdQ
zBjVNqgG+4uieJ1CYXDP/fURlKdF8TmFIi057La8Cc4XxeMUistHekT28cD5
ovibArG6r74yDPuro3ibAvGt4bUb5r1rYCzF1xQIg6nr3q3D9q4UT1OA98/n
bk0iqiCL4mcKRLvbS13OIV1O8TIFYpii4Us/xGspPqZA/HTabjNyejWEUTxM
gZg82nl4Ivbf+I4U/1IgTvvvffoW+a0p3qVAJGvPOleDdC+KbykQwdFlExpe
qAY1xbMUiJl+Hp/bIh5G8SsFIi/S7mYfxEqKVykQLzq8tTM2rIEUik8pECnq
/h5zNKpBj+JRCoSehv6ld2/wfKX4E/x9useWO2P7QIo3KRCP7pd9O7MVz1eK
LykQE1vETzOYUQ0WFE9SIDrcvbFnZCSerxQ/UiB2Hna9Yom4mOJF8sWPKwtD
XmP7/hQfki/sz2yavgHbO1M8SL7oXBA3sqEnzhfFf+SLGq3SGR5I16J4j3zR
+uwBkzsoz5biO/LFwR4N7SIQ+1A8R75otD4zQ4X8dRS/gfJP9vq5vCmuL4rX
yBff1cvsnFG+K8Vn5Iu3a+7ObWGN64viMfJF7cmlel7bqkBO8Rf5ovmIiPlD
kL6W4i3yhV79XPc4lBdG8RX5ou+v4re5iBufl+Ip8sWq4INDKxFbU/xEvlgT
dz71J8rzoniJfDHWskNuK02cL4qPyBcjejfv0xPxMIqHyBfj7F9Hibc4XxT/
kC9maIxKnYr0FIp3yBeZmtu72iHWo/iGPBG8Unf72u1VYE/xDHmi7rW+Vct3
OF8Uv5Anzs7VXHgG6b8pXiFP7DQwtPJFbEHxCXki5F/inzFROF8Uj5An7k5e
LJ+BuJjiD/KE79XBTRYMwvmieIM8Efa3ccgP7N+Z4gvyRHyza0dO26A+RPEE
eaJ58KqF8mbVoEPxA3niQkT8y/sobxHFC+SJ5wWfP0Yj9qf4gDyh/93c4w22
/0LxAHnicPzzX39w/Kbk/88Th9K+dqjD/t3I358nXEwb2JxD+Xnk388T/U99
8fFD3IP8+XnC9kTXxGHRqH+T/z5PFDaUVZojDid/fZ4YOOzevMSyStBUSv75
PLHm5MBdDS/j+Ur++FzxcfLoefuQ35v877li0Zb6YYeNUF8mf3uueDts7eeB
zfF8Jf96rui4dIDFeMQHyZ+eK8YPTB82eUcVpJD/PFekGg3vMx+xHvnLc8XC
2McLG8/C9UX+8VzxbkybNYYlOF/kD88VB36M2N0xBvWhP5L/O1f4m025PgCx
Bfm7c8W3FzfrHqM8T/Jv54qWY6+VJiMuJn92rqht0aHVSuQ3Iv91rphkN2TV
ysGov5K/Oldk/TWMb7SzCpLIP50rBk96uc8b+XXIH50r3nx45JGI41OQ/zlX
vEjurV+I2J/8zbki+ZPj53zkryf/cq7Y87rq+vYWOF/kT84VveDtKm8v3K/J
f5wjZv58tdsV+8sjf3GOuGJ/Yb7OELwvkH84R3TzWPY7Dts7kT84R7hETc+f
Fov3bfL/5ojsLyPvVCJdk/y9OcJr0pQG/xBbk383R3RyEeN/onxv8ufmiPUG
jqO0d1WBmvy3OeJJ475GcsTG5K/NEU29k2MEyleSfzZHxA7qFmqnhfoQ+WNz
xPwRTdvOR3498r/miPL3xcY/kN+R/K05wtVyfSMXpAeSfzVHRDxO/HkasUwt
+VNzxNSVoz/5ILYg/2mOCPfP/NVnKM4X+UtzhN7XEp/7FZVQTP7RHPFiYGTv
tXE4X+QPxfGNGJmZiXRn8n/miKJGit4G2ni+kr8zWxhGb3l7BOXpkH8zW9gc
lj/ps7sKFOTPzBZtjx/9+ALl+ZP/MluMXBx0ewbS68lfmS2aP+h2YxliU/JP
ZovoAUeel6I8d/JHZouxj5a4O1ZWQh75H7PFYlNNt8vIb0j+xmxhvj6yW5dh
uL7Iv5gttIxtK40QR5E/MVt80mgRPAGxJvkPcbwttZY7x+N+Tf7CbLFz3Ku/
k29Wgjf5B7PF0W1fn1Zgf3XkD8wWtU/KF8r34HyR/y9bNIo5XdWyqhJcyd+X
LQ7rHDrUDbGK/HvZolvP012GI5aTPy9b/L7sMX4ttnck/1222HL9s/UCpIeR
vy5bhChWuv/D8ckyJf9clhjx8LqRL/Jbkz8uS9jOvjl4agLOF/nfssT9Xb17
vkC6mvxtWaL8ddswy+E4X+RfyxJDV7bu+BHpSvKnZYkGcwaGW/hUQhL5z7JE
duncAYkLK0GP/GVZ4s+r2W/PY3sF+ceyxH/i/kzd6krwJ39Ylog9fWzbM6TX
k/8rS/hV7U71QXmm5O/KEksWLLPqtqgS3Mm/hf1N3R2+BNvnkT8L5fsMmLcR
sSH5r7LEqaTvHw8gdiJ/VZYYLDsyfA22jyL/VJaY1yHpbFkb3A/JH5UlntRU
xDxDflvyP2UJeeEiA2NfnC/yN2WJHRPN3SwR15F/KUt0M7b8vgixMfmTMsXY
18OMNGpwvsh/lCnyDdenVWB/KvIXZYqApOxCB12cL/IPZYqIjVN9bmF7R/IH
ZYoylxbXrLF9GPl/MsVqG7tdL5Aui5T8PSjvhM73SYsrwZr8O5nCdqrbWflI
nC/y52SKgRVm+hkoX03+m0zR/eq9vm1vVYIR+WtQ/qlIj96IleSfyRTxM1ob
XEd5SeSPyRSTWtjtK8X+9cj/kilGtu/QpR6xgvwtmaJXRKPsXOQPJP9Kpui4
5EhyaEoF1JM/JVNEaRd9GVRbCRbkP8kUXTxLTvhjf+7kL8kUwnf+4irkLyb/
SKYwbv3rimdbnC/yh2SKZ0+2waQluP7J/5Ehxk0Ztnse4ijyd2SI258bP2js
Vwk65N/IELKTl9OKsb0t+TMyRFYaFH1C7E/+iwxx+YK+kze2ryN/RYYYEzj7
3iPEpuSfyBBaej4VcYhdyR+RIaY4Rrcc0w6/J/I/ZIjrn191tkIsJ39DhjA5
2bqvHWIn8i9k4Pm6pWTkoQoII39ChvB/fqWL3A7n67bkP8gQAQ4RK9JwvNbk
L8gQHc5n2/lhe0/yD2SIye7H8uYiv5r8ARlidt7aie4oz4js/xniR5BNBLys
ACXZ+zPEpGsdLtRi+ySy72eIXlXL/47zx/kie36G+Lli/I8cbK8g+32G8GrS
ZdgRbB9I9vp0cWeno8fCcThfZJ9PFx/7Tns9pT3OF9nj04XGg/SqhYjdyf6e
Llp1326prcD9muzt6cL/9qQWZocrwJDs6+mi14zkpMFIdyZ7erooT8i71eNr
OUSR/Txd1JcM6NUurQJ0yF6eLi7v+3PYEfltyT6eLvZbd5xTgP35kz08XYSX
7I6Zivx1ZP9OF308Izf/Rbop2bvTxY4BiXteYv+uZN9OFz9PK36YmFRAHtmz
08WFb2N1H2D/crJfp4vM5UO6+KI8J7JXpwufflf/hCIOI/t0ulgDc9W9jlSA
5jnJHo2/1/7wBWPE1mR/xvEXtf50Ug/XP9mb04Vy1YBvC5GuJvuySnw+2GWR
jqoCjMmerBJy42nri3A8SrIfq4R28KHqasQqsherxMmr7Xou+lYOemQfVomw
oFZb1iF2JHuwSvR0tNVNQPmBZP9ViU91syuHQgXIWkn2XpV4tvbE0uvIb0H2
XZVoeyKpYi7SPcmeqxKaIx/02+VQDsVkv1WJh6Z6IUb3y8GI7LUqEXRo67UP
2N6Z7LMq8X1I1fd7yJ9E9liVyG71xaTZ93LQIfurSgSsmlUpUL4t2VtVwnhs
+Jp0xP5kX1WJx0UP3+5YhuuL7KkqcfnS9QWXXCvAlOynKtHKaWKaHcpzJXup
SjS9XqFKxvHkkX1UJToO1XDaj3RTsoemCTG9k9NoU9wfyP6ZJkbN7NHKF+lO
ZO9MEytaTd20GOk6fyX7ZpoofHn1USLSvcmemSYeBe5tlC/JI/tlmjhm0WrD
Z/1yUJG9Mk1Yhx/w/SXJI/tkmohL/vbZ/kE5yHZJ9sg00aZPqXmXepRH9sc0
MfOg8cVBiI3I3pgmdv47P9cT+VVkX3wpDsrlfR9kq0FB9sSXouGEsicCsaxe
sh++FIsr177Zgu3dyV74UhyPGzr4sCSP7IMvxdutq7ZNXInrheyBL4VZnEa2
P9IVZP97KeSb5mwM71IOdWTveynGdt231CAQ5ZF976U4V1fz6RXS5WTPeymS
hr0KqkEcRfa7l+KXzk/9Oyjfmux1qSJg6SivZ2a4vsg+lyo6Bo9usR3lKcke
h3j7509FyC8n+1uqcInJ3DG+azkEkr0tVSizCq755ajBmuxrqeJnxJVzz7B9
MdnTUkX/SQueO01Sg5LsZ6li5Ix+ykPYXofsZaki4/LtknJsH0j2sVRxRz1V
bXVSDaZkD0sR5y+db9oiVw3FZP9KEfOj+1/shNiJ7F0p4npQS8t8SZ6NZN9K
ERf3VK89he29yZ6VIvx7XX/5E+lGZL9KEe/Wz/m04iHOF9mrUsQKTbdZneX4
/yX7VIoY1ah7uwGIZS8le1SKMF2gyhuH2J3sTymi28YNoR9RvhHZm1LEqws2
eg1PqSGK7EsvxPqG5V+6rEJ5ZE96If6ZrVUPQlxH9qMXQrlzv99pSR7Zi16I
lX9DVt9ALCf70AsxbmTjRrMleWQPeiH8D65ysEdsTfafF+Kv35r0uMlqqCN7
zwvRKHS5cym2V5J954UouND5xHnkl5M954V4FR/1T8MA54vsN8mii2OXFivz
UB7Za5KF7oZzIQnIX0z2mWTxLOGMXi5iJdljksWVtNDBI8zVoEP2l2Sxq/tS
+8mIA8nekiz0K2XVT1CeKdlXksWNnznKZMTFZE9JFj36xOoWInYi+0myCGs6
e+0od5TXW7KXJIt1JzW+lfwtA2+yjyQLcNJK18pHeWQPeS7i50weqsLxq8j+
8VwsU9/9MQDpTmTveC4eJw1u0PNfGch8JPvGc5HXYEjj4Yi9yZ7xXPTSNnts
h/xGZL94Lsp6f07WtFCDiuwVz4VWUkSxEukKsk88FzeVp4b0QbrMQLJHPBc7
NM42v4F0d7I/PBfP2n9pfx7lG5G9IUmUD/F6OR/5o8i+kCRctp6659oN55/s
CUniP9+v3eKRv47sB0mi6NCaNceQ353sBUli2tvQvqVIl5N9IEmYGmntVJxG
eWQPSBIHrqQOaSLD+aL7f5I4Nrlb53GvPkAx3feThMGZw+cb9ioDJd3vk4R2
cQunpPVloEP3+SQR++nR3ZOPyyCQ7u+J4qnbbos5KM+U7uuJwv5NaysHxMV0
P08UX9/0yJqB8pzoPp4oXg6ZYW6HWIfu34niP/ncheeR35vu24mia7d55cM3
lIEp3a8ThfawCQ4hSFfRfTpRFG7OtNIOQ3l0f04UYunKbHvkl+2U7suJYlbx
wO/9ke5N9+MEYTXl94uxiI3oPpwgyrocc2nSAOXR/TdBuO3L2boI6Qq67yaI
XjbvLdciln2X7rcJYtqEJvLdiN3pPpsg/No4zs7A/ozo/pog3p1yTb6M9Ci6
ryYI+ZK2XiN7ozy6nyaImvZbdcwR19F9NEGERVaU6TihPLp/JoivTpt+OCBd
TvfNeGH/ePy3Ckke3S/jhdXMmHcHkW5N98l44ZE7d0j+6w9QR/fHeLFsu+82
NWIl3RfjxY/oaqu+T1Ae3Q/jReug+aEx2D6Q7oPxYme3zf0yJHl0/4sXBZpu
qvnIX0z3vXihW/m+7UekK+l+Fy82TLJqHIHj1aH7XJxYVGt+JwVxIN3f4kT+
u97buhrifNF9LU5s/LjrWyXSi+l+Fif6tVq51ATpTnQfixPNx185PGEqrldr
6f4VJ6YfzDqUh/17030rTpyMLFqkRmxK96s4Me76mhGjN5aBiu5TcWLsVu1X
UxA70f0pTowaFHdgPmJZqnRfihN2aaf6rkLsTvejWJE7xyndGbER3YdixYsY
B2dXxFF0/4kVpR47/ubh+BR034kVqdanEvyQXkf3m1ghXm0sc77wAdzpPhMr
QndqtU1EupzuL7Hi6oE++e36oDy6r8SKbLNXyz8g3ZruJ7FCHn1+/9ZinC+6
j2B/UzRMJiG/ku4fMULsOdfyHNLldN+IEWNaze1vj/RAul/EiMLMEq9HSLem
+0SMOP5sSYDME9cr3R9ixORSn5iWiJV0X4gR8uH/8rog1qH7QYzwtdkZVovt
A+k+ECPuF1lp7ZrxAUxJ/48RRpemfzqKuJj0/RhxZtzyPE/ETqTfx4izB54p
anE8Or0kfT5aDJ8WnvcXsTfp79HC8Z6J/dS3KI/09WjReW/63QWIVaSfR4tL
6aG+t3A8TqSPR4uXX5Umn1C+7Kakf0eLtr6ts+KQ7k36drRwj8xqoWP9AYxI
v44WDtMbd1/TF+ef9OloUXByaMdPyK8g/TlaLLn65ND0zTj/cklfjhIfvthO
0bmI80X6cZR4POH00BIcjxHpw1GijVHdrs+Io0j/jRKbTP3dxyG/gvTdKPHr
7nn/aYjrSL+NEoNvbq/4gP27kz4bJXZ/N2jji+OTk/4aJYrKcup2IH8U6atR
IlLzzLPfTXG+SD+NEutGrDTwlOSRPholon7VnU4YUAqyi5L+idfVzl3eGmri
/4/0TSFqnox/4CRKQUH6pRD9MsyvXH6H80v6pBAe/+JtOttgf6Q/CmHV+cuo
foiLSV+MFJ4x7ts2oTw56YeR4ryuW/MpSDclfTBSHMvK+df1Esoj/S9SePhv
VeRgf96k70WKnn/K5tzD9sWk30WKmz27V7R9j/P1SdLnIkT0tfvfGkSVginp
bxHC6d/gvTdQvoL0tQhxNm/HCDW29yb9LEK899O0jpLGS/pYhAh71WpUGmJZ
laR/hQuXfwO7vUYsJ30rXDQJ3/E3FMenIP0qXARZG91bif0pSZ8KF21q/rxq
PhPlkf4ULuZMWT9+RjMcL+lLz8Sei1a/FiOWT5X0o2fixHnT4LWITUkfeiae
BznMDZTkkf7zTOyfXrpuDsrzJn3nmXBbtmplKtKLSb95Knov1KwrRCybJOkz
T4WTeOpcIf1+0l+einUPr7Y9je0VpK88FUazteIzsT9v0k+eis7fPpXfl8ZL
+shTIY81Nf6IdBlI+scT8bmLvtvFQaUgJ33jidD4rrxvFo3zT/rFE7HA5tlI
a8RK0ieeiDOx57v2b47ySH94IjaO8MofjbiY9IUw0e9QU937zijvqqQfhIlf
vUqsbJFuSvpAmJBPfxOfjHQlnf9hYu/Xsi75iL3pvA8Timebf4Zgf8V0vj8W
S3U7d+lthL/fUzrPH4vWIUP+y0S6KZ3fjwXMG+T5VhovndePhWtTh4+LvfD3
0/n8WDQpWxbwF+lRdB6HisGnZh4ImIXjpfM3VNzJV1+oxPHJ6bwNFZnny8Yc
w/5M6XwNFd9G2U3OR34lnaehIu3dSIV5DI6Xzs9QUX+1t82hHTheOi9DROTm
VBjeAv+/H6XzMUTMcBkt24z8pnQehohX/XxGJZTifNH5FyISrtx4Eontvem8
CxFB73796KMugSg634LF/ZlXy/dK8iql8yxYOJ9d5XsCsZzOr2Bx69zsxr0G
4++n8ypY7Ow7Rv8u0pV0PgWL321qbMuw/yg6j4LE0IaLSr4iLqbzJ0ic3jv4
5OCdOF+W0nkTJJYM6S5/Mhvni86XIDHiacsGu1C+ks6TINHmluvhRlr4/6Xz
45HYrelQVor8xXRePBLnHM7/kyNdNlE6Hx4Jh+ypvm/w95jSefBITP1U52yC
dAXt/4/EATufl86x+Ptpv38kfg3/L/YRjieK9veHIrDHzS7RiGUm0n7+UCS/
3rDZB/nltH8/FL+v7J+1eA7Ko/36oWixpeiDB8pX0v78UMxbXaGnQv4o2o8D
hWbjefrHkL+Y9t9A0c64qEss8suvSPttoJiioSt+Ib8p7a+B4nRh1vATV1Ee
7aeBom7Rhzy9OKTT/vlADO0xqe1fbB9F++UDMcjhd2u7XTjegdL++EAsLKx1
76SN7Wk/vC/ut7RxbzAX+Wn/uy+Gry7XGoV00xPSfndfbJhuZOiE8pW0v90T
FxzuhuxFHEX72T3hc2GzuYPET/tXgLg6NHT0NJSnpP0qQIxbe3rJHeSX7ZP2
pwBxb3+TucU4HlPaj+6Kpxlg5o3to2j/uSsOzLSrVVzD+SqW9ps74sQYr8gI
aby0v9wR+zQ+bTQdiv3TfnJHGHfokRCM/ZnS/nFb5Hn7m+rE43hpv7gt0o4c
9c1AuixL2h9uiwSbRTua/of8tB/4i5auOZVjkD+K1r+/6DHwxqd8qf+h0nr3
E+DV7fFQ5FfS+vYTnr3cto1HHEXr2U8YXNrRaxu2Nz0jrd9bIrVLn23tvJGf
1ust8XuSSS/LeSivt7Q+b4kfsffbzUdsSuvRV9wMjh3mJsmj9ecrdgS++L5N
4j8srTcfEbQ4e9rH3fh7aH35iHdHMsZtRPlRtJ58xJfLT4YlSr+nVFo/N8WP
GV+fPsL2SlovN8XzgI93oyV5O6X1cUPsbtLwikrqn9bDDdHxmZfJpXKUR9//
DbG+2PGbTkvkz5e+9+uiYqJWSVi5pE9L3/d1UXNsusGtIajf0fd8Xdxu0Tnq
7C5J35W+X2+RdbzCXfM68tP36i3GVLkEZCG/7JL0fV4TBSfsjUoQK+l7vCYm
6m49k4HtlbHS93dVfF5dZu+tjfdDW+l7uyLe2ASOSY/D9tXS9+UlKuv7KpZL
8ul78hIGGm3iBw/F9u2k7+cy3gdeRhZL7e9K38sl4dSxItUa6TJT6fu4KA4k
bpmpkPjpe7gofv3peM0oHumrpPn3FBbHph0ylfBfab4vCO2FuoMH/4f3dZpf
DxG3sdZGgXQlzaeH+KetODxkHvYXLs3feWG8vqyLUmpvI83XOfF49oEm7hI/
zc9ZYbotaMly5FfSfJwR3bN+3tostW8p/f/PiF439Jqv8EbsI/2/T4tTR6cd
2IZYSf9fd9Fyl8fvwxL9svT/PCXOdfuUFCy1j5P+fydFgz1ra/0keo30/3IT
FpeV2y+XI24v/X+OC5uvJQYBEjaT/h9HxZCVa8d6DykH2Wrp97sK1wYGOeVS
+3PS7z0sHj3YtLedLeII6fcdEvv+yNJDdyF/mfR7Doj0wX22/5Pk6Ujj3y/s
t9Qd+iLJGy2NVym2LPDsGqRdAbIEaXx7RfLyrw1/Se07SuPZJTqc2teh91Ap
v6HUv7MIeDLxdMpc5I+S+tsqfjXR2dcmHumtJfmbxDbr4OKnaqSnSPLWiy17
rr9NkbCT1N5RRETfevdawnoS/zLxy+/k35zBlSBzlui2Iq3xuDZeWlUgc5ew
hfjrdnXZL4lOf6rwUvemtQWxiE2JDvOHfvXR2IXYltpDqv7mnmVS+8YkH0qz
5q7pJ9EV1D+YhKhNesYhDqPxQW3PrpkjJdycxg/ZM7KKGlzD9qH0+0BDr0GD
AXMR29Pvhw8/N/Y1lOg69P+BE+NX2oyRcCT9/6C03zbn6RIeTv9f8K63dbBU
I9ai/z8sbu4QsVjC72l+4OG/Y203SvgJzR+cvDngZR+tGvz9NL/w6dZLxezY
apCtoPmHk5/K7aMl+ePo+4C34T23R0rt29D3Ayc2TLj4RxpvBX1fUFa1p+in
xB9F3x9UPQk80n0e4gv0fcKeZPv0qf9VgXIEfb/wZsHFJ5vj8f9B/obTcKOg
xeDAoYi16fuHllVKhxjESmdaH+Cx8L9LWRKm33MWVnosdsrYjfzkrzwHRdcU
/ipJ3lNaf3D7ZuTgoTcqQNmT1ieM29hj1OBKxPR7PUDLZPG4CYhl9N7/AsQZ
3jebI+GVtP7h3n96T07Ml/wJtD9AvyNTZrlJ8uj/cRG2+ObkxOogP+ULugTa
HmMv/NyL36cu7T8w2XjTsw9IV7rQ/gSrqkb+HTiiHJT0//KC7jZaIZ2SkH8u
7W+wplXht/4Sjqb9DyYOi6qc4YL8/Wl/hNzCDi6bpPb0/7wGk+vSwxXIr2xA
+yt0+zg2Jq81rj/SH7yhS5CBLNFHDVFraX+G6nZ6JuqFajCl//d1WN7U9m8Z
0mWkz1yHI2dax+ZK8un/fwMWu8zu02ER8tN9+gas7DdjdwdflEfzcQMUnucS
RiFdeZ/OF5h/ULe9Zy2eF6S/3YQxny1TV7VB/g50PsH82PHn/IzxfKD58oEB
IRqtLibj/kj6pA88VNjuz8b2Spo/X9BMizuduA/5yZ7jC6vbuMSWYnsZ6be3
4NDg/TO+IlYupPMVVs3a1XaQlA+O9OdboHibsFJ3FJ5PCXQ+w8rGJZpWSFfS
fPuB7tmafdP9cLykz/uBvPjENOe2eP7R/PuD5+vlYXZ1KI/sif6weJqB7gbE
Mrpf3AaXJUP9fZBfqUn6BcQU5L84IfGT/fQ22Mst34Rgf1GbST+Bh7X++XFS
//S93AGvMT1fvsH2MrpP3YEtWcW3g/bjeOn7uQv9TKp+aKaiPkH27LtQunDz
idf4e2R0vwsAKHoQ2dIO5YWQfgUWchvRpx32T/b7AAgsNBs6/SDqM3LSz6Bi
mtd3G5SnpO/tHuT3+emuQCyj++x9WFTXQm2P7aPo+7sPT4/Xxe6R+qd47Pvw
S+foYjeJn+7XD+BX9+HfL0nylpF+CQvvN2rtLfVP/qMHELFMo23WpxIoXkH6
KTxYtc0vQpJP32sgHPjtvyRbak/2hEA4nhNa/x6xgvVfMIG8M58Qy1k/BuNr
UzLrsb2M9WcwOTSmrv0h/H1NSb+Gik53VrVrj/o/fd8PwbJN/bCeiBVkb3kI
k61Gx1qOxd/D+juYrPHzsMH2MtbvoZX/JpkCcTF9/49git/NFStfov5P79Ee
wdp/On4HsL2S1sMjiJ02ovi0JI/vFzDsnsL/IraX8/0D3HOXZFzH9jK+n4DD
0Re7Q6Xx0noJgnU1+mVxiL3JnhYED8LeWcQocLx8/4EdqhkhVZ/xfsL3I4gd
MHhCMdJlfH+CTx7jt/1A+cXBdL+Cr5mZvRvp4e+n9RUM6dNiu8rH4XjJ3hgM
f//Vvx3yBeXx/Q0G2ziONT6M4+X7HXQ94ug3GXExrb8QWJL2obNNGo6X6gGH
QOKm2eNXSvJoPYZA7nhnnR0oT8H3S5jX3ezjbuSX8/0TnLbuW+iK45Hx/RT6
3ena3xvbR9F6DYXGN6Ym+CO/N8VLhUK159bYYORX8P0XZoSkrUvC8Zjy/Ri2
HNy1JEOSx/dncLjafGYZyiteSvdraG9zKvujJI/W92PYM2qKfsMjOF6ytz+G
ceXzjuogNuX7O0y8uyFAX4Xj5fs9xJm7TemPuJjWfxikLxoaMtYEx9uQ7AMQ
eMqvzhKxkvaDMIi+NM/AFvkVbF+AdcdjIldI8tj+APaZhS5bsT8Z2yfAtNXI
NwckebRfPIH6Pw+yz3TA+aJ40Sew2OzjXG+kK2j/eAJmjf5lPEB5pmwfgekR
31+GI13G9hNY5vZVKwXlF/9H9hW4m9l6ZwFib9pfnkIn22+WFdheSf6mpxCy
9Mjs79LvZ/sNJB1beaRpOo6X7TugkzS4s15HvH/S/vMMQkcmenVzxfE+IPsQ
lKSOaWO8HMdL+9Ez0M/zaWOOWMH2JRj6x0B3LmJTtj/B9HFBug5S/ji2T8Hh
pwt+OEnyab8Kh6xqh3dbAcdL8fLh8DFsYKfjOB4l7V/h4DLgl+MV5Ddl+xg8
0nusF4jy5Gw/A9O/UR0E4uJnZF+Dmn+vO75EHEX7WwScVZ+JS8PxK8nfGgGv
f6l3lKE8Bdvv4O74lp//BaA8tu9B2+5yeXN7HC/b/yA+6IZBB8RRi8g+CEeW
jupuiNib9sNIONS/pMdIxAq2L8LTM4G1U+/heNn+CD3mb+m2ELGM7ZPwZu+0
OasRF9N+KeC3i23/zZI8ei8kYGXsxyPrj+J4af8UEPOndcDVb0hn+yiM/xEz
xBv5ddh+CmXuK9r6d/oATmxfBdmJ9SMjkV5M+2sUNGjg9CxLGg/bZ6F5q4qj
WcgfyPZb6JShAZWSPLbvgtn5LnMb3sfzhO2/cKDrkLQO31HeQbIPQ9aRmxFy
pFuz/Rj+lpha9nZAeRSPEQVdnphZjUAsZ/szzLo313qSg3Sek30a1piPeWOW
WQp1tF9Hw7OlnRodPVoG1mzfhh9T/1uwCfmjaP+OhlYxmxfvk+SxfRxcPD4s
uYT9u7P9HG4/Wn32NuK6Y2Rfh0EVnR3vI7+C7e9wbvyJExk4/iiKt4mGeNuN
g3OR34jt92DcwHzFB8TebN8H+91fImX1OF9s/4dFI2/t6GRWBk7sH4AOr74e
64p0FZ0HMTD3WKvUFvr4/2X/AozLmjLPBOne7H+AG0lnIqwQ67B/AuTL67ov
RuzE/gu4WP+p8Q6UX9yP/Bvwxe+P+fljqO+w/wNUeofmHUf+QPaPgI3V8MhL
kjz2n8CKmk3LH2N7JftXYMTdzONPkF5M50ssLCi9OrQE5Vmzfwaa34qbnyfJ
Y/8N3Im+Fd/oeBnI2b8DWdqTowtW4Hyx/wfmWTay7Y70usHkH4LwGTYGQxFb
s/8IwpTBFeMRR1E8XhxYtC8InzAe5bH/CWa7r54zC7E7+6fgr9kd731ZKI/O
qzjwPuLye9kPnC/2b8GsZu8KTkvy6PyKg9ITNnui9dVgxP4xeBywzea6JI/9
ZzCnpZmXN7aXsX8N0o/7HYhCuoL9b3C7Sp5ajPJUlA8lDrpqrrtQh9iI/Xfw
dLDVuNfY3pv9e3Bu44FlRYEoj/1/ELJW9a2rG84/+wdhinntNq2fOP90HsaD
h2lvN0C6KfsXQff9gxnjJpSBN/sfQW/J1IejkV+H/ZOwopVJR0vETuy/hA0T
3PTXIn9xHvk3oZnJnce7EJuy/xMMe72yOY44kP2j0M1hU4f72J8O+0/hoth3
+A7SlexfhVdeF+FtNv5/6XxNgHQ71a5XyG/N/lnwd9xgXo04is7bBFB3SqhT
Y3s5+3dhQovq11on8P/L/l9Y6PviTmfEda/JPwzDnMS2/ogV7D8Gvb23Wq7o
ivo9xWMnwryQl+O2ITZi/zOUf+tQuFCSx/5psLN/K9+Xg/or+69huefzpFvI
r2D/NmywzcxIcVSDis7vRDhp/6pnoiSP/eOwZ13XM9VI92b/OfS5eVs3XZLH
/nW4+jNjUzL258T+d5g8PfRhl1Uoj/LhJYGDqrmOnhzvM+y/hyCrSz5zH6E8
9u/DkJL4W81O4v+X/f8QELp4iALbO3F8AGwdUJ5ii+2LSR9Igl0b2lR4YntT
ji+AJMvbu24jDuT4A+izdI72U8Q6HJ8AHf50O35RLtlvKH4BWvyt3BqD8osP
UXwDfL6iyslAbM3xD9Bau2T2b0kevdd4DiaWYZYF2F7O8RNwYafvL1Uuzj/H
V4Dhe5OFuqvVUEf6xXNY7pxzxSQI5XF8BnQr/aE/HOlRpG88B+sO2TF2SJdz
fAcMj986xwmxO8d/wOFatzzVyXKoO07xIfDc9WvqQgOcL44fgXZ7f3XOm1QO
UfQeJxkcCnK8H2F7I44/gb57Rjf9iXR3jk8Bh11xS2t/S/Ytil+BKYX/9ZL9
wf8vx7dApEf7EotT5aAi/SUZfnQqu2+AdFOOjwH5ny2bhyD25vgZUOl28O8V
jP9fjq+BCrOs37MkeRx/A3mf3vteRXnF/Sk+B/Z7DTIdswblcfwO6P5OvnZz
cjkEcnwPtBtVdz4YsQ7H/0DyqP5u8YiVHB8E15dfCbqE/RWTPvQCtl9boXiO
/VlzfBEkZTpuqJfkcfwRNCz959DMvBzkHJ8E6U/vLeqIWMnxS6CYs2lWP8R1
Qyi+CYrWbxqr/xflcfwTGAR2Esfz8f9L7/VSYImjpd4VxHKOn4L0Ve4b7yN2
5/gqCAiuThaI60i/SoHQblX6p1G+guOzQKvLcmeztTj/pG+lgGrfl7G63SvA
iOO7oLxz1qUSd5TH8V8wZa/+8XYF5SDj+DDI/RD7uVSSx/FjYJCrAaOQrqJ8
/6mwfdNMkz6ny8GI48/gqN4glz0o35vj08D65FmrdZI8jl+D8w20D8asrQAn
jm8Dt4Tve/X+VYCK9LdUuNlvwL1YbG/K8XFQZHX+8SNs783xc+DZpvv2Zusq
QIfj6+B2sffRR9i/E8ffgWtnn6JmPSqgOJ/i8yAsrUX3emxvyvF7YPA7scO1
f7i+OL4Phryamd+xEOef4/9gq8fJD5tRvpLjA8G36/dT45BeTPrgSwjuC4F9
z5SDNccXgvW+lOOpoRUQRfrhS1g7cfGrp9hezvGJUP4uPcUPx+PO8Yuw6tq5
BRuwfd0bim+EY0PbhPqifAXHP8LJ1rezG6xHefReOw0Onft+tg1iI46fhCOl
i07+k+RxfCWMj6hvsvhxBcg4/hImbB91u1vPClBwfCY8K+x6cgG2V5G+mQbT
95ZOWyvJ4/hOcMq0jvfB9t4c/wnaG7SLHbG9jOND4cjc4TNnFZVDGMePwqXk
tPMFyO/I8aUwvENvzXiUJ+f4U+jYPLJnrwaVoOL4VNj3aYW5MWJXjl8FjWGG
qywRG3N8K7x22pt60LIS6kh/VcGaFafkFxB7c3wshPed0Nc2rAJsOX4Wit6u
mWS2oQI0Ob4WtJ4tbOOL8qI4/hbM2z8Y/hixE8fnwvfUjrbPERty/C5Yvbm6
sxBxHuVzUMHOVkOHmZ2rBHeO/4X7revEP6Sbcnww6O/epTN2aiXUkz6sgtLV
y2Kdkd+f44th/KebFscRKzj+GFbM/5t6BbEOxyeD0nvjrEDESRy/DPGJf/Ji
EDtzfDNsL/unmPUE54PjnyHYJLLWpHcVFFO+jnTopB09aTvSPTl+GhrbDdZ8
i+Ox4PhqaNRxuf925Jdx/DUkG9j8Hny+EgI5PhvWvk84XtmwEhw5fhuWnnEI
OfC6EvQ4vhtebblhGYvtVRz/DZ6n/2rMmIbzxfHhkKY+WqTxtAKMOX4ctIf2
6H4d5de1o/hyUHg9bHoY+b05/hyWTysySkC6Lcenw93E6UF3kK7J8evQNcAt
82QjnC+ObweT8KYD+r/B+eL4d5hYtXfPOsMqMOT4eHhicWh8PPLncfw8dCqf
v2i4B84Xx9fDi8w1Lbdje1OOv4cd0b//62eF83WR4vNBP1XWMgXl+XP8Puzr
YbnLBdsrOL4fto1Uvv+IdB2O/4fn1+Yd90F6Er8PAL+q1tGHUZ4zvx+A4sCk
y8+RbsTvC+DDnwcnxvXB+aL7QQbMm38loAbpnvw+AbI0BgxvcAHni98vgLiU
HdEGsYzfN0B9hEbUvGKcL37/AAHbNqYZI92R30dAaadPLR+gfD1+PwFTF+zN
6jcd1xe/rwD9mGD/G9heye8vIK9v1+UhiI35fQbsHd78n114FajpvpEBw59c
0vBH+d78vgNmzkw8L+9bBdb8/gNWX4kpv4j8mvw+BPZ4uNx8g/xh/H4EhvVo
tmA+8jvx+xKIjqv2aqpRDXJ+fwLv1Gv6BW2ugjx+nwLnraZ8XfwWvyd+vwIb
FhesyEe6Kb9vgS+KzfWPUV4d3V8ywdZ6TGkyYn9+HwONwu0fmEdUgS2/nwEv
18rXPbfgfPH7GnixuPfClyg/it/fwJiLtefueuJ88fscOOLsfbhPvyow4vc7
EGC6+pTGu0oopnxumVDx4dHUDog9+f0PpD7V1eyP2ILfB4F3wDhfvabVIOP3
Q3BO901mJPYfyO+LQKv3x0/piB35/RE4uNkPP2ZdDXr8PglWps5bPygS1xe/
X4I2HSoixyNW8vsmMBo6fXo88hvz+yfY/i/l1OCtOF+m9D4K6u/FBlch3Zvf
T0Gdl7lX1/44X/y+CvZ3SXOZdqkaNPn9Ffg13eETivLD+H0WvFveb9BplOfE
77cgZ6DtDB/Ecn7fBdf+XPWsQ/48fv8Fu9TDKhqJKnDl92HwIrlkTHvEpvx+
DBb8S5y35z2u/1h6XwZu2868GYd0f35/BqtM3QfbILbl92nw/tTSoX234Xzx
+zXQNszOq7Kphih+3wZQeuqEbGY1OPP7N6jveNVjOfIb8vs4KA0tfbwNcTHd
57LgcGiDFbJm1eDO7+tAXlRd3gaxBb+/g+PdXDdvGVAF9ZPpfR4UzWhiEovt
A/n9HqiDZ2ybjvwKft8H3dY82FeOdD1+/wd+t5KqHuJ4kvh9IIiVUfEtt+N8
8ftB+L7TzNUL2xvx+0IY0GP5f9XIr6b7YTYsswrqs6u0Gjz5fSLsubjntY1X
NVjz+0Wo71JlZDgLvyd+3wg72v+V/0V5Yfz+EZbMg1utmleDE7+PhF3L+++5
ju3l/H4S+iS1bbEd2+fx+0rI3PIu+hhiV35/CUU3njtfRWzK7zPh3chZs6X3
yXV038yGjf+qEw+jfH9+3wnKHx+sLiG25fef0OZWSU7/K9Wgw+9DIa1HoVaD
2Thf/H4Ujm7c8/scynPm96UQvTx9hRrbG/L7U0jrOGDnbmxfTPl+c0C/5/jl
7ojd+f0qzCk897NbC5wvft8K3Qvt9o1AXE/31xzw3FU4TRVTA4H8PhZyI6wn
GZThfPH7WSjvssF/UAzOF7+vhb3XPxU2vYrzxe9v4WP72PhOiJX8PheOz7n/
YBBiI36/C/sWBF+cgFi9mt73wu1e17q2nYPzxe9/wW63fMIH6b0vvw+G720/
Jf9ALOP3w3BNkT06B8cTxu+LQdWlR2N7bO/I74+hWauTm/4iXc7vkyH+x5mT
rdXVoOL3y7DHx7/6Hfbvyu+bYVF1dcJopBvz+2fIDnc7uF+rGuqq6X00XJzb
dEkByvfm99Pww7vnpSHXcL74fTW0r7aoShtcA5r8/hpC29m5tZ2L88XvsyFu
1ZKr43bVgBO/34auMMNiP7Y35PfdMPC67zNr5M+j+3cutEhrLL+DdHd+Hw7/
3FuUNSrH74nfj4Pu/ac6S4bUQL0TvS+Hi49rDfoj3Z/fn8M68+X3DyNdwe/T
YX5708Wzka7H79ehpPuOaQ+QnsTv2yG7xb3LsYiV/P4dam5Wz1wRXwNG/D4e
5rX3vzZ0dw2o6T6fB++PL/schvI8+X097Lz6tFUqYmt+fw8towcYvUUs4/f5
EBo6p8c9b5wvfr8PzUc6rGtWgfPF7/vhzbE+bvqI5fz+HxLM4qrUyK/i/ABg
7tAoeRLSXTl/AOxebu+XOA/ni/MLwPfv6xc8HloDdWQfyAOTNhp3XyD25vwE
0LLy12QPbG/L+Qtg/9ILeq4JOF+c3wCm2m24ojmsBqI4/wF8ccvwzUB+J86P
ALnH9z3ZtacGDDl/Aty/e7b0J9LzOL8CnNft+W4+tnfn/Asw2nOt2RPkN+X8
DDB2tWzyyEpcX2RvyIOimnHm75Duz/kd4EFey7XjE3G+OP8DZJlt2ClQng7n
h4D84FUpmYiTOH8EiNpeQTNu4H7N+SXAPtfP5Dy2N+L8E/D5w8O+cdhfMdX7
yIeWX/693ri3Bjw5fwVsGZm57DBiC85vAe3PHH5qNbwGZJz/AhIzS3patqqF
QM6PAVvvBmjZIXbk/Bkg76URdAz59Ti/BnRp1lrjGmIV598Av7DCqzOS8Hvi
/Bwgl12TtXOpAWPO3wHbnOKa70C6uj3l9wCPnI7NAenenP8D5vRveGoWYmvO
DwJDLfq+fV6F5yvnD4Gr1iXvX2D7KM4vAiYFi7ucRn4nzj8CvV5M/TZnBM4X
5yeB+0NXWa5GnMf5S+DY9+tX9yJ25/wm8MdKbB36HOeL859A7zMO5n5Ir79E
+VHgdsZf0FLifHH+FNBe23Nym0W1oOD8KjB6Xatpw5Guw/lX4IvxrOaXUV4S
52cB9YEztkuQ7sz5W2DO3t+vNyE24vwu8KDHucH5yF9M9pcCODvSrbwasSfn
h4G//b2vN0zG+eL8MdCriWp+e8Qyzi8DuyOP3dzbBueL889Azp7wpjUo35Hz
04BXQdnJhvtwvjh/DXg+0l8agfwqzm8Duyw/1h6swf2a89/AgKAI3YuIjTk/
Dqxd3fuzzBjni+w5hdB2RbvmrXRrwZvz68BkS5XOzsW1YM35d6B6ccDpDzg+
Tc7PA2f29ky5hf2Hcf4eqDqeHmyP7Z04vw9UhCVc24FYzvl/QKuwwuYU9pfH
+YHA9+iCp/Uo35XzB8GrATVbtffjfHF+IcizjP7cbUkt1JF9qBAeT7umY4zY
n/MTwcqnFwdYIbbl/EUgPxdouQyxDuc3goKSyhD9Ufg9cf4j6Ljbtmx421pw
5vxIEHv32o3ryG/I+ZPg6JjfkZopOF9UD64Q5r/803YDtnfn/EuwLqBi2BCk
W3B+JrynhR+8ivLqyd5UBF0fz9sYhDiQ8zvBer/rK5yQ35HzP4Hb5t2qLJSn
x/mhIKyZ7IylHc4X54+CH9VvejRtVwtKzi8FM1drtu6M2JjzT0HGlIvVR5Ff
bUb5qUDj7AKta4i9OX8V6J3QP9ogFdcX57cCh/g5k9oh1uT8VzA7rvml7aNx
vjg/FvQc/nqm3yecL86fBT+WLIlcdhvni/Nrwatcq5GrsH0e59+CMOG4Lg/H
48r5uaBdk7sLqxGbcv4u+PymZ6/FCpyvOMrvBV3uNO4Xju39Of8XTBtorFYh
tuX8YNDkU2pbs/Y4X5w/DBydPppr36mFKM4vBsExHgkJKM+Z849B4b2GZYWI
DTk/GXzY1WRF0UGcL7KXvYK7aZ+jbqM8d85vBjs9tV2aHML54vxn0MIy6Vom
0uvNKT8azL1cd/b4S9SHOH8alB3VdvmDdAXnV4PG0w4c7fulFvQ4/xrM/Snb
+w7Hl8T52aBgwsuWl5bifHH+NhiytMLERq8WjDi/G2y+9mtmHNLVZH97BbP/
hG/JR+zJ+eGgRHXJowaxNeePg4Tlx2S+2F7G+eWga1qXuO13ayGM88/Bst/n
h1TheBw5Px0UWNw6fDCtBuScvw7evblkZrsMvyfObwdTdna3X4fYlfPfwafj
SYf3Izbm/HgQmLc4dd5XnC+y570Gy58tZ61D7M/59eD6FJ+dSzvg+uL8e1Aw
7MUST6TrcH4+WDiiw5LjSI/i/H1QlfzbtsFynC/O7wdZqnNNZ6twv+b8f/Dv
ktOipkdwvqhe8GswuDSn1xts7875A+Hjg+CDHb7VggXnF4RBYk2LQYjryT74
GnqM75HyDOUFcn5CiG8xLvR7AM4X5y+E41Wd3pt3xPni/IbQ8dDlpd3u4Xxx
/kM42/DR/UsoT8n5EWFvXkxJOY7XiPMnwvnNXX9l4fjUayi/Iuw/2negrj3O
F+dfhNN3/7Y8gfKsOT8juPZp7GyCdBnnb4TDr8331GL/YZzfEe4u0drYuBPO
F+d/hDvjvMv2IL+c80NC1jht7bOIVZw/Eu6GRfzZ+B3ni/NLQsNbxma22N6Y
80+Cj+Wx4esQ19VQfkpoqx+nb3Uf1z/nr4RHF/Kf/0Z5tpzfEvKPfqxt5VAL
mpz/Erb87NmuN+Iozo8JEeXbxo5F7MT5M6FqXskyG8SGnF8Txk5af3QF4jzO
vwkHs1oW6XbG+eL8nKDzIPHtknpc/5y/ExYobwzTfoDztZHye8KU219mVWXg
+uf8n7B93g23RgZ1oOD8oGCyrG+r+0fxfOX8oSBb5z05dVId2HN+UbC+K6Jb
rqiFcM4/ivf48/5fsT89zk8KAS9a3LiB/Tlx/lLwbZQdIf9RCymc3xRSN51T
2GN7Q85/CieaHc2cinQl50eF12O9mtZj+yLOnwrPBzws34b0YZxfFXJf1G1x
Q+zO+VdBo+han5coT835WaFjcd+Z7xFP5Pyt0FKu93xZYC14cX5XeNVkdndn
xPVkfy2GbjZmncL08fvh/LAQpLvl68iVtRDA+WOhRcCJLlaIG3N+WahMjDVf
hljB+WfhTbm53fSf+H1xflooL7lduRyxLuevhYhW+le1H9bCWs5vCy2HwI9u
iJM4/y24dN9bYNcFvz/Ojws1L/IfWCF9N+fPBY/PK18cRXoW59eF765lK5yR
bsT5dyFi6H0hd8Tvk/PzwtSjDSqGIy7h/L3Q+MGI4p6/amEs5/eFtM2LclKx
vSfn/4UXFxf9skZ6XTLlB4ZW1k/MVnerg2mcPxjO+80Y2d+8Dnw4vzAUNHs+
aCRiGecfhlkNLx5e2BW/b85PDKGpI6PDUV4w5y+GGxP77DyEdC3Obwz7IOCp
8yNcf5z/GJxTHrc/iTiK8yPD9Z7FW24i7sz5kyFB5MhTcDxbOL8ydHfx/3oS
+1dx/mV46JvkN+s3fk+cnxmGDbO76rqqFg5y/maY37Nzwl6kF3F+Z3hcP39/
w+51YMz5n6FqReYybcTunB8alnSvmvEK21dx/mhY+sxj9yfEEzm/NOwOuNB4
IPJ7c/5pWBwztdQY8W8ryk8NUclmjYasroXZnL8a2pxdYmSOOJDzW8MPnyFZ
pn9w/XP+a5BH33e0x/b2nB8biq83+boG6eGcPxtamYb13Yl0Pc6vDZuzPuv2
CMb1xfm3IUAJW0YhTuH83OD3xy9zOuIenL8bDpW1ep6L8pSc3xtqN6540WQN
7h+c/xscFp78dBL5h3F+cDjZ+9CfZwa14Mb5wyHr4bJHT5Cu5vzisFT3Sbsi
HI8p5x+HcOs7m0qQ7sX5yQGeOb07iPK/kL38LcjWRz/7jfzWnN8cfEa5XWna
ow78Of85BD50cGmNuDHnR4dpWY+u5mP7RZw/HY58GhZqH4Lri/Orw+5JLn8a
rcXzjvOvg2tFztsb3XB9cX52KDj2+81jxHGcvx2Mhri6TUB+Oed3h1tjzLzS
UJ4z53+HzA2GLRf9w/XF+eHhvyXb7H4ivT/nj4cfUS+neWJ7V84vD1dyunTv
GVoLxZx/HkbvuHIvBuljOT89yP1Gl81A+jnOXw+Wo2e8uYO/r+4N5bcH+4LG
MSGILTj/PcT2Gzu8V0EN+HB+fFgwL8XJF9v/Jnv+O4hR7Vmdg/y2nF8fft80
D+4hq4NAzr8PF0OUewch1uL8/GC1p9/vn9jenvP3w7TY+Z4e63B9cX5/2L8i
Jl+rJ35PnP8fjh345rcA22/h+gAw0ksMyEF+FdcPgBMxlw8MQH5Dri8ABQll
p2XrcX1x/QEwi+wV1xZxEdcngLUmra64ozxjrl8AxwsLV15G7M71DcC0aciQ
W4iruP4BdDbrENzfsg4mcn0EGLTxv2gXlOfN9RNAd8k57VZhuF8vo/oKcPjM
bfeHhTUwm+svgJtpap8ilBfA9RlgxM3u03xxvJpcvwGMFl7xXoHtFVzfAcyi
/JrsRhzO9R8guEHa6tOIdbk+BDzabtOtdYM6cOL6EaA8WhhViPKSuL4EtHsw
80lvpPfg+hNQ1sz8u+MG3K+5PgUcHz1xxW+Ul8f1K+CqfPvMpr3qwIjrW8DW
oVrn/JHfjetfQI9eep5jn+B+zfUxYLFdnrIM/x+mXD8Dco91/OfYC/drrq8B
l97XJu9G/i/k33gHnq1uv3fF8Uzj+hywprWOpx/S/bl+BxiEVuy6inQZ1/eA
g+KmQwbSF3H9D/jPe4VuMNKDuT4IzNzwtDgSsQ7XDwELVed7zxE7cn0RKLzc
s6HhU1xfXH8EPv9oYB7uhPs11yeBiJdt0mci3Znrl0Cf0aHGjohVXN8EQo5n
Dt7ZG9cX1z+Bwvs/5lg51cFBro8CTZ0cJrVtWAfFXD8F1jywcBuzEfUtrq8C
TdUGb/oi/RzXX4FOpy/9cEB63ReqzwIr7+rtMEW6BddvgYcGK9O0euP5xfVd
YEu8yzvDZ7i+yP/yHtK6OhcrkN+W68PAuOHdg2chPZDrx4DxBLn+KsRaXF8G
Bq/xtJqA8uy5/gxk9F8Y1HITri+uTwNtIka/90B5ely/BrRulHcbjfQtXN8G
QjySPqzH9ilc/wa2Na+f+hj5Dbk+DkwanWRlPq0OlFw/B8a9XFWWgvQirq8D
1SeNQ3IRD+P6O2BV0vbAO8TuXJ8HpvS0nB6I8tVcvwdSo5JbrQ7H84vr+0DI
0ibVDRvVgRfX/4HfzfWfaSOu3071gWDSfWf37ptRH+L6QbBZ33led6QHcH0h
eHP4Wc+BiBtz/SH4cEj7izFiBdcnAr+O62MmIA7j+kWwvO7PlBz8Pbpc3wh+
5H3N7BuB+zXXP4LVi8oG2CN/EtdHgrBZ+y2/I7+c6ydB7rt2F97heHZzfSVo
vPjgJwvDOsji+kuw6cbpFtpbUB/i+kwwqHD3grso35XrN8Gs3K23VyF/Cdd3
ggWdRp3egngs138Cy1+vvy7F9p5cHwoa5sa2aBCJ3xP5o0rAYnoTu4b9avFc
ovpS8O3Dw1aFOF4frj8FTjOqi0sRy7g+Fay3T7HZZYXfE9evgmNOSTMPIw7m
+lYQ1+77dI3GuF9z/Sswfr22SyvEjlwfC77uaHTjLY4vjutnQaHzNvMRW3F9
cX0t6PHy1fRcHJ8z19+C1XMOCwXSVVyfC649nbYwE/vrz/W7ILjpst82KP8g
1/cC1Y9xKYsQF3P9Lwhq8zcwBNsbc30wmBN4szoZ8TmuHwZGyxbZrBOoD3F9
MdCpmbjyK9ItuP4Y3gfsi86gPG+uTwabfxxw7Dcd9SHyl5XA+AkGWrHYfjbX
N4Obz5IW7eyD5xfXP4OgXKuLdttQH+L6aOBpZTLIHen2XD8N1hqGJOlF4X7N
9dUgt4ns1GvsT4/rr0G36AC/CUh34vpsoPo+q/18xClcvw0U3Uy03qD8Hlzf
DS56RaY3a4Lri+u/gaPGc9dm23G/5vpwcOux4vHJAagPcf04yNxWcegp/h43
ri8HDq9XtB2O7dVcfw42bNr6ARCbcn06iLh+5rElYi+uXwfr10a6zkH8xY3q
28HVjPr5CsTWXP8O1mSZ9VuD2J/r48Fmk/kHfUtqoDHXz4Mn3955tZ5RB4u4
vh7cUW65dhz5w7j+HsgWjJi6bSDqQ1yfDx78Ozr+OtLXcv0+uHi7r24A4jiu
7wcNxq5tXBiN+hDX/4NnWybsWeyM3xPXBwTbmfZHU5A/i+sHgu96WJiLuD/X
F4TyyTNSjGJwfXH9QSiO+fk6tC9+T1yfEEZ55j+PRjyW6xdC9Px5slco35Pr
G8Iyl9hruUivI/9hKRx4HqrphfKmcX1EaGqf06G7Bq4vrp8IrT/rLK1HfhnX
VwSP0ANLi5DflusvwsbrAVkfEQdzfUZ4eUvz+cYduF9z/UaYtGzOs86xeN/g
+o5g2qbiiNOHGoji+o+QpLnphjnSO3N9SFBn3vzc0hr1Ia4fCWcKgpUHcTwq
ri8Jo+Z8+3ME+Q25/iRc8lvd6xLSD3J9SiibZZR60Aj1Ia5fCclOLguSkN+Y
61vC4RVTEvW34n7N9S9hnPHXEkPEVVwfExoGhZU47cT9mutnws0fFXqFKN+b
62tCfMJME0vkryf/ZimEPDsm6pA+m+tzwsaokONL4vD+yvU7IdRHY3ghytPk
+p7QrmjktqNIV3D9T+g2zcBX3a8Owrk+KKTuN7i2bzDqQ1w/FLQ2ZeU8R34n
ri8K74yiVzfrj/s11x8FzeczF5k3RX2I65NC9kN3HadduF9z/VKA1u0bL0Z6
Htc3haWGLfNWIjbi+qdwJuWPvO0Q1Ie4PiqYGfdT7kF6CddPhTFDZsx2RWzK
9VVh7NvEv8fi8Xvi+qtw++alj413oz50neqzwpPy1un+yD+N67fCs9nOy18g
vz/Xd4Wk9AsFxYhlXP8VftosmP4c+RdxfVj4F1bSLQtxMNePhdhFt6ffw9+r
w/VlYURkq/rfON61XH8WUltZarUeivoQ16eFNnZ97eNwPHKuXwt+M/Sa5GN7
Z65vCw2c53Ztq4nri+vfwmmXlJY3ElAf4vq4cPbgyT0d9uD64vq58LRm9tXh
yF/M9XXhVbvq5hORPpbr78LQDlcspiL9HNfnhbU7RqzWTsTzi/y9H6B1RtfP
CqRbcH1faJJQv9AY6T5c/xdGbG6SbYX4dw+qDwy13+NbGMzE84vrB0P4pywL
N2wfyPWFweVI6cQa7F+L6w/DxIULnt7E9vZcnxige/3QJ4ijuH4xWAzZ03ng
3lrQ4/rGcCH+WO8SpG/h+scQ8Gd7/JUBqA9xfWSw3eBivgP7N+T6ydD/daeb
QUhXcn1lWPm64bxTSC/i+svwvWvIy3sofxjXZ4a+1r8aOyTVgjvXb4ai/zbN
+K8Z7tdc3xl07wf17IB4Itd/hgGnR0Rd2I77NdeHBq3XyzIGIr2e/NFloNz1
s1OLgbhfc31pWDnVOvTacFxfXH8aDg7OWPoL+2vM9amhl3dr/z84PgXXr4bJ
+1LyR2D7MK5vDa+HWHy94ILri+tfQ6+d5wN3Yn9ruT42vKjolLLieS0kcf1s
0G9x3HMZtpdzfW0w2x+43WIEri+uvw06M6ys9Z3xe+L63PAnWr96zixcX1y/
GzZ1ahFzBPldub43/DvqG2KC/CVc/xv2PFY5pmP/plwfHH7cmPN6rRLXF9cP
h29JqXpPsf8voVRfHK48y6v5iPzTuP44ZHxuHhWA/P5cnxxSNTKuNG2O+zXX
L4c3/vZbWyNexPXN4ZVeV79JI3G/5vrnEFu+9tkvlK/D9dGhp6tOgMYg1Ie4
fjq0SDTLGoft47i+Okw9V7G+Dn9fZ66/Dn9/XHP+hdiZ67ND/znep3VfoD7E
9dvhootcMQ7l9ef67hCuIdfagvIOcv13WP8jTmsO8hdzfXho76s4vhqxMdeP
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
6ZpJqUdg/8J4QDlZBenlGemhHtqSZ3QvXE6vumukjIBOYXygnOy2jQlOQvvm
01/3iqLlNKjOuUc2tDvjBeW0ddvbJxMcUA890m/R2i+n/uq6T6dDK7F/j1pO
FW23BgUgnjc309fuuJwe9u5YRTOxXjOeUE6HJxq/WAV/rT47K5ackdP5rWlV
4dCBjC+UU/34zkupQUHlE4pG7c6XU1BNstJmP5xfGW+I92u89eB5xIsM+PcD
XjntPB4cd/I41mvGH8rpw+0L74+gvcVek85vHsnJPDd1xgOMJ47xiHJKMg+x
eQH9MX9h0J/Xchr9MOJjJfq3Y3yinOJ8Nnx+C51cfeC1yWc5rfzSs73TF8wn
xivKKfBK7/Q+0NM7yia6y+W0OO9xYxv8sxi/iPn0p4uk83jUQ0N+nlv/S05n
P9cdGdAH+xfjGRW0p8R0uxl0nruldpoKvktgTOAYaHXGN2KdqBfNmggdsH4Z
KkoF3U5d35GL/koZ76igvQvTf05F/L6pKQ2igQoaeUKyvDUV+cX4R5zz5Nzf
xbBXlj511zZX0PmIr7FdvyK/GA+poMNT3Yb0h47+rnzNzlZBaTuWXU1Af3WM
j1TQ8Ma1gc6wW2vaGfqhzvUotujuDZ3IeEnEibdYnwP/Ruvg+N34DgtsDn3K
TEN+MX5SQWJnPS4d/umLT/O5ixV0IsolqQC6jfGUCrrW2mfAY4zPc8fbRW9W
wu/JmGDt2ThvML5SQYYzPDgp4nc5r17+Z72CYkodDLp9w3me8ZYKEuV1KhkI
feO/SSOGRCvIJXuxZacJOM8z/lJB9Se+dnGFPag14qg76viE1jdxxn1x3mA8
JuJcXH99fzrW6wEXO9Yjjy4ttJswAu23MD4T++SX/hMs/FEPTfkUmJaFPPYK
6/EM/qMYr4l9qfaF/iLEi1+tV3UvT0GLlAdt/YT+vjB+U0Fr+7zgQmAff8jN
QVysoA2yb7VR0CmM51RQcLz9KqPvWK+vR2dpP1LQiMHbliz3Qn4xvhP7uGdM
Rhr8s+qvaozDuSfcw2feMvgrsb/nrqB+LW2/IqEXdJVE+GEdGfgz/+QB6ELG
fypo5aGBbhVor24x6ONumYJOSy7YVEEHMh5UQRI9Z6P30KX/fhzxE+9Dh9No
hDZgfKiCBn/K/ilAF//DT5Q5cokO/frnX3vGi3J0u87vjD3ek96/H0+pcTTu
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
bxNtKKxb47CWIyN2n6SJPIOcFb0KFfR/MATGnw==
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0.4035}, PlotRange -> {{-0.5, 1.5}, {0.4, 1.1}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0.4035}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{-0.5, 1.5}, {0.4, 1.1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Rubidum 87: P=1mW\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.809983220321526*^9, {3.809983253444191*^9, 3.809983318242339*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Rb87p1", ",", "Rb85p1"}], "]"}]], "Input",
 CellChangeTimes->{{3.809983047890545*^9, 3.8099830559015164`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
T/s7xULZkLHzfnWbPe6j95ZFcoLY0GxbujQE8zYURslNB7DB2/at0kHkqIt1
t8f92GC0niMbh3zrhJj9sA8bfLTWCk4hf410HOrzYsP6GK/jyoMkMcc/+2SP
Bxu+f3o5nI267dY+tY7t+H1K5v6zQD3OSqfx1VY8X0Bi2y3Uq1ZFejU7s2Ek
aWL/HtSH1J/QnziwIWeF2lQNzq80V5RVbc+Gm4E/bgH6XURbVlfYsmHngU79
V6ifIjPfFRP4Hs7y07pQf/Kjd3++JRvuftZeVI95453a0tnmbLBXK/j4FlmT
EnEr1RTf67/pkAn0ezyotUlei78P8utHyMskkVosGIhfg+/JrmpIYgtJNGdu
TohdyYb3qtIyC3JIgn7qkkqkPhv++hhrzNlHJVZEf30SrMuG8xdEK1QWUQn/
vVoe/jps2Nc8sUQb+fL28H+eWmzg/06MX4H+VptHGdvU2cAzVXd7tJFKCIz4
Bg6qbLgvsaHBAnVjbfu31spsOGj2RjoD+4XOzwgxX4jfZ/rW6qKfJFEw44uE
8Xw2NH1uPfAAuWta46b+XDY4GJxqC8B+M4fDrJbOxvv+zPrzEXWLjw/7VGXx
+8Pw/y8G8w+94MYpzmTDus7DQSzUyx7ZKclL4Pn3u2vJDpHEt9L0R1JibPhY
41u0+ApJzM355CbkswCGAxuVrKjEpjPqU0wOC3R+8OJuYL9jsaFpJJMFVx1T
Vdyw/v6+B3qjNOQbb7/sRR724LwapLJge+dNz0b0K9vbBvVOsmA8yNb5BbLr
ujSx7nEWPH3YWtWB851e1lPY9ocFHrE3TT6hXr9wicWLERYsXFPYUY/zTEiF
fG36yQJlv5Gt7zBfm3n/cO0AC7Sm78kPIHv+Zs2/18eC9C1p70jk9M/WD8q+
smDv9RNLRFhPeX3BtegT9h++909OmUown3SP53azYPR4ssMVPJ/+bdXzlzpZ
sOwrw70IOSBv37Lz71ggfNj4YRn6c87de37qLQuO/Ol+tQq57Shzz7HXLHi3
IT8vLBf30VBCEP2CBf/IpSeeY73JrvPXwikseF8+RklDPcyha33QMxb8jcm7
5o71RWaLP+1uZMHHB8ukHg3jPqoXFONRx4LWuYdPUtAvo1I117WWBesuXT4e
iX5LWUaV/UMWKCylbBpFfwxno5PVfRY8SYwMPol6+djZP6Z3WXB5w4+Xs0Zw
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
830XsN+5//3jMjMapFp7dw3ETxFP/7c+r6OBlcm5JSZvp4h/eebLthnT4FHw
7X6xhCli+fnTz7espkH0PC2160oksTuufY+1IQ2yr9iMaqOeGaYoMFtBAzn+
y8YtD3F/2eV3zWg5DZQC+z6JsB/XoXy9/lIalPy3nrsT/WvMyR5tTRosmE+L
rcJ++1aYxaguoUGM0Xbd2zmTxDWVpLmKi/G9Gk7b2K2eIt7LtlXNXkQDVzcb
2UH0S3LnO0kp0mA8JYq9D3Wz8d1/BPPwfabraD7F/Khvt84w5WmQm2t7sXgf
7qNtk1qkHA0i8p/ERCzC/aXRFP5I08AsdkrctG2KmH33pO+gJA3O5I5tEDsx
Rdheb+V8FafB0V2TwbtQP5KmkNclnIYo02YHbdSr4n1M2njTsEbmu8+toUli
MKK06zl7Gs6NDXhuQl3JdyKqiTENm6PyRCPYz8ll3eza6Wloe+AcHIL6KcvE
O1XkNP71+sllwPxawzebyyamQer6cy3rNVPEuNq8kcKxaVivXn5KZniS0JD3
Tsr9PQ1W4W0JZ4JxfxHcVL80PA01SRWpTZh3YXK86dzgNOjf2JS1sH2KaP6+
1vvU92kIytO49h11WkcCM+7bNFAC613KMF+v+dXl6C+YR3XRd0S/3/05RuE9
0/DjjvPMN6hnF3m9D+yahpz0mswI1N9kFEfsfj8NhJM+ZRR1fuKYjEf7NCxy
UD9UjfMZHfw/js48Hqr/C+MqEUlKixQhoUgUkuRKiBJZooWSCkmyk2yJsqUs
CVFZIpEoJKojaVGi7PsymH3GzCRJlt/5/v58v57nPOfcez/zmXtfNdeOfLMv
PPhVdK/FJpRNOJ++ut/oIw+Gj507VYr19y3qh/bW8aAso0FDRZ1N/CCWhWoB
D3pjSz+2oL5YzXb99jc8mBkOnUjDeh2Zh1WKr3mwyEBpthD5shj1qEwlD/6d
TH16Gevz+NR/SbzkQV++dnQ4cjfnyp0VpTyQ35O5cDqVRYgO120TfsaDhIBB
Z9tRFrH/59JvC5/y4FpipFCzKYsI/O9/j+fz4LB+6PwHrC8py1o8kcuDVBjY
IxvGJkjZ5BzmI/RLJdWMoS6RtF1/LIsHhUeq0ieRzSIC+/szeLAsS7Lq0j0W
EeH9PqjjHp6PALsz57G+0klYojmFB/mBqtkfGvH+xcq64nMiD7ZsvFvGxHlk
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
K1qaSvxwviTW7Ilwo0BTfmunMOrEV0qvTDxOgamjFvqVGC/ZndSVeYICzjnG
mbuQr59bulF2mgK1R2619yJvxnvCriGMApo+5xr7UW9McUCsM4ICh30Xt+Zg
P6Fm+799ukyBBpPMm9yT6Ef9HhVPoM9XPi3+eSPigmtbTtBu4PXjaV5fjPq6
ZSk7OLDvNX+gceUJ9C+vfjMEsvF6OV2beoW81/TJRqkCfA7t2R4duhfnC/dQ
pEopBa6F6T0axno35c1M9Kso8JnrFGkSsdz+Bl7zOlw/NVrW7g7up5fce8en
FPCxOhUuY4rzJfbWbd9WCpi32+5twX5mizmcz3bgnM7+cyIB4y+2B26O68a6
99b0jCEv8mNkMu0DXg/SYrMH9lfOeaiyCN8rVI3Fj3JP4T7INp6uxeekavjz
3I2I+/cqaLfhvqvni9F2bcLnhcedpd5ZCmx6ZK5ogDzH5ZVto2Q859VuXubI
ZxYEx5GYFODetVNlUzrOl7bv5stLFFi7+t2AK/JjlG08cRxU2Jd8e70P4qq/
o/5JK7GPHXeuZqDe2XV33qWtosLRqYmeCsTGmy3Uc3ip8Cxpv3ALYn61lWlF
/HhdpjsV4QCeN8MmVsU6fM49PFgwhnyRVbBjLb5Htd0w5jiOfOAxxean6Ave
Fo7xP8N+dAO/S7XhfdQmD9veI+aKTI9+LUGF9UaWzdun8VzesPzRK02Fk9HG
nAaIs/O4TL9socKTWYnl08Z4Pz5oLh+Vo8Kbawrd/di/+rMza6YUqCA1nz9w
BuOXerYHkpSo8ECg33AG+VcjYx8YqlSg7Nh9nor4Jilj57I6FVS/NT6owHjX
X1bpnFpUCNq+jcyJfWzjX/WTdxcVdkp4K8ZmUIAu8cxlPb5Xeb8tM05H3KIc
2ir2zwcdVFt7wh+fp/rKW2Twvpps0RThnsFze2jiisI+nDOuW103IpZ2yZre
YUoF2vyM5W7Un/W3OahzkAovglReU1Gv/sLqqj0WVNifRxznzKRAZGKrwH5r
Kji5P7nojvnm2WHB/35PU7rcQO8/zBepVOm3O4J1H9EvFv7E50zjDx0XRypE
vX9ieQjzK99kZ3m6UOF6SfbdCsw/+9X214ljVOi9t1s+FvON5v7/N3YuEG9d
3taE/uvn8xfhXlS4InU+Jx35Lzzn5KJxrn4LVX5JwvUVie24dg3/zascpD1B
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
/3+GSXSW
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.002777777777777778], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
5KGfC9ft9fc6zoRlXfYiqq8owh+/PlE3gQmTL61Wj0Tf2pd+vc06xAQxj0+r
a3F+fruiS1UsE67tXbtX5TVFBqat46REM0FR9MrUJvSvRV3iOdcDTHz/Z6am
zaZJasQzC819TAit9xxSrqfIFx3O16EQJmj/WlSzTowmCz7pH6kIYgLHzeLu
DSuaxKfs1E7czcTvm1qGFRsp0mKR+8rZjwnBDX9y/NC7GkPvAtV3MmH958Qd
o3h86KWJU3q9mdA6WNzsin597mRzr2wLE3orWjyOYJ4mErMpfjMTAphffpVg
3nnvHt/BDe+XHIvdv9DTD3b05yhuxOthdnJ8N3pWUkHT+oczEx4FxJ0wJDRx
e+Hxo2QtEyz2zjqmhB6+cSAjMcqBCYZms17vwSzQfa1rt4oJq016J9dgtv/8
r0HOlglzZOBBIfo354TZ3k6Cjye/zPivO+6XZcjUG8uYMG18lFGNXrYcLnwQ
vpQJu9fpntZFv57M++ZubYrX01TahdKiyVdnpT8yi/H139JsqW6hyEJRp7x2
QyZ03QnSUGqlyKGyYysuGzBBec7Ob1NW0KR1Z2V3kB4T/HprEg7E4n4pcpPM
dXBuN+Hpqzk0CX9poC8xhwk/lXSk2JifR+5qbpnNhBa3D6sq8fjpehfDcmcw
oey35a8+zLs63iv4qzLhr+JCq2EvijxMnVRhrMQEk9irHiLoXSkrW6/xaUzY
+aDVQx+z20jMeL0cE3ZNP3OjH31dlF92OXsyE46evatQ8x73a/2A3XYZJnyP
2rG07TxFHMW0+gykmFA0Y/r7KPRvzv3NqQIxfP8Or9S9hnlwV+bCun80BP9Y
EJu2jSLLlOrfpv+l4VrCokDdHIqceiUS4TVKw6TquzEJ6N1vUeYqujwaAg8N
yqd6437ND33KYtHQNu+SroYdTQ533thWRdGwsnTlWQkZ3K+T30VPDNGgb2mW
3pJLES1r5euu/TR8+cmlOn0oEk452Wv24PMvlNzyHL1cW3B8cOgnDdntCzSb
L1JEYUNVWsV3GkJ1133oxMfzFectSvxCw2y6lSGFvi1/sKDd+TM+nv6vE3Er
cb/8fKPUP9DgujRtwlaceyhfUu99R8NP891uB9GnRa/bqspaaNh2RT/iTR5F
fkdP3hHfSIPnJqVdMUdo4qhvJ+lYj+sPdLnKoFdzvxwsUnxJg+iODUmq6OGh
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
JCriNDWU9l632173huz1O5/zzs9/5/G+97q97/tz3s/3Oa9z3s6Xvz2m1w/j
eppibPPwRBfHdCUkcv1MMa5s6/ng3kriH66XKcbd2clfR2rVQnuujynGR9fG
lT8inn3O9TDFmO3V9+VE4tmlXP9SjBp1Xg7uxM/fud6lGB1/HHx7icavcX1L
MVodstb1IX7W53qWYgzQ8BwHxL/5XL9SjNGDe8m6Eq86cL1KMXbqP3rJ3OvE
P1yfUox3VsWtaG9UC+Fcj1KMKSZDvrlnK2E915/Q3//8UBupH0Qzrjcpxl+P
R8hnEQ/f5/qSYixsNme5yk3iRa4nKcYldoeGLiW7mutHivFj9ax5C4h/z3C9
SDGeefV39T3iXR2uDynGSXWKbSmSfoLrQYpxTJc6Jz/i4+1c/0HvH9ypzUHi
3Q5c71GMf8oG2D0kO4DrO4pQo0Iz+gjx8TKu5yjCA9P7zGlMfPqD6zeK0DZj
hML8thLcuV6jCHt2KB3rRzw8keszitCreauf+WTLuB6jCGduMr6zyZP4h+sv
ijDr9GMfK+LhvlxvUYS+bz/LWxPvRnJ9RRFe1jt3tb22EjZyPUURqkZNWhXp
pYTmXD9RhJ+steZ3v6OEB1wvUYQ7Wk56EkLvn831EUUYYDlNr+smJSi4HqII
4/29a21n14IL1z8UoY/TuU0S/47geocijLz7QDuBeDmF6xuKcIHHxJjMIiXs
5HqGItQb+GbQ/ntK6MT1C0WYuNHx+1fi3yCuVyjCqy9nDtf2VsJyrk+g1y8M
+2g8vBZ+cT1CEWrnGutn0fgNrj8owo10OL1P4wZcb1CEr6JjrNPJLuT6Anp9
53WjLhEPH+F6giJssSFnZArxbn+uHyjCPqENbk8rU0IU1wsU4eTzo/ecIJ7d
xPUBRfhcZXCnzzTegusBivDX+f9enSM+9mH9fxFOWJh7watcCXNZ71+ErmfH
rsol/q1lfX8Rjipx6LqR+Pcc6/mL8G1Yy7yHFUoYyfr9IgyMcxwWQuNprNcv
wpdGX4Kqyd7N+vwi/Os2SvcZ8XFn1uMXYbv3fo1aEu++ZP19ES4v1Mi6Rbxs
ynr7Irx+3Sz0r3Et/GF9vRxnTzl16B3xsAfr6eWoeullu29kT2L9vBzft9jT
M4z4uIj18nL0StkRtNhXCUdZHy/HBg5/E2yJhweyHl6OI+dvvTadeDaa9e80
HhKbt51sS9a7y9F479MzfsTHaqxvl2OiY2F/HeLTx6xnl+PfZi6N1xAfG7N+
XY670kJq+xGvfmC9uhx7n+/laj9WCRdYny7HtH6j77jvUsJo1qPLsd+Wb9H3
6fUZrD8nu/nPQImH7VhvLscKjaoDHsTPXVlfLsdG13Ivu3xQQjDryeW4d7Db
l+XEv6tYPy7HWWbZ27c9J140lPTicpzb6Yb6Tzsl3GJ9uBz3P3sWNH+PEqaw
HlyOKr92jVQjni1h/bccXd+qH9Uj+zjrvWk+TDLaDAxQghbru+U41E99tXGd
EmJZzy1Ht6xLB1/T661Yvy1Hu/euPYYS/7ZmvTZ9v9jV2h2JV5+wPps+/42u
73+ghPmsx5Zj8w2d96gS/35k/bUcs7N90/Np3JX11nJsdmZj6n96tTCG9dVy
HNfmZMUn+rxM1lPLcezVW9M0pf4MrJ+W4xnznsWB9PrurJeW48UPQYu1XWvh
Deuj5Qi9arteJj42Yz20HAO2umASvV/on+U4vg3kWh4kXmS9sxwXuToVlEwm
XmR9cyHizNG7OzsQL7KeuRAH3SywG0Q8fIL1y4XYul/FFmeTWhjMeuVCTDjQ
+k0WjcexPrkQX884nrKA+Hgr65EL8erf9gsfkK3O+uNCNLO+tCdp3D+9cSFu
GTdy9Tji3QWsLy7ENveNPw8mvq1jPXEhXprRy1w1hHiR9cOFaJv8p2rybyXo
sV64EIfcw7XQoxayWR9ciB51LV4MJl62Zz0wfd9MPQM3Gu/J+t9CHLl/fpgn
8bDQ+xbi24nHen/4v763EJdPjW5xTp/mi/W8hbipZePdPn+V4MX63ULsH3Bk
3CjiYUPW6xbirGn7hpwmu5z1uYWoTD7/+B3x8ynW4xbiteGWuT971sIQ1t8W
Ym7hzVYuxMvvWW9biNZlLeIlfYPQ1xbitpnvDA/1+qenLcQu7Q6FPiLbj/Wz
hbjAcMiEbLIXsV62EOdo7rt7tkEtfGF9bCF2Vo0c+ZD42o31sIV4eceBH2WS
Xpj1r4VYPeLjVEmfkMt610J8/7r0eaBmLRxgfWshHg7+o1gJ//Ssheg57HlQ
W+LZENavFqJeidqEiWSvZb1qIa59k+GnID5uzPrUQjzp+HRuW4NauMt61ELs
96FQ60aMEoxYf1qIzR1fl34mu5L1pjLc8OKe6xpjJTixvlSGw6t6W9yJ/acn
laHV/EXKnX3+6UdleNB30r6ek2i+WC8qw86/pz1dQDzbjvWhMnyeanThJ73e
n/WgMpyp33mpxQIlLGH9pwzf67TxXdS3Fr6x3lOGXe2K4BDZV1nfKcPVE/zS
hxP/6rOeU4av9wQr37j802/KMO/tmwUnmvzTa8qw1H6w7mbiYU3WZ8rwaaed
Pcz61UIY6zFlOHp4fEVX4l9z1l/KcPneL5HbyG7Kekt6vXORRizxsjfrK2V4
ccXi2b0vEP+wnlKGKaZ/+rxpWgvVrJ+UYdud9o829/+nl5Rho432hV2m1tbr
I2X4ZEHPdXuJlxNZDynDK+dHqGQTL29j/aMMaxafvjjQRAkarHeU4arb0ffj
6f0vWN8ow6urSqIKiY9NWM8oQ8dfCxp4Ee/+YP2iDHd1fBI8m/jWnfWKMhzT
9YlHRco/faIMGxY72+kRLws9ogw3Pm/uciVVCQ6sP5Thzq0upz6Q3Yf1hjIc
6vj72Iw0JUSwvlCG1k6FDU6tUMIG1hPK0LXx6aPfaVyV9YMyHBhjvWPqFeIf
1gvKsN32JwnXrvzTB9L/f8zjXIMMZb0eUIZn2u28sozsM6z/o9/bUsfzKdlm
rPcrQIPPj8d0GETnQdb3FWDT8XNKJ5Fdznq+AszWSOjqTbw8hPV7BTjCxKFb
O+JXG9brFWD6kDW1m4iP/VmfV4CafUc8vkr8/I31eAVorXDVu0yv12f9XQFu
73R89DbiYXvW2xXgPQPrRjfNyB+xvo4+X+fVo/9m0PmL9XQFGH9pwcTUwbVg
xPq5Avxy7muLVzfoeWG9XAEGfdnq2I74OJH1cQVY1r31luXEsxqshyvAa1fH
DzpOtgnr3wqwYuH18AHEt+6sdyvAnTPjNp/Oo/MQ69sK8Pb2uMtFZGuynq0A
4+Zf7zuO+Nec9WsFuC65xVzNSgV4s14tH9+Yg+v7W8TnrE/LxwbNXvccQHys
w3q0fFy3Mv3lyta1sIP1Z/l4Pjs9qq5ACYGsN8vHwYfPxQwhPv7F+rJ89Hxi
q3+H+Fif9WT5uD3skjKHxh1YP5aPNSseBy4upPXCerF83Hjq/ndJP6HK+rB8
LA7uW+hKfDub9WD5qD1vVd+OFkpwYf1XPp4bOjhR4t9U1nvlo1dIzxld1Wuh
M+u76P9vsiczi/jWhPVc+ehi6nUPiYfdWb+Vj/dH7LKrJV6WsV4rH9O3gaFN
sRL6sT4rH39ZLvL/Rp9nwXqsfOz2zuB7vCXxJ+uv8vHS6MkRpcS7tay3ysO4
7xtHHiC+HcX6qjx81M30wB/iZTvWU+WhvvKqbgaNB7J+Kg/X2Z17lE18/OuI
pJfKw4sGL7UyrZRgwPqoPHwn04w0JZ51ZD0UvX5CrNrzB0qIZv1THtatAF19
4l811jvlYcESq417iV+NWd+Uh3kfU6cFEy+7sp4pD0NfuG2T+k1ksn4pD2Uf
bjRuQDzamfVKeWjT+VSSi9SfjvVJebj3by9lGdkerEfKQ4NZuSPuEQ8Xs/4o
D+86j66KfUS8xXqjPLz/VhliKPUrY30Rvd7e8qIv8bIv64nysPbg7G+2NsQD
rB/Kw4ftVJ3WEP/qsV4oF8/mlLT4Tu+3Y31QLmat3/YjdGQtBLMeKBfX+z0c
vYB4V4X1P7n47PJkl3Di46ms98lFrx7dO3ZXEN+wvicXU6uXlPzeTjzDep5c
jMs/OzCextVZv5OLn4cuaFRBvLyI9Tq5uHWzdvxK4ls31ufk4nydITHLd9J8
sR4nF13Gb2gWQOPdWX+Ti9baTvOPjK4FM9bb5KLqjM8nJR72Yn1NLpokTHwX
QPxcznqaXByRMnu9sT/5H9bP5KLyvMkSb7JtWC+Ti5tGz56hQjzsz/qYXLTN
DXa59lEJdayHycXGa6tG+dK4HutfclHe8vJQ1Rfkf1jvkoOZSXft7nwi/8P6
lhyUr3+vdpt4tzHrWXLQKPRE1JI6qZ+zpF/JQfNi22Y3daX+zJJeJQcLnnft
qfqZ/A/rU3IwSOXBoM7ExxqsR8nBtrKcFgOIVxex/iQHZ62+oRtN426sN8nB
A3Y7J2kGkf9hfUkOPnSe0HCo1K+Z9SQ5OMH3RieHpeR/WD+Sg0WKB813fqX9
kvUiOVj+uk9FCUj9fiV9SA66yUaNf0m8q8N6kBy8OWvJ5IOSXpj1Hzn4RTvj
TvtuxAes98ih/SpS7nKA/DXrO3LQ1H65xhYa12c9Rw7GnDB8C8TLDqzfyMFr
8jfaFcHkf1ivkY1GPe6VXfgh9ZuV9BnZeG3GouKPxNOzWY+RjRqh8/1nTCH/
w/qLbJxeN2/RjZ9KSGW9RTYW7mg18CvZGqyvyMafbef09DpE+y/rKbKxQd4w
j59ku7N+IhtjPTdsfIDkf1gvkY1vK2ccXU483I/1Edk4v+22mOUhUv9SSQ+R
jctxyW8/sn1Y/5CNLbd7Hisg3q1lvUM2Bi3Lt1wXqoRRrG/IRuULu9KOxLs7
WM+QjRvzDsRZkx3I+oVs3N10u3802b9Yr5CNjoblphFh5H9Yn5CNGU9G3ZDi
x46sR8jGdl0+vtqkIvXDlPQH2Xi+y8mSLcek/paS3iAL6zpe8gmjcWPWF2Sh
RtgW25vEty6sJ8jCxUOfh+wgXk5l/UAWznbWVH0wkfwP6wWysOf3OvdjkeR/
WB+Qhc93rQlYQDzrwXqALBwc+OSiVC9XzPn/LGyyxd317FvyP5zvz8LC+dEX
B0h6CM7vZ2GbreVqTYlvfTmfn4Urvx2/7halhFrO32dhZeNH32vJHsX5+izc
3K3LVlN38j+cn8/C00Mmfd6oTudXzsdn4ULv2MsD5ypBhfPvWWgwZapmNPHx
VM63Z2Feuw6qBsSrJzi/noW9pgaWWpEdx/n0LBy4fEm00on8D+fPs3BXf/OP
9sS/xpwvz8TkR2uc1d6Rv+b8eCYWTXr1y5zsTM6HZ6JBmsrW15K+gvPfmTim
OPLG3TPEP5zvzsTKjgPbrJ5M/MP57Uwc+qrL6CVnpf5vUj47E8+aGhv2iif/
w/nrTGyf91/obrJtOF+diSWVzptvEQ/7cn46EyvUXgdrEQ/XcT46EzNORzr7
Ew/rcf45Ezcktd1bSLY955sz8eP12IiFxLchnF/OxOUVZbGnEqT+Y1I+ORPt
Wo/76kPjRpw/zsS/l07mjU8k/uF8cSaOmLPBrjvxciLnhzOxeWT+12oaV+d8
cCauTa0+Po34dxHnfzOx9zD9gf1cyf9wvjcDd9sE1O0kvs3l/G4G7lgf+NRk
qdT/SsrnZmBzf8My7YtSPyspf5uBh39EpR0h25vztRm4xNB96Gbi4WrOz2bg
0DMGj58SDw/hfGwGvpEHzmkh9Wfj/GsGmt4xfbM+XwH+nG/NwFubVa6NJ17+
xvnVDFQNdnnTQov8D+dTM/BnkNyl6rLUT0nKn2Zg99l/j0dKvMz50gy8kWmt
vnB6LahyfjQD03I+4Bt6/2zOh2ZgCXaOHNSC/DXnPzPQzSm1Sw69PpHznRn4
/Y3DRwfiYQ3Ob2agLHLEvSyyTTifmYEvvvtn3CQeduf8ZQZ2friq4+lM8j+c
r0zHR/ezE4sypX47Un4yHRdWD3VfS7xrwfnIdBy4eMWvhcSvPpx/TMcJfwqa
m7uTv+Z8Yzrmh3Z7b0g8rMP5xXTc2eD2zg5qxIucT0zH5ANT58mIpwM5f5iO
VwKWaM7PIf/D+cJ0jEzfntGgr9TvRcoPpuP3y78e77gh9W+R8oHp2H2vXlIc
2dGc/0vH9I4vFvrnkv/hfF863tv14PJc4uHZnN9Lx/3OxpnP+pG/5nxeOt7J
fjCooSXxIufv0rH/7OFXjnoooTPn69LRKcB+kessqd+IlJ9Lx8po9y+jiYc9
OB+XjgHao7XO3JL6gUj5t3Qs3BC0opRsLc63peHOZ3bfUoiHLTi/lobOTnN3
FxIv+3A+LQ1fJV8JOUo8XMv5szTU/Wyb/GQ9+R/Ol6XhpA6bUjYSz9pxfiwN
9XYs2OdSKPWvkPJhaZj1eeCPeV7kfzj/lYbJY1pN8PaS+ktI+a403Lp03/Rr
cuIfzm+lofKrwxnp/ohozmel4c0q92FziH/VOH+VhuofVxpMnEv+h/NVaehW
q/VmgDb5H85PpaHv2ZQvQcTHmZyPSsM7DUdMb3eP/A/nn9KwVxOzdi1KyP9w
vikNpx7zqwmjcS/OL6Xh5oz/bmcNIf/D+aQ07K8/qLlUj6bF+aM0bLhWSy+L
bCvOF6Vil9iXv0cR7/pyfigVD5Qc0dEsI//D+aBUfFd6Wq5DfKzH+Z9UvFzW
13Yo8bA953tScdwLC+tyen8I53dScZuJ4dwO7Yl/OJ+Tir0P9Rw2mWwjzt+k
4p+uRYfKttB8cb4mFX2OvamV+j3EcX4mFccfs4ksJ15W53xMKhb2nBSp2Er+
h/MvqehSMcnYfYRU3y3lW1LRo0FiXT/i1VzOr6Ti8Ua2FvYaUv21lE9JxT5R
PmvuEg+bc/4kFa1eaj29Y0P+h/MlqVhRFfXIhHi4nPMjqaiyMyT9KdlDOB+S
iiFNNdqZPiH/w/mPVDxy/855f7L9Od+RgrKg/h1a+Ur1wlJ+IwWbGrleWe8r
1f9K+YwUtJ3/LsSa+NeB8xcpeEG9+Qpz4uMIzlek4I2LJXrBZDfm/EQK7jZ0
Nd+nJF7kfEQK/rm1+sfmHeSvOf+QgqOqe2/5QDycyPmGFIxcWdzlOPGvBucX
UnDykuULX+tK9adSPoE+P2WL2+FnUj2plD9IQcu3Ojo5ZMs4X5CC3n++T0ru
VAv9OD+QgvqzHdc7ER+bcz4gBVPSNYNuEA97c/w/BTs9zhu5jPi2muP9KSh3
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
1agS79h8SeTN37FqV34ltz9ZDd9LIa1uUX0fm08JY9SbjKe+qZbNr4S08pmZ
QwE9z9l8S1Tb7TkXQjiZzb+ExOLj0Phm1Af1Y/IxsUxTty2fsD+bnwn+c8cZ
iycTX2y+Jgp6rvI/Tbgbm7+Jy9du7pS1pv6HzefEn9xjFw7Tc/I7m9+JRCvF
sBUm1P+w+Z4Y92RtRuQU6n/Y/E9c8r4vKKW6ks0HxeTbKe5dqA9g90NrMPGi
6qoP4dtsvihcPp9/POBdJbc/WoMqQXPfIMIhbD4pXjdY+Hxyr+T2S2vQud/L
38nGlejH5pvi+GWrhG2m1C+y+aeI7zu8zov6Ih6bjwq/UeY9C45Qv8jmp8I0
RZ604BDxxear4mnpmbEhZtQvMvurNThjf/XGFcL+bD4rZlzwmd+S+sBnbH4r
1Pdv1d7+QHyx+a5Y1kHtEEX1CDb/FXOGFvR6SPg7mw+LcfFL3o315mE4mx+L
koryeSZteTjO5svisPOXq3b0XGf3Z2ugFA0LV9HxXmw+LZo797yUTHV2v7YG
R88vE6+eRX0Vm29L5235aEQ7Hrd/W4Omawb8rf9YiXw2HxdLs1NSTp+gfpHN
z0WHy0u2rC+sRAybr4sWr1Me9GnPA4/N38Vg0eqIb9QHTWDzedFPPTQrgeoX
2PxevH70vaDgJPEVw+T74tfrWV+an+JhIZv/i7vfnCvcCD9j84FRrNwr3UG4
E5sfjJrhj4ePm8NDBJsvjPtFPc9H/OBx+8O1WFDZOmZ0B+KLzSdGVeQTazUd
z+4X12Lw658RDnN5kLL5xnCN7BQgOc3j9o9rYZwzs5Ptvz6dzUdGNwefxYGW
xBebn4ylaxtup57hYQWbr4zQyi2D/OfxkM/mL2Ph/nl5x77Q+mLzmdHRxunF
rI48xLD5zbD80Cq85VdaX2y+MwyLtGq/Eh7GsvnPiJrfdH2HROKLzYdGUIP2
hDfhBjY/Gm4Vw250+kV8sfnSWKKz4b2j+iM2fxr1L/ef2k59Zyc2nxoBdQbO
k5N43H51LTqHFM1P6lmFz2y+NZxPqj09S3nc/nUttr9YOXb9Ah7i2Xxs9Fjb
++YNwux+di1eBpW0e/e9kvoqJl8bnxcl+Dw4y0M6m78Nr4yLFjG/eTBm87nx
9sWkNjmEV7D53WjoEK9ZfY74YvO9cY5f1tS1jIe+bP43jnb/+ncr4Rg2Hxw/
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
8jGsT/h5fJzlYp60ba+YMOCNoDrPgCe/+ei51sizX4nPwZXLeBK1rjwmFPMU
er4Bri+L1hOrdHF+7Rv2K9WHJ1zPUncb5GPleQc8sT4Q4rzAXQTb6tZZFf44
/tGdfmkj36bQ8w/w83c3zp+C+c+ggnOaK3mygrOW5Y0RYTY9DwHvJ743iJhP
he7SsFqD+8OwLrPPbRVV5yPw5OxFrmsG8rHrA8flQUE8yYguvWKHPHuenpfA
EyuvUS5FY0VQ625QeDqEJ0c31B39i1l5fgJP1r7/6J4fLsJl7/e9qkN5YvfZ
c/gy5F1Nep4CT6oXm7gbvBdg6eUzm3S34HzgnR8/xbryfAXcT8a0zbH3EEGv
7drX1hH4+dM8PX8i/yrPW+DJogb/8QOQX+84W44O3cGTnmle4+OPCKrzF3hS
FZbuU4n8u+YE/19WFE90oh6WtiAfK89j4MlB+zkb9nmK0PvHQ+HDbp48c7g6
owhzCD2fAV8vZf6DLOTZUmqIw/3YaPuWklOi6rwGnujteqXeBvl3a8yC0/Zx
PJF5iOY88uxLen4DTxoWznpQjvUhb/uphR/gyZN2s1LzkGeV5znwJH9vH+NJ
Xji/Bn5fnJvAk1LDePlazCPp+Q48SYo+XdgB+XXPxtxbX47wxPn18WvvsK48
74EnHrd2JxVNxPl1P6yn0XGeGOryB8/g9crzH3hyqzBuQfhiERq6WW9wOoH7
1zS3d8uQZ5XnQfDEIb6dwxHMicu1X0amY52zWLHZQFSdD4H75+Vtg/7xrU3u
y+H5p3iieVOz5/udIiTT8yJ4Uj42TGc11lv54/uEszzZvv3bpb/Is8rzI3jC
RDVL3mD9lJP3N+Msnkz1sFqrQ0SQb/h3ngS+317/eT96iDA3ZegM14vYv7Ot
yzZhXXm+BE+2atxa6I58qya2pO/JxfEY2LR4P+YF9LwJfL7ZRfoWYc6ZdJsr
uMqTByFBq/9iVp4/wZOHtwo2DkV+Xbo3yrM5nydDh/jvWIpZeR4FT0I7FY/v
8c+3UTX7utktnsT5pJ/9gjysPJ8C9+/y1a5JyMv/A5fvhE0=
          "]]}}}, {}, {}, {{}, {}}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0.4035}, PlotRange -> {{-0.5, 1.5}, {0.4, 1.1}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0.4035}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{-0.5, 1.5}, {0.4, 1.1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Rubidum 87: P=1mW\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Rubidum 85: P=1mW\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8099830563635645`*^9, 3.80998307267938*^9}, {
  3.809983130882462*^9, 3.8099831411001177`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Rb87p10", ",", "Rb85p10"}], "]"}]], "Input",
 CellChangeTimes->{{3.8099833611441884`*^9, 3.8099833626987395`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
n+ayzB/3//WqlkIx95fi71ELejoBsRn3j+ay/cb2m376SsGP+0Nz2Z/R1q4F
Jk3+z1zW6vPn8ovIb8P9nbns+tyPzy7+k0A492/mMuk19XZ2flIw4P7M12zJ
nO51RnOlUM79l69ZySJZikaNVPBXvmYhL5zbTc2UCfe7X7PAn1njJiNdl/sj
X7Op5u7nexyWQS73P75m4g4HMotH4Prn/sbXLKdi2+SlSCf/4mvWa3NvLbMu
csGf+JqpJ4S83X5FConcf/ia7dpz8Ub7LBm4cn/haxb+6PaSVrVSMOf+wVcs
rPe2lidHory5P/AVm+XjOdt5nlTw/71ihyKm9UhCuiv3971iK3RiNne+KgUT
7t97xSIvaY/6hXQl9+e9Yi+SMyfrj8L1xP13r1iSzsfalv9JBX8d8r9cOFGO
z6f7ra9Yc5OOP7XqUF7cH/eKBeXrxAxEHMD9bzksSS3pWDtXlBf3t+Ww1lpv
Tl3C+ci/lsN+Lzef3/maVPCn5bDLp+dFXsHxntx/lsPcZu3e/QSxFfeX5bAZ
w/WSxpvKQJf7x3LYLs+Di2KaSSGX+8NyWIPRp/eOSCf/Vw5bHX94v818HM/9
Xci/199kpkgKaty/hfjYrnhPpCdyf1Y2y3+fUP4AsSv3X2Wz8etHDG45Wib4
q7JZzvE2RjVIp/t92eyFwvW28VNcT9wflc10epnb97RCeXH/UzZzPLh5uzOO
N+H+pmw2NGzls8VIJ/9SNotX/tjx3l8q+JOymfL124ofiG25/yibmSxULu58
HeXF/UVZbKTTtMyRiMu5fyiLzch+9EEzRgIB3B+UxRZ6xs17ul0i+H+yWPO4
9YndFkiFfuxZ7ECHj7VjEOdy/04Wk+zwbrsIsSf352SxyM4e7+dIUF7cf5PF
1FI3xfRoIRX8NVlMN0j32F3VeO6fyWKXxmkPqsHnu3J/TBYbfdU9/yPSzbn/
JZPZGY7rcRbHq3F/SyZzy/FNH/tMIvhXMlnYh8Vpd25IBX9KJrNeG/thJ9JN
uP8kkx0LvW3VdYcElNxfksmW2S1O9ViI8uL+kUzmffmqWxLy23N/SCb722l7
1ySkk/8jk+34/fVKI9LLub8jk/3OVTt2C+cL4P6NDBZ+1jRq+HOUF/dnZLBp
Q9c1D7qJ8uL+iwz2N3vsqtKWUsFfkcEyM9u46OyUCPc7Mtgqz3edOrRCeXF/
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
uMvk723CFYL/thyGO5i2fPUH5UX1cWFjy9NHFYjJn1sOQ2bmfcrB+V2pvi7M
K+x2xxPHk3+3HL7aDv+x6C+uV6rPC/PeDvqdj3RHqt8LJr67U9qk10My1feF
Y8H/Le4UoQA9qv8L9ze01Lu0XgEbqD4wvLA4FbYU6dFUPxgGZOm8d0KsSfWF
oVdgUshX5Cf/cAVYp1jK1vxT6cO8PjFYpom3uyEmf3EFXHtfmrVvnhL1Y17f
GLZfOtzzwAaUF9U/hvTiZb+uIJZRfWSY/OXguzcDlTCR6ifDz9IPT98h/SzV
VwbrPZFjB6gpoYzqL8OX9qOikiMVYEz1mcFhVkDK5S4Kwd9cAd3GuOi1ilLp
17y+M/QYNXWH7n9Kwf9cATtt3+2bHaXSt3l9aJgsXp1wCucnf3QF3AxI7rDL
ENcX1ZeGHc57tB8i/waqPw2iyneTXyGOpvrU4GH5ZemMTQrQoPrV4L7z3qtY
fQVYU31rqDLoFvIS5yP/dQWInX90DcX3aaT62OCQ2rY8HceTP7sCurhWT8lG
uh/V14bA0HZL3iMm/3YFGCyy6zJVXYn6PK/PDSm/3EsXIj5L9buhvYWP/ngj
lBfV90Z9oe9aR6QbU/1vuH0rqL87YheqDw5n2g3583qzArKpfjh4LOvS8+Zj
XF9UXxwu/fNalIiY/OMV0HGc9ekKxIlUnxxqW65IavZEIfjLK6Bm693Gfoht
qb453PrU3u0nPi+a6p9Da8nDGW2aKUHjGq+PDsesB0/dl1MP1lQ/HQabHevQ
uEUBd6i+Ohhe1zboPEgJX6j+OqwzMrSU4vwWVJ8dJn7pl7F8q0Lwt1eCt14L
iQXyi6i+O3x18brij3Tyv1eC74HDuy7i8z2oPjxEZ098fBD5yR9fCXtj7IMi
n+L6ovrysPNfvNd1pLtQ/XmwzItye4Q4m+rTQ8qWpCWdYxTQg+rXw3CRlm0u
0u2ovj1cqexQG7hNIfjvKyE4+uW7bCsl2iu8Pj68cMgxMempEPz5lTA/JOZY
XIzKfuH19WF129jE94jJv4+/J+nOYYvtuL6oPj+enz71Mwcr4Q7V74ei4RsO
THmmgC9U3x9apORNu4/806n+P+zP0ko8gPze1B8ARi5wNQ1C/mrqHwCHkqJu
XUO6GfUXgFsnWozJba4U4gOVMC3pwN9yxMXUnwBqAzNHDH6uEOIFlXAmIetC
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
56nac95zjP8Pp+fZ7A==
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
+bc4X7zxovbbs0s96f3EefIEza+2u35+sDJ+eYKtviT2rB2mPC8eo/vudiOW
EH6zFefDYxxrfqLUaAP9XuI8eIw9XS7pG9yTK57/R7jD8WaLiYX0fuJ5f4Ra
7TO8e7an9xPPtxemHruaVTGvVvE8e2GGt5bb2iL6/isbnl8v9PZa3VeL8J+H
eF4f4qtTZzSej1A+nw/R0HFjkM9Q+v7ieXyAE9LTFvlspv0Qz98D9Nb239p+
i/J5e4AnZ51p4l9C+yGer/vocny6xh7CgxriebqPU1Se/0kjm5+fe7hq97LM
7FL6/uJ5uYdHlnngzYZ8sng+7mHUvf49PcqUz8Nd3I//nVv5mL5/cYP/38VL
9/ZuXk94z0P4uyc+B+eu+Sa1Cv/2xF7rPZMnEn4LEf7sidd3aE8ueULvJ/z3
Dj7dOM3+A+E9lTMN/noHc9S/DHxE+JD90wPdjdf2akV4T0P4owf2uDCy6zay
Q4T/eaBR5cpOH58q/c0dOx0u7zDyGa0L/7qNiZF2j0us6ftea/AnN7x8Tb3L
12dK/3HF8EWF83/o0t8v/MUV269+OKYhf2sr/MMFjd4VbAjSkyv84RY2zAiV
03qI+P1v4nnJttN9G/K1PRt+b2dccTjn1xeZ8vd1xgvd+7av3U3vL37PGxhn
6WnXlPCfrfj9rmOP2/O9y+n/8+91DUMyNy4+VkvfX/w+TrikYqwGjqX3u9vw
ezhhV4OVnY92rVXs/1UsH/Pi3cbF9PyI/XbEj4+LJi4k/Gcr9vcKlvZd1vrX
PuV+XkZ76+/mRoTXeP8u48RLmhd1Cf+pmDbs10WctT9uQR8ber3Yn/P4W0PS
ZRLhP96Pc2hd7zzLnWyVnIa/3wHTC+ubR/+Rga34e+2x7rjbjH5flX/fabxx
Y5l7s4P0esuGv+cU2t1VHdRQb2srvv9JXNdtuFWpfq3i+x7HqPlHVLz+yUCl
ouH72aKv5Mu4Nvvp781o+D6HcYhTjZ7fa+XnH0CDb+Vn47vTuqTh8/ah3SSL
F9JxZJc0vP9uXB02f/FIwmv8fta47e/g7So/6P/nNvz/zXhh/chjaxvs0obX
r0Wjtx6Okf9fX4YFPfZ5af0kW9Jgz8JHN/xCzjfY4p9v8Ofpi3LkDXamWIf/
DFbUL/yltJfBizZrz/YhfKhSKN4fbsqrB72YqlzfDP0islYe/k22+D2s4Xz4
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
tDBW63Nwq8tSRb62DDKz/usvpdfr83xbuBAZN9X/gkSRvy2Du39MB29JksIA
no8Le6///h9NZx4Xw//H8QohoUKScieSo1xJvBKS5KZQjnIlIaKcSRI5ooQQ
SiQUSYWEJCRJEh2odjv3vu+++X3Mzu/P1+Mzuzs7M+/Pvmbn+Xp/QqcvIf5R
u34uyvO2Xnrdm5wv7fq60Evs2HWc3Adqn++2ovih96Ru5L5VR7s+L4bYWXqe
qWDQz3vbYN/yqbDxK5kftev74qZOgKd5Oak37fq/0L01nu1A7surtesDI2qk
1ac9RGufB7fhu/d50fCVTBRr1xfG5DXu/WwuMujnw21wcw4euZHobO36xLC+
PmenWT8m0rXrF2NIjnxafCWZH7XrG0PadMOvVzyDfn7chjN/lQbdfjBwQbs+
Mi5e3bS6kymTfp7chtx3woU6XuR+Tbu+MnS6DPooJq/fq11/GXLrpNcC8np/
7frMyMtd68Mnr9+gXb8Z1cZWt6tXkHrTru+Mb7PKXKouMejnz20IwZrNRpcZ
mKNdHxq74yeG1vQn963a9aNx3dBh/4Iq4h+160vDfWdcz8VmTIzSrj8NnyUn
At+QcQvt+tRY/IN1v4iMa59XtyHSeMDyrVfI/Khd3xq8GY4ejgOY9PPrNuzU
kWXUkHGldn1s4OSFPyYJZH7Urp+NUyljT0ZfZ6JJu742CryvfZeR+37t8+02
dLe7uJvnReZH7frcsNv8zjriZwP9vLsNg+I2nu5US+ZH7fre+G4AY+OB5H5N
u/43xtqELU+5SuZH7frgKN9smvmEbK99Hk5eP/W/e1d8mEjUri+OkH4J5Va/
GPTz8TaY6VrNP3WNzI/a9ckx7oKfJWs1qTft+uU4G7TdsJJsv1e7vjnenk1y
K1zLpJ+fs7DraJt+B9GbtOujwylfmJh6nUE/T2eBsyGoPcGS3Idr11cH91bo
/ZhbTLhp11/H0YqpvXnryPnSrs+O7zqPPwf8YdDP21kYwvaa0exN7te067sj
okLWa8ZABv38nQWfPuUTB9SR+VG7PjzWbb39YPJgJoy068ej08fZn5ZvIPfX
2vXlsVQ28/5Hsr32+TwLw2p732wh20u169Pj7htex/R6Bv28noW+U67Pv7+W
zI/a9e2hTAhuDPNlopp6fs9C/q2eeXlEl55Sbwg8yoJ07tg4OdFF1PN8FhI3
ONhYpDCRX6Q653KWRebr9r/v1jHo5/ssmJx+NPyBH7m//nf4rrJQm1JzoSeD
1Bv1vJ8F/+ZkxtCNZH50Urby77LQ2nN45wgyfpZ6/s/CnhQd53yiI/cr+r7P
YqHhtyb6B9leywOwUDD/b7+hw5kIypbPuv6GhciQkV8PJDNoPoCF1Qe/zdrR
woSPULZzdykL266cP1bPJPMjxQuw8PWHn6nuZnK+bGXX59WwMKPHBcMVjQya
H2DB+8Wa2H//bzj4S4stW1j48Hl5YzbZXssTsNBxVPS5NZWJEXckMomYhTN9
1k2a0UTqjeILyPF62e7te4+crwbxsJK/LBhfsP32hIxreQM2tpS5bm2xIvVm
IV6cZMjGYsP0NWPuMGj+gI1NdeezfUYywfUSHQ4ZwMaHhmU347eSeqN4BDb0
6m2DfzST+fGi8L7HSDaqvnya2MuaSfMJbJw54NnmfpeB4q+Cn8MmsrGyY/iF
SDKu5RXYmMW/WPCG6Owegk4qsOFck2MsHU7qjeIX2EjpcqenXSo5X/P4E756
sPH4i2DN7lFMmmdgo3CB6eg7ZPzCcd7au6vZ+BRo/5bZyqD5BjbabLa4979H
7q/fcE8f2sLGg9vnz3m1kXqjeAc21vws6kgKYMJfw3m2NJgNhd7G55WjmTT/
wEY/xpzP+ixSb1M5TdbhbMwcM9JhFtFaHoKNC8a7rBLTmZgTzDbuOMtGhuvk
HQ/SiB+h+Ag2qm2PRnQPZGLCY9bMyqtsfGaO93AYw6R5CTauun+IDyZ6CKdt
+4NUNo70zWm6xWbQ/AQbFi8lShV5vaF1W0L4U3J+3nWx7/yAgc4UT8FGWdCM
DxtsmVD6tb73LGBjItf3aCgZF1J8BZvMi6Pcijik3m62iG2/sBF+anndz20M
mrdg47Z0T9iIh2R+rG0e3KmWjTzB6zHriC6l+As2Dg/8+qpoLBMFps0eNS1s
9A+xXdt/F5kfKR6DDbUs8OxyotOXNR14LGGja9OW9LRMJs1nsBGNkjFZ48j8
GNOYekKHg5cjTc7wiNbyGhxEjNI3EaeT+bGE+d27JweRf85F9w4k8yPFb3CQ
/1An69Z4JvbqM3XszTkYzDlq+4rPoHkODsjliH/PDTa5MMZ2s+Yg4VZcy9IJ
TJrv4EBxLTm9hy3xj2ENa+omcvC05z7nqEfEP1K8Bwebz7pMH7mHzI959Sez
nTmISpc/thAyaP6Dg15vnd/dJOO28rrs0ws5sEt80xpLxrU8CAd384cMufeY
zI/2dYwNa8j+Lxq5Yaw9qTeKD+HA+43tT3+iO+/802vqVg6yn1RGrshk0LwI
B0tmdl4RQ7T0/u/pPfdy4B7sefnmLgbNj3DwQv+bXPcJmR+bf/k3hnMw82+B
3lYxqTeKJ+FgnnNdejLRpUN/XXpxjoPWH3WO3Scxab6E7J+qx6s5ROevrS08
f42DnsVp1sOzGDRvwsGwOYs3nZUQ/3i1RrD5Hgd8hywPBdk+ieJPOJg1Vv+T
rpSB+B/VFk7ZHHRP3fGyejeD5lE4yLmdPzGUjEcaV883ecuB5anlle57GDSf
wsGyTsLNK0PJ/LiwKqTtCwehh3qtt5YRP0LxKhyUJjN722YT/xj9M+V1LQfM
IjvlZqJXUPwKB2U9ixf2nsqEx/sf5fGtHJxeFrbKRM6geRYOgkZeN19ItIPu
j/8CpBwsmjs9bWEO8SMU38KBGJ4phWR8xIxKm1m6XMx7tTjtxF4yP1K8CxfO
/FVtex3I+Trw3at/Ly72V8h2Tc5l0PwLFzyXtZ3t9pH7tZyKSJ45F7kjlFYB
RGt5GC66qLrNTyGaK/z25J01Fz88mu+vkRD/SPExXDiO+/iidhr5PbP9Vnd1
EhcvY3XdYp8xaF6GC48TbsfmTCbzo395j6BZXGxwd+v1NoRB8zNc/D6kWhmp
Iv7xzlcH10Vc5OsFbJ0YSuZHiqfhwmVXWTc1GU9qKNts4c1F0JLNH+6ScS1f
w0URN+3tLjWZHy3K4sRbudie6jjGbD+D5m24mKpvhVcycn+96sub4r1crKzd
5LbdidQbxd9w0ea/J7p3Hjlf8aXcm8e4GHkjcW/mVAbN43Axu5LrPOUAmR/L
Pw/YF8OF0apfh3cRreVzuGgvd85LI3qO4WfXBde5CFhoqWIQ7UTxOlwMM47N
O6Ag99duJcFD07joN7q8WW8ag+Z3yP5vPfL63EFSb5GfkhTZXExxvz/HPJ9B
8zzkfF5v3rCCaMOC4i9f3nJxZu26Ysdn5H6N4nu4ePczytTSkfhHzUd1ShkX
pkUzRB3KBpr34eLWFp5ODBlvm/rR+uAvLnZ/XrD/A9Fa/occz66NlXdVDagM
/rBiSRsX3H7rt0+dTuqN4oG46GrWt3UX0QWP3x8bKeNCb/v0TWlEP6f4IC5k
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
l5yhmRywqXyUDLeem3Q+SnTTAvXMD8tkKO66auVvorV5KRkmzk1f13UnB79Z
B1barZah9susv5efcPCTyk/JsDekxUtKdMVJ1fbE9TIY6fPuRMlIvVF5KhmK
Yg/6Rb3hotjqQETXLTJ8zYwPMnzKofNVMvz02zLNPojU2ztlwp5AGT5auWX/
lXOQR+WtZBg1YEXHWgUHub77H//ZI0Mh65d7PtFZVP6KHK/M+qvmSg7S/yre
ux0g5+OUv0oYxqXzWDKsQ4PJ0qNc3LkR+vvpURlkH75fmqzi4CaVz5Ihza+Y
f5Hoa9MV4kFRMtg5rf5tN4NL57VkaBtlEvctnIsLNSHdT58lumXic7tjXDq/
JUPy6rqGWKKjQuWDZXEy4hNnPR31nIMIKs8lA/dUnWNtNx7C+oVM2XBVhiS+
SUBWxP/7GcrwdhIj0eQ4F3ufyjw+35Jh6vp3o2yduXTeS4asAwMMvpPxgKX7
Nk5JleGinUH2oY9cbKHyXzIEfq76/DyWBz+B9EByugx/H0sLJJFcOg8mw9aZ
vt9edXCw6tzeC4ZPZXhvthMehjw6HybDprt7yg/+5WDRGGlq6AsZuo7XM7We
zYU7lReTEV+j7Pt2CQ+un4JfMd/IsHzf4MvB8Tw6PyaDakBQ4pRePDhtlXxf
+EGG3c66n+7M4dJ5MnJ87Aq+q8m4fZdg9vNSGRRm7hKf3jyMo/JlMlxfbWux
vZQLmxSxzojvpN53tYSHRnPpvJkMmaFBvseNeBgya0//8zUydLpTNM5pBY/O
n8nQ8sD4QcJpLkzrRWPV9TKs9eVZPf3FgwmVR5Ph238XzAxNeOh1ZPeczS0y
DKwZyn5x5v/9Hsm4+eed+75y0XmgaE05V4ae9hlFP4nW5tVkMF0xShXfhwf1
86Dd0yXk+hzT+1nWNR7kVH5NhgKlq8VzLx7EnsKTqSoZGL7Hq6cN49N5Nhn6
HPu5I2wVD23SXTeNdeQwSKpuc0nk0fk2ObwPVl9h9uOhLk6QfVhfjo0hYXlh
57mopfJucpTN443edYOHnxN2fW41lCOSwUi/851L59/keJ960m/qTR5Ky/iM
ZX3kqC4rtdZj8ug8nByOc6ssErx5KAzcqXw1QI4jVgWiODMeXlP5ODm8dPdL
Pt7i4bkBv9foIXJUTDLP8RrAo/NycjTUbdikaeQhM22HVfxIOZ683XL01Foe
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
NFwk
          "]]}}}, {}, {}, {{}, {}}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0.4035}, PlotRange -> {{-0.5, 1.5}, {0.4, 1.1}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0.4035}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{-0.5, 1.5}, {0.4, 1.1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Rubidum 87: P=1mW\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Rubidum 85: P=10mW\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.809983363003784*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Rb87p80", ",", "Rb85p80"}], "]"}]], "Input",
 CellChangeTimes->{{3.8099833123696375`*^9, 3.8099833466190577`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
JlJb/flpqA+d2C2o5Uh4wf3oOb6nHfzLn34L098N/fFyjZHwGEnwQzLyNHcx
UUqHp6ICYGeNrVjFlYkWWPgTU6C/9e3vkPQOJvo43DHABsy4fFdE1IGJWk9s
PydkSifs7Dx1BeyYSODPR7V/v9f6jyq2i7WNiZ5emcqJB7+pxy9O07fC8/Tp
zZlcwFuPhhUPmzPRmy+XFONl6ES2+qqm3s1MFJBaYnmwmCR+ff0y0WHCRKMW
O+z//V5rU0bKsmYjJvK+oic9AfHp24iNSJ+JBhYHb7sH8YPcKe9qPSa6W7Ys
c9lemIeqbsaXrWUimlhxi+Yvkkg89G9AZaJF2gdH3oK+d/nCD9mrmajR21Ym
AfzXfnr2J3UlE8X/5XF+AH8u9Zh8vBr046F0XRvw+wi7fdRyJtKZpvFvgV6D
1eUfrMhEMzr7N9wF/1OVF1L85eB+LHjsfRD07/yNH3pKM1HwD6PhV6Bfrjjx
yVmCiUwrFBS04+lEWOd1rvUSJjop75mSCPrXic5qhCgTReW+qbcAXs5M0EZf
BPa/5wco14EP+vv4qOZ8Jgosjqm7CxiXH7qsIshEkfqZc26ycJ7fp1gnTYPr
uTPjLr4J5iHZf1+gYqDupcwAhZsk8eT9OUEBDgPxNqnmRYB+UYK+JovBQDKG
jStiAXubjjrR/zDQcXkLmV/g/3A6L2J4moGEQ9/+fPubJATubs/vJRkovdp5
QTz4uftQGjrGGYhp0e5aBvGlko9GmsYY6OLR/64vGod5qPXAYjTMQIM6ZUEY
eKdzMuurBxlIKYV3Yo0vzENGre5lAwzk3fhqz3mo9+9k9JmiPgY6u61/616I
t7217mb2VwYS5RzXCQecv2ewOfUTA/mkHbS6BXpyyVUyrouByi7HV/PB36LJ
WjKqnYF8db6YL5SjE1fOsI2D3zHQjrdJuq9AP7rh3l7/VgZyP+r58T1gk997
EzybGMiEYhr5FXDav5//vGKgKpOC11egvu+7XrdbNzBQ7VFWbCHgDaKRc5sR
AzULzaXYgP+Fl5qK+s8YSMLt5Kj/eZiHor5ZaNYyUHzg1DrmLZLQ1s0IVKlh
IPV3r1YHT5DE2ZEtadKPwM+7/4/6ZpiHCv4+WlzJQP6ndPLWAl7pevfLvAqI
H6H9vgf6yIWefOZdBrop7dDdCLgNi66glzAQKVonR/WDeejEC9vhG7A+Qze6
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
v8D8Y+fKh+86q4Knmzb07t9Pyr7PiVy8OVoFwXY9D81WStkIvam7fKNUkDT9
yKdErD+QKYtfeQKfv3/6m06+UvY56OabhcdU8KD44KXDmG81ZBl/1mEV9DR8
tqoR83d/79DVMVwFdce7F73/I2Yfol+Ms9unArfla551eSBlA2ZvXmkdpgK9
8hPGX7E+9M/AAwN2qcC8KcOvBPeTm/b5do/tKrhx2GLmXMzvveloYadQFaSE
bWuvw3jAwNY/mCp4/copYqhKyl59FfbUBaig5vXn0mOYbxJ1dYpkowoeG76Y
sRDjvtMXrW1Yr4K9PYaMfozxzCb9iO9rVTA8JkFvN8Y7Pn6SXOKtgikBl8dM
m4LnIT//z+9W4ev7ed0rEeY/7tev6eUKFXy7Ne3V3PVSpv/5Y/+0ZSpIdmr8
pyqTsGXHw2ckuqtg+9zN2Vsxnug0btO1hSq4eLN8shL7/1Y3no6dr4KO6/d8
4ZhLmduDuIzIOSrgjAhs6quWshtr5/0In62C85VSoz3JUqbu3fJv5wwVdNvE
Kd70VcJcilOsNjuroNNI/1wh9r/careaqoI1+fOuPcF8Sev4lYMKGgdPzjf1
kzLn1v8cO0kFDwcUvB+K+lzrz/N4FSRs2VbogJrbihsci/lmNRMv9peyyT3q
OtiNUkFl797F6zAeVXhupPVwFUy7vqAyG+M14bOXDLBWgftIc830h1I2dlLz
7h5WKvip0I4e9U3CjkgeXOs0WAVx27a4nzgtYeW3vHP1Bqqgz4HCXcswbuvZ
Tajtp4KCiWE/f2D/fSatA6gqmBPWLmcvxkvzdk5o6KmCy6/nrI9BPWSfzarv
piowaLxneBv1znGV4SXGKjCsLJwTOkDKCgSn774zwt8Tg5VPmnA/5gnTil52
VMHLi7sUcRgP8VArUturYL/xkCtKrH9jdK93ooEK1H96qcI2SFnPtyunXtPD
z/vn3xyzcgnz32PkG/tXCe31jCNHon45Go5H/lJCWlEH12PREtaVG/ooXKeE
Q55yofFAKVsbb1m2U60E74hIGII6g+7vUEJ6qVPsJNQd6L4OJQw/PqxLh41S
5kn3cyhh6rf5F3nY7yHdx6GEnSubTLdhvt6I1vs3lHCnV0/+MdRL6L4NJfy7
7+JVjfu5S/drKCFBEH/2Ecab6T4NJbz8ftEmylXC5tP9GUooDJ8x4hyud53u
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
97x/HJ95E19QCmczIt1nGvJZW+IJSiHlSAfH/lsELIn4gVKIHxA0fSXWLyJe
oBQsbJaleWO9lviAUjjXvofPHozHEw9QCktfPA/xwfrpxP+TQnq73M3RmM8n
3p8U3MNufThfy2enie8nhe7rGyffRT2eeH5SuKmntsnB/B/E78P9xH73L0Ud
Trw+KazfWGj8J4fHhhKfTwo7euepeFhfRDw+fL4enYe2ucRnW4m/J4VdP22n
6tkIWB/i7UmhfKp5R9vFfJZNfD0pbL4rPzT3NY+tJ54e9nshsp6L8U7Ez5PC
kbJOvu7YL4V4efh6WHw8vwfzPYiPJ4Vh/aavDMP8P8TDw9fT/kvKmY58dpP4
d1IwLGrccxnjrsS7k8A5tfR5fB2fSYlvJ4GKeRPq07F/LPHsJHCpwmtwLmoH
4tdJILHq0roy1LXEq5PAjWBlkRD7HSM+nQR8Fi9tUGPclnh0EuhcFLHQPIzH
Sok/J4GRa4deGdSJz3YSb04CAR273LG6zGfmxJeTwLsTK7ydMf6GeHISeNK7
m/Mi1P7Ej5NAwo1qCx/UXYkXJ4FHw14bbEGdQXw4CXztckmwE/t5Eg9OAt2e
z9hz0p3P9Ja38t8ksPQ29/51zL9LvDcJcKyexz/A+Hziu0mA/+Tco5eolcRz
k4DLsa51n9/wWBzx23C9bU7jarDeiXhtElhbfJMjwnwO8dkk0G+Jo6YJ148k
Hhvu16/bpI5X+GwM8dckIG0f2s98CZ99I96aBI7sz00Y1ZnP9hJfTQJj654e
dkI9mHhqEjg76FDYorc89p74aRLgyruM8kEdTLw0CVS2WXAh9D8e60F8NAk8
fbb3+qFxPPaCeGgSMH2RrjqF/XyIfyaB7N1TU+Nx/fbEO5OAaoZe6iPsl0x8
Mwlozhv6ZaN2J56ZBF7apVaXiLisifhlEkg+kOVXhf2uEa9MAusOJiskuN5M
4pNJQBA3osffBj4TEo9MAmFZkmNdOHwWQ/wxfN6efWb2u81lE4k3JgH32Z+/
jzDis0rii0nA//GueIfxPHaIeGJimB/anDUvl8esiR8mhnz7Vy4rMV5MvDAx
fD7x9/HmpXy2nfhgYigqW6LahfG+xAMTw42D7QadwfVziP8lBjfROrN4XG8D
8b7EsGiI8+/72N+I+F5iaA5pu//pXh5LI54X5hf99SvAuAfxu8SwxqpF9wX7
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
ri8K74yiVzfrj/s11x8FzeczF5k3RX2I65NC9kN3HadduF9z/VKA1u0bL0Z6
Htc3haWGLfNWIjbi+qdwJuWPvO0Q1Ie4PiqYGfdT7kF6CddPhTFDZsx2RWzK
9VVh7NvEv8fi8Xvi+qtw++alj413oz50neqzwpPy1un+yD+N67fCs9nOy18g
vz/Xd4Wk9AsFxYhlXP8VftosmP4c+RdxfVj4F1bSLQtxMNePhdhFt6ffw9+r
w/VlYURkq/rfON61XH8WUltZarUeivoQ16eFNnZ97eNwPHKuXwt+M/Sa5GN7
Z65vCw2c53Ztq4nri+vfwmmXlJY3ElAf4vq4cPbgyT0d9uD64vq58LRm9tXh
yF/M9XXhVbvq5hORPpbr78LQDlcspiL9HNfnhbU7RqzWTsTzi/y9H6B1RtfP
CqRbcH1faJJQv9AY6T5c/xdGbG6SbYX4dw+qDwy13+NbGMzE84vrB0P4pywL
N2wfyPWFweVI6cQa7F+L6w/DxIULnt7E9vZcnxige/3QJ4ijuH4xWAzZ03ng
3lrQ4/rGcCH+WO8SpG/h+scQ8Gd7/JUBqA9xfWSw3eBivgP7N+T6ydD/daeb
QUhXcn1lWPm64bxTSC/i+svwvWvIy3sofxjXZ4a+1r8aOyTVgjvXb4ai/zbN
+K8Z7tdc3xl07wf17IB4Itd/hgGnR0Rd2I77NdeHBq3XyzIGIr2e/NFloNz1
s1OLgbhfc31pWDnVOvTacFxfXH8aDg7OWPoL+2vM9amhl3dr/z84PgXXr4bJ
+1LyR2D7MK5vDa+HWHy94ILri+tfQ6+d5wN3Yn9ruT42vKjolLLieS0kcf1s
0G9x3HMZtpdzfW0w2x+43WIEri+uvw06M6ys9Z3xe+L63PAnWr96zixcX1y/
GzZ1ahFzBPldub43/DvqG2KC/CVc/xv2PFY5pmP/plwfHH7cmPN6rRLXF9cP
h29JqXpPsf8voVRfHK48y6v5iPzTuP44ZHxuHhWA/P5cnxxSNTKuNG2O+zXX
L4c3/vZbWyNexPXN4ZVeV79JI3G/5vrnEFu+9tkvlK/D9dGhp6tOgMYg1Ie4
fjq0SDTLGoft47i+Okw9V7G+Dn9fZ66/Dn9/XHP+hdiZ67ND/znep3VfoD7E
9dvhootcMQ7l9ef67hCuIdfagvIOcv13WP8jTmsO8hdzfXho76s4vhqxMdeP
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
6ZpJqUdg/8J4QDlZBenlGemhHtqSZ3QvXE6vumukjIBOYXygnOy2jQlOQvvm
01/3iqLlNKjOuUc2tDvjBeW0ddvbJxMcUA890m/R2i+n/uq6T6dDK7F/j1pO
FW23BgUgnjc309fuuJwe9u5YRTOxXjOeUE6HJxq/WAV/rT47K5ackdP5rWlV
4dCBjC+UU/34zkupQUHlE4pG7c6XU1BNstJmP5xfGW+I92u89eB5xIsM+PcD
XjntPB4cd/I41mvGH8rpw+0L74+gvcVek85vHsnJPDd1xgOMJ47xiHJKMg+x
eQH9MX9h0J/Xchr9MOJjJfq3Y3yinOJ8Nnx+C51cfeC1yWc5rfzSs73TF8wn
xivKKfBK7/Q+0NM7yia6y+W0OO9xYxv8sxi/iPn0p4uk83jUQ0N+nlv/S05n
P9cdGdAH+xfjGRW0p8R0uxl0nruldpoKvktgTOAYaHXGN2KdqBfNmggdsH4Z
KkoF3U5d35GL/koZ76igvQvTf05F/L6pKQ2igQoaeUKyvDUV+cX4R5zz5Nzf
xbBXlj511zZX0PmIr7FdvyK/GA+poMNT3Yb0h47+rnzNzlZBaTuWXU1Af3WM
j1TQ8Ma1gc6wW2vaGfqhzvUotujuDZ3IeEnEibdYnwP/Ruvg+N34DgtsDn3K
TEN+MX5SQWJnPS4d/umLT/O5ixV0IsolqQC6jfGUCrrW2mfAY4zPc8fbRW9W
wu/JmGDt2ThvML5SQYYzPDgp4nc5r17+Z72CYkodDLp9w3me8ZYKEuV1KhkI
feO/SSOGRCvIJXuxZacJOM8z/lJB9Se+dnGFPag14qg76viE1jdxxn1x3mA8
JuJcXH99fzrW6wEXO9Yjjy4ttJswAu23MD4T++SX/hMs/FEPTfkUmJaFPPYK
6/EM/qMYr4l9qfaF/iLEi1+tV3UvT0GLlAdt/YT+vjB+U0Fr+7zgQmAff8jN
QVysoA2yb7VR0CmM51RQcLz9KqPvWK+vR2dpP1LQiMHbliz3Qn4xvhP7uGdM
Rhr8s+qvaozDuSfcw2feMvgrsb/nrqB+LW2/IqEXdJVE+GEdGfgz/+QB6ELG
fypo5aGBbhVor24x6ONumYJOSy7YVEEHMh5UQRI9Z6P30KX/fhzxE+9Dh9No
hDZgfKiCBn/K/ilAF//DT5Q5cokO/frnX3vGi3J0u87vjD3ek96/H0+pcTTu
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
bxNtKKxb47CWIyN2n6SJPIOcFb0KFfR/MATGnw==
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.002777777777777778], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
5qn43lbOCvzbvfj2b8JjhkXWH1qmQNSZzj9dLlYiNm3nx6+rFFi2/eMZM1El
NBzWJhisV+DOnhnHKmndv9oxdK2fAhe/ddRtGliJiu1Tl9/brsDq8evDv3hU
wr7z8En/ghU4/Gj5eHE1xedCL52ZoQoolt3bmGFE8Rnb5tuxQwps8hk/ud0g
ik+mMltwXIHKJ8val5pUQM1FEG90WoGHC0qSqxPL4at4vcc3VoHg3Fevfq2t
gIBOW4+uKHBtxpkZE70rYNPj/PjWNxXoMrH92wDCydfCte3uKnDELz2pz/AK
6E/aojj5UAFZ/rVPTbR+MGfZW9EzBSK39HiQurEcDSvmxA19pYBvmJZLzwe0
f36aB2/OUkBNxzVm3KZy5IQbOj/LpXj6X9E1raf901fTrH2BAvozPuwZuK0M
8bd/ay4oVaCj4/5yN8La06trz1Qq4Pp6sf+PCWXYm5/7qqpWAdu1N3bvbxJB
+X/7Sx2933E+LfWeiuDyfzmsQYENF8eP+U3rmf9vj78KWNtnDDlI67rHLXuF
tlTi17jMqO4WtJ9d7rdNaKOEmc4lpyZa32dk8j1HXYmd8j4Tw4NFsFBeEP3o
SM9HzwtJp+frHvb88L+u95qnJ9bY/xUhfs+hVGgp8fnE2Lt7poqwdE6r6x7/
+/DGB0eu2iVCj57bTu7XUeLsKCv5OcJZQvneW72VWPl65cwvhHdf99j4qa8S
Ab2+pf19KYS5X6Fbg4EScWm9s0a/EkI+yX5On4FKXLv7oK1uGxEut3s14X+d
T8eroX/GzxRiyceJxquG0ustfDJBP0wIzZjb3Q8Op/+vtmTfY3r+lcegVrdH
KjHLT7JURXjH8LPKvDFKTHb+O11gJcKoBq2SX//rHveSTb76Woia52Hv+k1U
4pTBcQcB4dgDf1OsJiuR1Tnr2sVZQjgu9Lvyvy/mEfH7PdaZQmj0kxw/bKWk
c63H2QDC6TVuu+7OUMInblZKEmH/O3nr82cp0arnh8VDw4UYvmO2y585StSd
u+BzebYQFdOfz+w/T4nwiLuNvTsJcbrLuHEzHJTomL9ywfV+pbAvSDD0XqSE
99SrT5ro37e91F/r6BIlXLpP7yI9W4pU7+h/91yVmL3UceEVW/o9MussK3RX
QmvRLlkB4SFqewv/rVDitEWBvc75UgjfNL42XKVEsc0NgylzhDhx3OfezDXE
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
FedB+vT23/cw/h91yrTn
          "]]}}}, {}, {}, {{}, {}}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0.4035}, PlotRange -> {{-0.5, 1.5}, {0.4, 1.1}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0.4035}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{-0.5, 1.5}, {0.4, 1.1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Rubidum 87: P=1mW\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Rubidum 85: P=80mW\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.809983272098454*^9, {3.8099833202954884`*^9, 3.809983346910159*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"EITmax87", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"data2", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"{", 
            RowBox[{"4", ",", "2"}], "}"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.02"}], "<", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<", "0.1"}], "&"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "//", "Max"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{
       RowBox[{"Length", "[", "data", "]"}], "-", "1"}], ",", "1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"EITmin87", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"data2", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"{", 
            RowBox[{"4", ",", "2"}], "}"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.02"}], "<", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<", "0.1"}], "&"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "//", "Min"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{
       RowBox[{"Length", "[", "data", "]"}], "-", "1"}], ",", "1"}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.809979671950946*^9, 3.809979757681548*^9}, {
  3.8099798081079626`*^9, 3.8099798118566246`*^9}, {3.8099804511772614`*^9, 
  3.809980461600898*^9}, {3.8099818336757193`*^9, 3.8099818400963945`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.8233988167828377`", ",", "0.8287176263001039`", ",", 
   "0.8094855338620873`", ",", "0.8031343596805616`", ",", 
   "0.8168310865585432`", ",", "0.813842782606111`", ",", 
   "0.8379121685925238`", ",", "0.8314694247147709`", ",", 
   "0.848236263196014`", ",", "0.8268716777516436`", ",", 
   "0.8566945742538227`", ",", "0.846043550275091`", ",", 
   "0.8569017765685459`", ",", "0.8863013811526628`", ",", 
   "0.8679093560795426`", ",", "0.860688282636452`", ",", 
   "0.8714087521851525`", ",", "0.8710931934386326`", ",", 
   "0.8764302582516055`", ",", "0.8679065575865089`", ",", 
   "0.8840375076072101`", ",", "0.8708656173331416`", ",", 
   "0.8801369745712397`", ",", "0.8819798816050934`", ",", 
   "0.8959627094337067`", ",", "0.8849550625945628`", ",", 
   "0.8931599611154071`", ",", "0.8977206802138442`", ",", 
   "0.8975387056424237`", ",", "0.8775145350047263`", ",", 
   "0.9005938336746876`", ",", "0.8958540616797106`", ",", 
   "0.8937670547840462`", ",", "0.9035889444190398`", ",", 
   "0.922520857503263`", ",", "0.908166820920832`", ",", 
   "0.9123986329163633`", ",", "0.904082967118889`", ",", 
   "0.9022867738369712`", ",", "0.913700449857661`", ",", 
   "0.8999806847517887`", ",", "0.9169619143221938`", ",", 
   "0.9033744301841603`", ",", "0.9253025901770858`", ",", 
   "0.9266705495452318`", ",", "0.9109044323418075`", ",", 
   "0.8990341994398227`", ",", "0.9098378977962414`", ",", 
   "0.9149753420912837`", ",", "0.9153782026408281`", ",", 
   "0.9140980205373851`", ",", "0.9389847781104537`"}], "}"}]], "Output",
 CellChangeTimes->{{3.809979675897056*^9, 3.8099797638494387`*^9}, 
   3.8099798189632177`*^9, {3.8099804589311676`*^9, 3.809980468031177*^9}, 
   3.8099807126489143`*^9, 3.809981846164189*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.6503002250754277`", ",", "0.650342038856735`", ",", 
   "0.6547938862126278`", ",", "0.6392719951300161`", ",", 
   "0.6459792465724793`", ",", "0.6530719437003337`", ",", 
   "0.6404108909430649`", ",", "0.6517032467912144`", ",", 
   "0.6398513418045528`", ",", "0.6545242527799034`", ",", 
   "0.6531073992698984`", ",", "0.6238764985979944`", ",", 
   "0.6367495128622617`", ",", "0.6368036580560519`", ",", 
   "0.6492995920496633`", ",", "0.6326472426139331`", ",", 
   "0.6335068489381883`", ",", "0.633274487887463`", ",", 
   "0.6416584309782918`", ",", "0.6429436750163898`", ",", 
   "0.6469295866217313`", ",", "0.6426383315042264`", ",", 
   "0.6274998696170783`", ",", "0.628807982638993`", ",", 
   "0.6278468200303169`", ",", "0.6452705284014187`", ",", 
   "0.6187714742568987`", ",", "0.644114499592419`", ",", 
   "0.6256298214207071`", ",", "0.6179001187085804`", ",", 
   "0.6238449189518048`", ",", "0.6362351273170378`", ",", 
   "0.6348114904065466`", ",", "0.6351803711845967`", ",", 
   "0.6360525161892107`", ",", "0.639277202046454`", ",", 
   "0.6068607090737346`", ",", "0.6336029144497929`", ",", 
   "0.6287083314545244`", ",", "0.6205246139127497`", ",", 
   "0.6391095450158888`", ",", "0.6380713231355576`", ",", 
   "0.6468444961050789`", ",", "0.6340852423821196`", ",", 
   "0.6260322672950309`", ",", "0.6332775163539833`", ",", 
   "0.6454840402838824`", ",", "0.6470523678939379`", ",", 
   "0.6330526803958914`", ",", "0.6392068371918861`", ",", 
   "0.6498257089747932`", ",", "0.6546421442645493`"}], "}"}]], "Output",
 CellChangeTimes->{{3.809979675897056*^9, 3.8099797638494387`*^9}, 
   3.8099798189632177`*^9, {3.8099804589311676`*^9, 3.809980468031177*^9}, 
   3.8099807126489143`*^9, 3.809981851539352*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"abs87", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"data2", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"4", ",", "2"}], "}"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.02"}], "<", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "<", "0.1"}], "&"}]}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "//", "Mean"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.8099798167426443`*^9, {3.8099804645646944`*^9, 3.809980464658439*^9}, {
   3.809980629576789*^9, 3.8099806318109655`*^9}, {3.809980924507098*^9, 
   3.8099809457969656`*^9}, {3.8099838677595496`*^9, 3.8099838808245897`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"power", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "2", ",", "2", ",", "3", ",", "3", ",", "4", ",", "4",
      ",", "5", ",", "5", ",", "6", ",", "6", ",", "7", ",", "7", ",", "8", 
     ",", "8", ",", "9", ",", "9", ",", "10", ",", "10", ",", "12", ",", "12",
      ",", "14", ",", "14", ",", "16", ",", "16", ",", "18", ",", "18", ",", 
     "20", ",", "20", ",", "22.5", ",", "22.5", ",", "25", ",", "25", ",", 
     "27.5", ",", "27.5", ",", "30", ",", "30", ",", "35", ",", "35", ",", 
     "40", ",", "40", ",", "45", ",", "45", ",", "50", ",", "50", ",", "60", 
     ",", "60", ",", "70", ",", "70", ",", "80", ",", "80"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8099799104561543`*^9, 3.8099799918962603`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"rb87", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"power", ",", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"Log", "[", "EITmax87", "]"}], 
          RowBox[{" ", 
           RowBox[{"Log", "[", "abs87", "]"}]}]]}]}], "}"}], "]"}], "]"}], 
    ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Rb87\>\"", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"rb87min", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"power", ",", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"Log", "[", "EITmax87", "]"}], 
          RowBox[{" ", 
           RowBox[{"Log", "[", "EITmin87", "]"}]}]]}]}], "}"}], "]"}], "]"}], 
    ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Rb87\>\"", "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8099798309393563`*^9, 3.809979940038619*^9}, {
  3.809980590111109*^9, 3.8099806001203766`*^9}, {3.8099807641499877`*^9, 
  3.8099807870082674`*^9}, {3.8099809772304945`*^9, 3.809981007895028*^9}, {
  3.8099818450297146`*^9, 3.8099818523110886`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEf7Kc1WSk4C163h/H9bre41+TcgPIZHJYVF65w
rLoM5y+4qdJbffEilM/hsKf/p1ha4lU4f42or9eB2VegfAGHJfclyhv234Lz
JW5ccneUvwnlizicS7I3fxR8F85f8LNJx/oLzD0SDlLvDxl9zboP59dZt6v4
nrgD5cs4rPhw59D/8vtw/rrXIS8meT6G8hUcFs9s3qwh8hDON2pu1Xtk9ADK
V3Jgfdv7bXnDQzh/TqTO88dlML6Kg0COvck06UdwfkT1wUIhuHkaDjrTTfnm
sjyG8/fMZA+7kQ+T13HQK3sikdT7CM5/cdHD7cRRGN/AweHVRbvnuU/g/KTe
dSumKsDMM3LwejNpVY7kEzh/q7DCnIOLYHwTB/ua/45ecxF8Jq6khjc2UPMb
zBxcZE4pvvrxBM4v4WjTWJQFU2/pMOX6wgf7tBH8VZqp0gVBT6HqrR1+uWWd
7Gh8DufPW7lny6ZbUHkGOwetZE5/nohncH762lPfdRJh+h0dVO7KN/dqI/FX
TPhTWwdT7+IgluXK3fvsCZw/RWae0MR7UPkGNwfh87LmnD5P4fzym6yh2y9B
3cPg6bB2smx/zy8EPyYz++ktbZj5fg5m4r/e6Z56AuevcVhj4cIDMz/QYUbe
rg6xJQh+W+cr/q/rYfpDHFxCnp+z6ELwhWOKeOvjXtoDAIYT74Q=
         "]]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 80.}, {0, 1}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 80.}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Rb87\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.809979842286559*^9, 3.809979863618368*^9}, 
   3.809979902591506*^9, 3.8099799405313745`*^9, 3.809979995231926*^9, 
   3.809980500237032*^9, 3.8099806005036097`*^9, 3.8099807220085635`*^9, {
   3.8099807664009833`*^9, 3.8099807875470085`*^9}, 3.8099809586445904`*^9, {
   3.809980996642151*^9, 3.8099810081908817`*^9}, 3.809981703427846*^9, 
   3.809981852873556*^9, 3.8099838834613233`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEf7P2yld5c73loD+OL/KkOf8T2CMpncDiZbvHz
N9sDOJ+v5U0zcxCMz+Hgd1IpWk3/IZz/XHrOwYp2mLyAw7HXq7ytfR/D+UWf
ebqvm8DMF3GoaJ+Q62zyBM5vnrNPff1SmHkSDk3qMv+2Jj6B81+ff+uhuhLG
l3Ho0P1UYsv7FM63KjUw5yt8DuUrOHzf9/TMhoancH5Vd0XupmYYX8mhatli
qTuRz+D8EI5818hQGF/F4UuxAe/RGgRfSLH8bdUemH4Nh7JFS7qnfnwG5+ec
lYiO+QeT13E4ZFyt1G/9HM6XsswNzg6D8Q0cTGa8zeouegHnW/wrSZ4kBJM3
cliwpvvojvIXcH5U93qWuWowvolDwu0Ci8vzEfzXsfbPlgdA9TeYOVSuM3vv
8OwFnH/a8GP5THOYeksHuzeOmgniCH4b98Gl/Ldg6q0dOB4fPPLG+xWc35Vg
Zegt8xKq3s4hJ3PlBD+FV3D+splPbW68hel3dCgqb37x5wWCv97v3eV5n2D6
XRyOfLdYsgjuPxcHpufhK3IvQ+Ub3Bxabv+S1ux8geCvXaH3rxtmn6eDhcQs
znenEXy7nEPJq8tg5vs5aFzwX2Rp8QLOz5rh+v4FL8z8QIeE2S7n7x5H8HWr
gmY1roXpD3Gwiv05hTsUwX+z8XbUervX9gC+0feE
         "]]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 80.}, {0, 1}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 80.}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Rb87\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.809979842286559*^9, 3.809979863618368*^9}, 
   3.809979902591506*^9, 3.8099799405313745`*^9, 3.809979995231926*^9, 
   3.809980500237032*^9, 3.8099806005036097`*^9, 3.8099807220085635`*^9, {
   3.8099807664009833`*^9, 3.8099807875470085`*^9}, 3.8099809586445904`*^9, {
   3.809980996642151*^9, 3.8099810081908817`*^9}, 3.809981703427846*^9, 
   3.809981852873556*^9, 3.809983883656229*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"rb87sub", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"power", ",", 
       RowBox[{"EITmax87", "-", "abs87"}]}], "}"}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Rb87\>\"", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"rb87submin", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"power", ",", 
       RowBox[{"EITmax87", "-", "EITmin87"}]}], "}"}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Rb87\>\"", "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.80998351115193*^9, 3.809983544682403*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEf7E9w/1kjc3erPYy/w+RV7XrL7VA+g8MFlTut
Xr6b4PyOttIG/rUboHwOhwVhZUUb9LbA+Rn+29luZm2G8gUcDpyJCXCashPO
78iVYWJ/BzNfxOHADO6Hty32wPknnrrM3XpgG5Qv4fCBIfuUXvI+OP/CqkNO
Git3Q/kyDgIRUwUPF+yD83POPPHa//sQlK/g4LL29FnhhQfg/A3L/CVfZeyH
8pUcLK5uvbtP+CCcX+JfdiSdE8ZXcbgT9sDfaweC33FHOOTPAph5Gg4R7pXd
EzYegvN/mNXv+MQIU6/j8KS2v+GA4SE4/8o597fKeTC+gcMNvdTkEIsjcL6L
8rnehedh8kYONqFm1rV3DsP5JabPAt4XwtSbOBhMrz77IxvB17CufHTxNtT+
BjOHH/U/hUQvHIHz/xyU+3PEBKbe0uGN7YdniR8Ow/kaRUGPLI2OQtVbO0i0
SnhMm3cczneZ6PDU+gRUnsHOwSMl4MWzoGNwfsnDv9xZTjD9jg4L3L1q+tgR
/A81L8L6a2HqXRwyojfM/rv7CJxfsLy5Ju8FVL7BzeHAiqYMI+2jcP6DRW2q
e39C3cPg6fAg/1n2BLUTcL5FFvPSD4ow8/0cJCK+vvw55wicz+Pe8vzvP5h5
gQ47GJRehi4/Bufz+E6O7NwC0x/iwCFZmD6tC8Ffsi1xhfCuk/YA/bj0MQ==

         "]]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 80.}, {0, 1}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 80.}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Rb87\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.809983519506323*^9, 3.809983544939761*^9}, 
   3.8099838854733596`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEf7D1+6llLaByzh/HfrLV5yHQVxmdwCDA5P/39
mcNw/guJVJXCn0egfA4HjrMzZSrvHYXzVaQWdCtPgckLOChImp3Z4X4Szo95
1vt/MtNxKF/EYUuPbnb0mlNwPs/1Z3+q+GH2SzjoFFkwqvKfgvM/XJvp9yP/
DJQv4+ChlMj1WRfBV9CbMKPr/XkoX8FBRaZnbvrv0wh+UeuTIoOzUL6Swx9O
3vMTi8/B+S+EYp5eL4DxVRwE5opcYeBF8DXe7syfehpmn4bDnZUK6b2R5+B8
geAIm14zmPk6DlyGjy6aaF+A899cm/LiuzGMb+Dwb6Fiz3mNi3D+le23Z/5e
CzPPyGGTUeyuKf0X4fw2969ZotYw/SYOHBF+rV/SLsL5fD8fn2idC5VvMHPY
wFMj4rjtIpy/aonCnhkweQZLh3vT2GN2TULwg5oY1GfrwtRbO3goBPnXh16C
89dpXD5bYwqzz86h7cHS9+96L8P5205IT+z2h+l3dDAQ263u34TgO0hcn5Jy
GGoeg4uD3uaMuzKbLsD5Dw4Kvwm/CVPv5vBEOaT9T9YFOP/ESmMxv8Uw/Z4O
u3R6IlfYXobzWXi11i8+AnOfn0OUVFyRltUFOF9gu1Fa1UWYeYEOei//RbBy
X4LzD1WsWXlqDUx/iMOnyTczr728AOcvavQrWm10yR4AHULsiA==
         "]]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 80.}, {0, 1}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 80.}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Rb87\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.809983519506323*^9, 3.809983544939761*^9}, 
   3.8099838855753107`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{"rb87sub", ",", "rb85sub"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"rb87submin", ",", "rb85submin"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8099835295380077`*^9, 3.8099835548665447`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEf7E9w/1kjc3erPYy/w+RV7XrL7VA+g8MFlTut
Xr6b4PyOttIG/rUboHwOhwVhZUUb9LbA+Rn+29luZm2G8gUcDpyJCXCashPO
78iVYWJ/BzNfxOHADO6Hty32wPknnrrM3XpgG5Qv4fCBIfuUXvI+OP/CqkNO
Git3Q/kyDgIRUwUPF+yD83POPPHa//sQlK/g4LL29FnhhQfg/A3L/CVfZeyH
8pUcLK5uvbtP+CCcX+JfdiSdE8ZXcbgT9sDfaweC33FHOOTPAph5Gg4R7pXd
EzYegvN/mNXv+MQIU6/j8KS2v+GA4SE4/8o597fKeTC+gcMNvdTkEIsjcL6L
8rnehedh8kYONqFm1rV3DsP5JabPAt4XwtSbOBhMrz77IxvB17CufHTxNtT+
BjOHH/U/hUQvHIHz/xyU+3PEBKbe0uGN7YdniR8Ow/kaRUGPLI2OQtVbO0i0
SnhMm3cczneZ6PDU+gRUnsHOwSMl4MWzoGNwfsnDv9xZTjD9jg4L3L1q+tgR
/A81L8L6a2HqXRwyojfM/rv7CJxfsLy5Ju8FVL7BzeHAiqYMI+2jcP6DRW2q
e39C3cPg6fAg/1n2BLUTcL5FFvPSD4ow8/0cJCK+vvw55wicz+Pe8vzvP5h5
gQ47GJRehi4/Bufz+E6O7NwC0x/iwCFZmD6tC8Ffsi1xhfCuk/YA/bj0MQ==

          "]]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEf7BmypqRu+bPCHsb/8LhT8e6cVVA+g0ND+vfT
h4O2wPkWv2T1j8htg/I5HA6w2NskFG+B8xk+psRzee2G8gUcFvhvjHy6cB+c
37H35ieXOzB5EYcN8bYNx/u2w/kK3ZZH+KX3Q/kSDhZXi2u1hXfD+Rw7Xwea
PYDJyzgI+O9MPcyM4Acs/JCq2ngAyldwuCH53snt1mE4PyLxwxPvRJh6JYcQ
DzsrB7FDcP6R/3emvNE6COWrOJRwfZKW40fweXTsmVIPwNRrOPS8VTsdOQ3B
n5DctbRlC8x+HYcnVpO/7Xp6BM5XceKzq/A+CuUbOEwwv1sr9vAwnM+jc+0K
cwxMvZHDjtDVWlZfEfwTz7tZPz+H8U0czognpJoeRvBNpjJET9aH8hvMHGwk
DvN8PY7gJ0yelRLGAVNv6aAj8NZqws/DcP6XhQLyJetg6q0dVrhss3uz+Ric
n1L7M/TGJpj77Rw2fOA7dPviMTjfZs2e15KHYeodHT4kT7kXyYvgv1it/rEu
EWa/i8MWFuF12SzH4HyFrz8aZj6Hmt/g5lCwZsG2TudjcH6CWMSJTxww+z0d
fG5Mq57qheCryFqn+XHAzPNz6GguTCufegTOj9G+2nLvJ8y8QIeU1p+s1dpH
4fwZp0LdcgNh5oU4/AkyFzQJPQbnr5n3Kkz9xzF7APsr6os=
          "]]}, {}}}, {}, {}, {{}, {}}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 80.}, {0, 1}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 80.}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Rb87\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Rb85\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8099835339782977`*^9, 3.8099835553633018`*^9}, 
   3.8099838871865387`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEf7D1+6llLaByzh/HfrLV5yHQVxmdwCDA5P/39
mcNw/guJVJXCn0egfA4HjrMzZSrvHYXzVaQWdCtPgckLOChImp3Z4X4Szo95
1vt/MtNxKF/EYUuPbnb0mlNwPs/1Z3+q+GH2SzjoFFkwqvKfgvM/XJvp9yP/
DJQv4+ChlMj1WRfBV9CbMKPr/XkoX8FBRaZnbvrv0wh+UeuTIoOzUL6Swx9O
3vMTi8/B+S+EYp5eL4DxVRwE5opcYeBF8DXe7syfehpmn4bDnZUK6b2R5+B8
geAIm14zmPk6DlyGjy6aaF+A899cm/LiuzGMb+Dwb6Fiz3mNi3D+le23Z/5e
CzPPyGGTUeyuKf0X4fw2969ZotYw/SYOHBF+rV/SLsL5fD8fn2idC5VvMHPY
wFMj4rjtIpy/aonCnhkweQZLh3vT2GN2TULwg5oY1GfrwtRbO3goBPnXh16C
89dpXD5bYwqzz86h7cHS9+96L8P5205IT+z2h+l3dDAQ263u34TgO0hcn5Jy
GGoeg4uD3uaMuzKbLsD5Dw4Kvwm/CVPv5vBEOaT9T9YFOP/ESmMxv8Uw/Z4O
u3R6IlfYXobzWXi11i8+AnOfn0OUVFyRltUFOF9gu1Fa1UWYeYEOei//RbBy
X4LzD1WsWXlqDUx/iMOnyTczr728AOcvavQrWm10yR4AHULsiA==
          "]]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEf7BUebU/TsdhvD+P32M08M+XBASifweHDg9IN
EgePwPktXmcVtzMdg/I5HMKCT0c7zkHwhYy3bhONOg3lCzgwzbGP5LZE8Hdt
EWE+/O8UlC/icCWSQSWW/QScz/Jg8/ou2bNQvoRDQVSztmvOaTj/xtJQ4zWP
YXwZBy5mzZ/XpM7A+T5fPmkEq56D8hUclsWysK7nuAjnz3tf7rLuDsx8JQcv
pqI7z7nOw/kKyw9M1O+Gyas4xOzPdsr7juBz5Gr8q02/AOVrOMisrkp1kUTw
GeTj916XgKnXcWDgWvmj+cwFOD+0adVunjiYewwcrny7OkuF6wKcv4TJNolP
FcY3cvhS/2Ceky2C/2ib4+cV+2D6TRye/5L78PHKBTif60qMzPdWqHyDmcMz
Ke1ZF1MvwfkZR2SvcnyB6bd0+C1SmXUl/gKcr3krPTQmFqbf2sF327u/J0ov
wfltaptUH4pD+Qx2Dpm339ZWv0fwr6p6/VvgCtPv6GB5SeOIeSOC76Chy55R
B7PfxaH06PbQHVMQfAaJxS84E2D2uTnEueSeidqL4E9pjBPYfxbmXk+HFX28
h+SKL8L5rNVv5N6XwPh+DudUdz27P+USnJ+g/q+l2wDmnkCHC85Ju5WtL8D5
33affcH8EqY/xMHhUaznVYfzcP6T7c3piUwX7QHOZOu8
          "]]}, {}}}, {}, {}, {{}, {}}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 80.}, {0, 1}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 80.}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Rb87\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Rb85\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8099835339782977`*^9, 3.8099835553633018`*^9}, 
   3.809983887294487*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot", "Title",
 CellChangeTimes->{{3.8099835090565777`*^9, 3.809983509439334*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"Power", "::", "infy"}], "]"}], ";", 
  RowBox[{"Off", "[", 
   RowBox[{"Infinity", "::", "indet"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", "23"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", "1.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "list85", ",", "list185", ",", "list3", ",", "list4", ",", "EIT85", ",", 
     "ABS85", ",", "EIT1", ",", "ABS1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tvw41", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"Tvw3185", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"list85", "=", 
        RowBox[{"Lev4DoppTestsc", "[", 
         RowBox[{"T", ",", 
          RowBox[{"p", "/", "1000"}], ",", 
          RowBox[{"0.9", "/", "1000"}], ",", 
          RowBox[{"\[Gamma]", "*", 
           RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0", ",", "361"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"list185", "=", 
        RowBox[{"Lev4DoppTestsc", "[", 
         RowBox[{"T", ",", 
          RowBox[{"0", "/", "1000"}], ",", 
          RowBox[{"0.9", "/", "1000"}], ",", 
          RowBox[{"\[Gamma]", "*", 
           RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0", ",", "361"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"list3", "=", 
        RowBox[{"Lev4DoppTestsc87", "[", 
         RowBox[{"T", ",", 
          RowBox[{"p", "/", "1000"}], ",", 
          RowBox[{"0.9", "/", "1000"}], ",", 
          RowBox[{"\[Gamma]", "*", 
           RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0", ",", "816"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"list4", "=", 
        RowBox[{"Lev4DoppTestsc87", "[", 
         RowBox[{"T", ",", 
          RowBox[{"0", "/", "1000"}], ",", 
          RowBox[{"0.9", "/", "1000"}], ",", 
          RowBox[{"\[Gamma]", "*", 
           RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0", ",", "816"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"EIT85", "=", 
        RowBox[{"Min", "[", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"list85", ",", "Indeterminate"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"EIT1", "=", 
        RowBox[{"Min", "[", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"list3", ",", "Indeterminate"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ABS85", "=", 
        RowBox[{
         RowBox[{"list185", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"list85", ",", "EIT85"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ABS1", "=", 
        RowBox[{
         RowBox[{"list4", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"list3", ",", "EIT1"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Tvw41", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"Tvw41", ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", 
            RowBox[{"1", "-", 
             RowBox[{"EIT1", "/", "ABS1"}]}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Tvw3185", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"Tvw3185", ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", 
            RowBox[{"1", "-", 
             RowBox[{"EIT85", "/", "ABS85"}]}]}], "}"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "0", ",", "80", ",", "5"}], "}"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.809981157174896*^9, 3.8099811911930094`*^9}, {
  3.809981278617875*^9, 3.8099812862659054`*^9}, {3.8099813669446726`*^9, 
  3.8099814584940295`*^9}, {3.809982491390169*^9, 3.809982492124524*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tr", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Tvw41", ",", "Tvw3185"}], "}"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"87", ",", "85"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
          RowBox[{"Darker", "[", "Blue", "]"}]}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "40", "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Power (mW)\>\"", ",", "50", ",", "Black"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Transparancy \>\"", ",", "50", ",", "Black"}], "]"}]}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"tr", ",", "rb85", ",", "rb87"}], "]"}]}], "Input",
 CellChangeTimes->{{3.809981236721184*^9, 3.8099812372299366`*^9}, {
  3.809981441886057*^9, 3.8099814658785458`*^9}, {3.809981685271002*^9, 
  3.8099816992823186`*^9}, {3.8099817408855877`*^9, 3.809981743665417*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[1, 0, 0]], 
         LineBox[{{0., 0.}, {5., 0.15003535111357658`}, {10., 
          0.2611370262054127}, {15., 0.346619460157237}, {20., 
          0.4143804452200345}, {25., 0.46936596600291836`}, {30., 
          0.5148477747138209}, {35., 0.5530843760101619}, {40., 
          0.5856987096294788}, {45., 0.6138106175447957}, {50., 
          0.6383175242875679}, {55., 0.6598510658027821}, {60., 
          0.6789363142332056}, {65., 0.6959535386842748}, {70., 
          0.7112397102797299}, {75., 0.7250273196129666}, {80., 
          0.7375442264961629}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 
           NCache[
            Rational[2, 3], 0.6666666666666666]]], 
         LineBox[{{0., 0.}, {5., 0.3157632483118391}, {10., 
          0.46321081163238287`}, {15., 0.5487889264984646}, {20., 
          0.6057095973306913}, {25., 0.6468809358506866}, {30., 
          0.6783082661167568}, {35., 0.703211781674559}, {40., 
          0.7235362316037053}, {45., 0.740466334726894}, {50., 
          0.7548124368032236}, {55., 0.767145344441923}, {60., 
          0.7778873397267296}, {65., 0.7873213479640261}, {70., 
          0.7956844907046832}, {75., 0.8031166314948183}, {80., 
          0.8091944318296453}}]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEf7GPyfgjUmB+2h/GXRP5NjMg6AuUzOFQsu37t
Wus5OJ/t6qTKNa0XoHwOh5qXc6Qubz4H57OcXLd3t/AVKF/AYR/Xrd7IoGtw
Ph9fIMOaMpi8iMO8a9XbK1svwvk269aWXF8EUy/hcCr7w+y2d5fh/CWd4iqx
qtehfBkHrX2TchMnX4PzN2VuV858ApNXcAhbdc/7kekdON9ObZ93+kWYeiWH
S52KF658vgnnqwTN2tZz6AaUr+LQFXPthts8BP/Ni75V68/dgvI1HIS8bd/v
n4Hgv2rlnn5aHaZex2GZuVnzg7a7cP43/rxeabZ7UL6Bw4F9zw82292B8/2+
1n26cBPGN3LYxfA+1WvWXTjfbePr0BWdML6Jg5aDN9+0aAT/U7ZNzuGFUP0N
Zg58whdzuxPvwvkiwidX6RfAzLd0qPIxXVQfi+BPa41Z0O4IU2/tINA3P2fT
kftwvojRW7+bbTD32zn80OS1qX95H86XU69uibkOU+/o0Oe4dLr893tw/pFP
U9/teACzz8UhKfSQjsCbe3C+x5mmsvATMPVuDqtk5L6rWt2H8z9wP6v7tQnm
X0+HM8IJfQys9+D8plt+9g8+wPh+DtNebm1TVLoL51eETZvlx/sAal6gg9CF
D1817t2F85nmMHd08cL0hzh0rT+09bv/fThf8M8jW0eeB/YATaH3FQ==
          "]]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEf7Kc1WSk4C163h/H9bre41+TcgPIZHJYVF65w
rLoM5y+4qdJbffEilM/hsKf/p1ha4lU4f42or9eB2VegfAGHJfclyhv234Lz
JW5ccneUvwnlizicS7I3fxR8F85f8LNJx/oLzD0SDlLvDxl9zboP59dZt6v4
nrgD5cs4rPhw59D/8vtw/rrXIS8meT6G8hUcFs9s3qwh8hDON2pu1Xtk9ADK
V3Jgfdv7bXnDQzh/TqTO88dlML6Kg0COvck06UdwfkT1wUIhuHkaDjrTTfnm
sjyG8/fMZA+7kQ+T13HQK3sikdT7CM5/cdHD7cRRGN/AweHVRbvnuU/g/KTe
dSumKsDMM3LwejNpVY7kEzh/q7DCnIOLYHwTB/ua/45ecxF8Jq6khjc2UPMb
zBxcZE4pvvrxBM4v4WjTWJQFU2/pMOX6wgf7tBH8VZqp0gVBT6HqrR1+uWWd
7Gh8DufPW7lny6ZbUHkGOwetZE5/nohncH762lPfdRJh+h0dVO7KN/dqI/FX
TPhTWwdT7+IgluXK3fvsCZw/RWae0MR7UPkGNwfh87LmnD5P4fzym6yh2y9B
3cPg6bB2smx/zy8EPyYz++ktbZj5fg5m4r/e6Z56AuevcVhj4cIDMz/QYUbe
rg6xJQh+W+cr/q/rYfpDHFxCnp+z6ELwhWOKeOvjXtoDAIYT74Q=
          "]]}, {}}}, {}, {}, {{}, {}}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 80.}, {0, 0.8091944318296453}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox["\"Transparancy \"", 50, 
          GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
        FormBox[
         StyleBox["\"Power (mW)\"", 50, 
          GrayLevel[0], StripOnInput -> False], TraditionalForm], None}}, 
     FrameTicks -> {{True, True}, {True, True}}, FrameTicksStyle -> 
     Directive[40], GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 80.}, {0, 0.8091944318296453}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"87", "85"}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[3], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[3], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[3], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[3], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 2/3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 
                    Rational[2, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Rb85\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Rb87\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.809981466245793*^9, {3.8099816947880316`*^9, 3.809981707884961*^9}, 
   3.8099817442005405`*^9, 3.8099824965948553`*^9, 3.809983642001171*^9, 
   3.8099838928198347`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tr", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Tvw41", ",", "Tvw3185"}], "}"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"87", ",", "85"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
          RowBox[{"Darker", "[", "Blue", "]"}]}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "40", "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Power (mW)\>\"", ",", "50", ",", "Black"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Transparancy \>\"", ",", "50", ",", "Black"}], "]"}]}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"tr", ",", "rb85min", ",", "rb87min"}], "]"}]}], "Input",
 CellChangeTimes->{{3.80998186597281*^9, 3.809981868654192*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[1, 0, 0]], 
         LineBox[{{0., 0.}, {5., 0.15003535111357658`}, {10., 
          0.2611370262054127}, {15., 0.346619460157237}, {20., 
          0.4143804452200345}, {25., 0.46936596600291836`}, {30., 
          0.5148477747138209}, {35., 0.5530843760101619}, {40., 
          0.5856987096294788}, {45., 0.6138106175447957}, {50., 
          0.6383175242875679}, {55., 0.6598510658027821}, {60., 
          0.6789363142332056}, {65., 0.6959535386842748}, {70., 
          0.7112397102797299}, {75., 0.7250273196129666}, {80., 
          0.7375442264961629}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 
           NCache[
            Rational[2, 3], 0.6666666666666666]]], 
         LineBox[{{0., 0.}, {5., 0.3157632483118391}, {10., 
          0.46321081163238287`}, {15., 0.5487889264984646}, {20., 
          0.6057095973306913}, {25., 0.6468809358506866}, {30., 
          0.6783082661167568}, {35., 0.703211781674559}, {40., 
          0.7235362316037053}, {45., 0.740466334726894}, {50., 
          0.7548124368032236}, {55., 0.767145344441923}, {60., 
          0.7778873397267296}, {65., 0.7873213479640261}, {70., 
          0.7956844907046832}, {75., 0.8031166314948183}, {80., 
          0.8091944318296453}}]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEf7J+c9Pa7V3vFHsYPmWS+ZPq5q1A+g8O2/se+
l8RuwflR6f/uisfdhvI5HKa4FT7atRzB56r9em+b4AMoX8DhzbyvSyqdEXwb
uSS2V9/uQ/kiDl1PTzTc1r4L56dsWCv07RNMvYQDw5q0W9EiCP4SwX/TZafD
+DIOXt+S/tXORPD3qH1ZXZ/3EMpXcPi/NGSKhNZjOL+9UsY1yRwmr+TgJlzX
v/k7gq+3/1bbtTAYX8XhxaqCtbtLEXyNXzlB3nMfQfkaDnbbbq6YkI7gPynL
NYqXg6nXcRBSWdwz3ewxnG9YqzajfhaMb+AwSXbi6WnTHsH5hrf/vIjaA+Mb
OZjd3b/G/RmC3+P2YenMvTD9Jg493T1LrU0R/JiYjE/766D8BjOHC177lf4L
PIHzD1+SmCW/Babe0sGENSnyytlHcH5Y6Vp/B7h+awfnl5PinhQ8gfNZLtWJ
WQtC+Qx2DpOe61ue34zgRz1bxv/0Eky/o4PA4SXXZC4i+L+EdtxTaYbZ7+Kw
6Pn3lRy3EPyI7I28mQ4w+9wczPZmdu9pQPC55rWfWmALU+/poJO/yO7NUgS/
5Fiobf1JGN/P4f3mOV/fKjyB85ff0fr+Cu6eQIdkZn3Jb+8ewfkzFv/69+MZ
TH+Ig0/L6njx04/g/IIS/gvyOx7bAwDSzv76
          "]]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEf7P2yld5c73loD+OL/KkOf8T2CMpncDiZbvHz
N9sDOJ+v5U0zcxCMz+Hgd1IpWk3/IZz/XHrOwYp2mLyAw7HXq7ytfR/D+UWf
ebqvm8DMF3GoaJ+Q62zyBM5vnrNPff1SmHkSDk3qMv+2Jj6B81+ff+uhuhLG
l3Ho0P1UYsv7FM63KjUw5yt8DuUrOHzf9/TMhoancH5Vd0XupmYYX8mhatli
qTuRz+D8EI5818hQGF/F4UuxAe/RGgRfSLH8bdUemH4Nh7JFS7qnfnwG5+ec
lYiO+QeT13E4ZFyt1G/9HM6XsswNzg6D8Q0cTGa8zeouegHnW/wrSZ4kBJM3
cliwpvvojvIXcH5U93qWuWowvolDwu0Ci8vzEfzXsfbPlgdA9TeYOVSuM3vv
8OwFnH/a8GP5THOYeksHuzeOmgniCH4b98Gl/Ldg6q0dOB4fPPLG+xWc35Vg
Zegt8xKq3s4hJ3PlBD+FV3D+splPbW68hel3dCgqb37x5wWCv97v3eV5n2D6
XRyOfLdYsgjuPxcHpufhK3IvQ+Ub3Bxabv+S1ux8geCvXaH3rxtmn6eDhcQs
znenEXy7nEPJq8tg5vs5aFzwX2Rp8QLOz5rh+v4FL8z8QIeE2S7n7x5H8HWr
gmY1roXpD3Gwiv05hTsUwX+z8XbUervX9gC+0feE
          "]]}, {}}}, {}, {}, {{}, {}}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 80.}, {0, 0.8091944318296453}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox["\"Transparancy \"", 50, 
          GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
        FormBox[
         StyleBox["\"Power (mW)\"", 50, 
          GrayLevel[0], StripOnInput -> False], TraditionalForm], None}}, 
     FrameTicks -> {{True, True}, {True, True}}, FrameTicksStyle -> 
     Directive[40], GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 80.}, {0, 0.8091944318296453}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"87", "85"}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[3], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[3], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[3], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[3], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 2/3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 
                    Rational[2, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Rb85\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Rb87\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8099818695291142`*^9, 3.809982501950941*^9, 
  3.809983654191327*^9, 3.809983896391473*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rb87t", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"power", ",", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Log", "[", "EITmax87", "]"}], 
           RowBox[{" ", 
            RowBox[{"Log", "[", "abs87", "]"}]}]], "-", 
          "0.3604286017162307`"}]}], "}"}], "]"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Rb87\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rb85t", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"power", ",", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{" ", 
           RowBox[{"Log", "[", "EITmax85", "]"}]}], 
          RowBox[{" ", 
           RowBox[{"Log", "[", "abs85", "]"}]}]], "-", 
         "0.15013075665125342`"}]}], "}"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Rb85\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tr", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Tvw41", ",", "Tvw3185"}], "}"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"87", ",", "85"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
          RowBox[{"Darker", "[", "Blue", "]"}]}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "40", "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Power (mW)\>\"", ",", "50", ",", "Black"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Transparancy \>\"", ",", "50", ",", "Black"}], "]"}]}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"tr", ",", "rb85t", ",", "rb87t"}], "]"}]}], "Input",
 CellChangeTimes->{{3.809981632541766*^9, 3.8099816343329077`*^9}, {
  3.8099817166891785`*^9, 3.8099817521301727`*^9}, {3.8099825308429017`*^9, 
  3.8099825334296036`*^9}, {3.8099839073719797`*^9, 3.809983917465191*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[1, 0, 0]], 
         LineBox[{{0., 0.}, {5., 0.15003535111357658`}, {10., 
          0.2611370262054127}, {15., 0.346619460157237}, {20., 
          0.4143804452200345}, {25., 0.46936596600291836`}, {30., 
          0.5148477747138209}, {35., 0.5530843760101619}, {40., 
          0.5856987096294788}, {45., 0.6138106175447957}, {50., 
          0.6383175242875679}, {55., 0.6598510658027821}, {60., 
          0.6789363142332056}, {65., 0.6959535386842748}, {70., 
          0.7112397102797299}, {75., 0.7250273196129666}, {80., 
          0.7375442264961629}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 
           NCache[
            Rational[2, 3], 0.6666666666666666]]], 
         LineBox[{{0., 0.}, {5., 0.3157632483118391}, {10., 
          0.46321081163238287`}, {15., 0.5487889264984646}, {20., 
          0.6057095973306913}, {25., 0.6468809358506866}, {30., 
          0.6783082661167568}, {35., 0.703211781674559}, {40., 
          0.7235362316037053}, {45., 0.740466334726894}, {50., 
          0.7548124368032236}, {55., 0.767145344441923}, {60., 
          0.7778873397267296}, {65., 0.7873213479640261}, {70., 
          0.7956844907046832}, {75., 0.8031166314948183}, {80., 
          0.8091944318296453}}]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEf7BlQwAf7hi1+Akd1m2HiDhYF+7q3ztkG5yeU
Rx3ZuXw3lM/h4PDNQ3jdj21w/hrl1Kzf749A+QIOCst3c5nnnoTzD6xd+f72
1qNQvojDgdp/u98t2w/ny7xLumHEdwrKl3CwyHyhNnHpETj/zRIzczvh01C+
jMMPXt1Tbu9PwvkcqWVmYRPPQPkKDhrFSc4qsy7B+Qr3mtuCsmHmKzksCVp6
XCziApz/xtQmZq7vOShfxWGH15YFgqwI/r6NQos+Gl2E8jUcnggffMb49wKc
XzFXTlZa4iyUr+NQwbCrSun1ZTj/xI2PLbFZV6B8A4dJ7dk7jy66BOcr7GN6
JWQHU2/k0HOyKLbnH4IvUZXv++otjG/i8IfjPOuN/Qj+EZMDyaxsUH6DmcOD
2yGpZ48i+M9u+ywqvAKzz9LBR3TnzIMHEfwMvwfTTy6Fqbd2eBSmnPJF4xqc
/+xXgZv0a5j77RxOfZpgfND3Gpz/4f2/6nnWMPWODglcmv2J0Vfh/Gm7JZ/9
coG518XBRM5NJSjgKpwvNZUtb6YOTL2bQ83The/S5yH4h65kltmIw+z3dJh3
53GrUyaCH7L4kplSKMw8P4eMTZZ1yW2X4fyDpRt07tfB3Bfo8GRGydsspytw
/pWU9vozhTDzQhxiKtzWWm65Cud/OeBZfKTmmj0AIdPwVg==
          "]]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEf7BlQwAf7hu6lJZM2T4WJOzSUe+zj3rFmP4x/
Y3GYj9z/LVA+h8MCXf4pF/7OgvMD0rPXi61ZDOULOBS8+LTtVeFaexhfYM0h
m4/5C6B8EYcHDcIxNVw74XyHh3ydjPE9UL6EA8dNAdWUzQfg/AWPjQQ17myD
8mUcVO64uFaePQDnd628l3CU+TyUr+CQkDizV0bvGJw/j31hJdPKQ1C+ksOL
dYdmSj44Due7JNrEcO6E8VUchFZ3TLjkfQrON3oxoe2wLsw8DYe28MQfb9+f
hfMPJa4Uvz0Hpl/HoeeyjDKT8Bk4v8xp3Y1ZX2B8A4fXgZmx3acuwvlxBq5J
F+LPQflGDn9DX5tMU7wI519ZwirhYHIJyjdxeFF6JDlQE8G/pSR8UPsi1L0N
Zg4ft0YqT3xwCc4P6rtowHgEZp6lw0QdzoVWbgj+3gv9YnMnX4aqt3aI455V
dO7jdTh/2QU7T6UlV6Dq7Rz2Ot+ovTrvKpxvcSPqvNhGmH5Hh83mrM+uuyL4
m84+u7HjNUy9i8P0wIBv13ZfgvMnbWNkvb/6GlS9m8MEaUa/822X4fwIg4ud
2lNuQNV7OhxZwvDv6mMEXylgzqoiN5j5fg7XV+/cK9F8Cc4/+E820JUdKt8Q
6DA7yurjS7NrcH7ZhFn/l/lB+QwhDp9Vp9TqMSP4E0xX/dq1+rY9AAJM7sI=

          "]]}, {}}}, {}, {}, {{}, {}}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 80.}, {0, 0.8091944318296453}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox["\"Transparancy \"", 50, 
          GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
        FormBox[
         StyleBox["\"Power (mW)\"", 50, 
          GrayLevel[0], StripOnInput -> False], TraditionalForm], None}}, 
     FrameTicks -> {{True, True}, {True, True}}, FrameTicksStyle -> 
     Directive[40], GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 80.}, {0, 0.8091944318296453}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"87", "85"}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[3], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[3], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[3], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[3], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 2/3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 
                    Rational[2, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Rb85\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Rb87\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.809981634781687*^9, {3.8099817281623588`*^9, 3.809981752930207*^9}, {
   3.8099825042581353`*^9, 3.8099825339970827`*^9}, {3.8099838992674246`*^9, 
   3.8099839182181273`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{
   FractionBox[
    RowBox[{"Log", "[", "EITmax87", "]"}], 
    RowBox[{" ", 
     RowBox[{"Log", "[", "abs87", "]"}]}]], "[", 
   RowBox[{"[", 
    RowBox[{"-", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.809984676050638*^9, 3.8099846768911033`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"0.84", "-", "0.7927851927405548`"}]], "Input",
 CellChangeTimes->{{3.809984682168809*^9, 3.809984683903084*^9}}],

Cell[BoxData["0.04721480725944516`"], "Output",
 CellChangeTimes->{3.809984684574893*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"1", "-", 
  RowBox[{
   FractionBox[
    RowBox[{"Log", "[", "EITmax85", "]"}], 
    RowBox[{" ", 
     RowBox[{"Log", "[", "abs85", "]"}]}]], "[", 
   RowBox[{"[", 
    RowBox[{"-", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"0.84", "-", "0.5014959534381679`"}]}], "Input",
 CellChangeTimes->{{3.8099846934043803`*^9, 3.8099846997372403`*^9}}],

Cell[BoxData["0.5014959534381679`"], "Output",
 CellChangeTimes->{{3.809984694512248*^9, 3.80998470019034*^9}}],

Cell[BoxData["0.3385040465618321`"], "Output",
 CellChangeTimes->{{3.809984694512248*^9, 3.80998470019034*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Fit", "[", 
  RowBox[{
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"power", ",", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"Log", "[", "EITmax87", "]"}], 
          RowBox[{" ", 
           RowBox[{"Log", "[", "abs87", "]"}]}]]}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10"}], ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "1", ",", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Fit", "[", 
  RowBox[{
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"power", ",", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"Log", "[", "EITmax85", "]"}], 
          RowBox[{" ", 
           RowBox[{"Log", "[", "abs85", "]"}]}]]}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10"}], ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "1", ",", "x"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8099847340894547`*^9, 3.8099847729196634`*^9}}],

Cell[BoxData["0.710453682638507`"], "Output",
 CellChangeTimes->{{3.8099847389809055`*^9, 3.809984773107152*^9}}],

Cell[BoxData["0.47883257112216776`"], "Output",
 CellChangeTimes->{{3.8099847389809055`*^9, 3.809984773122775*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fit87", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"power", ",", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Log", "[", "EITmax87", "]"}], 
            RowBox[{" ", 
             RowBox[{"Log", "[", "abs87", "]"}]}]]}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "10"}], ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "1", ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit85", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"power", ",", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Log", "[", "EITmax85", "]"}], 
            RowBox[{" ", 
             RowBox[{"Log", "[", "abs85", "]"}]}]]}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "10"}], ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "1", ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rb87d", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"power", ",", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Log", "[", "EITmax87", "]"}], 
           RowBox[{" ", 
            RowBox[{"Log", "[", "abs87", "]"}]}]]}]}], "}"}], "]"}], "]"}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Rb87\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rb85d", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"power", ",", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Log", "[", "EITmax85", "]"}], 
           RowBox[{" ", 
            RowBox[{"Log", "[", "abs85", "]"}]}]]}]}], "}"}], "]"}], "]"}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Rb85\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tr", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Tvw41", ",", "Tvw3185"}], "}"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"87", ",", "85"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
          RowBox[{"Darker", "[", "Blue", "]"}]}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "40", "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Power (mW)\>\"", ",", "50", ",", "Black"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Transparancy \>\"", ",", "50", ",", "Black"}], "]"}]}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Red", ",", "Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "fit87"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"80", ",", "fit87"}], "}"}]}], "}"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "fit85"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"80", ",", "fit85"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"tr", ",", "rb85d", ",", "rb87d"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8099846513663626`*^9, 3.809984729251848*^9}, {
  3.8099847797402887`*^9, 3.8099849531581025`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[1, 0, 0]], 
         LineBox[{{0., 0.}, {5., 0.15003535111357658`}, {10., 
          0.2611370262054127}, {15., 0.346619460157237}, {20., 
          0.4143804452200345}, {25., 0.46936596600291836`}, {30., 
          0.5148477747138209}, {35., 0.5530843760101619}, {40., 
          0.5856987096294788}, {45., 0.6138106175447957}, {50., 
          0.6383175242875679}, {55., 0.6598510658027821}, {60., 
          0.6789363142332056}, {65., 0.6959535386842748}, {70., 
          0.7112397102797299}, {75., 0.7250273196129666}, {80., 
          0.7375442264961629}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[3], 
          RGBColor[0, 0, 
           NCache[
            Rational[2, 3], 0.6666666666666666]]], 
         LineBox[{{0., 0.}, {5., 0.3157632483118391}, {10., 
          0.46321081163238287`}, {15., 0.5487889264984646}, {20., 
          0.6057095973306913}, {25., 0.6468809358506866}, {30., 
          0.6783082661167568}, {35., 0.703211781674559}, {40., 
          0.7235362316037053}, {45., 0.740466334726894}, {50., 
          0.7548124368032236}, {55., 0.767145344441923}, {60., 
          0.7778873397267296}, {65., 0.7873213479640261}, {70., 
          0.7956844907046832}, {75., 0.8031166314948183}, {80., 
          0.8091944318296453}}]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEf7GPyfgjUmB+2h/GXRP5NjMg6AuUzOFQsu37t
Wus5OJ/t6qTKNa0XoHwOh5qXc6Qubz4H57OcXLd3t/AVKF/AYR/Xrd7IoGtw
Ph9fIMOaMpi8iMO8a9XbK1svwvk269aWXF8EUy/hcCr7w+y2d5fh/CWd4iqx
qtehfBkHrX2TchMnX4PzN2VuV858ApNXcAhbdc/7kekdON9ObZ93+kWYeiWH
S52KF658vgnnqwTN2tZz6AaUr+LQFXPthts8BP/Ni75V68/dgvI1HIS8bd/v
n4Hgv2rlnn5aHaZex2GZuVnzg7a7cP43/rxeabZ7UL6Bw4F9zw82292B8/2+
1n26cBPGN3LYxfA+1WvWXTjfbePr0BWdML6Jg5aDN9+0aAT/U7ZNzuGFUP0N
Zg58whdzuxPvwvkiwidX6RfAzLd0qPIxXVQfi+BPa41Z0O4IU2/tINA3P2fT
kftwvojRW7+bbTD32zn80OS1qX95H86XU69uibkOU+/o0Oe4dLr893tw/pFP
U9/teACzz8UhKfSQjsCbe3C+x5mmsvATMPVuDqtk5L6rWt2H8z9wP6v7tQnm
X0+HM8IJfQys9+D8plt+9g8+wPh+DtNebm1TVLoL51eETZvlx/sAal6gg9CF
D1817t2F85nmMHd08cL0hzh0rT+09bv/fThf8M8jW0eeB/YATaH3FQ==
          "]]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEf7Kc1WSk4C163h/H9bre41+TcgPIZHJYVF65w
rLoM5y+4qdJbffEilM/hsKf/p1ha4lU4f42or9eB2VegfAGHJfclyhv234Lz
JW5ccneUvwnlizicS7I3fxR8F85f8LNJx/oLzD0SDlLvDxl9zboP59dZt6v4
nrgD5cs4rPhw59D/8vtw/rrXIS8meT6G8hUcFs9s3qwh8hDON2pu1Xtk9ADK
V3Jgfdv7bXnDQzh/TqTO88dlML6Kg0COvck06UdwfkT1wUIhuHkaDjrTTfnm
sjyG8/fMZA+7kQ+T13HQK3sikdT7CM5/cdHD7cRRGN/AweHVRbvnuU/g/KTe
dSumKsDMM3LwejNpVY7kEzh/q7DCnIOLYHwTB/ua/45ecxF8Jq6khjc2UPMb
zBxcZE4pvvrxBM4v4WjTWJQFU2/pMOX6wgf7tBH8VZqp0gVBT6HqrR1+uWWd
7Gh8DufPW7lny6ZbUHkGOwetZE5/nohncH762lPfdRJh+h0dVO7KN/dqI/FX
TPhTWwdT7+IgluXK3fvsCZw/RWae0MR7UPkGNwfh87LmnD5P4fzym6yh2y9B
3cPg6bB2smx/zy8EPyYz++ktbZj5fg5m4r/e6Z56AuevcVhj4cIDMz/QYUbe
rg6xJQh+W+cr/q/rYfpDHFxCnp+z6ELwhWOKeOvjXtoDAIYT74Q=
          "]]}, {}}}, {}, {}, {{}, {}}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 80.}, {0, 0.8091944318296453}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Epilog -> {{
        RGBColor[1, 0, 0], 
        Dashing[{Small, Small}], 
        LineBox[{{0, 0.710453682638507}, {80, 0.710453682638507}}]}, {
        RGBColor[0, 0, 1], 
        Dashing[{Small, Small}], 
        LineBox[{{0, 0.47883257112216776`}, {80, 0.47883257112216776`}}]}}, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox["\"Transparancy \"", 50, 
          GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
        FormBox[
         StyleBox["\"Power (mW)\"", 50, 
          GrayLevel[0], StripOnInput -> False], TraditionalForm], None}}, 
     FrameTicks -> {{True, True}, {True, True}}, FrameTicksStyle -> 
     Directive[40], GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 80.}, {0, 0.8091944318296453}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"87", "85"}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[3], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[3], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[3], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[3], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 2/3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 
                    Rational[2, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Rb85\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Rb87\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.809984664320953*^9, 3.8099846709439216`*^9}, {
  3.809984705911811*^9, 3.809984729845564*^9}, {3.8099848487044897`*^9, 
  3.8099849536580415`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fit87", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"power", ",", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Log", "[", "EITmax87", "]"}], 
            RowBox[{" ", 
             RowBox[{"Log", "[", "abs87", "]"}]}]]}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "10"}], ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "1", ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit85", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"power", ",", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Log", "[", "EITmax85", "]"}], 
            RowBox[{" ", 
             RowBox[{"Log", "[", "abs85", "]"}]}]]}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "10"}], ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "1", ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit187", "=", 
   RowBox[{
    RowBox[{"NonlinearModelFit", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"power", ",", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Log", "[", "EITmax87", "]"}], 
           RowBox[{" ", 
            RowBox[{"Log", "[", "abs87", "]"}]}]], "+", "0.84", "-", 
          "fit87"}]}], "}"}], "]"}], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"a", " ", 
         RowBox[{"x", "^", "2"}]}], "+", 
        RowBox[{"b", " ", "x"}]}], 
       RowBox[{
        RowBox[{"c", " ", 
         RowBox[{"x", "^", "2"}]}], "+", 
        RowBox[{"d", " ", "x"}], "+", "e"}]], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}], ",", 
      "x"}], "]"}], "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit185", "=", 
   RowBox[{
    RowBox[{"NonlinearModelFit", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"power", ",", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Log", "[", "EITmax85", "]"}], 
           RowBox[{" ", 
            RowBox[{"Log", "[", "abs85", "]"}]}]], "+", "0.84", "-", 
          "fit85"}]}], "}"}], "]"}], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"a", " ", 
         RowBox[{"x", "^", "2"}]}], "+", 
        RowBox[{"b", " ", "x"}]}], 
       RowBox[{
        RowBox[{"c", " ", 
         RowBox[{"x", "^", "2"}]}], "+", 
        RowBox[{"d", " ", "x"}], "+", "e"}]], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}], ",", 
      "x"}], "]"}], "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kk", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fit187", ",", "fit185"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1.1", ",", "85"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rb87d", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"power", ",", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Log", "[", "EITmax87", "]"}], 
           RowBox[{" ", 
            RowBox[{"Log", "[", "abs87", "]"}]}]], "+", 
          RowBox[{"(", 
           RowBox[{"0.84", "-", "fit87"}], ")"}]}]}], "}"}], "]"}], "]"}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Rb87\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rb85d", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"power", ",", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Log", "[", "EITmax85", "]"}], 
           RowBox[{" ", 
            RowBox[{"Log", "[", "abs85", "]"}]}]], "+", 
          RowBox[{"(", 
           RowBox[{"0.84", "-", "fit85"}], ")"}]}]}], "}"}], "]"}], "]"}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Rb85\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tr", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "85"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.4", ",", "1"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
     ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "40", "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Power (mW)\>\"", ",", "50", ",", "Black"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Transparancy \>\"", ",", "50", ",", "Black"}], "]"}]}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Red", ",", "Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"(", "0.84", ")"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"80", ",", 
               RowBox[{"(", "0.84", ")"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0.84"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"80", ",", "0.84"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"tr", ",", "rb85d", ",", "rb87d", ",", "kk"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8099850817214212`*^9, 3.8099852500053544`*^9}, {
  3.809985319250657*^9, 3.8099855172389145`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, 
      GraphicsComplexBox[{{0., 0.4}, {0., 
       0.4}}, {}], {}, {}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEf7BkdtJn7Yh7Yw/iXq3LEXVfC+AwOHHyLt6gY
PIbz3/Zts269CONzOJyMm3J0sTWC/6bjyN2eGU+hfAGHk5q3jt7e/gzOL1wt
+p/lFExexGEn/+pb2YFP4PyO3847pR7A1Es4+Ec99fnU+hTOt3n5Y0Ks4nMo
X8ahvnnb1vgbz+B855snJjxugMkrOEytvKOyYOVLOL/T/MySpO8w9UoOwS//
ps3seAHn1/haRX19D9Ov4rA+KCL70l0E/8EMkyts32DqNRw+n+z+xncbwY9/
XnRqyiKYeh0HW4cOB/mgV3B+qs6So3smwvgGDqeYH97/sPYlnC84X6di+m8Y
38jh+JInhleiX8H5vH8faTYHw/gmDvVHhNiqbBD85CjurRPuQ/U3mDl8XHt1
a4n9Kzj/y9rAK8eOwcy3dFh+iv1C3l4E3zRd+nyRPky9tUPRaxtTjsLXcH7J
3uRl0pdg9tk5pO38PCev+TWc/3O7lmNsFUy9o4Ph0f2n7LgQ/DOyFmXc/2H2
uThI+/uJbmd5Def3dentuvUJZr+bw36jml8HtV/D+UlaCXY6GTD7PR0C9GTd
9Cci+KsnTpGTZ4eZ5+dgKulxaL/8Kzj/UVXzzL+zYeYFOhT3PK08XPsKzs/+
9M6pZCpMfYiDfs25m6vMXsP51QoXbD7Mem0PABTp/TM=
          "]]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQDQEf7L8pBx/eH33fHsYP3+dXWhP9AMpncGAT7fLe
d+Q2nM9QbWvwQ/oWlM/hIGMotOvR6rtwPs/21Lc2z+5A+QIOTQckev+1PITz
9+wp/XpvC8x8EQdxJp1c/fOP4PyGs2efR8vD5CUcbE+8fbXj1mM4P//d+ccp
nTD1Mg4sJ38Z2T18DOfH2Ty0vJj3HMpXcAh+xc+abvkUzn90WbBBIeIJlK/k
sNVWyuPZ0qdwvs+qHRZKc2B8FYcDe063XnF4BudznPE9HAA3T8PhzvOD8bc1
n8P5Oa8mLxebCpPXcbh3rCBrwaZncP4MpavT2V7D+AYOH6ziJqhOfgHnC92z
+nXZFWaekcMvG/k/q+xewPmpKWve/j8O45s4vD/TPbnjEIK/KerdRa0kqPkN
Zg5fcsKKNeRewvkqkUJVD/ph6i0dXDT0jP4GIPhRVR9z1pXD1Fs7rJr+Ter4
stdwvt8vD7aP/6HyDHYOtzZPXeBV+wrOF/8X5pndBtPv6HBFd82V0wFI/B8y
fnsWw9S7OBzbdTHmNPdLON8lVyvlPDPMPjeHw/KrOtwLX8L56lqTln39DpVn
8HSIfbLywSn5N3A+z67vZpKBMPP9HJ6ltznkvH8B58dMtOhqMoTKNwQ6eOx3
uxVyEsE3u1WWaHwVpj/E4cuSYoXy9Qj+4TX/4vY2v7UHAHS6/e4=
          "]]}, {}}}, {}, {}, {{}, {}}}, {{{{}, {}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
i/0/laSxhQ==
          "]]}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJwVz3k41AsXB3AkpSZEQvaMEcZOZDtHG7JkpplyS0VJKJGKK8WlvClljxJZ
0s3SihY3SiUh4Spbtmwz8/uNsmRJojvvH+c5z+d5znnO+aofCGQeEhESEioW
1P/7E631eZnXx+FNRrgkZewLVDAaS0qcJsDyafJnu5X98Drc503t/ASUB6Q8
jzTqh8amtKFJr0mwcDEddAnsB07oDM1FZwYoqxK2RPb3w0hugvnB7hkIdB1n
uf7qh4n3Wg5h8T/g19bE6+GrB2BB1d3v9sQsZC5ZdZLiOACytc+K5//5BTac
UO0HdwZgzYRbhUzAPOQ/mW5TfDEAakpEg7bqAihmmjvIfBoAepDCN/a536Ax
OnK/ZGEA1lJs5Ns1hXG44YeBwvZBsCzL2m3wbRESfVWutL5BsKkjDljai+Ii
hvJ4zeggYK/ZkS05org/Z+lWNaEh2Lq0MXwPczHml8wli6oNAdNjIfPCEzE0
c3JJqfYYAn/R/X19EeKoKrf4Vcj7IQhQKOaS7eLYrWRdeLBjCIL0Z0anDJdh
SFVKntrwEIS4JwhRBpfhYPW35ZILQxB996W6hT0FY2iSVZ16w3CdpeadKCmJ
49mdIqMxw7C+MvJf+SBJ3FO5ZlonaRhaNPtsc5slUT7gbJ9t5jDEzDVSOh2k
UGyNz+T4o2GobLjCJcRX4pB1deCNrmHQC1yetfyyNDb2XTTIXMeBMxrPP26v
kMbK1l6dR0YcqG/3X5Y6Io30cjejQksO+GB9qJKLDF7oLri02ZkDN1deZOpJ
rMLclvau9cc4IFEmtnR7oixOkXOaJ+5xwMP3iW1KlSy2n9Wx+17GgSIln1Pt
Y7I4+UT14d4KDmyNeTuwn7EaP3bmCn2v50DEzvOVQdJyOJ9xcoM2lwOjP4RP
JKfK4+fJbj2KEheabeZ7Wq8pYs2lEPtrYVzIVjhox32riN0q78IyI7hwbKo2
/8eEIgo9KLG5eo4LlHupRxRdlPCRgvLqQ1e44KBEn/UUVsakyK2a0TlcePVz
96oRPxV876P/v+ZqLiS2VYXOp6ngbITlc/06LniW0LokqlXQr2PwzrkPXFjw
m8g1UlHFGZPvytJtXLDsvGgQ2qKKbmvtb1RzuNC5x0MzKksNrZ1LGOliPKhy
lGwXL1PDA7eUewOW8aDA/HVscr0a7t03+tZaggd/yqwbuTWjhpsSS0WqZXmw
+v33khqGOg7WV1w/TeUB0zIOKWJrkct4EJyBPKiX/2dP+jEN3KZwiqZ1kgfa
D6uG7p/XQJmX5VS1UB7E2r8LqMnQQG+h3p8yp3lgH/IpcqpGAw+3m3mPRPKg
+uO3WztUqRhFWqR7xfHgZbzGiGQzFUN7zRi+uTwoE71yJtaIhte9N+Sb1fNA
JjNlcY49DTd9Tg/JaeBBsElG/NO9NOzSkopa0sQDowN3cjgXaehmmudV/5EH
91++qt48QEPb7XkbqT2CvKenKcIpWuiz5Wa5wSgPssb2Z4VNrkP9uD3On6UI
GPAojgyiaKPK2+dvxWQIWFc37XWYqo3vx98PGsgSUJZ7hcZmaWN09hj9TwUC
6pnPHxiWaaP+lk81/eoETJetfs09oYNu0vlHVI0JcAv7wGF/18Wka8zOYDcC
0obl65yX09Ho8RGGHZOALoZ38SYNOsofOGa7gkWAj85coNEOOtaUp1zO2kXA
2a51s5RSOq63aYvL2UdAkc355dXBehjXvjPc9CgBi0SsDI0n9FGveSy9LIaA
ZdH9BQlLDTDBe6m4+gUCpERi1b+qGOC45vSruFgClERapQucDDD7TKWcRxwB
piKBU8q3DTBiwaaAl0iAcRSjR5RuiPGJpaOlNwg4GBWTN9ZriL32kgzaQ8F/
rzr2qZKG6HDli43XIwL8hemKrlOGuPvq6rqMEgKColpSipcbofvO6Tfijwk4
E6Ua42NhhCGe2+LaywlIjSo/3J1khCL3qa6mbwiojvpKr91sjO2KgarCrQRY
0gevctyMsU/h6rhOGwEP2zoWRPcaY5Gs3fEd7QRk6VY3250yRpoxLTqnk4CQ
1oyTz28bo1oTT0u3lwAtbYeK+2Im6JB70kuUS8Cl5jynq7Um+GXkefynGQKE
wq+VlX4ywdiWXdIdPwT7mvHKLV9McHHl9ejPs4K8p8NGJWZN0FRjwKB7jgBr
qltKrLYp/jwQMdLym4CvofOfwy+ZYp4zY3fCEhLcVN39DzibYY3KXJXrahKi
b87YOrib4fCKN1X6ciSUKafL6HuboeTTZ8Mr5EmQV2qrmA03w40Buvl1CiR8
kWdJJhWbYWFlhqy5MgnHpd3KXi5bj18/sdpIDRKSFzssKNWtx/iehmeVhiS0
8s2T27dYoJxmTIujAwm8SdGSMTcLHPln+P6owD/n//1X3MMCbW4liV51JEFF
6uhK62ALPDH5h0rvNhJ8TXMSc25a4N2n7sr+LoL5M0sT/GYs8FEl9aMfkwQ1
ic64uYINmNoRZE3xIMHf8HSMKsUKu9KdVOYCSBi7RTDWyVuhq13TpoRjJJyS
+0PFiGqFYa/JibWBJPy1YP50o7UVhpxRHXMIIiGtYYp36KgVVkrXn0oIJuG1
73Hnuw1WuFaoQHNJKAkKub4yG65Y4+3EnoL8SBJqV+7KZUrYorhN0a6SBBL0
JSefxSvYoqN/azY1kYRUSlJzPdUWCz1DM9IE3r/k/e+NVrY4fW53QVgSCdO/
bPeZ+Nri4+C1BtYpJGjwaIqrXtti57tLuqVpJES8mE5tPQVYN9vZ759FQoaZ
0+a7xxBNlKW0pIpI+BCmeU+pyQ7DfJdfMqgiwZviUhTtsgmPromf7/tEwqIu
zRXMks04La/fWDRMwpIfTqJyZluRaEo9fGuKhAt37wbVPbTHQ43Fv04s4oNk
1ouNw9KO6BdIZ09I8OFXl3LhdPI2LL/xrVx9DR/Gd+qfOj7rhDnC1RinwYdt
apdb+8+64Eykn0MtnQ9qUdRimHPFZze2Wy0y48NvCfMT5wzc0K6ztljcmg+5
50W6vMbcMNnzce+STXywv/b31Ml8Bu7eNzK0zJEPxTPc+gUWE78WLr4Q5coH
u4Xt/udW7cAIrzeNQiw+dOUlVli/24EXNltdfOvOhzvfZjrGYll4pOP42rS9
fKDGHJT9EMfCzsy+e3cEzlFsYhTGs1DbJd20XOAMh7/rvVJZWCw2YtIt8OU8
VkVLNgsHnu3/qb6PD0E7H2WXPWFhQqFMwV2BLV74+/w5xMLSDWkpL/bzoYzV
lsfisjB7+HNck8BGfLs+Q1Jwf1N+5BeBdeQV3IlRFvbQG/4Q8eSDUvA7x91z
LCR08zq2CCxEo+pZS7NRNXRUuEHgMxUJfvKybDTUYZZ2CzzLnLs9KcfGc+fZ
nl8FnohsUbmnzEYWZcs9CS8+DHX+JaWizUbG5hlphsCeQSPOP3XZ6CuTkOsl
cI+Y+8U2fTa667XqBgvcZmIgkmDKxkKREyYpAjPrM2yPmLPRVanx4S2BmzzF
wu0t2bjDple7TGDnmeNPNWzYWCR9+2a1wLVXer7/BjYecqBKtgr8H7kKFgI=

          "]]}}}, {}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0.403}, PlotRange -> {{0, 85}, {0.4, 1}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0.403}, DisplayFunction :> Identity, Epilog -> {{
        RGBColor[1, 0, 0], 
        Dashing[{Small, Small}], 
        LineBox[{{0, 0.84}, {80, 0.84}}]}, {
        RGBColor[0, 0, 1], 
        Dashing[{Small, Small}], 
        LineBox[{{0, 0.84}, {80, 0.84}}]}}, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox["\"Transparancy \"", 50, 
          GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
        FormBox[
         StyleBox["\"Power (mW)\"", 50, 
          GrayLevel[0], StripOnInput -> False], TraditionalForm], None}}, 
     FrameTicks -> {{True, True}, {True, True}}, FrameTicksStyle -> 
     Directive[40], GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 1020, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 85}, {0.4, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Rb85\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Rb87\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8099851059997916`*^9, 3.809985250372179*^9}, {
  3.8099853369088964`*^9, 3.8099855176295166`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Another Plot", "Title",
 CellChangeTimes->{{3.8099855954439764`*^9, 3.8099855967631207`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\<D:\\\\Qsync\\\\QOLab\\\\Data\\\\On Resonance Project\\\\Lab Book 2 \
(18 Mar 29 -)\\\\20-09-24\\\\85power scan\\\\P=200\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Import", "[", "#", "]"}], "&"}], "/@", 
    RowBox[{"FileNames", "[", "\"\<*csv\>\"", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"17", ",", 
         RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.809103770975025*^9, 3.80910377485117*^9}, {
   3.8091939903849115`*^9, 3.809193992943684*^9}, 3.8093506243255796`*^9, {
   3.8093713334657145`*^9, 3.8093713481032495`*^9}, 3.8097202460140977`*^9, {
   3.8097203695676227`*^9, 3.809720369658579*^9}, {3.8097204005117846`*^9, 
   3.809720442844616*^9}, {3.8097205344000287`*^9, 3.8097205535628405`*^9}, {
   3.809722037372512*^9, 3.809722178348056*^9}, {3.8097222456281185`*^9, 
   3.809722249868085*^9}, {3.809723116027855*^9, 3.809723116242752*^9}, 
   3.809824396744284*^9, {3.809824643096903*^9, 3.809824866474016*^9}, {
   3.8098249810156403`*^9, 3.809825141917141*^9}, {3.80982520872534*^9, 
   3.8098252092941556`*^9}, {3.8098252834309735`*^9, 3.809825288675255*^9}, {
   3.809825347359105*^9, 3.8098253910688553`*^9}, {3.809825577979856*^9, 
   3.80982557824377*^9}, {3.8098283806763535`*^9, 3.809828382611725*^9}, {
   3.8098285622930927`*^9, 3.8098285659309177`*^9}, 3.809889925103687*^9, {
   3.8098950039762125`*^9, 3.8098950455083117`*^9}, {3.809978755873782*^9, 
   3.809978774044366*^9}, {3.80998002125735*^9, 3.8099800216571627`*^9}, 
   3.8099857125964108`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ll", ",", "max", ",", "min", ",", "yaxis1", ",", "yaxis2", ",", "wcn", 
      ",", "ff", ",", "gg", ",", "loc", ",", "kk"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ll", "=", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"max", ",", "min"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", "ll", "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"Max", ",", "Min"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"yaxis1", "=", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "4"}], "]"}], "]"}], ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"ll", ",", "max"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"ll", ",", "min"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], "&"}], "@", 
          "Position"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"yaxis2", "=", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "8"}], "]"}], "]"}], ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"ll", ",", "max"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"ll", ",", "min"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], "&"}], "@", 
          "Position"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ff", "[", "x_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
       "Fit", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"o", ",", 
                 RowBox[{"yaxis1", "[", 
                  RowBox[{"[", "o", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"o", ",", "2000", ",", "2700"}], "}"}]}], "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"o", ",", 
                 RowBox[{"yaxis1", "[", 
                  RowBox[{"[", "o", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"o", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "yaxis1", "]"}], "-", "200"}], ",", 
                 RowBox[{"Length", "[", "yaxis1", "]"}]}], "}"}]}], "]"}]}], 
            "}"}], ",", "1"}], "]"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"gg", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ff", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "1", ",", 
          RowBox[{"Length", "[", "yaxis1", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"loc", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"FindPeaks", "[", 
         RowBox[{"yaxis2", ",", "9", ",", "0.00005"}], "]"}], ",", 
        RowBox[{
         RowBox[{"1200", "<", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<", "3500"}], "&"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kk", "[", "x_", "]"}], ":=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Fit", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"loc", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"-", ".816"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"loc", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], ",", "0"}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"yaxis1", "/", "gg"}], ",", "yaxis2", ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"kk", "[", "x", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "1", ",", 
           RowBox[{"Length", "[", "yaxis1", "]"}]}], "}"}]}], "]"}]}], 
      "}"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8099788377211666`*^9, 3.8099788378441014`*^9}, {
  3.8099789946282687`*^9, 3.8099790879855456`*^9}, {3.8099791963659678`*^9, 
  3.809979204304804*^9}, {3.8099794101242065`*^9, 3.8099794138287516`*^9}, {
  3.8099795264923563`*^9, 3.8099795310800915`*^9}, {3.8099801209228864`*^9, 
  3.8099801223317633`*^9}, {3.8099801541830935`*^9, 3.8099803564318805`*^9}, {
  3.8099858235728064`*^9, 3.8099858357332907`*^9}, {3.809985920693103*^9, 
  3.809985962421087*^9}, {3.8099860204684258`*^9, 3.8099860944699016`*^9}, {
  3.809986125646783*^9, 3.809986130021018*^9}, {3.809986215997855*^9, 
  3.8099862997992277`*^9}, {3.8099863361744204`*^9, 3.8099863799244423`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"data2", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "4"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8099857786228867`*^9, 3.8099857947099805`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
Ac//C3j+X8D9v4D7nzyNeenMy8BR+jNx1oLw/slhfh71BcwvIi/BMerLyStZ
rxrHcS399eSNnL8E9U3UN5O3kLey/zbydvIO5kWe4/3fc2F/0nN8/+c57n+c
Rn86zsDR58Lnj0ycxfwc+vPYfwF5Ef0lOEZ9OXklrqY+Tl6L63EjTnC8TeTN
uIXjbcVt1LeTd+BIZXh/dank8VAZHm8PnER970qeL6jvR30K9ak4rTJ8vhxc
GZ6vdOYPwxnUj2T9KB5Dfyb7GY+zqM9mXg7OpT+P/nzqC8gLOZ4i5hXjEvpL
mR8jLyMvZ14FrmQ/Vbia+hocZ/1V5LW4rpL31+y3gXmN9G9hfwny7fQ34V3U
N+O97KeF9Q6Qt5IfZl5bZfjz7WPk7fgk7mD/Z7ifIgvD/XRZyPtB3GMh9//C
6P++3PpF5/1PfTLuh1OYl8p+0haGz0+DcfrC6Km03Oe2/bPTw+jPoH7kwvB8
R9nPGJzJ/saTZy0Mr082ec7C6KXd332l6NKdnfc/+82jPh8XLAzffxcu5Pvb
7K+YvIR5pTjG+Sjj/JUzv4LzWcm8KlxNf83C6KMffTzj6l2d9z9eRX8t/XW4
fmH0mx9vuLO/gbyReVs43gTHu536JvJdzG+mfi9uYb0D9Lcy/zD1beTHmN/O
vJPkHfSf4XxHFoWPxy6LwvPZbRH3P07CvXHyovB4+pGnLAr3l8r6aYu4/6lP
p34YzsAjWT+6KDwfY3Am9eMX8fmkRbz+059Dfy7Ooz+f81VAfSEuor8YlzCv
lP3FqC/jfJWzXgWupL+K9arJa5gfJ1/F/Fpcx/mvXxQ+3zVwfI3sZwtOsJ/t
7KeJebt4/DWT710U/eWuj//rvP8XRS/6eIOdr48HOJ5WfJj9tOFjHH87/Sep
7+D+OcPxRRaH9V0W8/q/OHz96rE4fL5Ior734vD4kxeH56sf66Us5vV/cfj+
JG1x9L3Ujxo6z99g+tNZf9hiPm+wmPf/7CfK+mPIM+kfz/nIYn/Zi6PPLpvx
0SfuOu9/5uWyXh7Hk8/xFOBCXISLcQnzSxdz/3N8ZeyvnP4K8krWq8LVi8PP
u9bQH18c/e1Hy3f75PWf9Wqpr8P1rNdA3si8LeQJ+reTN5Hvws3M38v5bOH6
H6C+FR/m8dTGfo6xfjvrnSTvwGdwpCp8fupSFc7rVhXejz2qeP3HvalPJu9X
FR5PCnkqTsODcTr7HUaewXojq8LzHa3i9Z88k/7x5Fmsn10VPv/lsJ9cnIfz
cQHrF7JeEfXF5CXkpVV8/U99GfXlHG8FeSXzqsirOb815HGObxXr1eI66ut5
vDWwXiP720KeYP52zkcT6+1iXjP1e6lvwQd4fLRyPg7jNnwMt3P8J1mvg/2e
4XgjS8L9dFnC/b+E9//UJy0Jn696Lwmfz5OX8P2/JXz/j/mp1KctCfc7GKcv
CY9/GOtnLAmv90jmR9nPGOozOd7x7DcLZ7O/HJy7JHy+zWM/+RxPwZLo+80D
fv/vOZ3vJwqZV4SLl4TfjylhfinzYuRlHE/5kvD9VAV5Jf1VuJr91XB8ceav
or6W9eqW8P6f69fA9Wok37Ik/H5Ngv1s5/HTxH52sZ9mvJf6liXh++UD1Lfi
w9S3sf9jzG/HJ5nXQX4GR5by/n9p+PjotjRcv8dSXv9x76Xh9U8m78d6KUvD
55tU6tPwYJzOvGHMy6B+JPVRPIb6TDweZ+Fs5uUsDR+PueR59Odz/go4/4XM
K2Je8VK+/7c0fD4opT6Gy1ivnP1VsH4leRXzqjmeGvrjS6Mf/7rEJzv3t4p5
tbhuaXTF/x3NNRd/cv+zXgNu5Hi2kCfwduqb2O8u6pvZ317cQv8B3Mr1Orw0
fD5qY71juB2fZP8dnP8z1EeWha93XZbxeYBlYX0PnLSMn/+RJy/j/l8WPh5T
yFNxGh6M01l/GHkG+xmJo/SPIc9k3nicRX32Mj6vvoz7n/Obtyx8POczr4D1
CsmL2H8x65Wwn1L6Y9SXMa+c/opl4etvJfVV7Lea9WrI4zz+Vi0Ln79rWb+O
efWs30DeuCz8fswW6hPUbydv4vzs4vo1Lwt/PrOXeS0c7wHmtVJ/mLwNH+N8
tDP/JOezg/lnqI9U8/6/mu//V4fvh3pQn1TN/U9/MvX9qvn+f3W431Tq06gf
zPx0PIz+DPKR7DfK/DHUZ5KPJ8/C2dTnkOfivOrw8ZPP/gvYbyF5EfOKcUk1
9z95DJfhctavYP1K5lfRX41rOD9x5q2ivpb6Ourrq8P7sYH+Rva/hTzBvO24
Ce/ieJvJ9zK/hfUPkLfiw8xrIz9WHb4/aKf+JOt1kJ9hXuT58P7u8jz3P+7x
PO//nw/v397UJ+N+z4f7SXk+PJ+p5Gn0D2b9dPJh9GdQP/J57v/nw68Hx9Cf
yfzx5FnMy6Y+h/pcjjePPJ/+AuYXkhfhYo63hLwUx9hPGfspp76C+kryKvZb
TX0N9XHWW0Ve+3z4fqOOvJ7+BvJGvIX9JDhf26lvwrtYr5nj3UveQn6Aea3U
H8Zt+Bj97fgk9R34DPuJLA9/ntVlOff/8rC/x3I+H7w8PJ+96U+mvx95Ck5d
Hj6fpLHeYPJ0+ofhDDwSR5k/hjwTj+d4szi+bJxDfS7z8qjPJy/AhbgIF3N+
SshLWS+Gyzgf5fRXML+S+qrl4c/7qplfg+PMX8X5qiWvo7+e9Ruob8RbcIJ5
23ET83eRNzNvL/Ut5Afob6X+8PLw6+M2+o/hduadZF4H9Weoj7zA9/9e4PO/
L4TXo8cLvP/HvZmXTH8/6lOoTyVPIx/8Aq//5MNwBh7JfqIv8PM/6jPZz3jy
LJyNc3Au5zeP+fnUF1BfSF6Ei3EJ/aXkMfIy8nJcgSs5f1UcTzX1NTiOV9Ff
y/Wqo74eN+BG5m0hTzB/O3kT3sW8ZryX89lCfoB5rZy/w+Rt+Bj17eQnOZ4O
8jPsJ1LD/V8T5t1quP+pT8K96U8m71fDz//IU+lPIx9Mns7+hpFn4JHMi+Ix
OLMmPN/jybNwdg1f/7N+LvV5OB8X4EJchItxCS5lPzHyMvZfzvmtoL6SeVW4
GtfQH8erqK/FddTX4wbciLfURB9cnNxlUs9fdt7/zN9OfRPeRX0z+V7cgg/g
VuYdJm/Dx3A7j8+TzOvAZ+iPvMj3/17k/T95D/KkF/n6nzwZ98MpL4bXI5X1
0vBg+tPxMJyBR+Io88eQZ5KPJ8/C2dTn4Fzq83A+LqC/kPNdRH0x9SXkpTiG
y+gvJ68gr2Q/Vbia+hrmxfEqXIvrmFfPeg3kjfRvwQm8HTfhXbgZ72X9FvID
5K3kh3EbPobb8Uncwfk5w/qRFdz/K8L6buQ9VnD/497UJ5P3wyk4FafhwTid
9YaRZ5CPJI/iMTgTj8dZzM8mz8G5OA/n4wLmF+IiXEx/CXkpeQyX4XJcgStx
Fa5m/RoeX3HqV1FfS16H63EDbmTeFvIE+XbyJrwLN+O9HF8L+QHcig+znzby
Y7gdn8Qd+AyOvMT7f9wN98BJuDdOfonv/5GnvMTrP3kaHozTmT+MPAOPxFH6
x5BnvsT7f5xFfzbOYV4uzsP5uAAXMr8IF7O/EvpLcYz+MlxOfQWupL4KV1Nf
w/7ieBX1tcyrI6/HDcxrJN+CE8zfTt5Evou8mXwvbqH+AG7Fh3EbPobb8Unc
wX7OkEfioc/BXXBX3A13j4fnvwd5T5yEe+HeuE+c9xfkfcn7sZ/+1KfgATiV
eQPJ0/AgPBgPwel4KOsNw8Opz8Aj8EiOfxR5FI/GY/BYnInHsd/x5BNwFp6I
s/EknMPxTSbPJZ9Cnsd+p5Ln42m4AE9nXiGewX6KyGcyr5h8FnkJnk19KZ5D
fQzPxWV4HvPKyefjCrwAVzJvEa6ifimupn45eQ3newV5HK/Eq5i/GtfitfTX
4XW4Hq9nXgPeSH0j+WbyLXgrTuBteDvegZtYfyfehXfT30y+h3wv3odb6N9P
fgAfpL4VH8KH8RHmtZEfJT+Gj+N2fAKfxKdwB+ufxmd4/J+lP/Iyr/+4C+6K
u+HuuAfuiZNwr5f5fiJ5H5yM+9Lf7+XwfPTHKfQPwKnUD8Rp1A/Cg6kfQp6O
h+JhHM9w8gw8Ao/Eo3CU/Y1mvTHkY+nPJB9HPh5PwFl4Iutnk08izyGfTJ6L
p7DfPPqn4nz6p5EX4Om4EM/ARXgm+ysmn4VLqJ+NS6mfg2N4Li7D83A5no8r
8AJciRfhKo5nKa6mfjl5DfkKHOf6riRfhVdTX0u+Ftexn3Xk9cxbT96AN+JG
vJn1tuCt1CfwNrwd78BNzN9Jvgvvxs14D97L+dlH3oL34wP4IG7Fhziew+RH
yNvIj+Jj+DhuxyfwSXwKd7Cf0/gM9WdxZCWv/7gL7oq7rQzX607eA/ekPmll
eH17kfemvw9Opr8v/f2o749T8ACcyvyB5Gl4EPWDyYeQp7PfoXgY/cPpzyAf
Qf9I8lE4yrzR5GOYN5Y8E4/D4+mfQJ6FJ1KfTT6JPId8Ms7FUzjePPKpOJ/1
ppEX4Om4EM9g/SLymbgYz8IleDYuxXNwDM/FZRz/PPJyPJ/6CvIFuBIvwlWc
r6Xk1Xg5rsEr2F+cfCVehVfjWuatZb911K/D9Xg9/Q3kG3Ej3oy34K3MT5Bv
I9/O8e2gvgnvxLvwbtzM/D3ke9nPPvIWvB8fwAdxKz6ED7P+EfI2fBQfw8dx
Oz6BT+JTuAOfxmfY/1nyyCu8/uMuuOsrfD6AvDvugXu+wus/eS/cG/fByeyn
L3k/3B+n4AE4FQ9kvTTyQXgwHkJ/OudjKPXDqB9OfQYeQf9IPApH8Wg8Bo/F
mXgcHo8nsN8s8ok4m+OfhHOon4xz8RScx36mMj+f+mm4AE9nXiH5DOYXkc/E
xdTPIi/Bs3EpnoNjeC7rlZHPIy8nn48rqF9AXokX4Sq8FFfj5bgGr2A/ca7X
SupX4dW4lnlryevI15HX4/XUN5BvxI14M8ezBW+lPsF628i307+D+ibqd5Lv
It/NvGbq91C/F+/DLXg/8w6QHyRvJT+ED+MjuA0fxcdY7zh5Oz6BT+JTzOvg
fJ6m/gw+iyOreP3HXXDXVbz+k3cn70HekzyJvBd571Xh8fUhT6a/L/X9yPvT
n0I+gDyVeQOpT8OD8GDmDSFPx0PxMDwcZ7C/EeQj8Sj2EyUfjcfgsfRnko/D
4/EE+rPIJ+JsPAnn4Mk4l/WmkOfhqTgfT8MFeDrXo5B8Bi7CM3Ex+5+FS1hv
Nv2leA6O4bm4DM/D5Xg++6vAC6ivxItwFV7KvGq8nPoavIL6OPlKzucq8tX0
15KvxXXUryOvx+txA96IG/FmvAVvxQm8jf1u53zsoL4J78S78G7cjPew/l7W
30d9C96PD+CDzG8lP4QP4yO4jXlH8TF8nP52fAKfxKeY10F+Gp/BZ3HkVV7/
cRfc9VVe/8m7k/cg74mTqO9F3hv3oT4Z96W+H3l/8pRXw8fXAPJU+geSp5EP
Ih+Mh+B0PBQPw8NxBh6BR+JROIpH4zF4LM7E4/B4PAFn4Ymcz2zySTiH+sk4
l/op5HnkU3H+q+Hvx5lGXoCnM7+QfAYuwjPpLyafhUvwbPpLyeeQx8jn4jLq
55GX4/nUV5AvIK/Ei3AV/UtxNfXLyWvIV5DH8Uq8Cq/Gtcxfi+vwOlyP1zO/
AW+kvhFvxlvwVuYlyLeRbyffgZu4P3bSv4v63eTN5HvwXryP/hby/eQHyA/i
VnwIH8ZHcBs+io/h47gdn8An8SncgU/jM/gs1yuyOszPWR2+HnYh74q7rQ7n
dcc9cE+chHsxvzd5H5yM++J+uD9OWR3+vpUB5Kl4IE6jfxAevDr8/bZDyNPJ
h64Of5/6MPLhOIP6EXjk6vD3jY/CUTwaj1kd/j7osavD3xeVuTr8/ZrjqB+/
Ovz9ahNw1urw93tNJM9eHf4+oUnU55BPXh3+PtVc8ik4D0/F+Xga6xfg6bgQ
z+D4ishnkhfjWbgEz8alXK85OIbn4jKu5zyudzn5fFyBF+BKvAhXsd5SXM3j
fTmP3xryFdw/cbyS+3MVXo1reT5Yi+t4PltHXk++HjfgjbhxNV//k2/BW3EC
b8Pb8Q7chHdyfLvwbvbbTP8evBfvwy14P+sdID9I3ooPUX8YH6G+DR/Fx+g/
jts5HyfITzLvFO6g/jT5GXwWR14LH8/nvBbO6/JaWN8Vd8Pd6e9B3hMn4V64
N/vrQ56M++J+uD/7SyEfgFPxQPrT2N8g6gfjITgdD2XeMDwcZ9A/gnwkHkV9
lHw0+RjysTgTj8Pj8QSchSe+Fj4fZ5NPwjl4Ms7FU3Aenorz8TT2V0A+HRdS
P4O8iHwmeTH5LPIS8tm4FM+hP4bnUl+G5+Hy18LX1/nkFXgB9ZXki3AVXkp/
NV6Oa+hfQR7HK/Eq+leT1+K1uO618P3IOvJ68vXkDeQbyRvJN+MteCv9CfJt
r4Xvr7aT7yBvIt+Jd1G/GzfjPfTvxftwC97PvAP4IG7Fh/BhfAS34aOvhe9f
j5EfJ29n/ydeC99/n6T+FO7Ap+k/Q34WR2pDn4O71IbzuuJuteHXG93Je5D3
xEm4F+7NvD614ddLydT3xf1wf+alkA9gfioeSH0a+SA8GA+pDb+eTCcfiofh
4fRn4BHUjyQfhaN4dG349fMYPBZn4nHMG08+oTb8+1ZZ5BPJs/EknIMn41w8
pTb8/fl55FNxPvXTcAGejgtrw7+/O4O8CM+kvhjPwiV4Ni7Fc2rDv68Sw3Nx
GZ6Hy/F8XIEX4Eq8CFfhpbX8fTm8HNfgFTiOV9aGv/9yFfnq2vD3l9bitfTX
4XXU1+P11DeQb6wNfx9nI96Mt+CtteHfG0ngbXg7/TvIm2qjPf/3BrLz9Z98
F/lu3Ez9HtbbS76P/ha8vzY67eP/On2A/CB5K/kh8sP4SG1060t9L3gvtdNt
+Cg+Rv9x8nZ8Ap+sjZ77u93/uuFPP+t8/ccd+DQ+g8/WRu/76N3Iy52OrAl9
zpqwvgvuirvR3528x5roO9dc/PTleZ3uSX0SeS/y3mui5338BrzTfahPJu9L
fz/y/vSnkA8gT8UDqU/Dg/Bg+oesiT708QXe3vn6j4fiYXg4zsAj8Mg10V/9
39V49YVOjyKPko/GY/BYnInH4fF4As7CE3H2mui3LuxW129ypyfhHDwZ5zJv
Cnnemuhj07cUL07u9FScT/008gLy6eSFa6Ifvdvs/u5PO1//yYvWRC/4+Auy
znwmeTGexbwS+meTl+I5OIbnrok+1eejG7jTZcyfh8vpn09egRcwv5J8Ea7C
S3E185avif7huo++4up0DfUrqI/jlXgVXs28WvK1uA6vY3/1eD31DXgj9Y14
M96CtzIvQb4Nb8c7cBPeiXfh3WuiHz0bvt+8rfP1n3wP+V7yfWui//fm/KN3
6J2v/9TvxwfwQdyKD+HD+Ajrt5EfxceoP47b8Qn6T+JT1Hfg09SfIT+LI2tD
n4O7rI1+8OGav++5ttNdcTfcnf4e5D3Jk3Av6nuT9yFPJu9L3m9t9ONv1/fo
dH/yFPoHkKeSDyRPw4OoH4yHUJ9OPpR8GB5OfQb5CDwSj6I/Sj6afAz5WJxJ
/Tjy8eQTyLPwRJzN9ZvEvBw8GefiKczPw1NxPv3TyAvwdFyIZ+Ai5s/ExRz/
LPpLyGfTX0r9HByjfy55GZ6Hy/F85lWQL2B/lXgR/VX0L8XV9C/HNXgFjjNv
JV7FflbTX0v9WvI6vI76evL15A14I26kfzP5FvKt5AnybXg73kF/E/lO8l3k
u3Ez9XvI9+J9uGUtr//kB/BB3IoPsZ/D+Aj1bax/lPwYPk59Oz5B/UnyU+Qd
+DQ+g88yL/J66HNwF9z19XBeN/LuuAf1PcmTyHuR9349fP/XBydT35e8H3l/
nEL9APJU8oE4jfpBeDD1Q3A6Hkr/MPLh5BnkI/BIPApH8Wg8Bo99Pfz6IROP
w+PxBJyFJ+JsPAnn4Mmvh1+f5ZJPwXnUTyXPJ5+GC6ifjgupn4GL8ExcjGe9
ztf/5LNxKZ6DY3gu88vI5+Fy6ueTV5AveD38fkYl+SJchZfiauYtxzV4Bf3x
18Pv36wkX0X/alyL1+I65q8jr8frqW8g38j+GqnfTP0W6rdSn8Db8Ha8Azfh
nXjX6+H333aTN5PvwXvxPtzCvP3kB14Pv995ELfiQ/Qfxkeob8NH8bHXw+8H
HydvJz+BT1J/CndQf/r18PvNZ/BZHKkL+8/BXXDXurC/G3l33IP6nuRJdeH3
63tR35u8D/3J1PfF/XB/5qWQDyBPrQt/njGQPA0Pon4wHoLT6R9KPgwPxxl1
4c+LRpCPJB9FHiUfjcfgsTizLvz51jjy8eQTcBaeyP6ymTeJ+hzyyXXhz/Ny
8ZS68OeJecybivOpn8a8Ajyd+kI8AxfVhT/vnMm8Yupn4RLqZ5OX4jk4huey
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
PM75e5l8Jf2vsP6qTfz8n+NZzfl7bVP4eYpa9r+G9dcy/3Vcx/7eIF9H/ib7
r6f+LfL17Odt9t+AN3C9Nm4KP1+zifmN+Ad4M/v7IfkW1v8R62+l/8ebws9L
JXg/8hPmbyP/Kceznfqfcb13bAo/3/UO/U2bws8//ZzrtZP8F8zfRf0vN4Wf
v9y9Kfx84a/YTzP9vybfw/n8DfV7eb7+7abw86z72M+7zG/h+H5Hvp/895vC
z0MeIH+Px8NBztcfuN9b2e8fOV+HON4/UX+Y+vfZ3xHW/4C8jeP9M+sd5fH3
F9Y/xry/0n+c6/M3+tu5H/5O/wn6/8H5O8nx/ZP6U6z3L46ng/5/s/5p5n3I
vDPU/4f9naX/v6wfaeTz/43hfs5pDB+/nybv0hiu/xnyro3h/fPZxnA/3ej/
HO7eGP77rc8zvwf1XyDvib/YGL7/TSL/EuejF/O/TH1v5n2FvA/zziVP5vx8
Ffdl/tfI+zHv67h/Y/jv/c5jXgrHdz79Azj/3yBPxd9kvYHk32K9NOZ/m+Mb
xLzvkA9m/neZP6Qx/PeeF7BeOv0XMn8o877Hfobhizi/w1n/YtbPYP4l1I/A
32e/I8kvZf4o9ncZ/VHyyxv59//UX8F6Y+i/kvqx5FeRZ5JfTT6O/VxD/Xh8
LedzAv3Xsf8sno+u5/pNpP8G1ssmv5F8EuvdxOMrh/xm9j+Z+bdwfnIbw9+3
cCvzp9B/G4+PPPLbmT8V39HI3/9j/TvZ/zTyu9hfAfPvpn/6/1/v/wER7K1H

      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.12830000000000003`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 6250.}, {0.133, 0.227}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.809985786017769*^9, 3.809985795099797*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"data2", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "4"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"500", ",", "600"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8099861016198883`*^9, 3.809986204180627*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdkzlIA1EQhh8pxEJERFDEQiWIeN+3ZnJfRpPNJtHGQoiVkNbyiaW1pYiV
vYWFhWyjgoWVjYWVlZWChZXglUXmWwjhyz//zD/vbXq2a041YIypfn9+vv+e
t9DF++fD3stNqP6D7Pw+PjdK8/D58euZzy3S/nj/UXy+rnObXJ10jj4Ffb0D
9V2i+3ejfy84CH8f/P2YPwAegn9Eti7TTYHB2zqPSa31wLs79evHoU8gzyT6
TYGnwTPIO4t+c9DnoS+g3yLql6Avw7+C+whBF+23Aj0MPYzzjeg8NgI9qufb
KPLG0D+GvHHdz8bhT8CfQP4k8iVxvyldb1M43zT0NPSM7mczyJ+FnkW+VfQH
mxzy57D/GvYHm3XoYJPX5ytgm9f1Xh77FbQuBewD9sDG0fuJA7+j53kO8he1
LmBbRH6wcfU8cXFers7nudKwfxQ93PXfnxLyl5C/hPnQTRn+MuaDvTL+XxXk
r+B9AXsV7L+B+wNbsAc2m/D/8xf7jPY4
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.16830000000000003`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 101.}, {0.169, 0.183}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8099862052341228`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"data2", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"{", 
        RowBox[{"4", ",", "2"}], "}"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"2000", ",", "2700"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.809986309055289*^9, 3.8099863654967794`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwV2nk0lV8XB3BUGoxJNCD5CVFkSCq6pkRRSBIlc1ISCUkyJUmUSqUyJSFK
ypBkq4iQJCShO8/3PghFxbvff2p91neffZ7BXo+zarVPiLO/mIiIyGv84/9/
e+qOx837QUC2zFtdBR5BUild1bDrGwGcKvjGXT5CGlyz68+1LwTQCKt1Tpjf
y48w6f9IwMNy0VUdBQTJXbngtEorAYNDudppmK+487HS7y0BkXdXlZag++Wn
iNJ6AiyGe9e2oG9fVV8/Wk1Af9HbEjraVdIxaNMzAj5OMNaK8QmSfMrZR+ce
E/CynVS6Ct0z5xH93UMCNq7t0jZDZ57vXr0oj4Ae6VuP3dHOf/55OmYTYHTu
xrootGzk2ntZNwgIjKo+fn/FCKlrzOXbYDoBCZMGes8xTz8Rp/DfJQIKxHoq
utC7uY/3Hk3E67/z2ECIlgz4evXpOQKUzsTH+BcSpDaKWOdEJAFTx2aM1woI
UuohXQnTMAKki8+8tEHbfjtgm3CcgNuhOqZ+6AX7LlxoDSBA78MSiEe/76p4
K+1NwPGnBpa56GT7wVkXD1zv6GprsHKEZN063+zuPgKsvlfoWKDnWhtGU/YQ
wIe+jl9Y/xY8azR3ElDC/OS4VEiQEramjgdbEzCbM9tjgDavqdJ/sY2AZI7/
AUf0jAHlxLQJAT455PNNDwlSwxPJMnNDApI29flcxjxG24STvJ6ArKD1ASW4
n2mRr8ZHTQJ8e1WD32M+vTrDd4kaARLnq3VbMK+7X5d3QAnfV8v2KFGCIEUt
Zw7lKhBgo6Y9o4I2ubl4JVOWgPwl25NM0ZOyZm7rJAigSM6//qSIIL1IC7wZ
No+AiNcq1yIxD19wo7t2Vgj/RQ4p3kQbJIHM7JQQlrV151Six2a59tvHhdC0
R2vfNqURUsVZhdTLQiFs2+ZdLsD85C+Lls9sIeR4TRtJjBAk3VPBc5fRhPBI
pa1eCy0U3rbwHBICEdVlbYMuC2qKLfwqhM47T7pSsN9xJvGK+1kId+bG74vH
XNtn5dSGDiHUTITeK8KcPWRjHPleCHtWq3yQKiZIxQfCTr1uxP2os9I66IDe
+xVzXglBkBJ65heu13D6ILCrEoKbk9VGKq6nd4xrX30qhMWXn6UZjBKkQlvV
wL4SIRjFPlBwRPs07XqoVCiEuCUdecFoNfNIqk+OEK7u0tG5jCa/KlhVclsI
vzXeVBWj8zZ1HiQyhbC36Ir5e7Tn86k7G68IYWPb1XYaWklvzdezF4XAO3mq
d08JQRosdZR/Gy+EyJsBewOVR0jZGjFOC2KEIKJIDTYdw3kteJS+O0IIY90w
dQC9TOVL+42TQvA17rkQie6/M7PgexD2s1gldxOdtVTbZrW/EFZP5uVUol2v
7Us8clgI9/ce0OlCy0vFN5YfwOt1t60VoLtTyv793CuEFskT2yV+4rzO7d+y
ZbcQHhxt69ZCO8bNiYqzFcJ3B58/10pxXv/qVr23FMKCffq7JFVGSJ2R7mOS
ZkIIS9GMicf69J8X9PZuEkLILc9FuWj7kGfH7+gLIdSl43Y9WpI3WPJDRwjS
jSc1B9BtAQtYazSEMDSwq/oXOpVqqH5cVQjx7ZmN/tjf1vOwd+UKIYSrFvUY
jBMk8YHUnN/yQrjm3Jt/5zHO677q79tk8HmP1sRkYn3SZ8qyCwuF0NPnGJCP
tnaQcm2fIwTlv9wlJbhe7IPJ9cUzAuCPWhe+R7+19uva/1sAZXd7jejouMYM
qZwxAUxO3WsWncB5NX21k84XgLfUXddV6Jka5kVtlgAS+z6xTNH1hnLNJykC
mNq39Yw7OuapmVjNdwHsSxtaFIXeonOU9K9XAH2Vqfmaq0ZI00U3Yqy6BCC8
tinNGF2r1vjyUpsAPsVKvunC+qgc3uSnJgFA1qW9QrTxCkUjBRBAWqAZU2IS
5/WmZejBlwLwWDm7KQzXv1h84knBcwGsNbWT3IF5+JU7PHa5ADRJ+bl+aIOF
zVp6xQIImNEzTECPJI34ny4QQL53HKMc11eIKD14dU8AY3VrPtejT8TsIIve
EsDVZ8z6drTu7zBl22sCqPdOT/yN6/mnctzTLwuAGfnqBgfzMuLDrZ4LAnCR
FC83/EWQgo5N9KyIw36i8pZOaG2Wqpx3NN4/S/lvxROCxPax3/MoXADdsTt2
d6KLhiPTBCcE4O/xKI+HDnB/8MHwqADMSrpUrFRHSOp9neLRvgIoYC200XhK
kOhO01aNhwTgXs5oEvtNkAo+rokXdxNA8GSYhyrax86pwd4Z39fdg92xuF61
OeZPpj3eb7/+JQ/MyebFJt9sBDAe5qt6Bp1T/+X0KgsBmPS012ShPU1mK/23
CqCp9mrGT9xP6YX2yOON+L4E5qzPmA/oua4f08Pn88jhPIHOfhwfZKItgNZX
T6/sqiBIbprlj2LVBeAbKVGhPYXz+qCf3qQigLfp9ba26D6VuWoSywWwJbSQ
4o/OytY77LREAD6r3kUnol0UPO7dkhJA751l8vlo+czkb0PzBSD961HGH+zf
LVWpoC4mgIvBMsxlz3BeLw3tDfrLh/5+b8oU1jvOW3itYpIPvqmZZxWnCZJ0
vFHn5AgfNkhML92I7vx7WMKMx4evHrcrnNFpUZdtExl8GI0J3nUSbT9efeHD
Dz7sHxc5UbJ6hLToJPWtzAAfKAb18Y8xb+NJibj28EHiSIN9C+YpRzab3evk
A3HXxrQPbUvzi6a28kH0xEeXuX9wXg9frdF6x4edsbyR1eimgVfjJ17zwcDX
/AoJneTK0q+q4YODcsfaQ2jLbrmQP8/40JiYzlNVGyGJ7d5WZlHGh5L2LJnP
lQSp8cNRzsUiPnxyrBWpxvq47Tc1OvP4cGn2WL0D1m970+grf5cPYfvylNc+
x3k15ee53+SD+59L949hXl+rOJyXwYf1MdXdvpjHGFmtZF3iwzx98tKdf3Fe
K064rU/ig/gZ8ZO3sf63TvbNU7F8iJte7P0IXfuouftlFB8ONIyMFmB9xH+j
MiKn+HDoofS1RrRxrpKDTTAfHI/6bhhGj6+wTU078v96Fw0arn+Rdaql25sP
p1KfhSz/R5DC5HLnLj/Ihy52qcwmtEF6m8VhV9xP4/tTF/TIwsnYh458ULG2
dAxDP7mwup63kw8kS/JIBvqEqMOU/nY+zG8+G0d5QZDWnYsyjiLx4SS10aAd
c/7vB6caNvPh2YU5PWx0afinirlGfDAu/HdncxXO68i0YKcu7nd6vaL6DEHS
Oq6hc00L+7+Tf2mBZrOcAr+q4f0ExMZl/TdCKvI991BZmQ8F8V6nHqIDfhRT
fRX58HeRfF421qt79KwqXcyHto7IA+8wp/bNHhyR4INhXRejF/MCZ51sY3E+
iASLXvqJ9up0/Rojwge5BUfXLZ4lSKo7E+TfTfNAJG1+ly56uLncaeEED/ri
0ipjqnFeLb6l7yF48MWRoxiE+cHXcztucnjAylxXfxGttHnDwkEaD7Y0Fnk9
RA+88LBRG+aB37f9896hb2+4mBjYz4P2dUHDbuojJLeyysYn3Two+Oy5ZwZz
Ba3hf+MdPFhqv6IlAvO+Bwu3bm3hgX6j6kclkRHSjVUbo+Lf8KA/RyxPB+1y
16uq5RUPNk7Mhm1ByymmjUlV8yBQtuVOJa7vzqzRc6nggcUih+VumF+Vph3P
LuXB/We80ukanNdU6VJyIQ+qRRc0nsZcWnwLSyOXB722g6EbawlSR7y/evAd
7Hcn3fcf9kv7d9X7+XUePEoQbinA+p1n6nOmrvDgeH6L9DP0ognWd1IKD4J/
OltrrxkhtZ5csjw5gQdhuzuqOzFP4W9z7Yjhwc6hX6lDaJvAoOtykTwI75LV
2I/14vSbXW6hPNAIzjf8g3nT4TdSucd4YOURInca86Tv/J0Mfx5c4dcOLhMd
IVnuX5ai44Xvgxn8TBMt8sWqOdSdB5RD25KN0Y27Q8RqXXgw11nbYzs6ti2b
NLObBxff6W9wQW+zeR9jbceD2kqXeb7ov29GX6Za8YC66vpAKLreTPlXlxkP
nCUET+PQ0S9tjRRNeLDvtM+FDPSWjeGhhwx4cOGE2YxvHUH6XZH75ME6Hnhs
M36yXGOEVL2uncfR4EFr+RHxeqyPKJ7U2rCaB4uX7hpsQxupqwVErMTn99eu
8ht6PNfhQf1SHqj5+aWw0ZUrz5DFZHmQaJ/t+QsddqtQ2W4RDwaqeEbiYiOk
DUu63DPm8qCq2PJ0Au43kv7nVu8MF+5LUij/Yf5kkWbvyiku5E8n1RqgTyQ7
y/n85EJnkHWGBXqdWOyeYgEXQg6tCnBEc8+VpAlZXPjcvdTsMLp0queDEZUL
Fu2a8ifQgadF5p8d5ILkjn28GLTWqI71mz4uxNjkvL2MZh7fHz//MxfIH8Sy
s9FF7IQGh3YuJH5OCC1B+/k9+XO9mQuVh1TsatHq5G8mA8CFVyd6VVvQVI95
Eap1XDhYf+rpx3r8ffbrhucBL7iQoprVRcfca+/BkbInXGC+yS3+iVb5dHH9
z2Iu7OE0xYnNGSEN73wetPkBXu/ecW+r13j+fD/86Px9Lpxq99ZXxfyg5SJG
8y0utCZ/W6iHXtGwUU0ykwvuH45TzdADm70PO6dxIeL6ylf26NtVafduJ3Ph
2vHv9HZNnFf92m/DcXi/0H48CHOFcprCmrNcEFX7uP0MukdLxuXYadxfiquS
gr5RuOXasxAupMar/c5CO6sGdP46yoW15yM+P0TL3bsmsc2PC4HizNIX6C7F
17ZJnly4pRia9A599Tr7QpsbF0SeK3p2o3fLyL+T3csFH7PM4B8N+H29TBLZ
78CFmks1i0cw7xA/ZnZ/BxfCTrtVnNQaIaUmZEXTLLgwktbcLDUX53XmTc1a
Uy7M/JjIVUIviBaMhxhzYQlYROugWyeWGVRv4MJZ7RKXLejkUOuQv9r4/tTW
6dmhbQQhZZZruBD1qG2hG3ru0buclFVcKHqZRA9AN9Hfa3xajs/zgDucRid4
jfkulecCNXlXdhLaclA530OaCxct3U5fR4u42Q3nL+BCdlqcYwG64Uv4SrYY
F/z9m3SeoWP35Lnp/uOA8cf/5jeiTdvbb4b/4oBbUw61E/3X5ld33SgHlu/a
2DCErnurJivK54BQNOis11qc1227HXYwOVC6oOr0H8xN6s6kXiFzQN48x2nR
PPy+bnzY8mWAA7sXPFi/HF39rGvuil4OFHu/W6iFjlj/18LrEweO288yjNFG
JZrniz5wYHULTafgDZ4/1ffW899xQG9q9vgH3K8yL3bKoIEDV6vzFYYwP6lU
anymFvd/LOYWhus33O49BZUcmBPWahSPFi4RfTavnAMJzppH5mnjvGasE+56
xIGS2iJhDubHJdx0MvM5kLEZ2svR6/7/+bjLgeu7fxbXo7liTx+qZHFA9Ldl
cju6OHaA6neVAxrGT3wH0IHT81Qfp3JghWqqBfMtnj8j9A+NJnGgNfSrym/M
maMHszed58CPkJt/xcVHSIXBKV/PneEAZU7IwFK0H+e5fNMpDizT9atVR6v5
/3BadIIDPcLwLEM0lbwowzGQA142+eGW6LyDxh1ZPhxgKTldfvEOv6/93guH
DnJA+ZW9vhfmKi5XbP7bzwFOf7tMCHrwU23iUScO1KQHCM+h7+2iNz7dxYFH
dgtCtZvw/NkiMzOxnQNhPTPcHegVVlu3mppzYLPVYGop1vc3BEQlbOFA0gsx
P30dnNctmVWtRhyIlF5k14q5a/XrMWk9fJ7uO7W+ohUMOHr71nJgyrxoPhPd
Uy4ffPc/DlS+UWaNozPXmpdSlDmgPlTxfs58nNeHx1iayzhw5/rhIjm07Opb
6ifk8H4Za5NXo7vuvfV+IcmBpm6ZgA3o9GXCnGlxDsgdXGxDQu++sXzQXBR/
Xrgmz0ua8fwpu335xT9seGB1RPwQ5h2XT7p+nGBDQgCvjI556vx715eMsOFM
jk5LNOY7E1u6DnDZMLSp5tEl9ILZMak8OhuuLTSKlVs3QnofrbKLOcyGli2U
Avf3BCl50i5l3Tc2ZNTM2lVjvXXY6eawL2wo+DCl3YyeK8wTe/mRDbnRMpI9
6LdHO0izLWy4peCVdgj7JTB+xWx/i/3rrnSOYm7u/V/d5Xo2qOycfCqyAOd1
aPevz9VscNmnl5WK9Q1u0UbLnrGBYbfilArmMT0PQz0fs0Hxu/X9YsxNHT8/
KXzIhvSOMmNTzKfb//K4uWxYtI27LLeFINXt0Fqrn82GCz3l0wcwj3q3NyDy
BhvM2r8OBqJNSOcfvE5nQ0dWRfYvrJ+sKyXPucSGR7mx+cmYVxv3Ke9MZMP4
uT+JN9HhlaIeV8+xwXv2ekAh2kh3/e2+SDaYqtvaPUePlbj1KoWx4TNfcd1b
dMWaJDnf42w4cWCOzGf0yfyne0oC2OAVtGjsB1pX+Xsa4cWGn6vW9wrRwtvi
bRs92BARfaz2H7pM3mB+zD42GEY335VciPN69ZD12z1s0B4r0zf9gOdPyUvx
C3ay4WZQh4825tyLLxp2W7Ohx+OMzWZ08Rzynxvb2JD400LbFh14XmLzdxM2
CPQ1pPejNf4YR6w2ZIOPosaYP5oe4fP8yHo26BZa9IWjC8eujJRrsuF+f1Rd
ItrnxMv146vZ8O9Fe04mWo1LD9qihOsfwtftbXj+9JctjlNgQ1NA05EKzPMo
WxnvZdGmQfaA9jx0RE1Kgg28Vzr6nWiVb5mH987D66MvUBhCD7o03Lszy4KB
atE/PHR2F+fbjykWbDNUIE+j3e2XKmqMs0Dlonu8fDueP1vNXY4LWXBIJ7N0
2SKcV6vj1yrZLHjxaCpDE50Ftzp/U1mw61PMaWO069Z3EqQhFoQUrPTYjpav
Edpe+Ipe3Wfugu4xWJHc/pkFt+zLNHzRmU+2v1vcwQJD9RzJMLSzdqiI23sW
ZBY/HotDyxbdM8tpZMHst57+DHTn6tZoeh0L2mqXQw46/f7PGu0qFphuj35Y
jrZfvmri5FMWFJ2fvFyPlry506CmhAUugelh7eg22YiQfw+w/6zFgQF0alp+
mVUOC55uX2zOQdsu+Mi5dBvvt3pB2xk9nNek3xpdmSyo+iEmPV8C53X2Pz+F
KyzYarRmYik66eye/IMXWdBt4juojrb+FT1cEI/XJ6h/Z4gWO1W0knOWBf/q
1r6O+0iQ3go/u+lFsOBNX4RtDjou6N/N0ydZIP11+ssrtDlT68urIBYce2zi
E4LrZ7xdZMX8WdDap7QzFt0wdN7B9jALlOydtGQ34LweeJyafoAFbtYmK+5h
btrb19KzlwWaF0PEHqOnHcXmrdzNAqlzb7kv0bUd6y29bVmwX0P/Sys6yvbA
+UeWLMjzu+Lhgf2Mm5LqBaYssLvhXcjEfJJUMWW4iQVXDvx3ZQL94tV342h9
FgR+EYmYK4nzuml+eKMOC7TFpj2XoA2eGzwT18CfH6a0rRp6TNdTaK/Kguvn
Sfr66IrSSzrXV7CAdvXUishPeP7UqAr8Js8Cg56fc/ZgrltAfrhKhgWTGZGC
Q2i+siTNfyH2Iza2jeL1ld3ZpFo2hwV8ne7Gs5gHLfU9NPaPCbWSJaWpaO1r
6dkmv5mw+uHdG3fQbMm6r7FjTDg1URJbjC5OYcg385nw79+XwBp0wNzFzhIs
JkjB8r3v0RpxphlOFCakf775MqeLINH/HOm49Z0Jerw72kH6I6SCyOsLh3uZ
4OF2Te4n1vv8bLBR72JCwsz2f6JSIyTVEG5iUBsTKjwV2LJoMnfpm4omJhie
EfuyCp0TYDEz2cCEmGP+QVXYz5N6fKvZSyYY6zVWBX/G86fn7ajE50xw/lae
9AXzwW/vqj6UM+HmhtbzHrg+ex8xJlPMBJuf244Fod0+r9jgWsAE5bDPrmfQ
yxxsgu/dY4Jv+XnLFHRfa2gpNYsJQQ/tdG+hs6zvs7SuMeGcu96KIrRLY6t6
yGUmcDo2iFeh5U3HvasuMGHmr8PYO3R3zarcP+eZUE85KOJhgPNquGvQIpoJ
jre+t1Ewd3wasTwlnAnvlyk86OomSLI6Ba6dJ5hA0el/MIt5Z9HH6/JHmfBG
Pu6qtDSeP9Wmutx9mSAmwbItwn72OerS+Yfw/tf8F7QO80UrHHex9jPBz0Fl
/1Z0282zKeud8fk9dV+T8IUgpSx+1HzKngm6P47oH8Dc9kq3WJ0N3q9dtUog
WnzhDEnEAvcPV5WMRL9PWnvOZisTfnoXTV1AJ4nsq0vbyIS+6c+KCj0EyTom
7le3HhOkE+b1PsBc7Pdjo+XaTHhWNfy2Et146mvoYXUmrCr7UvEGHUf8/xc2
JvTs0BTzMMTz5zFdPm8ZE65RZa/8wHyGeWCtwRImbHq9vbgF+9f7XAiIkmJC
l+bro/8wjxmueNAwnwmvR0zdJGXw/Ok+SJ4rhu8ztt9mJXq6d77Krr8McOh6
6leF/WudDD2uTTLAh+2jvhnziI+et7+OMCCj2WmJLdrYLrVXmceAK4EHxfaj
x5uq5PwYDCj9nDDqj35hTtlT+oMBRqLN5HB0WL3klZFvDIj8pdaViDYwMWkz
7mFArmnuoIoRnj+f+84/18mAVz3+ZO0+glShl2H9rpUBhRdoORVYf+JxXfzC
dwzovVORDmhdTWbDntcMsI64E9uJ5hcs/nuzhgHbVuacGEKXqphtHnzGgMWX
Gjz56KDswAi1MgZc4/AOpOB+Wgo3ngcWMeB0ozNpkSzO6zUYeZLHAKZpxRvF
rwSpSIq3fiKbAcMqrqpamAdcUji29SbWnxNdvAmtPs+yOD6DAWm/a++cxHp6
XDCj5RIDiOzHYy6YF/y9rSadxIB+TkzvY8y9opoOu8Qy4CyjqScMc9Vx4l52
FAN+fWOJyW7E82fIygFyGAMuHnaouYp5Ds9GUTOYASp7XhXnog8eCXMJPsKA
WInt2U/QSrT71557M+CE6s8rh/oJ0oDnh84pDwZ85D0+14F59sC4hLkrAw7I
Xgr5jnZzVbVLdmQAVSzBm4te1r0ruWMnA5a1bJHqwfV9DpHv5LYzgHY2q3wU
feNDgcgBEgMSni0xUVyM87q90yx3MwNkfpzV1kDLvZmKZhgyYNXgrNJGdLfp
mlodXQaIlOTKWKOv1jpOhGoxYHa7h9hetKNRjEGtGgPGDlmGP/iG58+KRyEz
SgyQZG7dLmqM86rzpcxakQGNL41qhzFPezTDSV3MgM2Uw53puH7nf9qanyUY
0LW3PUkX6xfl7vNTFGfAmu2G2Wbo1hXx+YdEGPA6+GLxK6xPySobfjBNh768
r4ywAYJkI9e/kjtOB/vMrxnfMBdPn3NgA0EHTe+SRDa6aaFeVgSHDhFzbkX+
QiddcP9ST6PDxTN5x8Tl8Pwpmiw7Z5gOj941H16KFjv3zMGunw4aVHEXdXTj
78HUjG467O71tTVEx4YvaO3toMPJ+4OmluhtI4bzlFro0L8lVN8J/ffYYUuf
N3ToKV+t4YWuZ6WeL35Fh4nwj5O13wlStG91vbCKDo1L+2RiMd/ygzJlVEGH
XRIDc6+gf7tLbTpbSof8r1NTd9G1fSbhbwrpIHt2I1GKjnD2ezY/lw70iTT6
S7RxZ4bQ4Q4dgm1FBlrR43avdG5cp8PvsIxPX9GVzczAgSt0+HJ6SzMTHWYh
V6Sagvs5ib6aQG94bUYLSKBD+Tx6xdwlOK8mR1XLY+jQS/66enaQID15cePQ
zwg6JJ6e+KA0hN/XDY3Zm0Pp4LfV8Lo+1q8r4309f4wOm7b1rXDDnK+puPS9
Px3E7X+e34N56QNLZ0kvOjgonYvwRAeuOpHh7E6H3Ba14GC01t07Hbdd8Hp2
031j0EyF5oU/duPzDe0M5GO/oswRmzV2dGAK65yyMfeTVko6ZoX5wi7bErR6
6o43z8zoYDOT1OFggufPeadmfm2iw3HRyMW+wwSpID5n6zYDOpReqNbtw3qv
fx+iktbR4Uw3d9lZrFc9M1HVpkGHZ3HflccxHx5X/Sm7mg4Cu+uvv+H6eyft
N+xfSQep8RApOXmcV35k8P2ldMj54ztvNXpF4INSmgwd9Kin/umhB2idrLWL
6JAU+l+w4w+CdPvwtPrJuXS44MASOGDu9n2NT/UMDRjdO5kH0Qr7nXL//qZB
jEnb8DF0X3fMoOVPGtyO9f8ajb6xu3j5JQENkh8qdV1CO7d9cf3EosEtq4lo
MTJBkrOZvb6USoOiP0+0VNFdb7Q/ewzSYIcPp64a66+auUoX9NHgkozsi2b0
7pfxu9hdNFid61zeg5beWJ6i204Dr8XPimjojor+5vBmGmQG6OSNodPWzZ3z
CmgwL/fNHdGlOK/FeuaidTRY8OrUdVn0InWPczte0IBdZ3FlFbo1N7nuyhMa
jOXoXNRFJ6+s/PWlmAYRR/TjzdA2t4aMVjygQaP83rP26LlLFoZ53adB5fqt
nkkUgtSUbvS06BYNKCrckCDMExZ58fnXaGBNSgTA3DL58lrDNBo0w4hfCuYi
YjUBZ5JpkMi5f/gWuvEc9QHE0WBwKsC9CB07JUWZd5YGyqO79lWhTU9vVrE/
TYMbn+wdm9B/R/w8MkNokHHz6K4v6LrjV2/3H6XBIasCGyo6mv2qV8WPBvbf
Ji1G0SZ+LDl/TxoU7z9iJqKA8/pDzvGxGw3eNPw0kUFXe2y7MupMA7r0PSMV
dMTXo22bHPD52nptWI822ntzfuwOGiQcM19nih7vbLRussD3HWWqtQtduZMf
v8iUBiMhLuru6JPvFcHRmAb9TimqR9EbLK3+Zm3A/t3292tpBEn4+sTmIW18
X31Wyy9i/mRzdsR/a/D5BeprGWzF82dV8/Ojq2jgbjr0ajGdIK3THx15upwG
V19phOqhuWVKupNLaGDAXyj5DteXatkeM5WmwU1z0YXd6MDCU8UJC2jwO15e
nILWUs1ltIrR4HGF1ZwRNPNum5rMPypMdaSLzKILFScP7/tFBcOvE/+kFHFe
r6++f3eUCqmam47P4n5qMg4DFB4V7lcrTulgTk2NUtRiUuFYWvfkFnSeeKHL
CTIVPJxKxu3QXgmfrr0YoMK6/ht2EQyCpDIz3TndQ4WhktKRI5gPn9GQtPhE
hfUjGS+fYX5vwsnu4gcq3Hi7UnABc/fQc8kf31HBTavVwtAU51VQ/G5JAxVG
7//lPMC8P7BHxL2WCvU1Kve0mDiv9FmzvEoqyFLt99mgXb10zjLLqGB7ZhWz
C+sVBl1r1z2iwhL/Pa3xmPfsT5gIy6cC0axIF2J+40u5wcu7VDA/r2f6GnPn
Pd9CZm9SoWXoPFVyGX5f2+eWb79KhZK+IcpKdJfNBu7lVCpYvNtP0Uanv/XQ
7E6iwvADAXkzeve2i37LzlNhcF8JxYlFkCTrKvM9z1DhsGUweT/mHRuHhwtP
UcFG85rbFcxTny1U4gVTIWWDm/xj9M71Gw/oB1Kh8KFrVyt6QYlXVqQPFeb/
e0W+jutb1dO+vD5IhU+9U7Zz2QQpOa9Gdu5+KizNzJmnhrZWojnsdKLC7Twl
aiPWz70tffnqLirormijfkK/XbKltW87FTQuX6cNoxMy/Ocpm1Oh42cUXYA2
l7hm6bsF3/+bpbXV2E/kYv35EiO8/vJbTInleP4UY9cTulRgznSxVqBjY5dM
b1xLBVc7Dc5atOn0tk0x/1HhT9otrgn67+mg8LfKuF+bOn8Hum705rMFy6ig
JtopcEVHBb8R7pajwjaD64Q/2oTD17kpSYW2Q+Gj4ehJv2VHv4tTQS4p9Gci
uppsVbRalAoBD1MnMtHhB0NoR/5QwDfZU/CPQ5CM+rNVn0xQIHBAdroC87G9
7w+NExR4Ljz3F9CVn0azt3ApYDUrPtuJPrlLuT+OTgF/yTLRYbRui+3SlmEK
HFEInitACy3DnaW+UeCO8s75f9FlDbkZe79QwE7NapHECpzXLe0ddz5SoEnd
TWoFWrt6ciG5hQIH1lySXYvm6qvt0HhLAVf1viUm6OJyh6Tj9RSQUCMp7kAH
rj3zprKaAhrM11XT2/D8+bBw5ncFBbpW+Kv4Y85U7dpKekyBWAU1tXB04b0/
URceUiCvQcyunkeQfJZpVrfnUuCX1MjaTMzVbjj/XJxNgcOLRHXz0WSZ2A1u
NyhQMF/XoAKdd7kkOCedAtLikcaA9pzfW0pPocDYvMEtnWiVRBG2diIF7s0/
RBpCD87orAk9RwF3iWkrPvpe9H6fmkgKRC9+bvsH7T6ZkPsvlAIRgWL6rXyC
tCLsyaDVcQooaZxxXr4S51XwbXlqAAWu37WtnyMgSFlH5+3v8qLAxI6nBzdh
7srYcEPBgwLZnuPeNmh574OfD+6jQOSZfUf2oXsGL0o/2IPPzzekNxrXZ7o9
38Wxo8AagdW922jnnuEUPWt8v6KOvtVoWcdF709vw/vNv67dg+5q3zin3oQC
KR+lx0bR6Tu8zcUMKSCa/OaljJAg2b9LO2e7ngJl7Y/j16MlSbV16ZoUWCW1
J+sj7t9WR/vVsxrfr0fZvUF0qrHMxpVKFBgarRlIxnrbyi1h3gr4vsPiHhSi
F+gGPH0kS4H88OMVC5Xw/FlyjS9YRAGDylt735jj93XN67VG8yjg5fZfgybm
1vnsgOhZMtxR6mxdSRCkucryhY1TZNgeXpa5Gf32NokiPk4Go8NvD+5Hx8kf
U3EQkkF0WEbzNNr8apbHdTYZjujvp4ZhvxmJt7e/Uckwn8LmxKMbLgp6Vw2R
4fnX7Rc7sT5mzvIlAV/JkO7lNZWLuel5a8eyz2SQ07cRfYqeng65MtZOBi0p
24UN6LqIu20m78mgOuG/+CM6auz9/PONZLjFto/3HSFIxifGrJvryHC5Kt3h
//+/bpKjnCBRRQb/X0e0p7H+hb8dOD0lw8TiSYOFyjivlPC/t0rIMLI5b+sy
tMGhvM3DD8hQGBJgrYke62+PUM8hg+dzWwdjdIXLr+dBt8kQvLlkpdEoQTrZ
pTZakUmGJtuTHCe0rv1u3V9pZOjovRXoi/XCljPHzC6SocaFGxqGLrN6WJwY
T4YNNLez8egg6GJ8OEuGS/G0pKto7a1/1WQjyPCIeXOUif3Y1ZperifJMJlo
3eVuifNqsPf+vSAy9P/3K0NtjCAFPPn/P9CQ4cvGs4fN0RrapYprD5OBzDXW
80TTH/a6hBwgg2TWyUYu9i9cLZpZtZcM8mXQNoX2ub/u0x8HvJ8e7d4FKvj7
7HI3SUtbMnDWOp/sxfXkG4l2KZZk2HtoH1cD8xzZp8mdpmQ41yA/sRHtmTbw
Tn4TGYwNR2at0f8D8jXCSQ==
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.4990792291220554, 0.987243864927664},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.9959743040685216, -0.5067237687366164}, {0.9886227231594843,
    1.01619988779589}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.809986316368767*^9, 3.8099863658336124`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"Take", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"data2", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"{", 
          RowBox[{"4", ",", "2"}], "}"}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"2000", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "data2", "]"}], ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8099857555259886`*^9, 3.809985766000224*^9}, {
   3.809985970563203*^9, 3.8099859893366723`*^9}, 3.8099864218447742`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 28, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 28, 1}}, Typeset`size$$ = {
    396., {128., 133.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i$469462$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$469462$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        Take[
         Transpose[
          Part[
           $CellContext`f[
            Part[$CellContext`data2, $CellContext`i$$]], {4, 2}]], {
         2000, -1}]], "Specifications" :> {{$CellContext`i$$, 1, 28, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{451., {178., 185.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8099860289687085`*^9, {3.8099862258152623`*^9, 3.8099862814490366`*^9}, {
   3.80998635231608*^9, 3.809986382315506*^9}, 3.809986422659381*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"data2", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"{", 
        RowBox[{"4", ",", "2"}], "}"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"2500", ",", 
      RowBox[{"-", "500"}]}], "}"}]}], "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.8099865315637217`*^9, 3.809986535465851*^9}}],

Cell[BoxData["1450"], "Output",
 CellChangeTimes->{3.8099865360405755`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{"i", ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", "1", ",", "1450"}], "}"}]}], "]"}], "//", 
  "Length"}]], "Input",
 CellChangeTimes->{{3.809986541533209*^9, 3.809986547612116*^9}}],

Cell[BoxData["1450"], "Output",
 CellChangeTimes->{{3.809986542888777*^9, 3.809986547922966*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"data2", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"4", ",", "2"}], "}"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"2500", ",", 
         RowBox[{"-", "500"}]}], "}"}]}], "]"}], "//", "Transpose"}], ")"}], 
   "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.8099865957327194`*^9, 3.8099865996771464`*^9}}],

Cell[BoxData["1450"], "Output",
 CellChangeTimes->{3.8099866001459208`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", "1", ",", "1450"}], "}"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"data2", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"{", 
            RowBox[{"4", ",", "2"}], "}"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"2500", ",", 
          RowBox[{"-", "500"}]}], "}"}]}], "]"}], "//", "Transpose"}]}], 
    "}"}], ",", "1"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"data2", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"2500", ",", 
       RowBox[{"-", "500"}]}], "}"}]}], "]"}], "]"}], "//", 
  "Length"}]], "Input",
 CellChangeTimes->{{3.809986833350206*^9, 3.8099868343807087`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"data2", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"2500", ",", 
       RowBox[{"-", "500"}]}], "}"}]}], "]"}], "]"}], "]"}]], "Input"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.8099868559924655`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.809986732438572*^9, 3.80998674095758*^9}, {
  3.809986837132571*^9, 3.8099868642296467`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"-", "0.3289418231791106`"}], ",", 
             "1.0058523990925927`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"-", "0.32819422812643073`"}], ",", 
             "0.9969279249219879`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"-", "0.3274466330737509`"}], ",", 
             "0.9969443615075092`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"-", "0.32669903802107125`"}], ",", 
             "1.005902151089153`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"-", "0.3259514429683914`"}], ",", 
             "1.0059187361817399`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"-", "0.32520384791571155`"}], ",", 
             "0.9969936745161606`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"-", "0.3244562528630317`"}], ",", 
             "0.9970101132698295`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"-", "0.3237086578103521`"}], ",", 
             "0.9970265525656022`"}], "}"}], ",", 
           TemplateBox[{"1654"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{
            "2", ",", "0.913561154374714`", ",", "0.9974189162130874`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "2", ",", "0.914308749427394`", ",", "0.9882428670137364`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "2", ",", "0.9150563444800737`", ",", "0.9974527321925225`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "2", ",", "0.9158039395327533`", ",", "0.988276372461081`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "2", ",", "0.9165515345854334`", ",", "0.9882931260367458`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "2", ",", "0.917299129638113`", ",", "0.9883098801804442`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "2", ",", "0.9180467246907931`", ",", "0.9883266348922051`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "2", ",", "0.9187943197434727`", ",", "0.9883433901720571`"}], 
            "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{72., {3., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{59., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1228, 21794823315931099768, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{68., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1228, 21794823315931099768, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{51., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1228, 21794823315931099768, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{90., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[1228]]], "Output",
 CellChangeTimes->{{3.809986738436695*^9, 3.8099867416362557`*^9}, {
  3.8099868384449415`*^9, 3.809986862256591*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dataContour", "=", "\[IndentingNewLine]", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"i", ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "1", ",", 
             RowBox[{"Length", "[", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"Take", "[", 
                 RowBox[{
                  RowBox[{"Transpose", "[", 
                   RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"data2", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "2"}], "}"}], "]"}], "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"2500", ",", 
                    RowBox[{"-", "500"}]}], "}"}]}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Take", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{
               RowBox[{"f", "[", 
                RowBox[{"data2", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"{", 
                 RowBox[{"4", ",", "2"}], "}"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"2500", ",", 
               RowBox[{"-", "500"}]}], "}"}]}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Take", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{
               RowBox[{"f", "[", 
                RowBox[{"data2", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"{", 
                 RowBox[{"4", ",", "2"}], "}"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"2500", ",", 
               RowBox[{"-", "500"}]}], "}"}]}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}], ",", "1"}], 
   "]"}]}], "\[IndentingNewLine]", ";"}], "Input",
 CellChangeTimes->{{3.809986456438944*^9, 3.8099865748315096`*^9}, {
  3.809986609390005*^9, 3.8099867069384127`*^9}, {3.8099868666766186`*^9, 
  3.8099868709816065`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "0.49689583333333265`"}], ",", 
             "1.0101403106621658`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "0.49618749999999934`"}], ",", 
             "1.010154551729925`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "0.4954791666666658`"}], ",", 
             "1.0101687931992345`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "0.4947708333333325`"}], ",", 
             "1.0011230975358496`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "0.4940624999999992`"}], ",", 
             "1.0101972773425707`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "0.49335416666666587`"}], ",", 
             "1.0011513270119983`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "0.49264583333333256`"}], ",", 
             "1.0102257630923106`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "0.49193749999999925`"}], ",", 
             "1.0102400065696242`"}], "}"}], ",", 
           TemplateBox[{"41571"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{
            "28", ",", "0.5025301927194872`", ",", "0.9917056694275256`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "28", ",", "0.5032291220556755`", ",", "0.9917197950266733`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "28", ",", "0.5039280513918643`", ",", "0.9917339210282292`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "28", ",", "0.5046269807280526`", ",", "0.9917480474322109`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "28", ",", "0.5053259100642409`", ",", "1.0010744951235053`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "28", ",", "0.5060248394004292`", ",", "0.9917763014475203`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "28", ",", "0.506723768736618`", ",", "0.9824778428705357`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "28", ",", "0.5074226980728063`", ",", "0.9918045570727384`"}], 
            "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{72., {3., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{59., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{59., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1229, 21794823315931099768, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{68., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1229, 21794823315931099768, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{51., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1229, 21794823315931099768, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{90., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[1229]]], "Output",
 CellChangeTimes->{3.809986713782422*^9, 3.809986880941475*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataContour", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.8099869005140038`*^9, 3.8099869015615025`*^9}}],

Cell[BoxData["41587"], "Output",
 CellChangeTimes->{3.8099869020545626`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListContourPlot", "[", 
  RowBox[{"dataContour", ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "3"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8099868898490744`*^9, 3.8099869544288006`*^9}, {
  3.8099869908653097`*^9, 3.809987000450626*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.8099869060628805`*^9, 3.809986962254051*^9}, 
   3.8099870007924633`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ListContourPlot", "[", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"dataContour", ",", 
    RowBox[{"InterpolationOrder", "\[Rule]", "3"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.809987063160898*^9, 3.8099870661619368`*^9}}],

Cell[CellGroupData[{

Cell["test", "Chapter",
 CellChangeTimes->{{3.810079130847348*^9, 3.810079131319124*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev4DoppTestsc", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_", ",", 
    "w_"}], "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", 
      "\[CapitalDelta]2", ",", "d31", ",", "d41"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "0.5"}], ",", "0.5", ",", "0.004"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{"2", "Pi", 
       RowBox[{"(", 
        RowBox[{"w", "*", 
         RowBox[{"10", "^", "6"}]}], ")"}]}]}], "  ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"omegac2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "Pi", "*", 
       RowBox[{"0.0254", "/", 
        RowBox[{"(", 
         RowBox[{"2", "wcn"}], ")"}]}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Im", "[", 
          RowBox[{"sd42", "[", 
           RowBox[{
           "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", ",",
             "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", "c", 
            ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43", ",", 
            "d42"}], "]"}], "]"}], "+", 
         RowBox[{"Im", "[", 
          RowBox[{"sd32", "[", 
           RowBox[{
           "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", ",",
             "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", "c", 
            ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43", ",", 
            "d32"}], "]"}], "]"}]}], ")"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6820777509929857`*^9, 3.682078072258361*^9}, {
   3.6820781686988773`*^9, 3.6820781844017754`*^9}, {3.6820782371557927`*^9, 
   3.6820782387708855`*^9}, {3.6820783386755996`*^9, 
   3.6820783600278206`*^9}, {3.682078390802581*^9, 3.682078409651659*^9}, {
   3.6820785556990128`*^9, 3.6820785577631307`*^9}, {3.682078604887826*^9, 
   3.682078606954944*^9}, 3.682078646275193*^9, 3.6820786817442217`*^9, {
   3.6820787244836664`*^9, 3.6820787256587334`*^9}, {3.682078761002755*^9, 
   3.6820787873862643`*^9}, {3.682078849739831*^9, 3.682078868395898*^9}, {
   3.6820789209479036`*^9, 3.682079036674523*^9}, {3.6820797161803885`*^9, 
   3.6820797163083954`*^9}, {3.6820940847423997`*^9, 3.682094176264634*^9}, {
   3.682100534108282*^9, 3.682100724544174*^9}, {3.682100812826224*^9, 
   3.6821008239058576`*^9}, {3.682100946929894*^9, 3.6821009474969263`*^9}, {
   3.6821010023450637`*^9, 3.6821010049532127`*^9}, {3.682101044296463*^9, 
   3.6821010535839944`*^9}, {3.6821012584737134`*^9, 3.682101261144866*^9}, {
   3.682101316585037*^9, 3.6821013732572784`*^9}, {3.682101414754652*^9, 
   3.6821014312095933`*^9}, {3.6821027458817883`*^9, 
   3.6821029190776944`*^9}, {3.682102981621272*^9, 3.682103063142935*^9}, {
   3.682103152077021*^9, 3.6821031759093847`*^9}, {3.682103228078368*^9, 
   3.682103275783097*^9}, {3.6821033867274427`*^9, 3.6821035279885225`*^9}, {
   3.682103596235426*^9, 3.6821036073870635`*^9}, {3.6821036960071325`*^9, 
   3.6821037775187945`*^9}, {3.6821038740493155`*^9, 
   3.6821038957665577`*^9}, {3.6821039323166485`*^9, 3.68210399843143*^9}, {
   3.6821041484310093`*^9, 3.6821041622938023`*^9}, {3.68210423166377*^9, 
   3.68210423550299*^9}, {3.6821042817676363`*^9, 3.682104281975648*^9}, {
   3.6821044114720545`*^9, 3.6821044835001745`*^9}, {3.6821045457187333`*^9, 
   3.6821045762404785`*^9}, {3.6821046797604*^9, 3.6821047083920374`*^9}, {
   3.682104777109968*^9, 3.682104849645117*^9}, {3.6821057340817037`*^9, 
   3.6821059374293346`*^9}, {3.6821060904780884`*^9, 
   3.6821060922611904`*^9}, {3.6821063118057475`*^9, 3.682106405406101*^9}, 
   3.682106470391818*^9, {3.682106886234603*^9, 3.6821069287290335`*^9}, {
   3.6821069697263784`*^9, 3.6821069703174124`*^9}, {3.6821070483648767`*^9, 
   3.6821070518040733`*^9}, {3.682107090122265*^9, 3.682107090965313*^9}, {
   3.6821071649115424`*^9, 3.6821073019513807`*^9}, {3.68210735596247*^9, 
   3.6821073587036266`*^9}, 3.6821621740358844`*^9, 3.6821627337889004`*^9, {
   3.6821628756690154`*^9, 3.682162909995979*^9}, {3.682163006508499*^9, 
   3.6821630839339275`*^9}, {3.682164960571265*^9, 3.6821650124032297`*^9}, {
   3.6821651296039333`*^9, 3.6821651308580046`*^9}, {3.682165214019761*^9, 
   3.682165249474789*^9}, {3.6821653768800764`*^9, 3.6821654049336815`*^9}, {
   3.6821654393766513`*^9, 3.68216545387048*^9}, 3.6821655581664457`*^9, {
   3.682165620292999*^9, 3.6821656220580997`*^9}, {3.6821656556360207`*^9, 
   3.6821656577791433`*^9}, {3.682165701413639*^9, 3.682165727750145*^9}, {
   3.6821665708493676`*^9, 3.682166634060983*^9}, {3.6821666960175266`*^9, 
   3.6821667514896994`*^9}, 3.682166802514618*^9, {3.6821669432116656`*^9, 
   3.682167060590379*^9}, {3.6821671413930006`*^9, 3.682167202085472*^9}, {
   3.6821673969946203`*^9, 3.6821673999857917`*^9}, {3.6821674579621077`*^9, 
   3.682167471208865*^9}, {3.682167501232582*^9, 3.682167549741357*^9}, {
   3.682167594844937*^9, 3.6821675971000657`*^9}, {3.6821676294889183`*^9, 
   3.6821676371443563`*^9}, {3.6821676871182146`*^9, 
   3.6821676926285295`*^9}, {3.6821678111603093`*^9, 3.682167849935527*^9}, {
   3.682167892151942*^9, 3.6821679025275354`*^9}, {3.6821680476398354`*^9, 
   3.682168050832018*^9}, {3.6821681112514734`*^9, 3.6821681135776067`*^9}, {
   3.6821681662336187`*^9, 3.6821681808154526`*^9}, {3.6821682156534452`*^9, 
   3.682168310363862*^9}, {3.682178802064953*^9, 3.6821788574731226`*^9}, {
   3.6821797845176063`*^9, 3.6821798678863745`*^9}, {3.682179924646621*^9, 
   3.682179933998156*^9}, 3.6821800382591195`*^9, {3.682180103785867*^9, 
   3.6821801191557465`*^9}, {3.6821803064124565`*^9, 3.682180320525264*^9}, {
   3.682180376454463*^9, 3.6821803814617496`*^9}, {3.6821832402242613`*^9, 
   3.682183284751808*^9}, {3.682183418403453*^9, 3.6821834209866004`*^9}, {
   3.682340380078147*^9, 3.682340410220871*^9}, {3.682340522181275*^9, 
   3.682340537612157*^9}, {3.6823406550578747`*^9, 3.682340655896923*^9}, {
   3.682340692157997*^9, 3.68234069326906*^9}, {3.682345730917197*^9, 
   3.682345731045205*^9}, {3.6823458690981007`*^9, 3.682345919492983*^9}, {
   3.682345967318719*^9, 3.6823459676457376`*^9}, {3.6823463858226557`*^9, 
   3.682346387093728*^9}, 3.6823468661441727`*^9, {3.6823507930227776`*^9, 
   3.6823507938398237`*^9}, {3.6823508346331573`*^9, 3.68235083747932*^9}, 
   3.682354138591133*^9, 3.6823566711479864`*^9, {3.682360931208648*^9, 
   3.682360932023695*^9}, {3.6823611770847116`*^9, 3.682361178779808*^9}, {
   3.682361844153866*^9, 3.682361845208926*^9}, {3.682362187881526*^9, 
   3.682362192368782*^9}, {3.6823622281698303`*^9, 3.6823622290728817`*^9}, {
   3.6824245168725133`*^9, 3.682424594002925*^9}, {3.6824260544974604`*^9, 
   3.682426058127668*^9}, {3.6824261036362705`*^9, 3.682426116397001*^9}, {
   3.682426190238224*^9, 3.682426191247282*^9}, {3.6824263261569986`*^9, 
   3.6824263271250534`*^9}, {3.682426566115723*^9, 3.682426577725387*^9}, {
   3.6824266458332825`*^9, 3.6824266595680685`*^9}, {3.682426696979208*^9, 
   3.6824267107099934`*^9}, {3.682427781573243*^9, 3.6824278113079443`*^9}, {
   3.6824355677005672`*^9, 3.682435631502217*^9}, {3.6824362666165433`*^9, 
   3.682436273352928*^9}, {3.6824396749253745`*^9, 3.6824396816717634`*^9}, {
   3.6824466180411763`*^9, 3.682446638837542*^9}, {3.6824477837793245`*^9, 
   3.682447784026745*^9}, {3.6824486976287394`*^9, 3.6824486988314676`*^9}, {
   3.682448741291876*^9, 3.682448758877056*^9}, {3.682528592516034*^9, 
   3.682528601669776*^9}, {3.6825290670606318`*^9, 3.6825290697308183`*^9}, {
   3.682529366905645*^9, 3.6825294632815933`*^9}, {3.6825295212782946`*^9, 
   3.6825295218262405`*^9}, {3.6825326611473746`*^9, 
   3.6825327653305593`*^9}, {3.68253282920498*^9, 3.6825328354504523`*^9}, {
   3.6825337172886257`*^9, 3.6825337966552057`*^9}, {3.682767727311578*^9, 
   3.6827677341416397`*^9}, {3.6827677784039173`*^9, 
   3.6827677817925434`*^9}, {3.6932553797640305`*^9, 
   3.6932554299337807`*^9}, {3.6932554605179*^9, 3.6932559069187527`*^9}, {
   3.6932561402287693`*^9, 3.6932561722799435`*^9}, {3.6933163942079906`*^9, 
   3.693316415693305*^9}, {3.693316580499305*^9, 3.6933166304990816`*^9}, {
   3.693316760505435*^9, 3.6933167713506746`*^9}, {3.693316885693319*^9, 
   3.693316923395423*^9}, {3.6933172128656282`*^9, 3.693317263746234*^9}, {
   3.693325258387647*^9, 3.693325258903158*^9}, {3.693325769156588*^9, 
   3.6933257999974604`*^9}, {3.693335215842825*^9, 3.6933352602877464`*^9}, {
   3.693335513566686*^9, 3.693335518882057*^9}, 3.6933383532074747`*^9, {
   3.69333844096763*^9, 3.6933384435674295`*^9}, {3.6933998013026257`*^9, 
   3.693399826867744*^9}, {3.693399878173236*^9, 3.6933998820731897`*^9}, {
   3.6933999851766276`*^9, 3.693400021978489*^9}, {3.6934001039998937`*^9, 
   3.693400106015895*^9}, {3.6934016718519135`*^9, 3.6934016749356365`*^9}, {
   3.693401768182933*^9, 3.6934017860664177`*^9}, {3.6934045049723034`*^9, 
   3.693404507408079*^9}, {3.6934045480219707`*^9, 3.693404569296521*^9}, {
   3.693404654068478*^9, 3.6934046767251215`*^9}, 3.6934047114649863`*^9, {
   3.693411486854925*^9, 3.6934115557606277`*^9}, {3.693411611637782*^9, 
   3.69341163689961*^9}, {3.6934117443930483`*^9, 3.6934117581565638`*^9}, {
   3.693412031427684*^9, 3.693412061254629*^9}, {3.6934121007632923`*^9, 
   3.6934121063459177`*^9}, {3.6934121673784485`*^9, 
   3.6934121732938156`*^9}, {3.6934126870207553`*^9, 3.693412687851843*^9}, {
   3.6934127270569134`*^9, 3.693412748633364*^9}, {3.693412788765423*^9, 
   3.6934127889652367`*^9}, {3.693413093699652*^9, 3.6934131049158497`*^9}, {
   3.693413158927167*^9, 3.693413165655781*^9}, {3.6934132892354*^9, 
   3.6934132907125025`*^9}, {3.693413694311676*^9, 3.6934138525544806`*^9}, {
   3.6934139623245473`*^9, 3.6934139741439466`*^9}, {3.6934151889872465`*^9, 
   3.6934151913460665`*^9}, {3.693421812342548*^9, 3.693421814260598*^9}, 
   3.693571210634773*^9, {3.6935730363523593`*^9, 3.693573037920248*^9}, {
   3.6935730980366774`*^9, 3.693573098636371*^9}, {3.6935733964485483`*^9, 
   3.693573406451894*^9}, {3.693573469980172*^9, 3.693573501220932*^9}, {
   3.6935735525801334`*^9, 3.6935736322071934`*^9}, {3.693574441972418*^9, 
   3.693574507219281*^9}, {3.693574541832406*^9, 3.6935745742488327`*^9}, {
   3.693575621329663*^9, 3.693575673978572*^9}, {3.69357673871231*^9, 
   3.6935767415254836`*^9}, {3.6935771676067867`*^9, 
   3.6935771693901434`*^9}, {3.6935774277045565`*^9, 3.693577443913048*^9}, {
   3.6935774788521423`*^9, 3.69357748131384*^9}, {3.6935801882381463`*^9, 
   3.693580202383541*^9}, {3.6935809873145914`*^9, 3.69358098944536*^9}, {
   3.6935872517340436`*^9, 3.6935872545426507`*^9}, {3.693587372831433*^9, 
   3.6935873796980495`*^9}, {3.693587562863904*^9, 3.693587616021948*^9}, {
   3.6935876893495855`*^9, 3.6935876903867693`*^9}, {3.6935878379546204`*^9, 
   3.6935878413010764`*^9}, {3.693588112787511*^9, 3.69358811449063*^9}, {
   3.6935881694755335`*^9, 3.693588171288027*^9}, {3.6935935389237742`*^9, 
   3.693593540345663*^9}, 3.6935935945632477`*^9, {3.6935936258290606`*^9, 
   3.693593626766575*^9}, {3.6935941806328535`*^9, 3.693594207086978*^9}, 
   3.6935946950674806`*^9, {3.6935947327149076`*^9, 3.693594734652423*^9}, {
   3.693594941365797*^9, 3.693594955856461*^9}, {3.6935949870952897`*^9, 
   3.693595006821137*^9}, {3.693595054598051*^9, 3.693595087587389*^9}, {
   3.693595156350831*^9, 3.693595162100931*^9}, {3.693595205375044*^9, 
   3.693595214270155*^9}, {3.6935955401391487`*^9, 3.69359554954937*^9}, {
   3.6935957894002223`*^9, 3.693595793535714*^9}, {3.6935975519334*^9, 
   3.6935975545739965`*^9}, 3.6935978494473696`*^9, 3.6935978853782554`*^9, {
   3.693600107714938*^9, 3.6936001086524925`*^9}, {3.6936001461743183`*^9, 
   3.6936001463930244`*^9}, {3.6936004005973363`*^9, 
   3.6936004140829015`*^9}, {3.693600548133373*^9, 3.69360056949905*^9}, 
   3.6936006120421934`*^9, {3.693600743312659*^9, 3.6936007668870306`*^9}, 
   3.6936593079963093`*^9, {3.6936600641823077`*^9, 3.6936600934684105`*^9}, {
   3.6936606802085075`*^9, 3.6936607260416718`*^9}, 3.693661925629023*^9, {
   3.6936700240275917`*^9, 3.6936700241431427`*^9}, {3.693670312478878*^9, 
   3.693670390281993*^9}, 3.693671577434743*^9, {3.693671658053399*^9, 
   3.69367166553496*^9}, {3.6936857949048443`*^9, 3.693685796574098*^9}, {
   3.6938634331019464`*^9, 3.6938634424293127`*^9}, {3.7021506788025312`*^9, 
   3.7021506844738555`*^9}, {3.7037037148134384`*^9, 
   3.7037037294210167`*^9}, {3.703703915278076*^9, 3.7037039469256473`*^9}, {
   3.703704848274563*^9, 3.7037048678076663`*^9}, {3.7037053637935624`*^9, 
   3.703705368753002*^9}, {3.703847775816551*^9, 3.703847820609113*^9}, {
   3.703849676834283*^9, 3.7038496905620685`*^9}, {3.7040282611457214`*^9, 
   3.7040282642328987`*^9}, {3.704028356338166*^9, 3.7040283566171827`*^9}, {
   3.704028398569582*^9, 3.704028399184617*^9}, {3.704471208248934*^9, 
   3.7044712099760327`*^9}, {3.704471241696847*^9, 3.7044712418798575`*^9}, {
   3.7044719290331607`*^9, 3.7044719302572308`*^9}, {3.7046591737739472`*^9, 
   3.7046591911339397`*^9}, {3.705148359139801*^9, 3.7051483678022966`*^9}, 
   3.7051484133559017`*^9, {3.73756766773046*^9, 3.7375676678554573`*^9}, {
   3.7391166690149665`*^9, 3.7391166877889643`*^9}, 3.7658282742121916`*^9, {
   3.765828806839615*^9, 3.765828816995103*^9}, {3.7658298628464932`*^9, 
   3.765829872598856*^9}, {3.765910665593157*^9, 3.7659107190994034`*^9}, {
   3.7659114241171794`*^9, 3.7659114256356053`*^9}, {3.7659119786146164`*^9, 
   3.765911980299055*^9}, {3.766236218976536*^9, 3.766236223414791*^9}, {
   3.7662444040162497`*^9, 3.766244404690921*^9}, {3.8100792427746487`*^9, 
   3.810079244814674*^9}, {3.810079279186184*^9, 3.810079301881812*^9}, {
   3.810079374502014*^9, 3.810079377249691*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Out", "[", "78", "]"}]], "Input",
 CellChangeTimes->{{3.810079581630106*^9, 3.8100795938032665`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
9Q3yS2BkMJxY2Ul+CTj+dZo1feSXIE1p33tRQ34pQnWnnl4xSn4pVi/1yCp6
TX4pVqn2/jlj2hDjl+KE38RCySyG1VJIlQfVtfMYLnx7vKnBlmmmDDdKYXvD
NXa9JcM9UljmTBal2jHMkmFODLfk5EqGzWT4MfN0V81ahiFDa0NJWbMn+WVY
vj7/8GV/8svwn91cnUou+WXYd9M/6UgM+WXo+a4hTiomvwyJv12IsFaRX47p
L407uzaTXw5JUodi23byy5FvWl+ov5v8cgz7/jE96wvyy3FzqfWq0cPkl8Op
53kbJ4/8coxz8/iHTpFfjkd7r+RdPkP+eIx8wVvcV07+eCz2zs4frCZ/PAYu
/N7QV0/+eKzsfuTU3Ez+eLyb2d+ac5X88XgnxdHS5yb54/Fm/8E5mnvkj0dU
0nBAag/5FThgeur7wQHyK/D+TMcxv0HyKzDmuW386AvyK/CtW2p22zj5FajO
jMr982/yK2DruKdvaNow41fAMl/Gu6/PcI8CgUkHRqrmMMxSwoKTvDPNiGEz
Jdxe5b8xN2EYSux9rIqsMmeYp8RYmdlX9ssYViuhKq3IPmrLcKESj+p6ef32
5FfiC9kU1qJV5Fdickwn2cmF/CpY6flcWudOfhVCdp8Zd/AivwqebT7LDDjk
V0EjPci7EUB+Fa646tVkhJJfhQy7cC/DCPKr0OZtYn04hvwqsM/czZgQkD8B
Ox93if0k5E/ANldb3ax48idAlpSYWZZA/gTkq9qn1ycPu/4Xj9UF4g==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw9lgdUk+cexllqUax41RYHkLIdyBDKUOBhyRCRvUcSSEjIQGytDAcIohfr
FUsVBwKKoBWRggquSsSiKFigCIKNCBepBZShXuoV0Pae+/3JOTk5vzx5zi/f
m/f75/2Cm+DHU1JQUJj4+/m/1/8/Rh32VVrMeu/9yoF5A29rC28ZuhF/Aj2X
ea/DHYjVkbs0zDjPinghlny+baLLhFgDuhD9rmdEvAy53dbbkljELBi5Nlu2
axDr4Ihw4tza+cR6cNoYGnRBldgAvbbr6wyViI3wXN6WcPH9S4ZX4JXJzR68
IV4Fy4Cgw8+GiFdjNb5V2/+c2BTmQa13nJ8SmyG1e7HV7A5ic0Tx23q6fyFe
gz6Vbpu6e8QWqMnMunZZRmyJi1vS26uvEX+JxnkvFO9XEVthpb5p5VAZsTVq
a9YEaJcQ2yD5mH5YbAGxLV48Omx6I494LZaMbnbWO0S8Dp8pK04VZhPbQX5y
pH51JrE9bie7z2jdQewA3th21t5txECGrSDVN5HhNIAXEZBkKqLcEbVPP27T
41HuiO16Z7qMoyl3Qlf65HuvUMqdYNW/0Xq3P+XO6DdJePlwI+XOcNP7dbOp
O+UuqBz8VvO8E+UuOGgQ67HWjnJXZB1p93huRbkrztjqflViTvl6yCeiNHYZ
U74eeS3f7E80otwNx8McNXfoUu6GpRPZmqe1KHdHepjubz2LKXeHDXeo2GYR
5R54crbv5wvqlHtgymNttq0a5Z4IQLRD3yzKPaGsM9vkrDLlG3CTH1Cc9XGI
yTdgyqi+P32CYQUvdCXGOBz7k3Iv9Gs0vGt6Q/lGnHM1DdMcpXwjyk/nlGW/
pNwbY4E/WCwaoNwbne1L7H7qp3wTdlanqmX8m/JNeHIwYZD/jHIfDOnUagnl
DMMHgsHEsX920ed90O45cP5+B8MyHxgWTOUaPaK+LzrZmuOlrdT3RXCrdKlr
M/V9URj91lv5IfV9URF6Wd77gPp+eOD3fH5vA/X90PJYw07xHvX9IF2SctGp
nvp+qAn5UFNyh/r+EL04X76ijvr+qByS97fKqO+Png/Hr52opb4/thqPZe67
Rf0A2CuHnj36E/UDoFhiktl0k/oBOBO4LkOPWBaAo196zj91g/qBmHOys8iJ
GIEoneo/r0qcFogD9k8qxq9TPxBv1x2xnj3dD4L4QMVjl+l+EIxUelecne4H
YXfKdbnZtD8IdRfyS/uJFYJRsWC+/53p7x8M+5RDska6vrRg+Cl3Pv84ff3B
aKrpaGHfpn4IQmbsvDIyvX4hcN6eOVD+M/VDELt782j+XeqH4OALq4xb9Hsp
hKJfv+/4wkbqh+LA+vodp+j3TgtFq0y1Ja6F+qFIGc4/F99G/TD4iH4tK6f9
hTCkD14ytnxC/TAkdpZGzeymfhhWG1hlGdJ+VghHSEGmb9Hv1A9HhSPHLmWI
+uEIrDQ2uk33jywc9VO/aWaOUz8Cido9KR2T1I9ATrfN9610/6ZFIMW80zRv
DsOyCMz7IAkKXEj3dyQ4fCUfL5oniMRITFhe53LqR6Jr7p7ODJpfskgkt9QX
607PvygYqyezFkZSPwovltvo/JhE/ShAWas4tJD6UZBVfOf3vIv60bj0sMPl
ri3zf4hoFHz4mFL5hOG0aNTNftxrEDXM9KMxlOJdv9eN+mzUabsdVk5grp/F
Bne9pTxvK60HG6dlullZOQyz2UjX9Fdz+YHWlw3V6+f0F9F+K2LDqeao5Crd
/zI2djq6/qpM86aHjXbTqd5j0/OLgxkJMV8PvyM/Bwd+y6n2V6H14EBmdqdU
ZR7DbA4ivpf7rZqe1xxU3r3/46AOw0Uc7DPYJw9eRevFwSodK88sS4Z7OAgw
b3XPtKfr56KmtUk9ktaDxUVuVmXmYh/yczFLJeSmLIT8XGyyZolCOOTnQt17
5qp+Ifm56C9RuhG/hfxcsI3bWS9TyM9F0dO2R6IM8sfgyqjH46H95I+Br539
Xcn35I/BhdQ/X73OJ38MlqmtDdpO54W0GNjylB7Ovkj+GKjXWIwUVJM/Bg+c
W0xsaskfg5ON7U+7ps8vsThTbrk8vYX8sdD0GDUwof2FWCxPzXnU10v+WIwM
aC0tHCR/LMwzSlvZdN4q+purImuNJskfizUKmSfHVZj92BOLL9oUFj+YS+c3
HhYUPGw7/RnDLB6U367hp2nTfuZhTPh7NJfOj2wepB/+6+5uRvubhzzZz6fN
aP8X8aB4puQPTWeGZTyoN1zNUfMiPw/LRlPUpgLIz8fc5Kj7w5Hk52P4hr9Z
L5/8fLjsWl/WlkB+Pp50HjpRn0R+PvaUiWKr08nPR3CtO78km/x8lHjZKnyX
S34+DKpcc1LzyR+H5DfVX3FKyB+HOVnSWc4XyR+HVc9WnNOuIX8cFur/UjVe
S/44lAcVZd5rIH8cisz+lXqolfxxaFrAG/enedATB6maWuCnfeQXIM3j+rva
IfILIJy10kXwlvwCxOo2n5g5RX4BrMSTvOMzmHmSJsDVhiVzdD9luEgALffm
/xR+RvNGgNnG+rnq2gz3CHBd8Yrf14YMKwhRdvt+6QMThllCzNfNVFlgzTCE
0Fed7PMCw2whhg3Ysm3u5BfCtGuBRq4P+YXg2DWKC0LIL0RTdonzMTb5hSiq
ctXPEJA/Hj4bBk6GbyZ/PFwbd9jpJJE/HrM+v5zXsYv88ajh/8MlaS/549Ge
pdI98yD547EzaVBl9xHyx8Nzq37EwEnyx2NDuO7+dSXkF2F4j8Au9QL5RTil
cVSn5BL5RbgkSxm+dp38Iky8UQ69dpv8ImyoCtQqbiC/CKyWug/fNJNfBNvW
5lsWHeQXwT3M3FAuJ78YRo7NKpI+8ouR71xj9GKA/GJcFusIPEfJL8Z3ZvH5
R8bJL0ait1Jx4yT5xdgk2Rw5oDTC+MW4V+hUOfIJwz1isKpV9nV/yrCCBOd3
WDRfWcgwS4K5YxZJW5cwDAkW85CkyWKYLcGan0IbyvUZTpMgvmodz2Alw0US
HLbeuGmvKfkleKuWld1iSX4JXifztZTWkl+Kq+HPFi0D+aXgJDrs0nIlvxTn
Z2qLVT3JL8VrxQ1jcm/yS5HErTA45k9+Kc7aOhrah5BfChfzP9SbIsgvhV1+
nIozh/wJuLrSTb+YR/4EvPa/ceylkPwJCIo6kK0tJX8CJh2VdddtGXH4C28p
/7g=
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.8510226539362241},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 251.}, {0.8573015132505974, 0.9828786995380657}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8100795942270627`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Lev4DoppTestsc", "[", 
      RowBox[{"T", ",", 
       RowBox[{"p", "/", "1000"}], ",", 
       RowBox[{"0.9", "/", "1000"}], ",", 
       RowBox[{"\[Gamma]", "*", 
        RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0", ",", "361"}], "]"}], 
     ",", 
     RowBox[{"Lev4DoppTestsc", "[", 
      RowBox[{"T", ",", 
       RowBox[{"p", "/", "1000"}], ",", 
       RowBox[{"0.9", "/", "1000"}], ",", 
       RowBox[{"\[Gamma]", "*", 
        RowBox[{"10", "^", "6"}]}], ",", 
       RowBox[{
        RowBox[{"-", "361"}], "*", 
        RowBox[{"10", "^", "6"}]}], ",", "0", ",", "361"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Lev4DoppTestsc87", "[", 
      RowBox[{"T", ",", 
       RowBox[{"p", "/", "1000"}], ",", 
       RowBox[{"0.9", "/", "1000"}], ",", 
       RowBox[{"\[Gamma]", "*", 
        RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0", ",", "816"}], "]"}], 
     ",", 
     RowBox[{"Lev4DoppTestsc87", "[", 
      RowBox[{"T", ",", 
       RowBox[{"p", "/", "1000"}], ",", 
       RowBox[{"0.9", "/", "1000"}], ",", 
       RowBox[{"\[Gamma]", "*", 
        RowBox[{"10", "^", "6"}]}], ",", 
       RowBox[{
        RowBox[{"-", "816"}], "*", 
        RowBox[{"10", "^", "6"}]}], ",", "0", ",", "816"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Lev4DoppTestsc87", "[", 
      RowBox[{
       RowBox[{"T", "+", "2"}], ",", 
       RowBox[{"0", "/", "1000"}], ",", 
       RowBox[{"0.9", "/", "1000"}], ",", 
       RowBox[{"\[Gamma]", "*", 
        RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0", ",", "816"}], "]"}], 
     ",", 
     RowBox[{"Lev4DoppTestsc", "[", 
      RowBox[{"T", ",", 
       RowBox[{"0", "/", "1000"}], ",", 
       RowBox[{"0.9", "/", "1000"}], ",", 
       RowBox[{"\[Gamma]", "*", 
        RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0", ",", "361"}], "]"}]}],
     "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.810079605303752*^9, 3.8100798064555464`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.8585928650751398},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 501.}, {0.865317744031067, 0.9998153231496136}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.810079613611764*^9, 3.810079642937911*^9}, {
  3.810079672971509*^9, 3.810079807017275*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw9mHlczNv/x8cervVm3yYqe4tECr1aaKcoEWra95qmmWpqynARN9J1ZV+y
ZVeuuldFxs2+FaFbujURutayh/j2e/zmlX88nt7evXrO53zOeZ/R8YueF9he
IBB8aCcQ/N/f//+n0dLULfBalxuvLDX/gDX1nQc4XSJrwcA8MTzrPLk3Fqvn
ZmgVkrVRDE+XlXnkgSitigjRziEPxYUj9gcLjpCFiLnofEl6gDwSV2e5p87e
Q9bFhrQVhwy3k/VRUtm31iiTPAZ9xGPqHTPI49BzxJ7QlDTyBHiGVQ+/uZps
gD9t9+ZMXkE2QrOkuuRMMtkYr/cm/1goJ0/CDQuH9v1lZBOc1zoR3CgmT4Z/
dublhgiyKSbV2Z76EUKeAu2vY/JNA8lTkfZfnleaL9kMlZnT9Np5k6dh5FjV
xi1eZHMIo54MmetJtkC5258mY9zJ0yFct95ulBt5Bn6Wvy3GHPJM9B8v/6p0
IlvConj/wnp7MjD1/cXx4bM1rAQUwvqSfrasW2Fn+L7QeivWrbBDquNTYcm6
Nc4teFH7egbr1ugyuFo4fjrrNjDe9JPrOnPWbXDpfPGmvtNYt0VWulOv4qms
2+Lx9L6V6VNYnwWtsaEdV5myPgs7TTN2Zk1mfTaunTlwsM6E9dnY0LJ5qD1Z
YAeJl86n8kms26FGrRq1iiywh/RwztrFbXV7DC9Qa3m21R0g29wij2+rO+BV
VODJs211R/zROFGs35bvCLPLeivy2vKd8LTonz1B/H2VTpiSkZk8nT4CZ7hE
y66a0lfpjDuDA/Xn8fMQuEBUbDjlNzPWXfBVnLbhbdvnNwd6/qNLZBasz0FM
QZHXYD4PwVyo+g6prJ3J+lwYFswqvATWXSFRpMTesNYwXPHCxDe2kc9f6Ypt
T7/oTLbTsMoVv25+rM50YL8bxp5Y1L2fM/vdoOzk8zGX60/phvcZFY0hXJ8q
N9RuPGIzvW39zkNdVK3xOK5vzENYpxufjbn+lfOwc9u4snlL2T8PthZzn6eJ
2D8f+jm20mp/9s/H+tIvmTbB7J+P1d5iiSqM/fNRZV07el4U+93hNOZ56acY
9rtjdtKNZbl835XuOP7XKvsk7gcqd3xr12+qZ9t+4YFt7fa52yxnvwfS3uZn
z1zFfg+sqo82tF/Lfg8cHlr0yns9+xfgTfrqf5f/xv4FOOPf8imH+5tyAVKS
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
91cr/w/BvUZm
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
qqO/+H/J+DiZ
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.9036612789622004},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 501.}, {0.9082413779208823, 0.9998433570945233}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.810079613611764*^9, 3.810079642937911*^9}, {
  3.810079672971509*^9, 3.8100798079858108`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
fzGG/t6yI1S3v4jhv+3ux2/cf0rEaFo+P+swzxd1YjSc9/os6aDlRjF+uTyw
vW837n+RGJNU0yGkh5YNIjFu4JUhKdwvTSIhklsuv8/zhEUkumwxmWL5C/fH
SEh26a84NkLLrpEw/lu8GNy/hT+vd7P8wxueH0SRSIkxmn3Cjvt3JAomHFy3
dqqWkyNR7pl7VsrzgjoStnqJtUoPLWdHYrq1wmjHQu7vkcjKW+l/g+eDkki0
jLaoaBtM/0j07Ngqcud5oDESE7cl25+Ko38UHl974mrK+d8gCi07E/fvWU3/
KHinPJ4ybBP9o9BBMnechn/fEQWjsrQEvz30j4Jxh5LR+ofoH4WCtAKX/GP0
j8KHflMerjxL/yjoD+3xxoXzTHIUsm4FrOmdT/8oeLb5kFd/h/5R0Fs2YF8e
5y9NFP710Ml2F+e5kp+/P+TZ4VjdvBmFpAOXv3i9pX8UPhf1t5/4if4SOAd8
PtDnB/0lcDrd27a53XutvwRxY7xG3O+qZQsJrvS6sCW7p5YhgevCjPQ1/bTs
KsGP6MYo7yFaFkqwMW6U04gRWhZJsLTguMOnsVpWSbDa7vzBnElaTpYg6WLG
QbG9ltUS/GrwcbnZdC1nS2DtFR9/103LGgmmJq+qDZ+v5RIJvPZWNun5arlO
gvAVlV2Sg7TcKEHFo0NSfZGWBdGIzxu/a0Wslg2i0f+0e1G9kv7RqBRcFU1Z
Rf9oXLZyblqfRP9oHPx8TXMrlf7RENSOmPkpjf7RMHid+S/D/fSPxvpHqSsG
ZNE/Gmk9V48yPkn/aNSmzN/WLpf+0ShYPGr6oyv0//l5R4fVZOTTPxr6AXef
eN2hfzQSVri2NJfRPxo5NZNuJVbTPxozqvs2ttbSPwaytDOmAS/oHwObwQbd
c9/SPwYmP7xDP3+kfwxerfr4dcA3+sdgzR376DGt9I+BtOPdw7+2b9D6x+B7
dS/vvl21LIpBk8NavzcGWlbF4Ia/Mjmzt5aTY3Cwex/N7P5aVsfAfta4kjpT
LWfHoOS294GF/9GyJgaNNqfMNCO1XBKDJy9KbbuP1XJdDDIHX69zmqjlxhgY
mda2DbTRsiAWK6tz08VTtGwQi8mT9U4snaplk1jsu6awcpihZYtYVKPIrour
lhGLGbNC7l7w0LJrLILbJ3/wmE//WNQGdrrwwIf+sdjhMMRmqh/9YzG1KGVT
egD9Y5H+cPa9x8H0j4WkRWHcJYL+sThs4bJpUBT9YxGWWeYxKJb+sQix67y5
s5z+sTjZbnPYYyX9Y7Hw+IHee1bQPw5OQ79ecF5F/zg0G6Wtf7yW/nFI3Ftz
cXES/eNww2rY8jvJ9I9DyfnmHr+k0j8Oqw9nZC3bTv84DLvuunLXLvrHof5l
VfW5dPrHoXLyvrdX1fSPQ6/SpO+5++kfh9cJNdPSD9E/DoXLuvSK+JP+ceh4
/dr+0UfpH4dI84vWj47TPw4F4r2mcSfpH4epnb+mtT1Dfykiiw0/ynPoL8WJ
5S9CnufSX4qc0vbuNhfpL0XhG+W7lZfpL8X3M4WrL+bR/+f1duUEP7tKfyk8
27rWfb9OfynWLCoZ2/4m/aUwfLb2aOst+kuR9aRi+5vb9JcivejvybeL6C/F
qYfj3u4opr8U533jXi24R38p7t3YqNIvpb8UVsbvWnLK6C9FaOixfW4V9Jdh
18mEy7X36S9Dlsfubb5V9JdhrficpOoB/WWYcfzTnikP6S+DX07NQnUN/WUY
5DnrQ9Mj+svgNEp6wOYx/WWQd604L6ulv+zn8+4efbyO/jJs+vQv4wdP6C9D
161PXjY/pb8MFwZcGdz9Of1lmB7zuXO//9Jfhp6XGx8NfEF/GfJXD39o/JL+
MtgcHmbXrZ7+cnwNVjh/IRvIoRGeGfPgFf3lqNjgN/7Ua/rL8XfvXkl/vKG/
HM+DZotnv6W/HI/Obzbu+Y7+ckj0Zl26RxbJoef3YmPie/rLIS44k2/ZQH85
goYKUv8iq+WwfigYqWqkvxwXEmqv9P9AfzkmGJ5VnCaX/Lz+vPWpjh/pL8f9
TB/LEnKjHL/VG6/1aqK/AlfL912pIhsoMG7DndY5n+ivgJNPUEwR2UKB5Dyb
GZM/01+BiZu7HTpKdlWgz4odx3p/ob8Cw7P3rVaQRQp0EL+d95isUsDTycHJ
ppn+Crg0SSO2kdUK9M4XfXtLzlbgYH0fPXylvwJ/vos8sYlcovg53+/+9yNy
nQKlsbf9f/lGfwXy6mdlhpAF8Xh/fq/eCbJBPIRWC1MbyCbxCPk8NXJUC/3j
Mbp8bm4QGfFA/7MJ+8iu8Th24FJdFVkYD4ePHZq6fqd/PCKCQ4ptyap4FK3U
WxVGTo7H7W/jxqaR1fF4Ijj84iY5Ox5HpQvONZI18dhquvdc3x/0j8eZvAEt
k8l18dg+sybZn9wYjws9bZNWkQVKbC/uJsgkGygx6qTi2y2yiRLGihFrX5At
lLAWmV9p9zf9leg7tfnQILKrEiN7prpNIguVCB0SWzSHLFLCLX+HaShZpcS1
jtHCleRkJbyX6afuJKuV2BD35dZxcrYSXZZM63idrFFimvykdyW5RAn5HmlZ
PblOidb0+MgWcqMSmWsmTu36D/0T8Kle49WPbJCAO433jw4nmyTgxpYHrr+R
LRJwdFP59GlkJCDYPz7Dg+yagG6W1ot9f/L/AGysjFk=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
OoiMVAwumHo8luyUipsegzVTvvP/AR4fYFw=
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.8587858025548532},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 501.}, {0.8655015015269093, 0.9998154809680332}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.810079613611764*^9, 3.810079642937911*^9}, {
  3.810079672971509*^9, 3.810079808657489*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev4DoppTestsc", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_", ",", 
    "w_"}], "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", 
      "\[CapitalDelta]2", ",", "d31", ",", "d41"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1", ",", "0.004"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"7", "/", "27"}], "]"}], "*", "2.537717", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.76728224", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.107385", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{"2", "Pi", 
       RowBox[{"(", 
        RowBox[{"w", "*", 
         RowBox[{"10", "^", "6"}]}], ")"}]}]}], "  ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"omegac2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "Pi", "*", 
       RowBox[{"0.0254", "/", 
        RowBox[{"(", 
         RowBox[{"2", "wcn"}], ")"}]}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Im", "[", 
          RowBox[{"sd42", "[", 
           RowBox[{
           "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", ",",
             "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", "c", 
            ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43", ",", 
            "d42"}], "]"}], "]"}], "+", 
         RowBox[{"Im", "[", 
          RowBox[{"sd32", "[", 
           RowBox[{
           "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", ",",
             "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", "c", 
            ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43", ",", 
            "d32"}], "]"}], "]"}]}], ")"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6820777509929857`*^9, 3.682078072258361*^9}, {
   3.6820781686988773`*^9, 3.6820781844017754`*^9}, {3.6820782371557927`*^9, 
   3.6820782387708855`*^9}, {3.6820783386755996`*^9, 
   3.6820783600278206`*^9}, {3.682078390802581*^9, 3.682078409651659*^9}, {
   3.6820785556990128`*^9, 3.6820785577631307`*^9}, {3.682078604887826*^9, 
   3.682078606954944*^9}, 3.682078646275193*^9, 3.6820786817442217`*^9, {
   3.6820787244836664`*^9, 3.6820787256587334`*^9}, {3.682078761002755*^9, 
   3.6820787873862643`*^9}, {3.682078849739831*^9, 3.682078868395898*^9}, {
   3.6820789209479036`*^9, 3.682079036674523*^9}, {3.6820797161803885`*^9, 
   3.6820797163083954`*^9}, {3.6820940847423997`*^9, 3.682094176264634*^9}, {
   3.682100534108282*^9, 3.682100724544174*^9}, {3.682100812826224*^9, 
   3.6821008239058576`*^9}, {3.682100946929894*^9, 3.6821009474969263`*^9}, {
   3.6821010023450637`*^9, 3.6821010049532127`*^9}, {3.682101044296463*^9, 
   3.6821010535839944`*^9}, {3.6821012584737134`*^9, 3.682101261144866*^9}, {
   3.682101316585037*^9, 3.6821013732572784`*^9}, {3.682101414754652*^9, 
   3.6821014312095933`*^9}, {3.6821027458817883`*^9, 
   3.6821029190776944`*^9}, {3.682102981621272*^9, 3.682103063142935*^9}, {
   3.682103152077021*^9, 3.6821031759093847`*^9}, {3.682103228078368*^9, 
   3.682103275783097*^9}, {3.6821033867274427`*^9, 3.6821035279885225`*^9}, {
   3.682103596235426*^9, 3.6821036073870635`*^9}, {3.6821036960071325`*^9, 
   3.6821037775187945`*^9}, {3.6821038740493155`*^9, 
   3.6821038957665577`*^9}, {3.6821039323166485`*^9, 3.68210399843143*^9}, {
   3.6821041484310093`*^9, 3.6821041622938023`*^9}, {3.68210423166377*^9, 
   3.68210423550299*^9}, {3.6821042817676363`*^9, 3.682104281975648*^9}, {
   3.6821044114720545`*^9, 3.6821044835001745`*^9}, {3.6821045457187333`*^9, 
   3.6821045762404785`*^9}, {3.6821046797604*^9, 3.6821047083920374`*^9}, {
   3.682104777109968*^9, 3.682104849645117*^9}, {3.6821057340817037`*^9, 
   3.6821059374293346`*^9}, {3.6821060904780884`*^9, 
   3.6821060922611904`*^9}, {3.6821063118057475`*^9, 3.682106405406101*^9}, 
   3.682106470391818*^9, {3.682106886234603*^9, 3.6821069287290335`*^9}, {
   3.6821069697263784`*^9, 3.6821069703174124`*^9}, {3.6821070483648767`*^9, 
   3.6821070518040733`*^9}, {3.682107090122265*^9, 3.682107090965313*^9}, {
   3.6821071649115424`*^9, 3.6821073019513807`*^9}, {3.68210735596247*^9, 
   3.6821073587036266`*^9}, 3.6821621740358844`*^9, 3.6821627337889004`*^9, {
   3.6821628756690154`*^9, 3.682162909995979*^9}, {3.682163006508499*^9, 
   3.6821630839339275`*^9}, {3.682164960571265*^9, 3.6821650124032297`*^9}, {
   3.6821651296039333`*^9, 3.6821651308580046`*^9}, {3.682165214019761*^9, 
   3.682165249474789*^9}, {3.6821653768800764`*^9, 3.6821654049336815`*^9}, {
   3.6821654393766513`*^9, 3.68216545387048*^9}, 3.6821655581664457`*^9, {
   3.682165620292999*^9, 3.6821656220580997`*^9}, {3.6821656556360207`*^9, 
   3.6821656577791433`*^9}, {3.682165701413639*^9, 3.682165727750145*^9}, {
   3.6821665708493676`*^9, 3.682166634060983*^9}, {3.6821666960175266`*^9, 
   3.6821667514896994`*^9}, 3.682166802514618*^9, {3.6821669432116656`*^9, 
   3.682167060590379*^9}, {3.6821671413930006`*^9, 3.682167202085472*^9}, {
   3.6821673969946203`*^9, 3.6821673999857917`*^9}, {3.6821674579621077`*^9, 
   3.682167471208865*^9}, {3.682167501232582*^9, 3.682167549741357*^9}, {
   3.682167594844937*^9, 3.6821675971000657`*^9}, {3.6821676294889183`*^9, 
   3.6821676371443563`*^9}, {3.6821676871182146`*^9, 
   3.6821676926285295`*^9}, {3.6821678111603093`*^9, 3.682167849935527*^9}, {
   3.682167892151942*^9, 3.6821679025275354`*^9}, {3.6821680476398354`*^9, 
   3.682168050832018*^9}, {3.6821681112514734`*^9, 3.6821681135776067`*^9}, {
   3.6821681662336187`*^9, 3.6821681808154526`*^9}, {3.6821682156534452`*^9, 
   3.682168310363862*^9}, {3.682178802064953*^9, 3.6821788574731226`*^9}, {
   3.6821797845176063`*^9, 3.6821798678863745`*^9}, {3.682179924646621*^9, 
   3.682179933998156*^9}, 3.6821800382591195`*^9, {3.682180103785867*^9, 
   3.6821801191557465`*^9}, {3.6821803064124565`*^9, 3.682180320525264*^9}, {
   3.682180376454463*^9, 3.6821803814617496`*^9}, {3.6821832402242613`*^9, 
   3.682183284751808*^9}, {3.682183418403453*^9, 3.6821834209866004`*^9}, {
   3.682340380078147*^9, 3.682340410220871*^9}, {3.682340522181275*^9, 
   3.682340537612157*^9}, {3.6823406550578747`*^9, 3.682340655896923*^9}, {
   3.682340692157997*^9, 3.68234069326906*^9}, {3.682345730917197*^9, 
   3.682345731045205*^9}, {3.6823458690981007`*^9, 3.682345919492983*^9}, {
   3.682345967318719*^9, 3.6823459676457376`*^9}, {3.6823463858226557`*^9, 
   3.682346387093728*^9}, 3.6823468661441727`*^9, {3.6823507930227776`*^9, 
   3.6823507938398237`*^9}, {3.6823508346331573`*^9, 3.68235083747932*^9}, 
   3.682354138591133*^9, 3.6823566711479864`*^9, {3.682360931208648*^9, 
   3.682360932023695*^9}, {3.6823611770847116`*^9, 3.682361178779808*^9}, {
   3.682361844153866*^9, 3.682361845208926*^9}, {3.682362187881526*^9, 
   3.682362192368782*^9}, {3.6823622281698303`*^9, 3.6823622290728817`*^9}, {
   3.6824245168725133`*^9, 3.682424594002925*^9}, {3.6824260544974604`*^9, 
   3.682426058127668*^9}, {3.6824261036362705`*^9, 3.682426116397001*^9}, {
   3.682426190238224*^9, 3.682426191247282*^9}, {3.6824263261569986`*^9, 
   3.6824263271250534`*^9}, {3.682426566115723*^9, 3.682426577725387*^9}, {
   3.6824266458332825`*^9, 3.6824266595680685`*^9}, {3.682426696979208*^9, 
   3.6824267107099934`*^9}, {3.682427781573243*^9, 3.6824278113079443`*^9}, {
   3.6824355677005672`*^9, 3.682435631502217*^9}, {3.6824362666165433`*^9, 
   3.682436273352928*^9}, {3.6824396749253745`*^9, 3.6824396816717634`*^9}, {
   3.6824466180411763`*^9, 3.682446638837542*^9}, {3.6824477837793245`*^9, 
   3.682447784026745*^9}, {3.6824486976287394`*^9, 3.6824486988314676`*^9}, {
   3.682448741291876*^9, 3.682448758877056*^9}, {3.682528592516034*^9, 
   3.682528601669776*^9}, {3.6825290670606318`*^9, 3.6825290697308183`*^9}, {
   3.682529366905645*^9, 3.6825294632815933`*^9}, {3.6825295212782946`*^9, 
   3.6825295218262405`*^9}, {3.6825326611473746`*^9, 
   3.6825327653305593`*^9}, {3.68253282920498*^9, 3.6825328354504523`*^9}, {
   3.6825337172886257`*^9, 3.6825337966552057`*^9}, {3.682767727311578*^9, 
   3.6827677341416397`*^9}, {3.6827677784039173`*^9, 
   3.6827677817925434`*^9}, {3.6932553797640305`*^9, 
   3.6932554299337807`*^9}, {3.6932554605179*^9, 3.6932559069187527`*^9}, {
   3.6932561402287693`*^9, 3.6932561722799435`*^9}, {3.6933163942079906`*^9, 
   3.693316415693305*^9}, {3.693316580499305*^9, 3.6933166304990816`*^9}, {
   3.693316760505435*^9, 3.6933167713506746`*^9}, {3.693316885693319*^9, 
   3.693316923395423*^9}, {3.6933172128656282`*^9, 3.693317263746234*^9}, {
   3.693325258387647*^9, 3.693325258903158*^9}, {3.693325769156588*^9, 
   3.6933257999974604`*^9}, {3.693335215842825*^9, 3.6933352602877464`*^9}, {
   3.693335513566686*^9, 3.693335518882057*^9}, 3.6933383532074747`*^9, {
   3.69333844096763*^9, 3.6933384435674295`*^9}, {3.6933998013026257`*^9, 
   3.693399826867744*^9}, {3.693399878173236*^9, 3.6933998820731897`*^9}, {
   3.6933999851766276`*^9, 3.693400021978489*^9}, {3.6934001039998937`*^9, 
   3.693400106015895*^9}, {3.6934016718519135`*^9, 3.6934016749356365`*^9}, {
   3.693401768182933*^9, 3.6934017860664177`*^9}, {3.6934045049723034`*^9, 
   3.693404507408079*^9}, {3.6934045480219707`*^9, 3.693404569296521*^9}, {
   3.693404654068478*^9, 3.6934046767251215`*^9}, 3.6934047114649863`*^9, {
   3.693411486854925*^9, 3.6934115557606277`*^9}, {3.693411611637782*^9, 
   3.69341163689961*^9}, {3.6934117443930483`*^9, 3.6934117581565638`*^9}, {
   3.693412031427684*^9, 3.693412061254629*^9}, {3.6934121007632923`*^9, 
   3.6934121063459177`*^9}, {3.6934121673784485`*^9, 
   3.6934121732938156`*^9}, {3.6934126870207553`*^9, 3.693412687851843*^9}, {
   3.6934127270569134`*^9, 3.693412748633364*^9}, {3.693412788765423*^9, 
   3.6934127889652367`*^9}, {3.693413093699652*^9, 3.6934131049158497`*^9}, {
   3.693413158927167*^9, 3.693413165655781*^9}, {3.6934132892354*^9, 
   3.6934132907125025`*^9}, {3.693413694311676*^9, 3.6934138525544806`*^9}, {
   3.6934139623245473`*^9, 3.6934139741439466`*^9}, {3.6934151889872465`*^9, 
   3.6934151913460665`*^9}, {3.693421812342548*^9, 3.693421814260598*^9}, 
   3.693571210634773*^9, {3.6935730363523593`*^9, 3.693573037920248*^9}, {
   3.6935730980366774`*^9, 3.693573098636371*^9}, {3.6935733964485483`*^9, 
   3.693573406451894*^9}, {3.693573469980172*^9, 3.693573501220932*^9}, {
   3.6935735525801334`*^9, 3.6935736322071934`*^9}, {3.693574441972418*^9, 
   3.693574507219281*^9}, {3.693574541832406*^9, 3.6935745742488327`*^9}, {
   3.693575621329663*^9, 3.693575673978572*^9}, {3.69357673871231*^9, 
   3.6935767415254836`*^9}, {3.6935771676067867`*^9, 
   3.6935771693901434`*^9}, {3.6935774277045565`*^9, 3.693577443913048*^9}, {
   3.6935774788521423`*^9, 3.69357748131384*^9}, {3.6935801882381463`*^9, 
   3.693580202383541*^9}, {3.6935809873145914`*^9, 3.69358098944536*^9}, {
   3.6935872517340436`*^9, 3.6935872545426507`*^9}, {3.693587372831433*^9, 
   3.6935873796980495`*^9}, {3.693587562863904*^9, 3.693587616021948*^9}, {
   3.6935876893495855`*^9, 3.6935876903867693`*^9}, {3.6935878379546204`*^9, 
   3.6935878413010764`*^9}, {3.693588112787511*^9, 3.69358811449063*^9}, {
   3.6935881694755335`*^9, 3.693588171288027*^9}, {3.6935935389237742`*^9, 
   3.693593540345663*^9}, 3.6935935945632477`*^9, {3.6935936258290606`*^9, 
   3.693593626766575*^9}, {3.6935941806328535`*^9, 3.693594207086978*^9}, 
   3.6935946950674806`*^9, {3.6935947327149076`*^9, 3.693594734652423*^9}, {
   3.693594941365797*^9, 3.693594955856461*^9}, {3.6935949870952897`*^9, 
   3.693595006821137*^9}, {3.693595054598051*^9, 3.693595087587389*^9}, {
   3.693595156350831*^9, 3.693595162100931*^9}, {3.693595205375044*^9, 
   3.693595214270155*^9}, {3.6935955401391487`*^9, 3.69359554954937*^9}, {
   3.6935957894002223`*^9, 3.693595793535714*^9}, {3.6935975519334*^9, 
   3.6935975545739965`*^9}, 3.6935978494473696`*^9, 3.6935978853782554`*^9, {
   3.693600107714938*^9, 3.6936001086524925`*^9}, {3.6936001461743183`*^9, 
   3.6936001463930244`*^9}, {3.6936004005973363`*^9, 
   3.6936004140829015`*^9}, {3.693600548133373*^9, 3.69360056949905*^9}, 
   3.6936006120421934`*^9, {3.693600743312659*^9, 3.6936007668870306`*^9}, 
   3.6936593079963093`*^9, {3.6936600641823077`*^9, 3.6936600934684105`*^9}, {
   3.6936606802085075`*^9, 3.6936607260416718`*^9}, 3.693661925629023*^9, {
   3.6936700240275917`*^9, 3.6936700241431427`*^9}, {3.693670312478878*^9, 
   3.693670390281993*^9}, 3.693671577434743*^9, {3.693671658053399*^9, 
   3.69367166553496*^9}, {3.6936857949048443`*^9, 3.693685796574098*^9}, {
   3.6938634331019464`*^9, 3.6938634424293127`*^9}, {3.7021506788025312`*^9, 
   3.7021506844738555`*^9}, {3.7037037148134384`*^9, 
   3.7037037294210167`*^9}, {3.703703915278076*^9, 3.7037039469256473`*^9}, {
   3.703704848274563*^9, 3.7037048678076663`*^9}, {3.7037053637935624`*^9, 
   3.703705368753002*^9}, {3.703847775816551*^9, 3.703847820609113*^9}, {
   3.703849676834283*^9, 3.7038496905620685`*^9}, {3.7040282611457214`*^9, 
   3.7040282642328987`*^9}, {3.704028356338166*^9, 3.7040283566171827`*^9}, {
   3.704028398569582*^9, 3.704028399184617*^9}, {3.704471208248934*^9, 
   3.7044712099760327`*^9}, {3.704471241696847*^9, 3.7044712418798575`*^9}, {
   3.7044719290331607`*^9, 3.7044719302572308`*^9}, {3.7046591737739472`*^9, 
   3.7046591911339397`*^9}, {3.705148359139801*^9, 3.7051483678022966`*^9}, 
   3.7051484133559017`*^9, {3.73756766773046*^9, 3.7375676678554573`*^9}, {
   3.7391166690149665`*^9, 3.7391166877889643`*^9}, 3.7658282742121916`*^9, {
   3.765828806839615*^9, 3.765828816995103*^9}, {3.7658298628464932`*^9, 
   3.765829872598856*^9}, {3.765910665593157*^9, 3.7659107190994034`*^9}, {
   3.7659114241171794`*^9, 3.7659114256356053`*^9}, {3.7659119786146164`*^9, 
   3.765911980299055*^9}, {3.766236218976536*^9, 3.766236223414791*^9}, {
   3.7662444040162497`*^9, 3.766244404690921*^9}, {3.8100792427746487`*^9, 
   3.810079244814674*^9}, {3.810079279186184*^9, 3.810079301881812*^9}, {
   3.810079374502014*^9, 3.810079377249691*^9}, 3.8100797760261383`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev4DoppTestsc87", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_", ",", 
    "w_"}], "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", 
      "\[CapitalDelta]2", ",", "d31", ",", "d41"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1", ",", "0.004"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]2", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[CapitalDelta]2", "-", "\[CapitalDelta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.750056", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "/", "6"}], "]"}], "*", "2.5373", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "/", "6"}], "]"}], "*", "2.5373", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "/", "18"}], "]"}], "*", "2.5373", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "18"}], "]"}], "*", "2.5373", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.9788509", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.1074635", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{"2", "Pi", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"306.246", "*", 
           RowBox[{"10", "^", "6"}]}], ")"}], " ", "+", 
         RowBox[{"(", 
          RowBox[{"510.410", "*", 
           RowBox[{"10", "^", "6"}]}], ")"}]}], " ", ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"omegac2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "Pi", "*", 
       RowBox[{"0.0254", "/", 
        RowBox[{"(", 
         RowBox[{"2", "wcn"}], ")"}]}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Im", "[", 
          RowBox[{"sd42", "[", 
           RowBox[{
           "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", ",",
             "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", "c", 
            ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43", ",", 
            "d42"}], "]"}], "]"}], "+", 
         RowBox[{"Im", "[", 
          RowBox[{"sd32", "[", 
           RowBox[{
           "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", ",",
             "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", "c", 
            ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", "w43", ",", 
            "d32"}], "]"}], "]"}]}], ")"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6820777509929857`*^9, 3.682078072258361*^9}, {
   3.6820781686988773`*^9, 3.6820781844017754`*^9}, {3.6820782371557927`*^9, 
   3.6820782387708855`*^9}, {3.6820783386755996`*^9, 
   3.6820783600278206`*^9}, {3.682078390802581*^9, 3.682078409651659*^9}, {
   3.6820785556990128`*^9, 3.6820785577631307`*^9}, {3.682078604887826*^9, 
   3.682078606954944*^9}, 3.682078646275193*^9, 3.6820786817442217`*^9, {
   3.6820787244836664`*^9, 3.6820787256587334`*^9}, {3.682078761002755*^9, 
   3.6820787873862643`*^9}, {3.682078849739831*^9, 3.682078868395898*^9}, {
   3.6820789209479036`*^9, 3.682079036674523*^9}, {3.6820797161803885`*^9, 
   3.6820797163083954`*^9}, {3.6820940847423997`*^9, 3.682094176264634*^9}, {
   3.682100534108282*^9, 3.682100724544174*^9}, {3.682100812826224*^9, 
   3.6821008239058576`*^9}, {3.682100946929894*^9, 3.6821009474969263`*^9}, {
   3.6821010023450637`*^9, 3.6821010049532127`*^9}, {3.682101044296463*^9, 
   3.6821010535839944`*^9}, {3.6821012584737134`*^9, 3.682101261144866*^9}, {
   3.682101316585037*^9, 3.6821013732572784`*^9}, {3.682101414754652*^9, 
   3.6821014312095933`*^9}, {3.6821027458817883`*^9, 
   3.6821029190776944`*^9}, {3.682102981621272*^9, 3.682103063142935*^9}, {
   3.682103152077021*^9, 3.6821031759093847`*^9}, {3.682103228078368*^9, 
   3.682103275783097*^9}, {3.6821033867274427`*^9, 3.6821035279885225`*^9}, {
   3.682103596235426*^9, 3.6821036073870635`*^9}, {3.6821036960071325`*^9, 
   3.6821037775187945`*^9}, {3.6821038740493155`*^9, 
   3.6821038957665577`*^9}, {3.6821039323166485`*^9, 3.68210399843143*^9}, {
   3.6821041484310093`*^9, 3.6821041622938023`*^9}, {3.68210423166377*^9, 
   3.68210423550299*^9}, {3.6821042817676363`*^9, 3.682104281975648*^9}, {
   3.6821044114720545`*^9, 3.6821044835001745`*^9}, {3.6821045457187333`*^9, 
   3.6821045762404785`*^9}, {3.6821046797604*^9, 3.6821047083920374`*^9}, {
   3.682104777109968*^9, 3.682104849645117*^9}, {3.6821057340817037`*^9, 
   3.6821059374293346`*^9}, {3.6821060904780884`*^9, 
   3.6821060922611904`*^9}, {3.6821063118057475`*^9, 3.682106405406101*^9}, 
   3.682106470391818*^9, {3.682106886234603*^9, 3.6821069287290335`*^9}, {
   3.6821069697263784`*^9, 3.6821069703174124`*^9}, {3.6821070483648767`*^9, 
   3.6821070518040733`*^9}, {3.682107090122265*^9, 3.682107090965313*^9}, {
   3.6821071649115424`*^9, 3.6821073019513807`*^9}, {3.68210735596247*^9, 
   3.6821073587036266`*^9}, 3.6821621740358844`*^9, 3.6821627337889004`*^9, {
   3.6821628756690154`*^9, 3.682162909995979*^9}, {3.682163006508499*^9, 
   3.6821630839339275`*^9}, {3.682164960571265*^9, 3.6821650124032297`*^9}, {
   3.6821651296039333`*^9, 3.6821651308580046`*^9}, {3.682165214019761*^9, 
   3.682165249474789*^9}, {3.6821653768800764`*^9, 3.6821654049336815`*^9}, {
   3.6821654393766513`*^9, 3.68216545387048*^9}, 3.6821655581664457`*^9, {
   3.682165620292999*^9, 3.6821656220580997`*^9}, {3.6821656556360207`*^9, 
   3.6821656577791433`*^9}, {3.682165701413639*^9, 3.682165727750145*^9}, {
   3.6821665708493676`*^9, 3.682166634060983*^9}, {3.6821666960175266`*^9, 
   3.6821667514896994`*^9}, 3.682166802514618*^9, {3.6821669432116656`*^9, 
   3.682167060590379*^9}, {3.6821671413930006`*^9, 3.682167202085472*^9}, {
   3.6821673969946203`*^9, 3.6821673999857917`*^9}, {3.6821674579621077`*^9, 
   3.682167471208865*^9}, {3.682167501232582*^9, 3.682167549741357*^9}, {
   3.682167594844937*^9, 3.6821675971000657`*^9}, {3.6821676294889183`*^9, 
   3.6821676371443563`*^9}, {3.6821676871182146`*^9, 
   3.6821676926285295`*^9}, {3.6821678111603093`*^9, 3.682167849935527*^9}, {
   3.682167892151942*^9, 3.6821679025275354`*^9}, {3.6821680476398354`*^9, 
   3.682168050832018*^9}, {3.6821681112514734`*^9, 3.6821681135776067`*^9}, {
   3.6821681662336187`*^9, 3.6821681808154526`*^9}, {3.6821682156534452`*^9, 
   3.682168310363862*^9}, {3.682178802064953*^9, 3.6821788574731226`*^9}, {
   3.6821797845176063`*^9, 3.6821798678863745`*^9}, {3.682179924646621*^9, 
   3.682179933998156*^9}, 3.6821800382591195`*^9, {3.682180103785867*^9, 
   3.6821801191557465`*^9}, {3.6821803064124565`*^9, 3.682180320525264*^9}, {
   3.682180376454463*^9, 3.6821803814617496`*^9}, {3.6821832402242613`*^9, 
   3.682183284751808*^9}, {3.682183418403453*^9, 3.6821834209866004`*^9}, {
   3.682340380078147*^9, 3.682340410220871*^9}, {3.682340522181275*^9, 
   3.682340537612157*^9}, {3.6823406550578747`*^9, 3.682340655896923*^9}, {
   3.682340692157997*^9, 3.68234069326906*^9}, {3.682345730917197*^9, 
   3.682345731045205*^9}, {3.6823458690981007`*^9, 3.682345919492983*^9}, {
   3.682345967318719*^9, 3.6823459676457376`*^9}, {3.6823463858226557`*^9, 
   3.682346387093728*^9}, 3.6823468661441727`*^9, {3.6823507930227776`*^9, 
   3.6823507938398237`*^9}, {3.6823508346331573`*^9, 3.68235083747932*^9}, 
   3.682354138591133*^9, 3.6823566711479864`*^9, {3.682360931208648*^9, 
   3.682360932023695*^9}, {3.6823611770847116`*^9, 3.682361178779808*^9}, {
   3.682361844153866*^9, 3.682361845208926*^9}, {3.682362187881526*^9, 
   3.682362192368782*^9}, {3.6823622281698303`*^9, 3.6823622290728817`*^9}, {
   3.6824245168725133`*^9, 3.682424594002925*^9}, {3.6824260544974604`*^9, 
   3.682426058127668*^9}, {3.6824261036362705`*^9, 3.682426116397001*^9}, {
   3.682426190238224*^9, 3.682426191247282*^9}, {3.6824263261569986`*^9, 
   3.6824263271250534`*^9}, {3.682426566115723*^9, 3.682426577725387*^9}, {
   3.6824266458332825`*^9, 3.6824266595680685`*^9}, {3.682426696979208*^9, 
   3.6824267107099934`*^9}, {3.682427781573243*^9, 3.6824278113079443`*^9}, {
   3.6824355677005672`*^9, 3.682435631502217*^9}, {3.6824362666165433`*^9, 
   3.682436273352928*^9}, {3.6824396749253745`*^9, 3.6824396816717634`*^9}, {
   3.6824466180411763`*^9, 3.682446638837542*^9}, {3.6824477837793245`*^9, 
   3.682447784026745*^9}, {3.6824486976287394`*^9, 3.6824486988314676`*^9}, {
   3.682448741291876*^9, 3.682448758877056*^9}, {3.682528592516034*^9, 
   3.682528601669776*^9}, {3.6825290670606318`*^9, 3.6825290697308183`*^9}, {
   3.682529366905645*^9, 3.6825294632815933`*^9}, {3.6825295212782946`*^9, 
   3.6825295218262405`*^9}, {3.6825326611473746`*^9, 
   3.6825327653305593`*^9}, {3.68253282920498*^9, 3.6825328354504523`*^9}, {
   3.6825337172886257`*^9, 3.6825337966552057`*^9}, {3.682767727311578*^9, 
   3.6827677341416397`*^9}, {3.6827677784039173`*^9, 
   3.6827677817925434`*^9}, {3.6932553797640305`*^9, 
   3.6932554299337807`*^9}, {3.6932554605179*^9, 3.6932559069187527`*^9}, {
   3.6932561402287693`*^9, 3.6932561722799435`*^9}, {3.6933163942079906`*^9, 
   3.693316415693305*^9}, {3.693316580499305*^9, 3.6933166304990816`*^9}, {
   3.693316760505435*^9, 3.6933167713506746`*^9}, {3.693316885693319*^9, 
   3.693316923395423*^9}, {3.6933172128656282`*^9, 3.693317263746234*^9}, {
   3.693325258387647*^9, 3.693325258903158*^9}, {3.693325769156588*^9, 
   3.6933257999974604`*^9}, {3.693335215842825*^9, 3.6933352602877464`*^9}, {
   3.693335513566686*^9, 3.693335518882057*^9}, 3.6933383532074747`*^9, {
   3.69333844096763*^9, 3.6933384435674295`*^9}, {3.6933998013026257`*^9, 
   3.693399826867744*^9}, {3.693399878173236*^9, 3.6933998820731897`*^9}, {
   3.6933999851766276`*^9, 3.693400021978489*^9}, {3.6934001039998937`*^9, 
   3.693400106015895*^9}, {3.6934016718519135`*^9, 3.6934016749356365`*^9}, {
   3.693401768182933*^9, 3.6934017860664177`*^9}, {3.6934045049723034`*^9, 
   3.693404507408079*^9}, {3.6934045480219707`*^9, 3.693404569296521*^9}, {
   3.693404654068478*^9, 3.6934046767251215`*^9}, 3.6934047114649863`*^9, {
   3.693411486854925*^9, 3.6934115557606277`*^9}, {3.693411611637782*^9, 
   3.69341163689961*^9}, {3.6934117443930483`*^9, 3.6934117581565638`*^9}, {
   3.693412031427684*^9, 3.693412061254629*^9}, {3.6934121007632923`*^9, 
   3.6934121063459177`*^9}, {3.6934121673784485`*^9, 
   3.6934121732938156`*^9}, {3.6934126870207553`*^9, 3.693412687851843*^9}, {
   3.6934127270569134`*^9, 3.693412748633364*^9}, {3.693412788765423*^9, 
   3.6934127889652367`*^9}, {3.693413093699652*^9, 3.6934131049158497`*^9}, {
   3.693413158927167*^9, 3.693413165655781*^9}, {3.6934132892354*^9, 
   3.6934132907125025`*^9}, {3.693413694311676*^9, 3.6934138525544806`*^9}, {
   3.6934139623245473`*^9, 3.6934139741439466`*^9}, {3.6934151889872465`*^9, 
   3.6934151913460665`*^9}, {3.693421812342548*^9, 3.693421814260598*^9}, 
   3.693571210634773*^9, {3.6935730363523593`*^9, 3.693573037920248*^9}, {
   3.6935730980366774`*^9, 3.693573098636371*^9}, {3.6935733964485483`*^9, 
   3.693573406451894*^9}, {3.693573469980172*^9, 3.693573501220932*^9}, {
   3.6935735525801334`*^9, 3.6935736322071934`*^9}, {3.693574441972418*^9, 
   3.693574507219281*^9}, {3.693574541832406*^9, 3.6935745742488327`*^9}, {
   3.693575621329663*^9, 3.693575673978572*^9}, {3.69357673871231*^9, 
   3.6935767415254836`*^9}, {3.6935771676067867`*^9, 
   3.6935771693901434`*^9}, {3.6935774277045565`*^9, 3.693577443913048*^9}, {
   3.6935774788521423`*^9, 3.69357748131384*^9}, {3.6935801882381463`*^9, 
   3.693580202383541*^9}, {3.6935809873145914`*^9, 3.69358098944536*^9}, {
   3.6935872517340436`*^9, 3.6935872545426507`*^9}, {3.693587372831433*^9, 
   3.6935873796980495`*^9}, {3.693587562863904*^9, 3.693587616021948*^9}, {
   3.6935876893495855`*^9, 3.6935876903867693`*^9}, {3.6935878379546204`*^9, 
   3.6935878413010764`*^9}, {3.693588112787511*^9, 3.69358811449063*^9}, {
   3.6935881694755335`*^9, 3.693588171288027*^9}, {3.6935935389237742`*^9, 
   3.693593540345663*^9}, 3.6935935945632477`*^9, {3.6935936258290606`*^9, 
   3.693593626766575*^9}, {3.6935941806328535`*^9, 3.693594207086978*^9}, 
   3.6935946950674806`*^9, {3.6935947327149076`*^9, 3.693594734652423*^9}, {
   3.693594941365797*^9, 3.693594955856461*^9}, {3.6935949870952897`*^9, 
   3.693595006821137*^9}, {3.693595054598051*^9, 3.693595087587389*^9}, {
   3.693595156350831*^9, 3.693595162100931*^9}, {3.693595205375044*^9, 
   3.693595214270155*^9}, {3.6935955401391487`*^9, 3.69359554954937*^9}, {
   3.6935957894002223`*^9, 3.693595793535714*^9}, {3.6935975519334*^9, 
   3.6935975545739965`*^9}, 3.6935978494473696`*^9, 3.6935978853782554`*^9, {
   3.693600107714938*^9, 3.6936001086524925`*^9}, {3.6936001461743183`*^9, 
   3.6936001463930244`*^9}, {3.6936004005973363`*^9, 
   3.6936004140829015`*^9}, {3.693600548133373*^9, 3.69360056949905*^9}, 
   3.6936006120421934`*^9, {3.693600743312659*^9, 3.6936007668870306`*^9}, 
   3.6936593079963093`*^9, {3.6936600641823077`*^9, 3.6936600934684105`*^9}, {
   3.6936606802085075`*^9, 3.6936607260416718`*^9}, 3.693661925629023*^9, {
   3.6936700240275917`*^9, 3.6936700241431427`*^9}, {3.693670312478878*^9, 
   3.693670390281993*^9}, 3.693671577434743*^9, {3.693671658053399*^9, 
   3.69367166553496*^9}, {3.6936857949048443`*^9, 3.693685796574098*^9}, {
   3.6938634331019464`*^9, 3.6938634424293127`*^9}, {3.7021506788025312`*^9, 
   3.7021506844738555`*^9}, {3.7037037148134384`*^9, 
   3.7037037294210167`*^9}, {3.703703915278076*^9, 3.7037039469256473`*^9}, {
   3.703704848274563*^9, 3.7037048678076663`*^9}, {3.7037053637935624`*^9, 
   3.703705368753002*^9}, {3.703847775816551*^9, 3.703847820609113*^9}, {
   3.703849676834283*^9, 3.7038496905620685`*^9}, {3.7040282611457214`*^9, 
   3.7040282642328987`*^9}, {3.704028356338166*^9, 3.7040283566171827`*^9}, {
   3.704028398569582*^9, 3.704028399184617*^9}, {3.704471208248934*^9, 
   3.7044712099760327`*^9}, {3.704471241696847*^9, 3.7044712418798575`*^9}, {
   3.7044719290331607`*^9, 3.7044719302572308`*^9}, {3.7046591737739472`*^9, 
   3.7046591911339397`*^9}, {3.705148359139801*^9, 3.7051483678022966`*^9}, 
   3.7051484133559017`*^9, {3.73756766773046*^9, 3.7375676678554573`*^9}, {
   3.7391166690149665`*^9, 3.7391166877889643`*^9}, 3.7658282742121916`*^9, {
   3.765828806839615*^9, 3.765828816995103*^9}, {3.7658298628464932`*^9, 
   3.765829872598856*^9}, {3.765910665593157*^9, 3.7659107190994034`*^9}, {
   3.7659114241171794`*^9, 3.7659114256356053`*^9}, {3.7659119786146164`*^9, 
   3.765911980299055*^9}, {3.766236218976536*^9, 3.766236223414791*^9}, {
   3.7662444040162497`*^9, 3.766244404690921*^9}, {3.8100792427746487`*^9, 
   3.810079244814674*^9}, {3.810079279186184*^9, 3.810079301881812*^9}, {
   3.810079374502014*^9, 3.810079377249691*^9}, {3.810079549558487*^9, 
   3.810079566025585*^9}, {3.8100796638418894`*^9, 3.8100796669683895`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"Power", "::", "infy"}], "]"}], ";", 
  RowBox[{"Off", "[", 
   RowBox[{"Infinity", "::", "indet"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", "23"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", "1.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "list85", ",", "list185", ",", "list3", ",", "list4", ",", "EIT85", ",", 
     "ABS85", ",", "EIT1", ",", "ABS1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tvw41", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"Tvw3185", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"list85", "=", 
        RowBox[{"Lev4DoppTestsc", "[", 
         RowBox[{"T", ",", 
          RowBox[{"p", "/", "1000"}], ",", 
          RowBox[{"0.9", "/", "1000"}], ",", 
          RowBox[{"\[Gamma]", "*", 
           RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0", ",", "361"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"list185", "=", 
        RowBox[{"Lev4DoppTestsc", "[", 
         RowBox[{"T", ",", 
          RowBox[{"0", "/", "1000"}], ",", 
          RowBox[{"0.9", "/", "1000"}], ",", 
          RowBox[{"\[Gamma]", "*", 
           RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0", ",", "361"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"list3", "=", 
        RowBox[{"Lev4DoppTestsc87", "[", 
         RowBox[{"T", ",", 
          RowBox[{"p", "/", "1000"}], ",", 
          RowBox[{"0.9", "/", "1000"}], ",", 
          RowBox[{"\[Gamma]", "*", 
           RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0", ",", "816"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"list4", "=", 
        RowBox[{"Lev4DoppTestsc87", "[", 
         RowBox[{"T", ",", 
          RowBox[{"0", "/", "1000"}], ",", 
          RowBox[{"0.9", "/", "1000"}], ",", 
          RowBox[{"\[Gamma]", "*", 
           RowBox[{"10", "^", "6"}]}], ",", "0", ",", "0", ",", "816"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"EIT85", "=", 
        RowBox[{"Min", "[", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"list85", ",", "Indeterminate"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"EIT1", "=", 
        RowBox[{"Min", "[", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"list3", ",", "Indeterminate"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ABS85", "=", 
        RowBox[{
         RowBox[{"list185", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"list85", ",", "EIT85"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ABS1", "=", 
        RowBox[{
         RowBox[{"list4", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"list3", ",", "EIT1"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Tvw41", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"Tvw41", ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", 
            RowBox[{"1", "-", 
             RowBox[{"EIT1", "/", "ABS1"}]}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Tvw3185", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"Tvw3185", ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", 
            RowBox[{"1", "-", 
             RowBox[{"EIT85", "/", "ABS85"}]}]}], "}"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "0", ",", "80", ",", "5"}], "}"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.809981157174896*^9, 3.8099811911930094`*^9}, {
  3.809981278617875*^9, 3.8099812862659054`*^9}, {3.8099813669446726`*^9, 
  3.8099814584940295`*^9}, {3.809982491390169*^9, 3.809982492124524*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tr", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Tvw41", ",", "Tvw3185"}], "}"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"87", ",", "85"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "1020"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "Red"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
          RowBox[{"Darker", "[", "Blue", "]"}]}], "}"}]}], "}"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "40", "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Power (mW)\>\"", ",", "50", ",", "Black"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Transparancy \>\"", ",", "50", ",", "Black"}], "]"}]}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"tr", ",", "rb85", ",", "rb87"}], "]"}]}], "Input",
 CellChangeTimes->{{3.809981236721184*^9, 3.8099812372299366`*^9}, {
  3.809981441886057*^9, 3.8099814658785458`*^9}, {3.809981685271002*^9, 
  3.8099816992823186`*^9}, {3.8099817408855877`*^9, 3.809981743665417*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Lev4DoppTestv87", "[", 
   RowBox[{
   "T_", ",", "P_", ",", "diam_", ",", "gam_", ",", "delt_", ",", "ab_", ",", 
    RowBox[{"kk_:", "0"}]}], "]"}], " ", ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nat", ",", "\[Gamma]32", ",", "omegac1", ",", "omegac2", ",", "c", ",", 
      "e0", ",", "\[HBar]", ",", "f", ",", "\[Chi]42", ",", "\[Chi]32", ",", 
      "\[Chi]24", ",", "\[Chi]23", ",", "w43", ",", "\[CapitalDelta]", ",", 
      "d32", ",", "d42", ",", "\[Gamma]42", ",", "wcn", ",", "\[Alpha]1", ",",
       "\[Alpha]2", ",", "\[Beta]1", ",", "\[Beta]2", ",", "Z\[Alpha]", ",", 
      "Z\[Beta]", ",", "dopp", ",", "u", ",", "wc", ",", "d", ",", "\[Delta]",
       ",", "\[Gamma]21", ",", "\[Alpha]\[Alpha]1", ",", "\[Alpha]\[Alpha]2", 
      ",", "Z\[Alpha]\[Alpha]", ",", "\[Beta]\[Beta]1", ",", 
      "\[Beta]\[Beta]2", ",", "Z\[Beta]\[Beta]", ",", "fI", ",", "d31", ",", 
      "d41"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2", ",", "0.05"}], "]"}], "*", 
       RowBox[{"10", "^", "9"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"2", "Pi", " ", "d"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Raman", " ", "detuning"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Nat", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"2", "Pi", " ", "delt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]21", "=", 
      RowBox[{"2", "Pi", " ", "gam"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]32", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.7468", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Gamma]42", "=", 
      RowBox[{"2", "*", "Pi", "*", "5.7468", " ", 
       RowBox[{
        RowBox[{"10", "^", "6"}], "/", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Gamma]32", "=", 
        RowBox[{"\[Gamma]21", "/", "0.035"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d32", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "/", "6"}], "]"}], "*", "2.5373", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d42", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "/", "6"}], "]"}], "*", "2.5373", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d31", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "/", "18"}], "]"}], "*", "2.5373", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"d41", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"5", "/", "18"}], "]"}], "*", "2.5373", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "29"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[HBar]", "=", 
      RowBox[{"1.0546", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "34"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"e0", "=", 
      RowBox[{"8.8542", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "12"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"2.9979", " ", 
       RowBox[{"10", "^", "8"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wcn", "=", 
      RowBox[{"(", 
       RowBox[{"794.9788509", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "9"}]}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wc", "=", 
      RowBox[{"2", "Pi", " ", "377.1074635", "*", 
       RowBox[{"10", "^", "12"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"w43", "=", 
      RowBox[{"2", "Pi", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"306.246", "*", 
           RowBox[{"10", "^", "6"}]}], ")"}], " ", "+", 
         RowBox[{"(", 
          RowBox[{"510.410", "*", 
           RowBox[{"10", "^", "6"}]}], ")"}]}], " ", ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"Rbpress", "[", "T", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"omegac1", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d31", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"omegac2", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[HBar]"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"e0", " ", "c"}], ")"}]}], "]"}], "*", "d41", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"P", "/", 
          RowBox[{"(", 
           RowBox[{"Pi", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"diam", "/", "2"}], ")"}], "^", "2"}]}], ")"}]}], 
         "]"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ab", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", 
            RowBox[{"Im", "[", 
             RowBox[{"sd24", "[", 
              RowBox[{
              "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
               ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac2", ",", 
               "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
               "w43", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", 
            RowBox[{"Im", "[", 
             RowBox[{"sd42", "[", 
              RowBox[{
              "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
               ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac2", ",", 
               "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
               "w43", ",", "d42"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", 
            RowBox[{"Im", "[", 
             RowBox[{"sd23", "[", 
              RowBox[{
              "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
               ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", 
               "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
               "w43", ",", "d32"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "/", 
             SuperscriptBox["10", "9"]}], ",", 
            RowBox[{"Im", "[", 
             RowBox[{"sd32", "[", 
              RowBox[{
              "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32", 
               ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", ",", 
               "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", ",", 
               "w43", ",", "d32"}], "]"}], "]"}]}], "}"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"kk", "\[Equal]", "0"}], ",", 
            RowBox[{"d", "/", 
             RowBox[{"(", " ", 
              SuperscriptBox["10", "9"], ")"}]}], ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"d", "/", 
               SuperscriptBox["10", "9"]}], "+", "kk"}], ")"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2"}], "Pi", "*", 
            RowBox[{"0.0254", "/", 
             RowBox[{"(", 
              RowBox[{"2", "wcn"}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"sd42", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32",
                  ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", 
                 ",", "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", 
                 ",", "w43", ",", "d42"}], "]"}], "]"}], "+", 
              RowBox[{"Im", "[", 
               RowBox[{"sd32", "[", 
                RowBox[{
                "wc", ",", "\[Gamma]21", ",", "\[Gamma]42", ",", "\[Gamma]32",
                  ",", "\[Delta]", ",", "\[CapitalDelta]", ",", "omegac1", 
                 ",", "c", ",", "\[HBar]", ",", "e0", ",", "u", ",", "Nat", 
                 ",", "w43", ",", "d32"}], "]"}], "]"}]}], ")"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6820777509929857`*^9, 3.682078072258361*^9}, {
   3.6820781686988773`*^9, 3.6820781844017754`*^9}, {3.6820782371557927`*^9, 
   3.6820782387708855`*^9}, {3.6820783386755996`*^9, 
   3.6820783600278206`*^9}, {3.682078390802581*^9, 3.682078409651659*^9}, {
   3.6820785556990128`*^9, 3.6820785577631307`*^9}, {3.682078604887826*^9, 
   3.682078606954944*^9}, 3.682078646275193*^9, 3.6820786817442217`*^9, {
   3.6820787244836664`*^9, 3.6820787256587334`*^9}, {3.682078761002755*^9, 
   3.6820787873862643`*^9}, {3.682078849739831*^9, 3.682078868395898*^9}, {
   3.6820789209479036`*^9, 3.682079036674523*^9}, {3.6820797161803885`*^9, 
   3.6820797163083954`*^9}, {3.6820940847423997`*^9, 3.682094176264634*^9}, {
   3.682100534108282*^9, 3.682100724544174*^9}, {3.682100812826224*^9, 
   3.6821008239058576`*^9}, {3.682100946929894*^9, 3.6821009474969263`*^9}, {
   3.6821010023450637`*^9, 3.6821010049532127`*^9}, {3.682101044296463*^9, 
   3.6821010535839944`*^9}, {3.6821012584737134`*^9, 3.682101261144866*^9}, {
   3.682101316585037*^9, 3.6821013732572784`*^9}, {3.682101414754652*^9, 
   3.6821014312095933`*^9}, {3.6821027458817883`*^9, 
   3.6821029190776944`*^9}, {3.682102981621272*^9, 3.682103063142935*^9}, {
   3.682103152077021*^9, 3.6821031759093847`*^9}, {3.682103228078368*^9, 
   3.682103275783097*^9}, {3.6821033867274427`*^9, 3.6821035279885225`*^9}, {
   3.682103596235426*^9, 3.6821036073870635`*^9}, {3.6821036960071325`*^9, 
   3.6821037775187945`*^9}, {3.6821038740493155`*^9, 
   3.6821038957665577`*^9}, {3.6821039323166485`*^9, 3.68210399843143*^9}, {
   3.6821041484310093`*^9, 3.6821041622938023`*^9}, {3.68210423166377*^9, 
   3.68210423550299*^9}, {3.6821042817676363`*^9, 3.682104281975648*^9}, {
   3.6821044114720545`*^9, 3.6821044835001745`*^9}, {3.6821045457187333`*^9, 
   3.6821045762404785`*^9}, {3.6821046797604*^9, 3.6821047083920374`*^9}, {
   3.682104777109968*^9, 3.682104849645117*^9}, {3.6821057340817037`*^9, 
   3.6821059374293346`*^9}, {3.6821060904780884`*^9, 
   3.6821060922611904`*^9}, {3.6821063118057475`*^9, 3.682106405406101*^9}, 
   3.682106470391818*^9, {3.682106886234603*^9, 3.6821069287290335`*^9}, {
   3.6821069697263784`*^9, 3.6821069703174124`*^9}, {3.6821070483648767`*^9, 
   3.6821070518040733`*^9}, {3.682107090122265*^9, 3.682107090965313*^9}, {
   3.6821071649115424`*^9, 3.6821073019513807`*^9}, {3.68210735596247*^9, 
   3.6821073587036266`*^9}, 3.6821621740358844`*^9, 3.6821627337889004`*^9, {
   3.6821628756690154`*^9, 3.682162909995979*^9}, {3.682163006508499*^9, 
   3.6821630839339275`*^9}, {3.682164960571265*^9, 3.6821650124032297`*^9}, {
   3.6821651296039333`*^9, 3.6821651308580046`*^9}, {3.682165214019761*^9, 
   3.682165249474789*^9}, {3.6821653768800764`*^9, 3.6821654049336815`*^9}, {
   3.6821654393766513`*^9, 3.68216545387048*^9}, 3.6821655581664457`*^9, {
   3.682165620292999*^9, 3.6821656220580997`*^9}, {3.6821656556360207`*^9, 
   3.6821656577791433`*^9}, {3.682165701413639*^9, 3.682165727750145*^9}, {
   3.6821665708493676`*^9, 3.682166634060983*^9}, {3.6821666960175266`*^9, 
   3.6821667514896994`*^9}, 3.682166802514618*^9, {3.6821669432116656`*^9, 
   3.682167060590379*^9}, {3.6821671413930006`*^9, 3.682167202085472*^9}, {
   3.6821673969946203`*^9, 3.6821673999857917`*^9}, {3.6821674579621077`*^9, 
   3.682167471208865*^9}, {3.682167501232582*^9, 3.682167549741357*^9}, {
   3.682167594844937*^9, 3.6821675971000657`*^9}, {3.6821676294889183`*^9, 
   3.6821676371443563`*^9}, {3.6821676871182146`*^9, 
   3.6821676926285295`*^9}, {3.6821678111603093`*^9, 3.682167849935527*^9}, {
   3.682167892151942*^9, 3.6821679025275354`*^9}, {3.6821680476398354`*^9, 
   3.682168050832018*^9}, {3.6821681112514734`*^9, 3.6821681135776067`*^9}, {
   3.6821681662336187`*^9, 3.6821681808154526`*^9}, {3.6821682156534452`*^9, 
   3.682168310363862*^9}, {3.682178802064953*^9, 3.6821788574731226`*^9}, {
   3.6821797845176063`*^9, 3.6821798678863745`*^9}, {3.682179924646621*^9, 
   3.682179933998156*^9}, 3.6821800382591195`*^9, {3.682180103785867*^9, 
   3.6821801191557465`*^9}, {3.6821803064124565`*^9, 3.682180320525264*^9}, {
   3.682180376454463*^9, 3.6821803814617496`*^9}, {3.6821832402242613`*^9, 
   3.682183284751808*^9}, {3.682183418403453*^9, 3.6821834209866004`*^9}, {
   3.682340380078147*^9, 3.682340410220871*^9}, {3.682340522181275*^9, 
   3.682340537612157*^9}, {3.6823406550578747`*^9, 3.682340655896923*^9}, {
   3.682340692157997*^9, 3.68234069326906*^9}, {3.682345730917197*^9, 
   3.682345731045205*^9}, {3.6823458690981007`*^9, 3.682345919492983*^9}, {
   3.682345967318719*^9, 3.6823459676457376`*^9}, {3.6823463858226557`*^9, 
   3.682346387093728*^9}, 3.6823468661441727`*^9, {3.6823507930227776`*^9, 
   3.6823507938398237`*^9}, {3.6823508346331573`*^9, 3.68235083747932*^9}, 
   3.682354138591133*^9, 3.6823566711479864`*^9, {3.682360931208648*^9, 
   3.682360932023695*^9}, {3.6823611770847116`*^9, 3.682361178779808*^9}, {
   3.682361844153866*^9, 3.682361845208926*^9}, {3.682362187881526*^9, 
   3.682362192368782*^9}, {3.6823622281698303`*^9, 3.6823622290728817`*^9}, {
   3.6824245168725133`*^9, 3.682424594002925*^9}, {3.6824260544974604`*^9, 
   3.682426058127668*^9}, {3.6824261036362705`*^9, 3.682426116397001*^9}, {
   3.682426190238224*^9, 3.682426191247282*^9}, {3.6824263261569986`*^9, 
   3.6824263271250534`*^9}, {3.682426566115723*^9, 3.682426577725387*^9}, {
   3.6824266458332825`*^9, 3.6824266595680685`*^9}, {3.682426696979208*^9, 
   3.6824267107099934`*^9}, {3.682427781573243*^9, 3.6824278113079443`*^9}, {
   3.6824355677005672`*^9, 3.682435631502217*^9}, {3.6824362666165433`*^9, 
   3.682436273352928*^9}, {3.6824396749253745`*^9, 3.6824396816717634`*^9}, {
   3.6824466180411763`*^9, 3.682446638837542*^9}, {3.6824477837793245`*^9, 
   3.682447784026745*^9}, {3.6824486976287394`*^9, 3.6824486988314676`*^9}, {
   3.682448741291876*^9, 3.682448758877056*^9}, {3.682528592516034*^9, 
   3.682528601669776*^9}, {3.6825290670606318`*^9, 3.6825290697308183`*^9}, {
   3.682529366905645*^9, 3.6825294632815933`*^9}, {3.6825295212782946`*^9, 
   3.6825295218262405`*^9}, {3.6825326611473746`*^9, 
   3.6825327653305593`*^9}, {3.68253282920498*^9, 3.6825328354504523`*^9}, {
   3.6825337172886257`*^9, 3.6825337966552057`*^9}, {3.682767727311578*^9, 
   3.6827677341416397`*^9}, {3.6827677784039173`*^9, 
   3.6827677817925434`*^9}, {3.6932553797640305`*^9, 
   3.6932554299337807`*^9}, {3.6932554605179*^9, 3.6932559069187527`*^9}, {
   3.6932561402287693`*^9, 3.6932561722799435`*^9}, {3.6933163942079906`*^9, 
   3.693316415693305*^9}, {3.693316580499305*^9, 3.6933166304990816`*^9}, {
   3.693316760505435*^9, 3.6933167713506746`*^9}, {3.693316885693319*^9, 
   3.693316923395423*^9}, {3.6933172128656282`*^9, 3.693317263746234*^9}, {
   3.693325258387647*^9, 3.693325258903158*^9}, {3.693325769156588*^9, 
   3.6933257999974604`*^9}, {3.693335215842825*^9, 3.6933352602877464`*^9}, {
   3.693335513566686*^9, 3.693335518882057*^9}, 3.6933383532074747`*^9, {
   3.69333844096763*^9, 3.6933384435674295`*^9}, {3.6933998013026257`*^9, 
   3.693399826867744*^9}, {3.693399878173236*^9, 3.6933998820731897`*^9}, {
   3.6933999851766276`*^9, 3.693400021978489*^9}, {3.6934001039998937`*^9, 
   3.693400106015895*^9}, {3.6934016718519135`*^9, 3.6934016749356365`*^9}, {
   3.693401768182933*^9, 3.6934017860664177`*^9}, {3.6934045049723034`*^9, 
   3.693404507408079*^9}, {3.6934045480219707`*^9, 3.693404569296521*^9}, {
   3.693404654068478*^9, 3.6934046767251215`*^9}, 3.6934047114649863`*^9, {
   3.693411486854925*^9, 3.6934115557606277`*^9}, {3.693411611637782*^9, 
   3.69341163689961*^9}, {3.6934117443930483`*^9, 3.6934117581565638`*^9}, {
   3.693412031427684*^9, 3.693412061254629*^9}, {3.6934121007632923`*^9, 
   3.6934121063459177`*^9}, {3.6934121673784485`*^9, 
   3.6934121732938156`*^9}, {3.6934126870207553`*^9, 3.693412687851843*^9}, {
   3.6934127270569134`*^9, 3.693412748633364*^9}, {3.693412788765423*^9, 
   3.6934127889652367`*^9}, {3.693413093699652*^9, 3.6934131049158497`*^9}, {
   3.693413158927167*^9, 3.693413165655781*^9}, {3.6934132892354*^9, 
   3.6934132907125025`*^9}, {3.693413694311676*^9, 3.6934138525544806`*^9}, {
   3.6934139623245473`*^9, 3.6934139741439466`*^9}, {3.6934151889872465`*^9, 
   3.6934151913460665`*^9}, {3.693421812342548*^9, 3.693421814260598*^9}, 
   3.693571210634773*^9, {3.6935730363523593`*^9, 3.693573037920248*^9}, {
   3.6935730980366774`*^9, 3.693573098636371*^9}, {3.6935733964485483`*^9, 
   3.693573406451894*^9}, {3.693573469980172*^9, 3.693573501220932*^9}, {
   3.6935735525801334`*^9, 3.6935736322071934`*^9}, {3.693574441972418*^9, 
   3.693574507219281*^9}, {3.693574541832406*^9, 3.6935745742488327`*^9}, {
   3.693575621329663*^9, 3.693575673978572*^9}, {3.69357673871231*^9, 
   3.6935767415254836`*^9}, {3.6935771676067867`*^9, 
   3.6935771693901434`*^9}, {3.6935774277045565`*^9, 3.693577443913048*^9}, {
   3.6935774788521423`*^9, 3.69357748131384*^9}, {3.6935801882381463`*^9, 
   3.693580202383541*^9}, {3.6935809873145914`*^9, 3.69358098944536*^9}, {
   3.6935872517340436`*^9, 3.6935872545426507`*^9}, {3.693587372831433*^9, 
   3.6935873796980495`*^9}, {3.693587562863904*^9, 3.693587616021948*^9}, {
   3.6935876893495855`*^9, 3.6935876903867693`*^9}, {3.6935878379546204`*^9, 
   3.6935878413010764`*^9}, {3.693588112787511*^9, 3.69358811449063*^9}, {
   3.6935881694755335`*^9, 3.693588171288027*^9}, {3.6935935389237742`*^9, 
   3.693593540345663*^9}, 3.6935935945632477`*^9, {3.6935936258290606`*^9, 
   3.693593626766575*^9}, {3.6935941806328535`*^9, 3.693594207086978*^9}, 
   3.6935946950674806`*^9, {3.6935947327149076`*^9, 3.693594734652423*^9}, {
   3.693594941365797*^9, 3.693594955856461*^9}, {3.6935949870952897`*^9, 
   3.693595006821137*^9}, {3.693595054598051*^9, 3.693595087587389*^9}, {
   3.693595156350831*^9, 3.693595162100931*^9}, {3.693595205375044*^9, 
   3.693595214270155*^9}, {3.6935955401391487`*^9, 3.69359554954937*^9}, {
   3.6935957894002223`*^9, 3.693595793535714*^9}, {3.6935975519334*^9, 
   3.6935975545739965`*^9}, 3.6935978494473696`*^9, 3.6935978853782554`*^9, {
   3.693600107714938*^9, 3.6936001086524925`*^9}, {3.6936001461743183`*^9, 
   3.6936001463930244`*^9}, {3.6936004005973363`*^9, 
   3.6936004140829015`*^9}, {3.693600548133373*^9, 3.69360056949905*^9}, 
   3.6936006120421934`*^9, {3.693600743312659*^9, 3.6936007668870306`*^9}, 
   3.6936593079963093`*^9, {3.6936600641823077`*^9, 3.6936600934684105`*^9}, {
   3.6936606802085075`*^9, 3.6936607260416718`*^9}, 3.693661925629023*^9, {
   3.6936898702165194`*^9, 3.693689870893845*^9}, {3.693743080035598*^9, 
   3.6937430806511307`*^9}, {3.6937489241757784`*^9, 3.6937489250597196`*^9}, 
   3.6937497240233326`*^9, {3.69375013463923*^9, 3.6937501361224847`*^9}, {
   3.693750204785307*^9, 3.6937502061733837`*^9}, {3.693863378234019*^9, 
   3.6938633887490287`*^9}, {3.693942957555222*^9, 3.6939429577397947`*^9}, {
   3.6939431695478506`*^9, 3.6939431706474953`*^9}, {3.702729717789729*^9, 
   3.702729723317045*^9}, {3.7027298334753456`*^9, 3.7027298344234*^9}, {
   3.7040322110036407`*^9, 3.7040322122117095`*^9}, {3.7040323096052804`*^9, 
   3.7040323098042917`*^9}, {3.704032887717346*^9, 3.7040329014931345`*^9}, 
   3.70403299408543*^9, {3.705316671065693*^9, 3.705316672867796*^9}, {
   3.7053178296409597`*^9, 3.7053178313860593`*^9}, {3.8096254429524364`*^9, 
   3.8096254954385157`*^9}, {3.8096258023817754`*^9, 3.809625813815293*^9}, {
   3.80962584549496*^9, 3.8096259093415904`*^9}, {3.809626335150081*^9, 
   3.8096263363934937`*^9}, {3.809626832692594*^9, 3.8096268572117443`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \
\\\"2\\\"}], \\\"}\\\"}]\\) of \\!\\(\\*RowBox[{\\\"f\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.015`\\\"}], \\\",\\\", \\\"0.08`\\\", \\\",\\\", \\\"0.072`\\\", \
\\\",\\\", \\\"0.0516`\\\", \\\",\\\", \\\"0.0492`\\\", \\\",\\\", RowBox[{\\\
\"-\\\", \\\"0.04`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"0.06`\\\"}], \
\\\",\\\", \\\"5.74`\\\", \\\",\\\", \\\"5.7`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.014997`\\\"}], \\\",\\\", \
\\\"0.08`\\\", \\\",\\\", \\\"0.096`\\\", \\\",\\\", \\\"0.0524`\\\", \\\",\\\
\", \\\"0.0532`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"0.04`\\\"}], \
\\\",\\\", \\\"2.38419`*^-8\\\", \\\",\\\", \\\"5.74`\\\", \\\",\\\", \
\\\"5.78`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.014994`\\\"}], \\\",\\\", \\\"0.08`\\\", \
\\\",\\\", \\\"0.08`\\\", \\\",\\\", \\\"0.0508`\\\", \\\",\\\", \
\\\"0.0484`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"0.02`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.06`\\\"}], \\\",\\\", \\\"5.74`\\\", \\\",\\\", \
\\\"5.7`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"46\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.014843`\\\"}], \\\",\\\", \\\"0.088`\\\", \\\
\",\\\", \\\"0.096`\\\", \\\",\\\", \\\"0.0516`\\\", \\\",\\\", \\\"0.0532`\\\
\", \\\",\\\", RowBox[{\\\"-\\\", \\\"0.04`\\\"}], \\\",\\\", \
\\\"2.38419`*^-8\\\", \\\",\\\", \\\"5.74`\\\", \\\",\\\", \\\"5.82`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6199\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\"]\\\"}]\\) does not exist.\"",2,4,
   17,21797598327428708818,"Hello"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8104036856929708`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"f\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.015`\\\"}], \\\",\
\\\", \\\"0.08`\\\", \\\",\\\", \\\"0.072`\\\", \\\",\\\", \\\"0.0516`\\\", \
\\\",\\\", \\\"0.0492`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"0.04`\\\"}], \\\
\",\\\", RowBox[{\\\"-\\\", \\\"0.06`\\\"}], \\\",\\\", \\\"5.74`\\\", \
\\\",\\\", \\\"5.7`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.014997`\\\"}], \\\",\\\", \\\"0.08`\\\", \
\\\",\\\", \\\"0.096`\\\", \\\",\\\", \\\"0.0524`\\\", \\\",\\\", \\\"0.0532`\
\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"0.04`\\\"}], \\\",\\\", \
\\\"2.38419`*^-8\\\", \\\",\\\", \\\"5.74`\\\", \\\",\\\", \\\"5.78`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.014994`\\\"}], \\\",\\\", \\\"0.08`\\\", \\\",\\\", \\\"0.08`\\\", \
\\\",\\\", \\\"0.0508`\\\", \\\",\\\", \\\"0.0484`\\\", \\\",\\\", RowBox[{\\\
\"-\\\", \\\"0.02`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"0.06`\\\"}], \
\\\",\\\", \\\"5.74`\\\", \\\",\\\", \\\"5.7`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"46\\\", \\\"\[RightSkeleton]\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.014843`\\\"}], \
\\\",\\\", \\\"0.088`\\\", \\\",\\\", \\\"0.096`\\\", \\\",\\\", \
\\\"0.0516`\\\", \\\",\\\", \\\"0.0532`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\
\"0.04`\\\"}], \\\",\\\", \\\"2.38419`*^-8\\\", \\\",\\\", \\\"5.74`\\\", \
\\\",\\\", \\\"5.82`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"6199\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\
\", \\\",\\\", \\\"2\\\"}], \\\"}\\\"}], \\\"\[RightDoubleBracket]\\\"}], \
\\\"]\\\"}]\\) is not a list of numbers or pairs of numbers.\"",2,4,18,
   21797598327428708818,"Hello"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8104036860148153`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"f\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.015`\\\"}], \\\",\
\\\", \\\"0.08`\\\", \\\",\\\", \\\"0.072`\\\", \\\",\\\", \\\"0.0516`\\\", \
\\\",\\\", \\\"0.0492`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"0.04`\\\"}], \\\
\",\\\", RowBox[{\\\"-\\\", \\\"0.06`\\\"}], \\\",\\\", \\\"5.74`\\\", \
\\\",\\\", \\\"5.7`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.014997`\\\"}], \\\",\\\", \\\"0.08`\\\", \
\\\",\\\", \\\"0.096`\\\", \\\",\\\", \\\"0.0524`\\\", \\\",\\\", \\\"0.0532`\
\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"0.04`\\\"}], \\\",\\\", \
\\\"2.38419`*^-8\\\", \\\",\\\", \\\"5.74`\\\", \\\",\\\", \\\"5.78`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.014994`\\\"}], \\\",\\\", \\\"0.08`\\\", \\\",\\\", \\\"0.08`\\\", \
\\\",\\\", \\\"0.0508`\\\", \\\",\\\", \\\"0.0484`\\\", \\\",\\\", RowBox[{\\\
\"-\\\", \\\"0.02`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"0.06`\\\"}], \
\\\",\\\", \\\"5.74`\\\", \\\",\\\", \\\"5.7`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"46\\\", \\\"\[RightSkeleton]\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.014843`\\\"}], \
\\\",\\\", \\\"0.088`\\\", \\\",\\\", \\\"0.096`\\\", \\\",\\\", \
\\\"0.0516`\\\", \\\",\\\", \\\"0.0532`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\
\"0.04`\\\"}], \\\",\\\", \\\"2.38419`*^-8\\\", \\\",\\\", \\\"5.74`\\\", \
\\\",\\\", \\\"5.82`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"6199\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\
\", \\\",\\\", \\\"2\\\"}], \\\"}\\\"}], \\\"\[RightDoubleBracket]\\\"}], \
\\\"]\\\"}]\\) is not a list of numbers or pairs of numbers.\"",2,4,19,
   21797598327428708818,"Hello"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.810403686223729*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"f\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.015`\\\"}], \\\",\
\\\", \\\"0.08`\\\", \\\",\\\", \\\"0.072`\\\", \\\",\\\", \\\"0.0516`\\\", \
\\\",\\\", \\\"0.0492`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"0.04`\\\"}], \\\
\",\\\", RowBox[{\\\"-\\\", \\\"0.06`\\\"}], \\\",\\\", \\\"5.74`\\\", \
\\\",\\\", \\\"5.7`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.014997`\\\"}], \\\",\\\", \\\"0.08`\\\", \
\\\",\\\", \\\"0.096`\\\", \\\",\\\", \\\"0.0524`\\\", \\\",\\\", \\\"0.0532`\
\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"0.04`\\\"}], \\\",\\\", \
\\\"2.38419`*^-8\\\", \\\",\\\", \\\"5.74`\\\", \\\",\\\", \\\"5.78`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.014994`\\\"}], \\\",\\\", \\\"0.08`\\\", \\\",\\\", \\\"0.08`\\\", \
\\\",\\\", \\\"0.0508`\\\", \\\",\\\", \\\"0.0484`\\\", \\\",\\\", RowBox[{\\\
\"-\\\", \\\"0.02`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"0.06`\\\"}], \
\\\",\\\", \\\"5.74`\\\", \\\",\\\", \\\"5.7`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"46\\\", \\\"\[RightSkeleton]\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.014843`\\\"}], \
\\\",\\\", \\\"0.088`\\\", \\\",\\\", \\\"0.096`\\\", \\\",\\\", \
\\\"0.0516`\\\", \\\",\\\", \\\"0.0532`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\
\"0.04`\\\"}], \\\",\\\", \\\"2.38419`*^-8\\\", \\\",\\\", \\\"5.74`\\\", \
\\\",\\\", \\\"5.82`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"6199\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\
\", \\\",\\\", \\\"2\\\"}], \\\"}\\\"}], \\\"\[RightDoubleBracket]\\\"}], \
\\\"]\\\"}]\\) is not a list of numbers or pairs of numbers.\"",2,4,20,
   21797598327428708818,"Hello"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8104036864281425`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ListPlot\\\", \
\\\"::\\\", \\\"lpn\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,4,21,21797598327428708818,"Hello"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8104036865330906`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.1 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 149, 2, 79, "Chapter"],
Cell[732, 26, 8800, 187, 616, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[9569, 218, 91, 1, 67, "Chapter"],
Cell[9663, 221, 1793, 49, 151, "Input"],
Cell[11459, 272, 1711, 54, 251, "Input"],
Cell[13173, 328, 1120, 28, 85, "Input"],
Cell[14296, 358, 4673, 105, 409, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[19006, 468, 95, 1, 67, "Chapter"],
Cell[19104, 471, 8397, 222, 227, "Input"],
Cell[27504, 695, 3417, 107, 493, "Input"],
Cell[30924, 804, 26, 0, 39, "Input"],
Cell[30953, 806, 1168, 31, 86, "Input"],
Cell[32124, 839, 7424, 172, 541, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[39585, 1016, 104, 1, 67, "Chapter"],
Cell[39692, 1019, 3271, 70, 144, "Input"],
Cell[42966, 1091, 18662, 323, 760, "Input"],
Cell[61631, 1416, 13198, 185, 188, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[74866, 1606, 201, 3, 67, "Chapter"],
Cell[75070, 1611, 1961, 43, 78, "Input"],
Cell[77034, 1656, 7632, 189, 518, "Input"],
Cell[CellGroupData[{
Cell[84691, 1849, 1666, 46, 144, "Input"],
Cell[86360, 1897, 2021, 43, 403, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88418, 1945, 862, 27, 33, "Input"],
Cell[89283, 1974, 1734, 37, 137, "Output"],
Cell[91020, 2013, 1854, 28, 62, "Message"],
Cell[92877, 2043, 1747, 25, 23, "Message"],
Cell[94627, 2070, 1957, 29, 62, "Message"],
Cell[96587, 2101, 1957, 29, 62, "Message"],
Cell[98547, 2132, 1957, 29, 62, "Message"],
Cell[100507, 2163, 340, 7, 23, "Message"],
Cell[100850, 2172, 2250, 33, 62, "Message"],
Cell[103103, 2207, 240, 6, 23, "Message"],
Cell[103346, 2215, 242, 6, 23, "Message"],
Cell[103591, 2223, 1873, 27, 62, "Message"],
Cell[105467, 2252, 1962, 28, 62, "Message"],
Cell[107432, 2282, 337, 7, 23, "Message"],
Cell[107772, 2291, 343, 7, 23, "Message"],
Cell[108118, 2300, 386, 8, 23, "Message"],
Cell[108507, 2310, 301, 7, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108845, 2322, 1931, 55, 56, "Input"],
Cell[110779, 2379, 1772, 31, 78, "Output"],
Cell[112554, 2412, 1806, 31, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114397, 2448, 96, 1, 33, "Input"],
Cell[114496, 2451, 3126, 62, 260, "Output"]
}, Open  ]],
Cell[117637, 2516, 986, 27, 33, "Input"],
Cell[118626, 2545, 782, 14, 33, "Input"],
Cell[CellGroupData[{
Cell[119433, 2563, 1996, 48, 117, "Input"],
Cell[121432, 2613, 8688, 175, 281, "Output"],
Cell[130123, 2790, 8669, 175, 281, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138829, 2970, 1039, 27, 56, "Input"],
Cell[139871, 2999, 8384, 171, 281, "Output"],
Cell[148258, 3172, 8380, 171, 281, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[156687, 3349, 651, 9, 79, "Chapter"],
Cell[157341, 3360, 1977, 43, 85, "Input"],
Cell[159321, 3405, 6176, 166, 497, "Input"],
Cell[CellGroupData[{
Cell[165522, 3575, 1288, 34, 85, "Input"],
Cell[166813, 3611, 95579, 1598, 298, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262429, 5214, 1244, 33, 85, "Input"],
Cell[263676, 5249, 92575, 1549, 298, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356288, 6803, 1345, 36, 85, "Input"],
Cell[357636, 6841, 91286, 1528, 298, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[448959, 8374, 158, 3, 36, "Input"],
Cell[449120, 8379, 193002, 3216, 298, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[642159, 11600, 162, 3, 36, "Input"],
Cell[642324, 11605, 185943, 3101, 298, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[828304, 14711, 162, 3, 36, "Input"],
Cell[828469, 14716, 196703, 3277, 298, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1025209, 17998, 1987, 57, 61, "Input"],
Cell[1027199, 18057, 1798, 31, 85, "Output"],
Cell[1029000, 18090, 1801, 31, 85, "Output"]
}, Open  ]],
Cell[1030816, 18124, 960, 27, 36, "Input"],
Cell[1031779, 18153, 782, 14, 36, "Input"],
Cell[CellGroupData[{
Cell[1032586, 18171, 1588, 42, 126, "Input"],
Cell[1034177, 18215, 8664, 175, 309, "Output"],
Cell[1042844, 18392, 8650, 175, 309, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1051531, 18572, 1032, 27, 61, "Input"],
Cell[1052566, 18601, 8353, 172, 309, "Output"],
Cell[1060922, 18775, 8344, 171, 309, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1069303, 18951, 263, 5, 61, "Input"],
Cell[1069569, 18958, 15013, 303, 309, "Output"],
Cell[1084585, 19263, 14998, 302, 309, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1099632, 19571, 89, 1, 122, "Title"],
Cell[1099724, 19574, 4354, 106, 569, "Input"],
Cell[CellGroupData[{
Cell[1104103, 19684, 1767, 42, 110, "Input"],
Cell[1105873, 19728, 25809, 523, 825, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1131719, 20256, 1620, 40, 110, "Input"],
Cell[1133342, 20298, 25695, 521, 825, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1159074, 20824, 3209, 84, 227, "Input"],
Cell[1162286, 20910, 25816, 524, 825, "Output"]
}, Open  ]],
Cell[1188117, 21437, 307, 9, 67, "Input"],
Cell[CellGroupData[{
Cell[1188449, 21450, 136, 2, 36, "Input"],
Cell[1188588, 21454, 89, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1188714, 21460, 382, 10, 95, "Input"],
Cell[1189099, 21472, 111, 1, 36, "Output"],
Cell[1189213, 21475, 111, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1189361, 21481, 1109, 35, 126, "Input"],
Cell[1190473, 21518, 113, 1, 36, "Output"],
Cell[1190589, 21521, 115, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1190741, 21527, 5074, 145, 394, "Input"],
Cell[1195818, 21674, 26074, 529, 825, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1221929, 22208, 7408, 216, 537, "Input"],
Cell[1229340, 22426, 22862, 441, 854, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1252251, 22873, 99, 1, 122, "Title"],
Cell[1252353, 22876, 2019, 44, 85, "Input"],
Cell[1254375, 22922, 6351, 166, 521, "Input"],
Cell[CellGroupData[{
Cell[1260751, 23092, 268, 7, 36, "Input"],
Cell[1261022, 23101, 21730, 368, 293, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1282789, 23474, 386, 11, 36, "Input"],
Cell[1283178, 23487, 1914, 43, 289, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1285129, 23535, 492, 14, 36, "Input"],
Cell[1285624, 23551, 14938, 256, 295, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1300599, 23812, 809, 22, 61, "Input"],
Cell[1301411, 23836, 1833, 39, 419, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1303281, 23880, 507, 15, 36, "Input"],
Cell[1303791, 23897, 75, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1303903, 23903, 244, 7, 36, "Input"],
Cell[1304150, 23912, 97, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1304284, 23918, 662, 20, 36, "Input"],
Cell[1304949, 23940, 75, 1, 36, "Output"]
}, Open  ]],
Cell[1305039, 23944, 740, 23, 36, "Input"],
Cell[1305782, 23969, 559, 17, 36, "Input"],
Cell[CellGroupData[{
Cell[1306366, 23990, 492, 15, 36, "Input"],
Cell[1306861, 24007, 72, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1306970, 24013, 142, 2, 36, "Input"],
Cell[1307115, 24017, 10296, 265, 134, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1317448, 24287, 2779, 70, 110, "Input"],
Cell[1320230, 24359, 10304, 265, 134, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1330571, 24629, 135, 2, 36, "Input"],
Cell[1330709, 24633, 76, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1330822, 24639, 269, 5, 36, "Input"],
Cell[1331094, 24646, 131, 2, 36, "Output"]
}, Open  ]],
Cell[1331240, 24651, 252, 5, 36, "Input"],
Cell[CellGroupData[{
Cell[1331517, 24660, 89, 1, 86, "Chapter"],
Cell[1331609, 24663, 19023, 332, 787, "Input"],
Cell[CellGroupData[{
Cell[1350657, 24999, 125, 2, 36, "Input"],
Cell[1350785, 25003, 11410, 200, 293, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1362232, 25208, 2398, 67, 110, "Input"],
Cell[1364633, 25277, 14436, 248, 293, "Output"],
Cell[1379072, 25527, 14351, 248, 293, "Output"],
Cell[1393426, 25777, 14405, 248, 330, "Output"]
}, Open  ]],
Cell[1407846, 26028, 19043, 332, 787, "Input"],
Cell[1426892, 26362, 19289, 338, 787, "Input"],
Cell[1446184, 26702, 4354, 106, 569, "Input"],
Cell[1450541, 26810, 1767, 42, 110, "Input"],
Cell[CellGroupData[{
Cell[1452333, 26856, 21505, 395, 922, "Input"],
Cell[1473841, 27253, 1952, 29, 99, "Message"],
Cell[1475796, 27284, 2091, 31, 99, "Message"],
Cell[1477890, 27317, 2089, 31, 99, "Message"],
Cell[1479982, 27350, 2091, 31, 99, "Message"],
Cell[1482076, 27383, 341, 7, 23, "Message"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

